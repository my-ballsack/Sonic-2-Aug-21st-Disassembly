; +-------------------------------------------------------------------------+
; |                   File dumped by drx. Released by drx.                  |
; |                       Build Date: August 21st, 1992.                    |
; |                             Origin: EPPROMs                             |
; |                       Labels: MD Sonic 2 Alpha 21.8                     |
; |                      Dump method: True-USB PRO GQ-4X.                   |
; +-------------------------------------------------------------------------+
;
; ===========================================================================
; NOTES:
; * Green Hill Zone = Emerald Hill Zone (unless otherwise specified because of Sonic 1 leftovers)
; * Dust Hill Zone = Mystic Cave Zone
; * Neo Green Hill Zone = Aquatic Ruin Zone
;-------------------------------------------------------------------------------
loc_040 equ $0040 ; Incorrect reference in Crawl ( Obj9E.asm )
;-------------------------------------------------------------------------------
	include 'macros.asm'
	include 'constants.asm'
	include 'Sound/_smps2asm_inc.asm'

; ASSEMBLY OPTIONS:
RestoreSegaScreen = 0
; If 1, it will make the SEGA screen the default screen on boot rather than the title screen.

StartOfRom:
	dc.l    $FFFFFE00, EntryPoint, BusError, AddressError
	dc.l    IllegalInstr, ZeroDivide, ChkInstr, TrapvInstr
	dc.l    PrivilegeViolation, Trace, Line1010Emu, Line1111Emu
	dc.l    ErrorException, ErrorException, ErrorException, ErrorException
	dc.l    ErrorException, ErrorException, ErrorException, ErrorException
	dc.l    ErrorException, ErrorException, ErrorException, ErrorException
	dc.l    ErrorException, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    HBlank, ErrorTrap, VBlank, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
	dc.l    ErrorTrap, ErrorTrap, ErrorTrap, ErrorTrap
Console:        dc.b    'SEGA MEGA DRIVE ' ; Hardware system ID
Date:           dc.b    '(C)SEGA 1991.APR' ; Release date (Leftover)
Title_Local:    dc.b    'SONIC THE             HEDGEHOG 2                ' ; Domestic name
Title_Int:      dc.b    'SONIC THE             HEDGEHOG 2                ' ; International name
Serial:         dc.b    'GM 00004049-01' ; Serial/version number (Leftover)
Checksum:       dc.w    $AFC7
IOSupport:      dc.b    'J               '
ROMStart:       dc.l    $00000 ; ROM start
ROMEnd:         dc.l    $7FFFF
RAMStart:       dc.l    $FF0000 ; RAM start
RAMEnd:         dc.l    $FFFFFF ; RAM end
SRAMSupport:    dc.b    '                '
Notes:          dc.b    '                                                '
Region:         dc.b    'JUE             ' ; Region
;-------------------------------------------------------------------------------
ErrorTrap:
		nop
		nop
		bra.s   ErrorTrap
EntryPoint:
		tst.l   (IO_Port_0_Control)
		bne.s   PortA_OK
		tst.w   (IO_Expansion_Control)
PortA_OK:
		bne.s   PortC_OK
		lea     InitValues(PC), A5
		movem.w (A5)+, D5-D7
		movem.l (A5)+, A0-A4
		move.b  -$10FF(A1), D0
		andi.b  #$0F, D0
		beq.s   SkipSecurity
		move.l  #'SEGA', $2F00(A1)
SkipSecurity:
		move.w  (A4), D0
		moveq   #$00, D0
		move.l  D0, A6
		move.l  A6, USP
		moveq   #$17, D1
VDPInitLoop:
		move.b  (A5)+, D5
		move.w  D5, (A4)
		add.w   D7, D5
		dbra    D1, VDPInitLoop
		move.l  (A5)+, (A4)
		move.w  D0, (A3)
		move.w  D7, (A1)
		move.w  D7, (A2)
WaitForZ80:
		btst    D0, (A1)
		bne.s   WaitForZ80
		moveq   #$25, D2
Z80InitLoop:
		move.b  (A5)+, (A0)+
		dbra    D2, Z80InitLoop
		move.w  D0, (A2)
		move.w  D0, (A1)
		move.w  D7, (A2)
ClearRAMLoop:
		move.l  D0, -(A6)
		dbra    D6, ClearRAMLoop
		move.l  (A5)+, (A4)
		move.l  (A5)+, (A4)
		moveq   #$1F, D3
ClearCRAMLoop:
		move.l  D0, (A3)
		dbra    D3, ClearCRAMLoop
		move.l  (A5)+, (A4)
		moveq   #$13, D4
ClearVSRAMLoop:
		move.l  D0, (A3)
		dbra    D4, ClearVSRAMLoop
		moveq   #$03, D5
PSGInitLoop:
		move.b  (A5)+, $0011(A3)
		dbra    D5, PSGInitLoop
		move.w  D0, (A2)
		movem.l (A6), D0-D7/A0-A6
		move    #$2700, SR
PortC_OK:
		bra.s   Game_Program
;-------------------------------------------------------------------------------
InitValues:
		dc.w    $8000, $3FFF, $0100
		dc.l    Z80_RAM_Start
		dc.l    Z80_Bus_Request
		dc.l    Z80_Reset
		dc.l    VDP_Data_Port
		dc.l    VDP_Control_Port
		dc.b    $04, $14, $30, $3C, $07, $6C, $00, $00
		dc.b    $00, $00, $FF, $00, $81, $37, $00, $01
		dc.b    $01, $00, $00, $FF, $FF, $00, $00, $80
		dc.b    $40, $00, $00, $80, $AF, $01, $D9, $1F
		dc.b    $11, $27, $00, $21, $26, $00, $F9, $77
		dc.b    $ED, $B0, $DD, $E1, $FD, $E1, $ED, $47
		dc.b    $ED, $4F, $D1, $E1, $F1, $08, $D9, $C1
		dc.b    $D1, $E1, $F1, $F9, $F3, $ED, $56, $36
		dc.b    $E9, $E9, $81, $04, $8F, $02
		dc.l    Color_RAM_Address
		dc.l    $40000010
		dc.b    $9F, $BF, $DF, $FF          ; PSG Data
;-------------------------------------------------------------------------------
Game_Program:
		tst.w   (VDP_Control_Port)
		btst    #$06, (IO_Expansion_Control+$0001)
		beq.s   ChecksumCheck
		cmpi.l  #'init', (Init_Flag).w
		beq     AlreadyInit
ChecksumCheck:
		move.l  #ErrorTrap, A0
		move.l  #ROMEnd, A1
		move.l  (A1), D0
		move.l  #$0007FFFF, D0
		moveq   #$00, D1
ChksumChkLoop:
		add.w   (A0)+, D1
		cmp.l   A0, D0
		bcc.s   ChksumChkLoop
		move.l  #Checksum, A1
		cmp.w   (A1), D1
		nop
		nop
		lea     ($FFFFFE00).w, A6
		moveq   #$00, D7
		move.w  #$007F, D6
ClearSomeRAMLoop:
		move.l  D7, (A6)+
		dbra    D6, ClearSomeRAMLoop
		move.b  (IO_Hardware_Version), D0
		andi.b  #$C0, D0
		move.b  D0, (Hardware_Id).w
		move.l  #'init', (Init_Flag).w
AlreadyInit:
		lea     (M68K_RAM_Start&$00FFFFFF), A6
		moveq   #$00, D7
		move.w  #$3F7F, D6
ClearRemainingRAMLoop:
		move.l  D7, (A6)+
		dbra    D6, ClearRemainingRAMLoop
		bsr     VDPRegSetup
		bsr     Jmp_00_To_SoundDriverLoad
		bsr     Control_Ports_Init
          if RestoreSegaScreen=1
		move.b  #gm_SEGALogo, (Game_Mode).w
          else
                move.b  #gm_TitleScreen, (Game_Mode).w
          endif
MainGameLoop:
		move.b  (Game_Mode).w, D0
		andi.w  #$001C, D0
		jsr     GameModeArray(PC, D0)
		bra.s   MainGameLoop
GameModeArray:
		bra     Sega_Screen
		bra     Title_Screen
		bra     Level
		bra     Level
		bra     Special_Stage
;===============================================================================
; Routine used when the Checksum is incorrect, showing a red screen.
; Leftover from Sonic 1
; [ Begin ]
;===============================================================================
ChecksumError:
		bsr     VDPRegSetup
		move.l  #Color_RAM_Address, (VDP_Control_Port)
		moveq   #$3F, D7
ChksumErr_RedFill:
		move.w  #$000E, (VDP_Data_Port)
		dbra    D7, ChksumErr_RedFill
		bra.s   *
;===============================================================================
; Routine used when the Checksum is incorrect, showing a red screen.
; Leftover from Sonic 1
; [ End ]
;===============================================================================

;-------------------------------------------------------------------------------
; Bus error
;-------------------------------------------------------------------------------
BusError:
		move.b  #$02, (Exception_Index).w
		bra.s   ErrorMsg_TwoAddresses
;-------------------------------------------------------------------------------
; Address error
;-------------------------------------------------------------------------------
AddressError:
		move.b  #$04, (Exception_Index).w
		bra.s   ErrorMsg_TwoAddresses
;-------------------------------------------------------------------------------
; Illegal instruction
;-------------------------------------------------------------------------------
IllegalInstr:
		move.b  #$06, (Exception_Index).w
		addq.l  #$02, $0002(A7)
		bra.s   ErrorMessage
;-------------------------------------------------------------------------------
; Zero division error
;-------------------------------------------------------------------------------
ZeroDivide:
		move.b  #$08, (Exception_Index).w
		bra.s   ErrorMessage
;-------------------------------------------------------------------------------
; CHK instruction
;-------------------------------------------------------------------------------
ChkInstr:
		move.b  #$0A, (Exception_Index).w
		bra.s   ErrorMessage
;-------------------------------------------------------------------------------
; TRAPV instruction
;-------------------------------------------------------------------------------
TrapvInstr:
		move.b  #$0C, (Exception_Index).w
		bra.s   ErrorMessage
;-------------------------------------------------------------------------------
; Privilege violation
;-------------------------------------------------------------------------------
PrivilegeViolation:
		move.b  #$0E, (Exception_Index).w
		bra.s   ErrorMessage
;-------------------------------------------------------------------------------
; Trace error
;-------------------------------------------------------------------------------
Trace:
		move.b  #$10, (Exception_Index).w
		bra.s   ErrorMessage
;-------------------------------------------------------------------------------
; Line "A" Emulator
;-------------------------------------------------------------------------------
Line1010Emu:
		move.b  #$12, (Exception_Index).w
		addq.l  #$02, $0002(A7)
		bra.s   ErrorMessage
;-------------------------------------------------------------------------------
; Line "F" Emulator
;-------------------------------------------------------------------------------
Line1111Emu:
		move.b  #$14, (Exception_Index).w
		addq.l  #$02, $0002(A7)
		bra.s   ErrorMessage
;-------------------------------------------------------------------------------
; Error Exception
;-------------------------------------------------------------------------------
ErrorException:
		move.b  #$00, (Exception_Index).w
		bra.s   ErrorMessage
;===============================================================================
; Routine to show error messages
; [ Begin ]
;===============================================================================
ErrorMsg_TwoAddresses:
		move    #$2700, SR
		addq.w  #$02, A7
		move.l  (A7)+, ($FFFFFC40).w
		addq.w  #$02, A7
		movem.l D0-D7/A0-A7, (Obj_respawn_index).w
		bsr     ShowErrorMsg
		move.l  $0002(A7), D0
		bsr     ShowErrAddress
		move.l  ($FFFFFC40).w, D0
		bsr     ShowErrAddress
		bra.s   ErrorMsg_Wait
ErrorMessage:
		move    #$2700, SR
		movem.l D0-D7/A0-A7, (Obj_respawn_index).w
		bsr     ShowErrorMsg
		move.l  $0002(A7), D0
		bsr     ShowErrAddress
ErrorMsg_Wait:
		bsr     Error_WaitForC
		movem.l (Obj_respawn_index).w, D0-D7/A0-A7
		move    #$2300, SR
		rte
ShowErrorMsg:
		lea     (VDP_Data_Port), A6
		move.l  #$78000003, (VDP_Control_Port)
		lea     (Art_Menu_Text), A0
		move.w  #$027F, D1
Error_LoadGfx:
		move.w  (A0)+, (A6)
		dbra    D1, Error_LoadGfx
		moveq   #$00, D0
		move.b  (Exception_Index).w, D0
		move.w  Error_Text(PC, D0), D0
		lea     Error_Text(PC, D0), A0
		move.l  #$46040003, (VDP_Control_Port)
		moveq   #$12, D1
Loop_Show_Error_Text:
		moveq   #$00, D0
		move.b  (A0)+, D0
		addi.w  #$0790, D0
		move.w  D0, (A6)
		dbra    D1, Loop_Show_Error_Text
		rts
;-------------------------------------------------------------------------------
Error_Text:     dc.w	ErrTxt_Exception-Error_Text
		dc.w	ErrTxt_BusError-Error_Text
		dc.w	ErrTxt_AddressError-Error_Text
		dc.w	ErrTxt_IllegalInstr-Error_Text
		dc.w	ErrTxt_ZeroDivide-Error_Text
		dc.w	ErrTxt_ChkIntruction-Error_Text
		dc.w	ErrTxt_TrapvInstr-Error_Text
		dc.w	ErrTxt_PrivilegeViol-Error_Text
		dc.w	ErrTxt_Trace-Error_Text
		dc.w	ErrTxt_Line1010Emul-Error_Text
		dc.w	ErrTxt_Line1111Emul-Error_Text
ErrTxt_Exception:	dc.b	'ERROR EXCEPTION    '
ErrTxt_BusError: 	dc.b	'BUS ERROR          '
ErrTxt_AddressError: 	dc.b	'ADDRESS ERROR      '
ErrTxt_IllegalInstr: 	dc.b	'ILLEGAL INSTRUCTION'
ErrTxt_ZeroDivide: 	dc.b	'@ERO DIVIDE        '
ErrTxt_ChkIntruction:	dc.b	'CHK INSTRUCTION    '
ErrTxt_TrapvInstr:	dc.b	'TRAPV INSTRUCTION  '
ErrTxt_PrivilegeViol:	dc.b	'PRIVILEGE VIOLATION'
ErrTxt_Trace: 		dc.b	'TRACE              '
ErrTxt_Line1010Emul: 	dc.b	'LINE 1010 EMULATOR '
ErrTxt_Line1111Emul: 	dc.b	'LINE 1111 EMULATOR '
			dc.b    00
ShowErrAddress:
		move.w  #$07CA, (A6)
		moveq   #$07, D2
ShowErrAddress_DigitLoop:
		rol.l   #$04, D0
		bsr.s   ShowErrDigit
		dbra    D2, ShowErrAddress_DigitLoop
		rts
ShowErrDigit:
		move.w  D0, D1
		andi.w  #$000F, D1
		cmpi.w  #$000A, D1
		bcs.s   ShowErrDigit_NoOverflow
		addq.w  #$07, D1
ShowErrDigit_NoOverflow:
		addi.w  #$07C0, D1
		move.w  D1, (A6)
		rts
Error_WaitForC:
		bsr     Control_Ports_Read
		cmpi.b  #$20, (Control_Ports_Buffer_Data+$0001).w
		bne     Error_WaitForC
		rts
Art_Menu_Text:
		incbin  'art/uncompressed/fontmenu.dat'
;===============================================================================
; Routine to show error messages
; [ End ]
;===============================================================================

;===============================================================================
; Vertical blank
; [ Begin ]
;===============================================================================
VBlank:
		movem.l D0-D7/A0-A6, -(A7)
		tst.b   (VBlank_Index).w
		beq     Default_VBlank
loc_B14:
		move.w  (VDP_Control_Port), D0
		andi.w  #$0008, D0
		beq.s   loc_B14
		move.l  #$40000010, (VDP_Control_Port)
		move.l  ($FFFFF616).w, (VDP_Data_Port)
		btst    #$06, (Hardware_Id).w
		beq.s   loc_B42
		move.w  #$0700, D0
loc_B3E:
		dbra    D0, loc_B3E
loc_B42:
		move.b  (VBlank_Index).w, D0
		move.b  #$00, (VBlank_Index).w
		move.w  #$0001, ($FFFFF644).w
		andi.w  #$003E, D0
		move.w  VBlank_List(PC, D0), D0
		jsr     VBlank_List(PC, D0)
loc_B5E:
		addq.l  #$01, ($FFFFFE0C).w
		movem.l (A7)+, D0-D7/A0-A6
		rte
;-------------------------------------------------------------------------------
VBlank_List:
		dc.w    VBlank_00-VBlank_List
		dc.w    VBlank_02-VBlank_List
		dc.w    VBlank_04-VBlank_List
		dc.w    VBlank_06-VBlank_List
		dc.w    VBlank_08-VBlank_List
		dc.w    VBlank_0A-VBlank_List
		dc.w    VBlank_0C-VBlank_List
		dc.w    VBlank_0E-VBlank_List
		dc.w    VBlank_10-VBlank_List
		dc.w    VBlank_12-VBlank_List
		dc.w    VBlank_14-VBlank_List
		dc.w    VBlank_16-VBlank_List
		dc.w    VBlank_18-VBlank_List
;-------------------------------------------------------------------------------
Default_VBlank:
VBlank_00:
		cmpi.b  #$80|gm_PlayMode, (Game_Mode).w
		beq.s   loc_BBC
		cmpi.b  #gm_DemoMode, (Game_Mode).w
		beq.s   loc_BBC
		cmpi.b  #gm_PlayMode, (Game_Mode).w
		beq.s   loc_BBC
		stopZ80
		jsr     (Sound_Driver_Input)
		startZ80
		bra.s   loc_B5E
loc_BBC:
		tst.b   (Water_Level_Flag).w
		beq     loc_C60
		move.w  (VDP_Control_Port), D0
		btst    #$06, (Hardware_Id).w
		beq.s   loc_BDA
		move.w  #$0700, D0
loc_BD6:
		dbra    D0, loc_BD6
loc_BDA:
		move.w  #$0001, ($FFFFF644).w
		stopZ80
		tst.b   ($FFFFF64E).w
		bne.s   loc_C1E
		lea     (VDP_Control_Port), A5
		move.l  #$94009340, (A5)
		move.l  #$96FD9580, (A5)
		move.w  #$977F, (A5)
		move.w  #$C000, (A5)
		move.w  #$0080, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		bra.s   loc_C42
loc_C1E:
		lea     (VDP_Control_Port), A5
		move.l  #$94009340, (A5)
		move.l  #$96FD9540, (A5)
		move.w  #$977F, (A5)
		move.w  #$C000, (A5)
		move.w  #$0080, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
loc_C42:
		move.w  (Horizontal_Interrupt_Count).w, (A5)
		move.w  #$8230, (VDP_Control_Port)
		jsr     (Sound_Driver_Input)
		startZ80
		bra     loc_B5E
loc_C60:
		move.w  (VDP_Control_Port), D0
		move.l  #$40000010, (VDP_Control_Port)
		move.l  ($FFFFF616).w, (VDP_Data_Port)
		btst    #$06, (Hardware_Id).w
		beq.s   loc_C88
		move.w  #$0700, D0
loc_C84:
		dbra    D0, loc_C84
loc_C88:
		move.w  #$0001, ($FFFFF644).w
		move.w  (Horizontal_Interrupt_Count).w, (VDP_Control_Port)
		move.w  #$8230, (VDP_Control_Port)
		move.l  ($FFFFF61E).w, ($FFFFEEEC).w
		stopZ80
		lea     (VDP_Control_Port), A5
		move.l  #$94019340, (A5)
		move.l  #$96FC9500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7800, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		jsr     (Sound_Driver_Input)
		startZ80
		bra     loc_B5E
;-------------------------------------------------------------------------------
VBlank_02:
		bsr     loc_10BE
		tst.w   (Timer_Count_Down).w
		beq     loc_CFC
		subq.w  #$01, (Timer_Count_Down).w
loc_CFC:
		rts
;-------------------------------------------------------------------------------
VBlank_14:
		stopZ80
		bsr     Control_Ports_Read
		startZ80
		tst.w   (Timer_Count_Down).w
		beq     loc_D28
		subq.w  #$01, (Timer_Count_Down).w
loc_D28:
		rts
;-------------------------------------------------------------------------------
VBlank_04:
		bsr     loc_10BE
		bsr     loc_1856
		tst.w   (Timer_Count_Down).w
		beq     loc_D3E
		subq.w  #$01, (Timer_Count_Down).w
loc_D3E:
		rts
;-------------------------------------------------------------------------------
VBlank_06:
		bsr     loc_10BE
		rts
;-------------------------------------------------------------------------------
VBlank_10:
		cmpi.b  #gm_SpecialStage, (Game_Mode).w
		beq     VBlank_0A
;-------------------------------------------------------------------------------
VBlank_08:
		stopZ80
		bsr     Control_Ports_Read
		tst.b   ($FFFFF64E).w
		bne.s   loc_D92
		lea     (VDP_Control_Port), A5
		move.l  #$94009340, (A5)
		move.l  #$96FD9580, (A5)
		move.w  #$977F, (A5)
		move.w  #$C000, (A5)
		move.w  #$0080, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		bra.s   loc_DB6
loc_D92:
		lea     (VDP_Control_Port), A5
		move.l  #$94009340, (A5)
		move.l  #$96FD9540, (A5)
		move.w  #$977F, (A5)
		move.w  #$C000, (A5)
		move.w  #$0080, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
loc_DB6:
		move.w  (Horizontal_Interrupt_Count).w, (A5)
		move.w  #$8230, (VDP_Control_Port)
		lea     (VDP_Control_Port), A5
		move.l  #$940193C0, (A5)
		move.l  #$96F09500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7C00, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		lea     (VDP_Control_Port), A5
		move.l  #$94019340, (A5)
		move.l  #$96FC9500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7800, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		bsr     Process_DMA
		jsr     (Sound_Driver_Input)
		startZ80
		movem.l (Camera_X).w, D0-D7
		movem.l D0-D7, ($FFFFEE60).w
		movem.l (Camera_X_2).w, D0-D7
		movem.l D0-D7, ($FFFFEE80).w
		movem.l (Scroll_Flag_Array).w, D0-D3
		movem.l D0-D3, (Scroll_Flag_Array_2).w
		move.l  ($FFFFF61E).w, ($FFFFEEEC).w
		cmpi.b  #$5C, (Scanlines_Count).w
		bcc.s   DemoTime
		move.b  #$01, ($FFFFF64F).w
		rts
DemoTime:
		bsr     LoadTilesAsYouMove
		jsr     (HudUpdate)
		bsr     loc_1872
		tst.w   (Timer_Count_Down).w
		beq     Exit_DemoTime
		subq.w  #$01, (Timer_Count_Down).w
Exit_DemoTime:
		rts
;-------------------------------------------------------------------------------
VBlank_0A:
		stopZ80
		bsr     Control_Ports_Read
		lea     (VDP_Control_Port), A5
		move.l  #$94009340, (A5)
		move.l  #$96FD9580, (A5)
		move.w  #$977F, (A5)
		move.w  #$C000, (A5)
		move.w  #$0080, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		lea     (VDP_Control_Port), A5
		move.l  #$94019340, (A5)
		move.l  #$96FC9500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7800, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		lea     (VDP_Control_Port), A5
		move.l  #$940193C0, (A5)
		move.l  #$96F09500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7C00, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		bsr     Process_DMA
		jsr     (Sound_Driver_Input)
		startZ80
		bsr     Special_Stage_Pal_Cycle
		tst.w   (Timer_Count_Down).w
		beq     loc_F16
		subq.w  #$01, (Timer_Count_Down).w
loc_F16:
		rts
;-------------------------------------------------------------------------------
VBlank_0C:
VBlank_18:
		stopZ80
		bsr     Control_Ports_Read
		tst.b   ($FFFFF64E).w
		bne.s   loc_F5A
		lea     (VDP_Control_Port), A5
		move.l  #$94009340, (A5)
		move.l  #$96FD9580, (A5)
		move.w  #$977F, (A5)
		move.w  #$C000, (A5)
		move.w  #$0080, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		bra.s   loc_F7E
loc_F5A:
		lea     (VDP_Control_Port), A5
		move.l  #$94009340, (A5)
		move.l  #$96FD9540, (A5)
		move.w  #$977F, (A5)
		move.w  #$C000, (A5)
		move.w  #$0080, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
loc_F7E:
		move.w  (Horizontal_Interrupt_Count).w, (A5)
		lea     (VDP_Control_Port), A5
		move.l  #$940193C0, (A5)
		move.l  #$96F09500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7C00, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		lea     (VDP_Control_Port), A5
		move.l  #$94019340, (A5)
		move.l  #$96FC9500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7800, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		bsr     Process_DMA
		jsr     (Sound_Driver_Input)
		startZ80
		movem.l (Camera_X).w, D0-D7
		movem.l D0-D7, ($FFFFEE60).w
		movem.l (Scroll_Flag_Array).w, D0/D1
		movem.l D0/D1, (Scroll_Flag_Array_2).w
		bsr     LoadTilesAsYouMove
		jsr     (HudUpdate)
		bsr     loc_1856
		rts
;-------------------------------------------------------------------------------
VBlank_0E:
		bsr     loc_10BE
		addq.b  #$01, ($FFFFF628).w
		move.b  #$0E, (VBlank_Index).w
		rts
;-------------------------------------------------------------------------------
VBlank_12:
		bsr     loc_10BE
		move.w  (Horizontal_Interrupt_Count).w, (A5)
		bra     loc_1856
;-------------------------------------------------------------------------------
VBlank_16:
		stopZ80
		bsr     Control_Ports_Read
		lea     (VDP_Control_Port), A5
		move.l  #$94009340, (A5)
		move.l  #$96FD9580, (A5)
		move.w  #$977F, (A5)
		move.w  #$C000, (A5)
		move.w  #$0080, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		lea     (VDP_Control_Port), A5
		move.l  #$94019340, (A5)
		move.l  #$96FC9500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7800, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		lea     (VDP_Control_Port), A5
		move.l  #$940193C0, (A5)
		move.l  #$96F09500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7C00, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		jsr     (Sound_Driver_Input)
		startZ80
		tst.w   (Timer_Count_Down).w
		beq     loc_10BC
		subq.w  #$01, (Timer_Count_Down).w
loc_10BC:
		rts
loc_10BE:
		stopZ80
		bsr     Control_Ports_Read
		tst.b   ($FFFFF64E).w
		bne.s   loc_1100
		lea     (VDP_Control_Port), A5
		move.l  #$94009340, (A5)
		move.l  #$96FD9580, (A5)
		move.w  #$977F, (A5)
		move.w  #$C000, (A5)
		move.w  #$0080, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		bra.s   loc_1124
loc_1100:
		lea     (VDP_Control_Port), A5
		move.l  #$94009340, (A5)
		move.l  #$96FD9540, (A5)
		move.w  #$977F, (A5)
		move.w  #$C000, (A5)
		move.w  #$0080, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
loc_1124:
		lea     (VDP_Control_Port), A5
		move.l  #$94019340, (A5)
		move.l  #$96FC9500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7800, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		lea     (VDP_Control_Port), A5
		move.l  #$940193C0, (A5)
		move.l  #$96F09500, (A5)
		move.w  #$977F, (A5)
		move.w  #$7C00, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		jsr     (Sound_Driver_Input)
		startZ80
		rts
;===============================================================================
; Vertical blank
; [ End ]
;===============================================================================

;===============================================================================
; Horizontal blank
; [ Begin ]
;===============================================================================
HBlank:
		tst.w   ($FFFFF644).w
		beq     loc_1226
		tst.w   (Two_Player_Flag).w
		beq     Pal_To_ColorRAM
		move.w  #$0000, ($FFFFF644).w
		move.l  A5, -(A7)
		move.l  D0, -(A7)
loc_1196:
		move.w  (VDP_Control_Port), D0
		andi.w  #$0004, D0
		beq.s   loc_1196
		move.w  ($FFFFF60C).w, D0
		andi.b  #$BF, D0
		move.w  D0, (VDP_Control_Port)
		move.w  #$8228, (VDP_Control_Port)
		move.l  #$40000010, (VDP_Control_Port)
		move.l  ($FFFFEEEC).w, (VDP_Data_Port)
		stopZ80
		lea     (VDP_Control_Port), A5
		move.l  #$94019340, (A5)
		move.l  #$96EE9580, (A5)
		move.w  #$977F, (A5)
		move.w  #$7800, (A5)
		move.w  #$0083, ($FFFFF640).w
		move.w  ($FFFFF640).w, (A5)
		startZ80
loc_1208:
		move.w  (VDP_Control_Port), D0
		andi.w  #$0004, D0
		beq.s   loc_1208
		move.w  ($FFFFF60C).w, D0
		ori.b   #$40, D0
		move.w  D0, (VDP_Control_Port)
		move.l  (A7)+, D0
		move.l  (A7)+, A5
loc_1226:
		rte
;-------------------------------------------------------------------------------
; Routine to transfer the color palette to CRAM during horizontal blanking
; [ Begin ]
;-------------------------------------------------------------------------------
Pal_To_ColorRAM:
		move    #$2700, SR
		move.w  #$0000, ($FFFFF644).w
		movem.l A0/A1, -(A7)
		lea     (VDP_Data_Port), A1
		lea     ($FFFFFA80).w, A0
		move.l  #Color_RAM_Address, $0004(A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.l  (A0)+, (A1)
		move.w  #$8ADF, $0004(A1)
		movem.l (A7)+, A0/A1
		tst.b   ($FFFFF64F).w
		bne.s   loc_129A
		rte
loc_129A:
		clr.b   ($FFFFF64F).w
		movem.l D0-D7/A0-A6, -(A7)
		bsr     DemoTime
		movem.l (A7)+, D0-D7/A0-A6
		rte
;-------------------------------------------------------------------------------
; Routine to transfer the color palette to CRAM during horizontal blanking
; [ End ]
;-------------------------------------------------------------------------------

;===============================================================================
; Horizontal blank
; [ End ]
;===============================================================================

;===============================================================================
; Routine to transfer the selected sound to play on the Z80
; [ Begin ]
;===============================================================================
Sound_Driver_Input:
		lea     (Sound_Buffer_Id&$00FFFFFF), A0
		lea     (Z80_RAM_Start+$1B80), A1
		cmpi.b  #$80, $0008(A1)
		bne.s   loc_12E0
		move.b  $0000(A0), D0
		beq.s   loc_12E0
		clr.b   $0000(A0)
		move.b  D0, D1
		subi.b  #$FE, D1
		bcs.s   loc_12DC
		addi.b  #$7F, D1
		move.b  D1, $0003(A1)
		bra.s   loc_12E0
loc_12DC:
		move.b  D0, $0008(A1)
loc_12E0:
		moveq   #$03, D1
loc_12E2:
		move.b  $01(A0, D1), D0
		beq.s   loc_12F6
		tst.b   $09(A1, D1)
		bne.s   loc_12F6
		clr.b   $01(A0, D1)
		move.b  D0, $09(A1, D1)
loc_12F6:
		dbra    D1, loc_12E2
		rts
;===============================================================================
; Routine to transfer the selected sound to play on the Z80
; [ End ]
;===============================================================================

;===============================================================================
; Initialize ports 0, 1, and expansion
; [ Begin ]
;===============================================================================
Control_Ports_Init:
		stopZ80
		moveq   #$40, D0
		move.b  D0, (IO_Port_0_Control+$0001)
		move.b  D0, (IO_Port_1_Control+$0001)
		move.b  D0, (IO_Expansion_Control+$0001)
		startZ80
		rts
;===============================================================================
; Initialize ports 0, 1, and expansion
; [ End ]
;===============================================================================

;===============================================================================
; Read ports 0, 1 and expansion
; [ Begin ]
;===============================================================================
Control_Ports_Read:
		lea     (Control_Ports_Buffer_Data).w, A0
		lea     (IO_Joypad_Port_0), A1
		bsr.s   Control_Ports_Read_Data
		addq.w  #$02, A1
Control_Ports_Read_Data:
		move.b  #$00, (A1)
		nop
		nop
		move.b  (A1), D0
		lsl.b   #$02, D0
		andi.b  #$C0, D0
		move.b  #$40, (A1)
		nop
		nop
		move.b  (A1), D1
		andi.b  #$3F, D1
		or.b    D1, D0
		not.b   D0
		move.b  (A0), D1
		eor.b   D0, D1
		move.b  D0, (A0)+
		and.b   D0, D1
		move.b  D1, (A0)+
		rts
;===============================================================================
; Read ports 0, 1 and expansion
; [ End ]
;===============================================================================

;===============================================================================
; VDPRegSetup
; [ Begin ]
;===============================================================================
VDPRegSetup:
		lea     (VDP_Control_Port), A0
		lea     (VDP_Data_Port), A1
		lea     (VDPRegSetup_Array), A2
		moveq   #$12, D7
loc_137C:
		move.w  (A2)+, (A0)
		dbra    D7, loc_137C
		move.w  (VDPRegSetup_Array+$0002), D0
		move.w  D0, ($FFFFF60C).w
		move.w  #$8ADF, (Horizontal_Interrupt_Count).w ; 224 lines
		moveq   #$00, D0
		move.l  #$40000010, (VDP_Control_Port)
		move.w  D0, (A1)
		move.w  D0, (A1)
		move.l  #$C0000000, (VDP_Control_Port)
		move.w  #$003F, D7
loc_13B0:
		move.w  D0, (A1)
		dbra    D7, loc_13B0
		clr.l   ($FFFFF616).w
		clr.l   ($FFFFF61A).w
		move.l  D1, -(A7)
		lea     (VDP_Control_Port), A5
		move.w  #$8F01, (A5)
		move.l  #$94FF93FF, (A5)
		move.w  #$9780, (A5)
		move.l  #$40000080, (A5)
		move.w  #$0000, (VDP_Data_Port)
loc_13E2:
		move.w  (A5), D1
		btst    #$01, D1
		bne.s   loc_13E2
		move.w  #$8F02, (A5)
		move.l  (A7)+, D1
		rts
;-------------------------------------------------------------------------------
VDPRegSetup_Array:
		dc.w    $8004, $8134, $8230, $8328, $8407, $857C, $8600, $8700
		dc.w    $8800, $8900, $8A00, $8B00, $8C81, $8D3F, $8E00, $8F02
		dc.w    $9001, $9100, $9200
;===============================================================================
; VDPRegSetup
; [ End ]
;===============================================================================

;===============================================================================
; ClearScreen
; [ Begin ]
;===============================================================================
ClearScreen:
		stopZ80
		lea     (VDP_Control_Port), A5
		move.w  #$8F01, (A5)
		move.l  #$940F93FF, (A5)
		move.w  #$9780, (A5)
		move.l  #$40000083, (A5)
		move.w  #$0000, (VDP_Data_Port)
ClearScreen_DMAWait
		move.w  (A5), D1
		btst    #$01, D1
		bne.s   ClearScreen_DMAWait
		move.w  #$8F02, (A5)
		lea     (VDP_Control_Port), A5
		move.w  #$8F01, (A5)
		move.l  #$940F93FF, (A5)
		move.w  #$9780, (A5)
		move.l  #$60000083, (A5)
		move.w  #$0000, (VDP_Data_Port)
ClearScreen_DMAWait_2:
		move.w  (A5), D1
		btst    #$01, D1
		bne.s   ClearScreen_DMAWait_2
		move.w  #$8F02, (A5)
		clr.l   ($FFFFF616).w
		clr.l   ($FFFFF61A).w
		lea     ($FFFFF800).w, A1
		moveq   #$00, D0
		move.w  #$00A0, D1
ClearScreen_ClearBuffer1:
		move.l  D0, (A1)+
		dbra    D1, ClearScreen_ClearBuffer1
		lea     (Scroll_Buffer_Data).w, A1
		moveq   #$00, D0
		move.w  #$0100, D1
ClearScreen_ClearBuffer2:
		move.l  D0, (A1)+
		dbra    D1, ClearScreen_ClearBuffer2
		startZ80
		rts
;===============================================================================
; ClearScreen
; [ End ]
;===============================================================================

Jmp_00_To_SoundDriverLoad
		nop
		jmp     (SoundDriverLoad)
;-------------------------------------------------------------------------------
; Z80_Init:   ; Initialization of the Z80 (not used)
		move.w  #$0100, (Z80_Bus_Request)
		move.w  #$0100, (Z80_Reset)
		lea     (Z80_RAM_Start), A1
		move.b  #$F3, (A1)+
		move.b  #$F3, (A1)+
		move.b  #$C3, (A1)+
		move.b  #$00, (A1)+
		move.b  #$00, (A1)+
		move.w  #$0000, (Z80_Reset)
		nop
		nop
		nop
		nop
		move.w  #$0100, (Z80_Reset)
		startZ80
		rts
;-------------------------------------------------------------------------------
Play_Music:
		move.b  D0, (Sound_Buffer_Id).w
		rts
;-------------------------------------------------------------------------------
Play_Sfx:
		move.b  D0, (Sound_Buffer_Id+$0001).w
		rts
;-------------------------------------------------------------------------------
Play_Music_Ex:
		move.b  D0, (Sound_Buffer_Id+$0002).w
		rts
;-------------------------------------------------------------------------------
Play_Sfx_Ex:
		tst.b   $0001(A0)
		bpl.s   Exit_Play_Sfx_Ex
		move.b  D0, (Sound_Buffer_Id+$0001).w
Exit_Play_Sfx_Ex:
		rts
;===============================================================================
; Routine to handle pausing the game
; [ Begin ]
;===============================================================================
Pause:
		nop
		tst.b   (Life_Count).w
		beq     Unpause
		tst.w   (Pause_Status).w
		bne.s   Pause_AlreadyPaused
		btst    #$07, (Control_Ports_Buffer_Data+$0001).w
		beq.s   Pause_DoNothing
Pause_AlreadyPaused:
		move.w  #$0001, (Pause_Status).w
		move.b  #$FE, (Sound_Buffer_Id).w
Pause_Loop:
		move.b  #$10, (VBlank_Index).w
		bsr     Wait_For_VSync
		tst.b   ($FFFFFFD1).w
		beq.s   Pause_CheckStart
		btst    #$06, (Control_Ports_Buffer_Data+$0001).w
		beq.s   Pause_CheckBC
		move.b  #gm_TitleScreen, (Game_Mode).w
		nop
		bra.s   loc_1588
Pause_CheckBC:
		btst    #$04, (Control_Ports_Buffer_Data).w
		bne.s   Pause_SlowMotion
		btst    #$05, (Control_Ports_Buffer_Data+$0001).w
		bne.s   Pause_SlowMotion
Pause_CheckStart:
		btst    #$07, (Control_Ports_Buffer_Data+$0001).w
		beq.s   Pause_Loop
loc_1588:
		move.b  #$FF, (Sound_Buffer_Id).w
Unpause:
		move.w  #$0000, (Pause_Status).w
Pause_DoNothing:
		rts
Pause_SlowMotion:
		move.w  #$0001, (Pause_Status).w
		move.b  #$FF, (Sound_Buffer_Id).w
		rts
;===============================================================================
; Routine to handle pausing the game
; [ End ]
;===============================================================================

;===============================================================================
; Routine for loading screen maps into the VDP
; [ Begin ]
;===============================================================================
ShowVDPGraphics:
		lea     (VDP_Data_Port), A6
		move.l  #$00800000, D4
ShowVDPGraphics_LineLoop:
		move.l  D0, $0004(A6)
		move.w  D1, D3
ShowVDPGraphics_TileLoop:
		move.w  (A1)+, (A6)
		dbra    D3, ShowVDPGraphics_TileLoop
		add.l   D4, D0
		dbra    D2, ShowVDPGraphics_LineLoop
		rts
;===============================================================================
; Routine for loading screen maps into the VDP
; [ End ]
;===============================================================================

;===============================================================================
DMA_68KtoVRAM:
		include "_inc/DMA68KtoVRAM.asm"
;===============================================================================
NemDec:                                                    
		movem.l D0-D7/A0/A1/A3-A5, -(A7)
		lea     (NemDec_Output), A3
		lea     (VDP_Data_Port), A4
		bra.s   NemDec_Main
;-------------------------------------------------------------------------------
NemDecToRAM:
		movem.l D0-D7/A0/A1/A3-A5, -(A7)
		lea     (NemDec_OutputToRAM), A3
NemDec_Main:
		lea     ($FFFFAA00).w, A1
		move.w  (A0)+, D2
		lsl.w   #$01, D2
		bcc.s   loc_167E
	      ; Point A3 to NemDec_Output_XOR if A3 = NemDec_Output or
	      ; Point A3 to NemDec_OutputRAM_XOR if A3 = NemDec_OutputRAM
		adda.w  #(NemDec_Output_XOR-NemDec_Output), A3
loc_167E:
		lsl.w   #$02, D2
		move.w  D2, A5
		moveq   #$08, D3
		moveq   #$00, D2
		moveq   #$00, D4
		bsr     NemDec_4
		move.b  (A0)+, D5
		asl.w   #$08, D5
		move.b  (A0)+, D5
		move.w  #$0010, D6
		bsr.s   NemDec_2
		movem.l (A7)+, D0-D7/A0/A1/A3-A5
		rts
;-------------------------------------------------------------------------------
NemDec_2:
		move.w  D6, D7
		subq.w  #$08, D7
		move.w  D5, D1
		lsr.w   D7, D1
		cmpi.b  #$FC, D1
		bcc.s   loc_16EA
		andi.w  #$00FF, D1
		add.w   D1, D1
		move.b  $00(A1, D1), D0
		ext.w   D0
		sub.w   D0, D6
		cmpi.w  #$0009, D6
		bcc.s   loc_16C6
		addq.w  #$08, D6
		asl.w   #$08, D5
		move.b  (A0)+, D5
loc_16C6:
		move.b  $01(A1, D1), D1
		move.w  D1, D0
		andi.w  #$000F, D1
		andi.w  #$00F0, D0
NemDec_SubType:
		lsr.w   #$04, D0
NemDec_Loop_SubType:
		lsl.l   #$04, D4
		or.b    D1, D4
		subq.w  #$01, D3
		bne.s   loc_16E4
	      ; A3 contains one of the decompression routines
	      ; ( NemDec_Output_XOR or NemDec_OutputRAM_XOR )
		jmp     (A3)
;-------------------------------------------------------------------------------
NemDec_3
		moveq   #$00, D4
		moveq   #$08, D3
loc_16E4:
		dbra    D0, NemDec_Loop_SubType
		bra.s   NemDec_2
;-------------------------------------------------------------------------------
loc_16EA:
		subq.w  #$06, D6
		cmpi.w  #$0009, D6
		bcc.s   loc_16F8
		addq.w  #$08, D6
		asl.w   #$08, D5
		move.b  (A0)+, D5
loc_16F8:
		subq.w  #$07, D6
		move.w  D5, D1
		lsr.w   D6, D1
		move.w  D1, D0
		andi.w  #$000F, D1
		andi.w  #$0070, D0
		cmpi.w  #$0009, D6
		bcc.s   NemDec_SubType
		addq.w  #$08, D6
		asl.w   #$08, D5
		move.b  (A0)+, D5
		bra.s   NemDec_SubType
;-------------------------------------------------------------------------------
NemDec_Output:
		move.l  D4, (A4)
		subq.w  #$01, A5
		move.w  A5, D4
		bne.s   NemDec_3
		rts
;-------------------------------------------------------------------------------
NemDec_Output_XOR:
		eor.l   D4, D2
		move.l  D2, (A4)
		subq.w  #$01, A5
		move.w  A5, D4
		bne.s   NemDec_3
		rts
;-------------------------------------------------------------------------------
NemDec_OutputToRAM:
		move.l  D4, (A4)+
		subq.w  #$01, A5
		move.w  A5, D4
		bne.s   NemDec_3
		rts
;-------------------------------------------------------------------------------
NemDec_Output_XORToRAM:
		eor.l   D4, D2
		move.l  D2, (A4)+
		subq.w  #$01, A5
		move.w  A5, D4
		bne.s   NemDec_3
		rts
;-------------------------------------------------------------------------------
NemDec_4:                                                  
		move.b  (A0)+, D0
loc_1744:
		cmpi.b  #$FF, D0
		bne.s   loc_174C
		rts
loc_174C:
		move.w  D0, D7
loc_174E:
		move.b  (A0)+, D0
		cmpi.b  #$80, D0
		bcc.s   loc_1744
		move.b  D0, D1
		andi.w  #$000F, D7
		andi.w  #$0070, D1
		or.w    D1, D7
		andi.w  #$000F, D0
		move.b  D0, D1
		lsl.w   #$08, D1
		or.w    D1, D7
		moveq   #$08, D1
		sub.w   D0, D1
		bne.s   loc_177C
		move.b  (A0)+, D0
		add.w   D0, D0
		move.w  D7, $00(A1, D0)
		bra.s   loc_174E
loc_177C:
		move.b  (A0)+, D0
		lsl.w   D1, D0
		add.w   D0, D0
		moveq   #$01, D5
		lsl.w   D1, D5
		subq.w  #$01, D5
loc_1788:
		move.w  D7, $00(A1, D0)
		addq.w  #$02, D0
		dbra    D5, loc_1788
		bra.s   loc_174E
;===============================================================================
; Nemesis format decompression routine
; [ End ]
;===============================================================================

;===============================================================================
; Routines for loading graphics from the ArtLoadCues array according to D0
; [ Begin ]
;===============================================================================
LoadPLC:
		movem.l A1/A2, -(A7)
		lea     (ArtLoadCues), A1
		add.w   D0, D0
		move.w  $00(A1, D0), D0
		lea     $00(A1, D0), A1
		lea     (PLC_Buffer).w, A2
loc_17AC:
		tst.l   (A2)
		beq.s   loc_17B4
		addq.w  #$06, A2
		bra.s   loc_17AC
loc_17B4:
		move.w  (A1)+, D0
		bmi.s   loc_17C0
loc_17B8:
		move.l  (A1)+, (A2)+
		move.w  (A1)+, (A2)+
		dbra    D0, loc_17B8
loc_17C0:
		movem.l (A7)+, A1/A2
		rts
;-------------------------------------------------------------------------------
LoadPLC2:
		movem.l A1/A2, -(A7)
		lea     (ArtLoadCues), A1
		add.w   D0, D0
		move.w  $00(A1, D0), D0
		lea     $00(A1, D0), A1
		bsr.s   ClearPLC
		lea     (PLC_Buffer).w, A2
		move.w  (A1)+, D0
		bmi.s   loc_17EC
loc_17E4:
		move.l  (A1)+, (A2)+
		move.w  (A1)+, (A2)+
		dbra    D0, loc_17E4
loc_17EC:
		movem.l (A7)+, A1/A2
		rts
;===============================================================================
; Routines for loading graphics from the ArtLoadCues array according to D0
; [ End ]
;===============================================================================

;===============================================================================
; Routine for clearing the Pattern Load Cue
; [ Begin ]
;===============================================================================
ClearPLC:
		lea     (PLC_Buffer).w, A2
		moveq   #$1F, D0
ClearPLC_Loop:
		clr.l   (A2)+
		dbra    D0, ClearPLC_Loop
		rts
;===============================================================================
; Routine for clearing the Pattern Load Cue
; [ End ]
;===============================================================================

;===============================================================================
; Routine for unpacking items in the Pattern Load Cue
; [ Begin ]
;===============================================================================
RunPLC:
		tst.l   (PLC_Buffer).w
		beq.s   Exit_RunPLC
		tst.w   ($FFFFF6F8).w
		bne.s   Exit_RunPLC
		move.l  (PLC_Buffer).w, A0
		lea     NemDec_Output(PC), A3
		nop
		lea     ($FFFFAA00).w, A1
		move.w  (A0)+, D2
		bpl.s   loc_1822
		; Point A3 to NemDec_Output_XOR if A3 = NemDec_Output or
	      	; Point A3 to NemDec_OutputRAM_XOR if A3 = NemDec_OutputRAM
		adda.w  #(NemDec_Output_XOR-NemDec_Output), A3   ; $000A
loc_1822:
		andi.w  #$7FFF, D2
		move.w  D2, ($FFFFF6F8).w
		bsr     NemDec_4
		move.b  (A0)+, D5
		asl.w   #$08, D5
		move.b  (A0)+, D5
		moveq   #$10, D6
		moveq   #$00, D0
		move.l  A0, (PLC_Buffer).w
		move.l  A3, ($FFFFF6E0).w
		move.l  D0, ($FFFFF6E4).w
		move.l  D0, ($FFFFF6E8).w
		move.l  D0, ($FFFFF6EC).w
		move.l  D5, ($FFFFF6F0).w
		move.l  D6, ($FFFFF6F4).w
Exit_RunPLC:
		rts
;===============================================================================
; Routine for unpacking items in the Pattern Load Cue
; [ End ]
;===============================================================================
loc_1856:
		tst.w   ($FFFFF6F8).w
		beq     loc_18EE
		move.w  #$0009, ($FFFFF6FA).w
		moveq   #$00, D0
		move.w  ($FFFFF684).w, D0
		addi.w  #$0120, ($FFFFF684).w
		bra.s   loc_188A
;-------------------------------------------------------------------------------
loc_1872:
		tst.w   ($FFFFF6F8).w
		beq.s   loc_18EE
		move.w  #$0003, ($FFFFF6FA).w
		moveq   #$00, D0
		move.w  ($FFFFF684).w, D0
		addi.w  #$0060, ($FFFFF684).w
loc_188A:
		lea     (VDP_Control_Port), A4
		lsl.l   #$02, D0
		lsr.w   #$02, D0
		ori.w   #$4000, D0
		swap.w  D0
		move.l  D0, (A4)
		subq.w  #$04, A4
		move.l  (PLC_Buffer).w, A0
		move.l  ($FFFFF6E0).w, A3
		move.l  ($FFFFF6E4).w, D0
		move.l  ($FFFFF6E8).w, D1
		move.l  ($FFFFF6EC).w, D2
		move.l  ($FFFFF6F0).w, D5
		move.l  ($FFFFF6F4).w, D6
		lea     ($FFFFAA00).w, A1
loc_18BE:
		move.w  #$0008, A5
		bsr     NemDec_3
		subq.w  #$01, ($FFFFF6F8).w
		beq.s   loc_18F0
		subq.w  #$01, ($FFFFF6FA).w
		bne.s   loc_18BE
		move.l  A0, (PLC_Buffer).w
		move.l  A3, ($FFFFF6E0).w
		move.l  D0, ($FFFFF6E4).w
		move.l  D1, ($FFFFF6E8).w
		move.l  D2, ($FFFFF6EC).w
		move.l  D5, ($FFFFF6F0).w
		move.l  D6, ($FFFFF6F4).w
loc_18EE:
		rts
loc_18F0:
		lea     (PLC_Buffer).w, A0
		moveq   #$15, D0
loc_18F6:
		move.l  $0006(A0), (A0)+
		dbra    D0, loc_18F6
		rts
;===============================================================================
; Load PLCs directly from ROM without queuing
; [ Begin ]
;===============================================================================
RunPLC_ROM:
		lea     (ArtLoadCues), A1
		add.w   D0, D0
		move.w  $00(A1, D0), D0
		lea     $00(A1, D0), A1
		move.w  (A1)+, D1
RunPLC_ROM_Loop:
		move.l  (A1)+, A0
		moveq   #$00, D0
		move.w  (A1)+, D0
		lsl.l   #$02, D0
		lsr.w   #$02, D0
		ori.w   #$4000, D0
		swap.w  D0
		move.l  D0, (VDP_Control_Port)
		bsr     NemDec
		dbra    D1, RunPLC_ROM_Loop
		rts
;===============================================================================
; Load PLCs directly from ROM without queuing
; [ End ]
;===============================================================================

;===============================================================================
; Enigma format decompression routine
; [ Begin ]
;===============================================================================
EniDec:                                                     
		movem.l D0-D7/A1-A5, -(A7)
		move.w  D0, A3
		move.b  (A0)+, D0
		ext.w   D0
		move.w  D0, A5
		move.b  (A0)+, D4
		lsl.b   #$03, D4
		move.w  (A0)+, A2
		adda.w  A3, A2
		move.w  (A0)+, A4
		adda.w  A3, A4
		move.b  (A0)+, D5
		asl.w   #$08, D5
		move.b  (A0)+, D5
		moveq   #$10, D6
loc_1952:
		moveq   #$07, D0
		move.w  D6, D7
		sub.w   D0, D7
		move.w  D5, D1
		lsr.w   D7, D1
		andi.w  #$007F, D1
		move.w  D1, D2
		cmpi.w  #$0040, D1
		bcc.s   loc_196C
		moveq   #$06, D0
		lsr.w   #$01, D2
loc_196C:
		bsr     loc_1AA0
		andi.w  #$000F, D2
		lsr.w   #$04, D1
		add.w   D1, D1
		jmp     loc_19C8(PC, D1)
;-------------------------------------------------------------------------------
loc_197C:
		move.w  A2, (A1)+
		addq.w  #$01, A2
		dbra    D2, loc_197C
		bra.s   loc_1952
;-------------------------------------------------------------------------------
loc_1986:
		move.w  A4, (A1)+
		dbra    D2, loc_1986
		bra.s   loc_1952
;-------------------------------------------------------------------------------
loc_198E:
		bsr     loc_19F0
loc_1992:
		move.w  D1, (A1)+
		dbra    D2, loc_1992
		bra.s   loc_1952
;-------------------------------------------------------------------------------
loc_199A:
		bsr     loc_19F0
loc_199E:
		move.w  D1, (A1)+
		addq.w  #$01, D1
		dbra    D2, loc_199E
		bra.s   loc_1952
;-------------------------------------------------------------------------------
loc_19A8:
		bsr     loc_19F0
loc_19AC:
		move.w  D1, (A1)+
		subq.w  #$01, D1
		dbra    D2, loc_19AC
		bra.s   loc_1952
;-------------------------------------------------------------------------------
loc_19B6:
		cmpi.w  #$000F, D2
		beq.s   loc_19D8
loc_19BC:
		bsr     loc_19F0
		move.w  D1, (A1)+
		dbra    D2, loc_19BC
		bra.s   loc_1952
;-------------------------------------------------------------------------------
loc_19C8:
		bra.s   loc_197C
		bra.s   loc_197C
		bra.s   loc_1986
		bra.s   loc_1986
		bra.s   loc_198E
		bra.s   loc_199A
		bra.s   loc_19A8
		bra.s   loc_19B6
;-------------------------------------------------------------------------------
loc_19D8:
		subq.w  #$01, A0
		cmpi.w  #$0010, D6
		bne.s   loc_19E2
		subq.w  #$01, A0
loc_19E2:
		move.w  A0, D0
		lsr.w   #$01, D0
		bcc.s   loc_19EA
		addq.w  #$01, A0
loc_19EA:
		movem.l (A7)+, D0-D7/A1-A5
		rts
loc_19F0:
		move.w  A3, D3
		move.b  D4, D1
		add.b   D1, D1
		bcc.s   loc_1A02
		subq.w  #$01, D6
		btst    D6, D5
		beq.s   loc_1A02
		ori.w   #$8000, D3
loc_1A02:
		add.b   D1, D1
		bcc.s   loc_1A10
		subq.w  #$01, D6
		btst    D6, D5
		beq.s   loc_1A10
		addi.w  #$4000, D3
loc_1A10:
		add.b   D1, D1
		bcc.s   loc_1A1E
		subq.w  #$01, D6
		btst    D6, D5
		beq.s   loc_1A1E
		addi.w  #$2000, D3
loc_1A1E:
		add.b   D1, D1
		bcc.s   loc_1A2C
		subq.w  #$01, D6
		btst    D6, D5
		beq.s   loc_1A2C
		ori.w   #$1000, D3
loc_1A2C:
		add.b   D1, D1
		bcc.s   loc_1A3A
		subq.w  #$01, D6
		btst    D6, D5
		beq.s   loc_1A3A
		ori.w   #$0800, D3
loc_1A3A:
		move.w  D5, D1
		move.w  D6, D7
		sub.w   A5, D7
		bcc.s   loc_1A6A
		move.w  D7, D6
		addi.w  #$0010, D6
		neg.w   D7
		lsl.w   D7, D1
		move.b  (A0), D5
		rol.b   D7, D5
		add.w   D7, D7
		and.w   loc_1A80-$02(PC, D7), D5
		add.w   D5, D1
loc_1A58:
		move.w  A5, D0
		add.w   D0, D0
		and.w   loc_1A80-$02(PC, D0), D1
		add.w   D3, D1
		move.b  (A0)+, D5
		lsl.w   #$08, D5
		move.b  (A0)+, D5
		rts
loc_1A6A:
		beq.s   loc_1A7C
		lsr.w   D7, D1
		move.w  A5, D0
		add.w   D0, D0
		and.w   loc_1A80-$02(PC, D0), D1
		add.w   D3, D1
		move.w  A5, D0
		bra.s   loc_1AA0
loc_1A7C:
		moveq   #$10, D6
		bra.s   loc_1A58
;-------------------------------------------------------------------------------
loc_1A80:
		dc.w    $0001, $0003, $0007, $000F, $001F, $003F, $007F, $00FF
		dc.w    $01FF, $03FF, $07FF, $0FFF, $1FFF, $3FFF, $7FFF, $FFFF
;-------------------------------------------------------------------------------
loc_1AA0:
		sub.w   D0, D6
		cmpi.w  #$0009, D6
		bcc.s   loc_1AAE
		addq.w  #$08, D6
		asl.w   #$08, D5
		move.b  (A0)+, D5
loc_1AAE:
		rts
;===============================================================================
; Enigma format decompression routine
; [ End ]
;===============================================================================

;===============================================================================
; Kosinski format decompression routine
; [ Begin ]
;===============================================================================
KosDec:                                                   
		subq.l  #$02, A7
		move.b  (A0)+, $0001(A7)
		move.b  (A0)+, (A7)
		move.w  (A7), D5
		moveq   #$0F, D4
loc_1ABC:
		lsr.w   #$01, D5
		move    SR, D6
		dbra    D4, loc_1ACE
		move.b  (A0)+, $0001(A7)
		move.b  (A0)+, (A7)
		move.w  (A7), D5
		moveq   #$0F, D4
loc_1ACE:
		move    D6, CCR
		bcc.s   loc_1AD6
		move.b  (A0)+, (A1)+
		bra.s   loc_1ABC
loc_1AD6:
		moveq   #$00, D3
		lsr.w   #$01, D5
		move    SR, D6
		dbra    D4, loc_1AEA
		move.b  (A0)+, $0001(A7)
		move.b  (A0)+, (A7)
		move.w  (A7), D5
		moveq   #$0F, D4
loc_1AEA:
		move    D6, CCR
		bcs.s   loc_1B1A
		lsr.w   #$01, D5
		dbra    D4, loc_1AFE
		move.b  (A0)+, $0001(A7)
		move.b  (A0)+, (A7)
		move.w  (A7), D5
		moveq   #$0F, D4
loc_1AFE:
		roxl.w  #$01, D3
		lsr.w   #$01, D5
		dbra    D4, loc_1B10
		move.b  (A0)+, $0001(A7)
		move.b  (A0)+, (A7)
		move.w  (A7), D5
		moveq   #$0F, D4
loc_1B10:
		roxl.w  #$01, D3
		addq.w  #$01, D3
		moveq   #-$01, D2
		move.b  (A0)+, D2
		bra.s   loc_1B30
loc_1B1A:
		move.b  (A0)+, D0
		move.b  (A0)+, D1
		moveq   #-$01, D2
		move.b  D1, D2
		lsl.w   #$05, D2
		move.b  D0, D2
		andi.w  #$0007, D1
		beq.s   loc_1B3C
		move.b  D1, D3
		addq.w  #$01, D3
loc_1B30:
		move.b  $00(A1, D2), D0
		move.b  D0, (A1)+
		dbra    D3, loc_1B30
		bra.s   loc_1ABC
loc_1B3C:
		move.b  (A0)+, D1
		beq.s   loc_1B4C
		cmpi.b  #$01, D1
		beq     loc_1ABC
		move.b  D1, D3
		bra.s   loc_1B30
loc_1B4C:
		addq.l  #$02, A7
		rts
;===============================================================================
; Kosinski format decompression routine
; [ End ]
;===============================================================================
loc_1B50:
		moveq   #$00, D0
		move.w  #$07FF, D4
		moveq   #$00, D5
		moveq   #$00, D6
		move.w  A3, D7
		subq.w  #$01, D2
		beq     loc_1EF0
		subq.w  #$01, D2
		beq     loc_1E72
		subq.w  #$01, D2
		beq     loc_1DF4
		subq.w  #$01, D2
		beq     loc_1D76
		subq.w  #$01, D2
		beq     loc_1CFA
		subq.w  #$01, D2
		beq     loc_1C7C
		subq.w  #$01, D2
		beq     loc_1C02
loc_1B86:
		move.b  (A0)+, D1
		add.b   D1, D1
		bcs.s   loc_1C00
		move.l  A2, A6
		add.b   D1, D1
		bcs.s   loc_1BA8
		move.b  (A1)+, D5
		suba.l  D5, A6
		add.b   D1, D1
		bcc.s   loc_1B9C
		move.b  (A6)+, (A2)+
loc_1B9C:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1BF0
		bra     loc_1CFA
loc_1BA8:
		lsl.w   #$03, D1
		move.w  D1, D6
		and.w   D4, D6
		move.b  (A1)+, D6
		suba.l  D6, A6
		add.b   D1, D1
		bcs.s   loc_1BBC
		add.b   D1, D1
		bcs.s   loc_1BD2
		bra.s   loc_1BD4
loc_1BBC:
		add.b   D1, D1
		bcc.s   loc_1BD0
		moveq   #$00, D0
		move.b  (A1)+, D0
		beq.s   loc_1BE2
		subq.w  #$06, D0
		bmi.s   loc_1BE8
loc_1BCA:
		move.b  (A6)+, (A2)+
		dbra    D0, loc_1BCA
loc_1BD0:
		move.b  (A6)+, (A2)+
loc_1BD2:
		move.b  (A6)+, (A2)+
loc_1BD4:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1BF8
		bra     loc_1EF0
loc_1BE2:
		move.w  #$0000, D0
		rts
loc_1BE8:
		move.w  #$FFFF, D0
		moveq   #$01, D2
		rts
loc_1BF0:
		move.w  #$0001, D0
		moveq   #$05, D2
		rts
loc_1BF8:
		move.w  #$0001, D0
		moveq   #$01, D2
		rts
loc_1C00:
		move.b  (A1)+, (A2)+
loc_1C02:
		add.b   D1, D1
		bcs.s   loc_1C7A
		move.l  A2, A6
		add.b   D1, D1
		bcs.s   loc_1C22
		move.b  (A1)+, D5
		suba.l  D5, A6
		add.b   D1, D1
		bcc.s   loc_1C16
		move.b  (A6)+, (A2)+
loc_1C16:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1C6A
		bra     loc_1D76
loc_1C22:
		lsl.w   #$03, D1
		move.w  D1, D6
		and.w   D4, D6
		move.b  (A1)+, D6
		suba.l  D6, A6
		add.b   D1, D1
		bcs.s   loc_1C36
		add.b   D1, D1
		bcs.s   loc_1C4C
		bra.s   loc_1C4E
loc_1C36:
		add.b   D1, D1
		bcc.s   loc_1C4A
		moveq   #$00, D0
		move.b  (A1)+, D0
		beq.s   loc_1C5C
		subq.w  #$06, D0
		bmi.s   loc_1C62
loc_1C44:
		move.b  (A6)+, (A2)+
		dbra    D0, loc_1C44
loc_1C4A:
		move.b  (A6)+, (A2)+
loc_1C4C:
		move.b  (A6)+, (A2)+
loc_1C4E:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1C72
		bra     loc_1B86
loc_1C5C:
		move.w  #$0000, D0
		rts
loc_1C62:
		move.w  #$FFFF, D0
		moveq   #$00, D2
		rts
loc_1C6A:
		move.w  #$0001, D0
		moveq   #$04, D2
		rts
loc_1C72:
		move.w  #$0001, D0
		moveq   #$00, D2
		rts
loc_1C7A:
		move.b  (A1)+, (A2)+
loc_1C7C:
		add.b   D1, D1
		bcs.s   loc_1CF8
		move.l  A2, A6
		add.b   D1, D1
		bcs.s   loc_1C9C
		move.b  (A1)+, D5
		suba.l  D5, A6
		add.b   D1, D1
		bcc.s   loc_1C90
		move.b  (A6)+, (A2)+
loc_1C90:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1CE8
		bra     loc_1DF4
loc_1C9C:
		lsl.w   #$03, D1
		move.w  D1, D6
		and.w   D4, D6
		move.b  (A1)+, D6
		suba.l  D6, A6
		add.b   D1, D1
		bcs.s   loc_1CB2
		move.b  (A0)+, D1
		add.b   D1, D1
		bcs.s   loc_1CCA
		bra.s   loc_1CCC
loc_1CB2:
		move.b  (A0)+, D1
		add.b   D1, D1
		bcc.s   loc_1CC8
		moveq   #$00, D0
		move.b  (A1)+, D0
		beq.s   loc_1CDA
		subq.w  #$06, D0
		bmi.s   loc_1CE0
loc_1CC2:
		move.b  (A6)+, (A2)+
		dbra    D0, loc_1CC2
loc_1CC8:
		move.b  (A6)+, (A2)+
loc_1CCA:
		move.b  (A6)+, (A2)+
loc_1CCC:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1CF0
		bra     loc_1C02
loc_1CDA:
		move.w  #$0000, D0
		rts
loc_1CE0:
		move.w  #$FFFF, D0
		moveq   #$07, D2
		rts
loc_1CE8:
		move.w  #$0001, D0
		moveq   #$03, D2
		rts
loc_1CF0:
		move.w  #$0001, D0
		moveq   #$07, D2
		rts
loc_1CF8:
		move.b  (A1)+, (A2)+
loc_1CFA:
		add.b   D1, D1
		bcs.s   loc_1D74
		move.l  A2, A6
		add.b   D1, D1
		bcs.s   loc_1D1A
		move.b  (A1)+, D5
		suba.l  D5, A6
		add.b   D1, D1
		bcc.s   loc_1D0E
		move.b  (A6)+, (A2)+
loc_1D0E:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1D64
		bra     loc_1E72
loc_1D1A:
		lsl.w   #$03, D1
		move.b  (A0)+, D1
		move.w  D1, D6
		and.w   D4, D6
		move.b  (A1)+, D6
		suba.l  D6, A6
		add.b   D1, D1
		bcs.s   loc_1D30
		add.b   D1, D1
		bcs.s   loc_1D46
		bra.s   loc_1D48
loc_1D30:
		add.b   D1, D1
		bcc.s   loc_1D44
		moveq   #$00, D0
		move.b  (A1)+, D0
		beq.s   loc_1D56
		subq.w  #$06, D0
		bmi.s   loc_1D5C
loc_1D3E:
		move.b  (A6)+, (A2)+
		dbra    D0, loc_1D3E
loc_1D44:
		move.b  (A6)+, (A2)+
loc_1D46:
		move.b  (A6)+, (A2)+
loc_1D48:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1D6C
		bra     loc_1C7C
loc_1D56:
		move.w  #$0000, D0
		rts
loc_1D5C:
		move.w  #$FFFF, D0
		moveq   #$06, D2
		rts
loc_1D64:
		move.w  #$0001, D0
		moveq   #$02, D2
		rts
loc_1D6C:
		move.w  #$0001, D0
		moveq   #$06, D2
		rts
loc_1D74:
		move.b  (A1)+, (A2)+
loc_1D76:
		add.b   D1, D1
		bcs.s   loc_1DF2
		move.l  A2, A6
		add.b   D1, D1
		bcs.s   loc_1D96
		move.b  (A1)+, D5
		suba.l  D5, A6
		add.b   D1, D1
		bcc.s   loc_1D8A
		move.b  (A6)+, (A2)+
loc_1D8A:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1DE2
		bra     loc_1EF0
loc_1D96:
		lsl.w   #$02, D1
		move.b  (A0)+, D1
		add.w   D1, D1
		move.w  D1, D6
		and.w   D4, D6
		move.b  (A1)+, D6
		suba.l  D6, A6
		add.b   D1, D1
		bcs.s   loc_1DAE
		add.b   D1, D1
		bcs.s   loc_1DC4
		bra.s   loc_1DC6
loc_1DAE:
		add.b   D1, D1
		bcc.s   loc_1DC2
		moveq   #$00, D0
		move.b  (A1)+, D0
		beq.s   loc_1DD4
		subq.w  #$06, D0
		bmi.s   loc_1DDA
loc_1DBC:
		move.b  (A6)+, (A2)+
		dbra    D0, loc_1DBC
loc_1DC2:
		move.b  (A6)+, (A2)+
loc_1DC4:
		move.b  (A6)+, (A2)+
loc_1DC6:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1DEA
		bra     loc_1CFA
loc_1DD4:
		move.w  #$0000, D0
		rts
loc_1DDA:
		move.w  #$FFFF, D0
		moveq   #$05, D2
		rts
loc_1DE2:
		move.w  #$0001, D0
		moveq   #$01, D2
		rts
loc_1DEA:
		move.w  #$0001, D0
		moveq   #$05, D2
		rts
loc_1DF2:
		move.b  (A1)+, (A2)+
loc_1DF4:
		add.b   D1, D1
		bcs.s   loc_1E70
		move.l  A2, A6
		add.b   D1, D1
		bcs.s   loc_1E14
		move.b  (A1)+, D5
		suba.l  D5, A6
		add.b   D1, D1
		bcc.s   loc_1E08
		move.b  (A6)+, (A2)+
loc_1E08:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1E60
		bra     loc_1B86
loc_1E14:
		add.w   D1, D1
		move.b  (A0)+, D1
		lsl.w   #$02, D1
		move.w  D1, D6
		and.w   D4, D6
		move.b  (A1)+, D6
		suba.l  D6, A6
		add.b   D1, D1
		bcs.s   loc_1E2C
		add.b   D1, D1
		bcs.s   loc_1E42
		bra.s   loc_1E44
loc_1E2C:
		add.b   D1, D1
		bcc.s   loc_1E40
		moveq   #$00, D0
		move.b  (A1)+, D0
		beq.s   loc_1E52
		subq.w  #$06, D0
		bmi.s   loc_1E58
loc_1E3A:
		move.b  (A6)+, (A2)+
		dbra    D0, loc_1E3A
loc_1E40:
		move.b  (A6)+, (A2)+
loc_1E42:
		move.b  (A6)+, (A2)+
loc_1E44:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1E68
		bra     loc_1D76
loc_1E52:
		move.w  #$0000, D0
		rts
loc_1E58:
		move.w  #$FFFF, D0
		moveq   #$04, D2
		rts
loc_1E60:
		move.w  #$0001, D0
		moveq   #$08, D2
		rts
loc_1E68:
		move.w  #$0001, D0
		moveq   #$04, D2
		rts
loc_1E70:
		move.b  (A1)+, (A2)+
loc_1E72:
		add.b   D1, D1
		bcs.s   loc_1EEE
		move.l  A2, A6
		add.b   D1, D1
		bcs.s   loc_1E94
		move.b  (A0)+, D1
		move.b  (A1)+, D5
		suba.l  D5, A6
		add.b   D1, D1
		bcc.s   loc_1E88
		move.b  (A6)+, (A2)+
loc_1E88:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1EDE
		bra     loc_1C02
loc_1E94:
		move.b  (A0)+, D1
		lsl.w   #$03, D1
		move.w  D1, D6
		and.w   D4, D6
		move.b  (A1)+, D6
		suba.l  D6, A6
		add.b   D1, D1
		bcs.s   loc_1EAA
		add.b   D1, D1
		bcs.s   loc_1EC0
		bra.s   loc_1EC2
loc_1EAA:
		add.b   D1, D1
		bcc.s   loc_1EBE
		moveq   #$00, D0
		move.b  (A1)+, D0
		beq.s   loc_1ED0
		subq.w  #$06, D0
		bmi.s   loc_1ED6
loc_1EB8:
		move.b  (A6)+, (A2)+
		dbra    D0, loc_1EB8
loc_1EBE:
		move.b  (A6)+, (A2)+
loc_1EC0:
		move.b  (A6)+, (A2)+
loc_1EC2:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1EE6
		bra     loc_1DF4
loc_1ED0:
		move.w  #$0000, D0
		rts
loc_1ED6:
		move.w  #$FFFF, D0
		moveq   #$03, D2
		rts
loc_1EDE:
		move.w  #$0001, D0
		moveq   #$07, D2
		rts
loc_1EE6:
		move.w  #$0001, D0
		moveq   #$03, D2
		rts
loc_1EEE:
		move.b  (A1)+, (A2)+
loc_1EF0:
		add.b   D1, D1
		bcs.s   loc_1F6A
		move.b  (A0)+, D1
		move.l  A2, A6
		add.b   D1, D1
		bcs.s   loc_1F12
		move.b  (A1)+, D5
		suba.l  D5, A6
		add.b   D1, D1
		bcc.s   loc_1F06
		move.b  (A6)+, (A2)+
loc_1F06:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1F5A
		bra     loc_1C7C
loc_1F12:
		lsl.w   #$03, D1
		move.w  D1, D6
		and.w   D4, D6
		move.b  (A1)+, D6
		suba.l  D6, A6
		add.b   D1, D1
		bcs.s   loc_1F26
		add.b   D1, D1
		bcs.s   loc_1F3C
		bra.s   loc_1F3E
loc_1F26:
		add.b   D1, D1
		bcc.s   loc_1F3A
		moveq   #$00, D0
		move.b  (A1)+, D0
		beq.s   loc_1F4C
		subq.w  #$06, D0
		bmi.s   loc_1F52
loc_1F34:
		move.b  (A6)+, (A2)+
		dbra    D0, loc_1F34
loc_1F3A:
		move.b  (A6)+, (A2)+
loc_1F3C:
		move.b  (A6)+, (A2)+
loc_1F3E:
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		move.b  (A6)+, (A2)+
		cmp.w   A2, D7
		bls.s   loc_1F62
		bra     loc_1E72
loc_1F4C:
		move.w  #$0000, D0
		rts
loc_1F52:
		move.w  #$FFFF, D0
		moveq   #$02, D2
		rts
loc_1F5A:
		move.w  #$0001, D0
		moveq   #$06, D2
		rts
loc_1F62:
		move.w  #$0001, D0
		moveq   #$02, D2
		rts
loc_1F6A:
		move.b  (A1)+, (A2)+
		bra     loc_1B86
;===============================================================================
; Color palette cycling routine
; [ Begin ]
;===============================================================================
PalCycle_Load:
		bsr     PalCycle_SuperSonic
		moveq   #$00, D2
		moveq   #$00, D0
		move.b  (Level_Id).w, D0
		add.w   D0, D0
		move.w  PalCycle_Load_List(PC, D0), D0
		jmp     PalCycle_Load_List(PC, D0)
		rts
;-------------------------------------------------------------------------------
PalCycle_Load_List:
		dc.w    PalCycle_GHz-PalCycle_Load_List
		dc.w    PalCycle_Lvl1-PalCycle_Load_List
		dc.w    PalCycle_Wz-PalCycle_Load_List
		dc.w    PalCycle_Lvl3-PalCycle_Load_List
		dc.w    PalCycle_Mz-PalCycle_Load_List
		dc.w    PalCycle_Mz-PalCycle_Load_List
		dc.w    PalCycle_Lvl6-PalCycle_Load_List
		dc.w    PalCycle_HTz-PalCycle_Load_List
		dc.w    PalCycle_HPz-PalCycle_Load_List
		dc.w    PalCycle_Lvl9-PalCycle_Load_List
		dc.w    PalCycle_OOz-PalCycle_Load_List
		dc.w    PalCycle_DHz-PalCycle_Load_List
		dc.w    PalCycle_CNz-PalCycle_Load_List
		dc.w    PalCycle_CPz-PalCycle_Load_List
		dc.w    PalCycle_GCz-PalCycle_Load_List
		dc.w    PalCycle_NGHz-PalCycle_Load_List
		dc.w    PalCycle_DEz-PalCycle_Load_List
;-------------------------------------------------------------------------------
; Routine for zones without a cycling palette
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_Lvl1:
PalCycle_Lvl3:
PalCycle_Lvl6:
PalCycle_Lvl9:
PalCycle_GCz:
PalCycle_DEz:
		rts
;-------------------------------------------------------------------------------
; Routine for zones without a cycling palette
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routine for Green Hills cycling palette
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_GHz:
		lea     (Pal_GHzCyc), A0
		subq.w  #$01, ($FFFFF634).w
		bpl.s   loc_1FD8
		move.w  #$0007, ($FFFFF634).w
		move.w  ($FFFFF632).w, D0
		addq.w  #$01, ($FFFFF632).w
		andi.w  #$0003, D0
		lsl.w   #$03, D0
		move.l  $00(A0, D0), ($FFFFFB26).w
		move.l  $04(A0, D0), ($FFFFFB3C).w
loc_1FD8:
		rts
;-------------------------------------------------------------------------------
; Routine for Green Hills cycling palette
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routine for Woods cycling palette
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_Wz:
		subq.w  #$01, ($FFFFF634).w
		bpl.s   loc_2008
		move.w  #$0002, ($FFFFF634).w
		lea     (Pal_WzCyc), A0
		move.w  ($FFFFF632).w, D0
		subq.w  #$02, ($FFFFF632).w
		bcc.s   loc_1FFC
		move.w  #$0006, ($FFFFF632).w
loc_1FFC:
		lea     ($FFFFFB66).w, A1
		move.l  $00(A0, D0), (A1)+
		move.l  $04(A0, D0), (A1)
loc_2008:
		rts
;-------------------------------------------------------------------------------
; Routine for Woods cycling palette
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routine for Metropolis cycling palettes
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_Mz:
		subq.w  #$01, ($FFFFF634).w
		bpl.s   loc_203A
		move.w  #$0011, ($FFFFF634).w
		lea     (Pal_MzCyc1), A0
		move.w  ($FFFFF632).w, D0
		addq.w  #$02, ($FFFFF632).w
		cmpi.w  #$000C, ($FFFFF632).w
		bcs.s   loc_2032
		move.w  #$0000, ($FFFFF632).w
loc_2032:
		lea     ($FFFFFB4A).w, A1
		move.w  $00(A0, D0), (A1)
loc_203A:
		subq.w  #$01, ($FFFFF666).w
		bpl.s   loc_206E
		move.w  #$0002, ($FFFFF666).w
		lea     (Pal_MzCyc2), A0
		move.w  ($FFFFF652).w, D0
		addq.w  #$02, ($FFFFF652).w
		cmpi.w  #$0006, ($FFFFF652).w
		bcs.s   loc_2062
		move.w  #$0000, ($FFFFF652).w
loc_2062:
		lea     ($FFFFFB42).w, A1
		move.l  $00(A0, D0), (A1)+
		move.w  $04(A0, D0), (A1)
loc_206E:
		subq.w  #$01, ($FFFFF668).w
		bpl.s   loc_209E
		move.w  #$0009, ($FFFFF668).w
		lea     (Pal_MzCyc3), A0
		move.w  ($FFFFF654).w, D0
		addq.w  #$02, ($FFFFF654).w
		cmpi.w  #$0014, ($FFFFF654).w
		bcs.s   loc_2096
		move.w  #$0000, ($FFFFF654).w
loc_2096:
		lea     ($FFFFFB5E).w, A1
		move.w  $00(A0, D0), (A1)
loc_209E:
		rts
;-------------------------------------------------------------------------------
; Routine for Metropolis cycling palettes
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routine for Hill Tops cycling palette
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_HTz:
		lea     (Pal_HTzCyc), A0
		subq.w  #$01, ($FFFFF634).w
		bpl.s   loc_20D2
		move.w  #$0000, ($FFFFF634).w
		move.w  ($FFFFF632).w, D0
		addq.w  #$01, ($FFFFF632).w
		andi.w  #$000F, D0
		move.b  Pal_HTzCyc_Data(PC, D0), ($FFFFF635).w
		lsl.w   #$03, D0
		move.l  $00(A0, D0), ($FFFFFB26).w
		move.l  $04(A0, D0), ($FFFFFB3C).w
loc_20D2:
		rts
;-------------------------------------------------------------------------------
Pal_HTzCyc_Data:
		dc.b    $0B, $0B, $0B, $0A, $08, $0A, $0B, $0B
		dc.b    $0B, $0B, $0D, $0F, $0D, $0B, $0B, $0B
;-------------------------------------------------------------------------------
; Routine for Hill Tops cycling palette
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routine for Hidden Palaces cycling palettes
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_HPz:
		subq.w  #$01, ($FFFFF634).w
		bpl.s   loc_2124
		move.w  #$0004, ($FFFFF634).w
		lea     (Pal_HPzCyc1), A0
		move.w  ($FFFFF632).w, D0
		subq.w  #$02, ($FFFFF632).w
		bcc.s   loc_2106
		move.w  #$0006, ($FFFFF632).w
loc_2106:
		lea     ($FFFFFB72).w, A1
		move.l  $00(A0, D0), (A1)+
		move.l  $04(A0, D0), (A1)
		lea     (Pal_HPzCyc2), A0
		lea     ($FFFFFAF2).w, A1
		move.l  $00(A0, D0), (A1)+
		move.l  $04(A0, D0), (A1)
loc_2124:
		rts
;-------------------------------------------------------------------------------
; Routine for Hidden Palaces cycling palettes
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routine for Oil Oceans Palaces cycling palette
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_OOz:
		subq.w  #$01, ($FFFFF634).w
		bpl.s   loc_2152
		move.w  #$0007, ($FFFFF634).w
		lea     (Pal_OOzCyc), A0
		move.w  ($FFFFF632).w, D0
		addq.w  #$02, ($FFFFF632).w
		andi.w  #$0006, ($FFFFF632).w
		lea     ($FFFFFB54).w, A1
		move.l  $00(A0, D0), (A1)+
		move.l  $04(A0, D0), (A1)
loc_2152:
		rts
;-------------------------------------------------------------------------------
; Routine for Oil Oceans Palaces cycling palette
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routine for Dust Hills cycling palette
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_DHz:
		subq.w  #$01, ($FFFFF634).w
		bpl.s   loc_217A
		move.w  #$0001, ($FFFFF634).w
		lea     (Pal_DHzCyc), A0
		move.w  ($FFFFF632).w, D0
		addq.w  #$02, ($FFFFF632).w
		andi.w  #$0006, ($FFFFF632).w
		move.w  $00(A0, D0), ($FFFFFB36).w
loc_217A:
		rts
;-------------------------------------------------------------------------------
; Routine for Dust Hills cycling palette
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routine for Casino Nights cycling palettes
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_CNz:
		subq.w  #$01, ($FFFFF634).w
		bpl     loc_221A
		move.w  #$0007, ($FFFFF634).w
		lea     (Pal_CNzCyc1), A0
		move.w  ($FFFFF632).w, D0
		addq.w  #$02, ($FFFFF632).w
		cmpi.w  #$0006, ($FFFFF632).w
		bcs.s   loc_21A6
		move.w  #$0000, ($FFFFF632).w
loc_21A6:
		lea     $00(A0, D0), A0
		lea     (Palette_Buffer).w, A1
		move.w  $0000(A0), $004A(A1)
		move.w  $0006(A0), $004C(A1)
		move.w  $000C(A0), $004E(A1)
		move.w  $0012(A0), $0056(A1)
		move.w  $0018(A0), $0058(A1)
		move.w  $001E(A0), $005A(A1)
		lea     (Pal_CNzCyc2), A0
		lea     $00(A0, D0), A0
		move.w  $0000(A0), $0064(A1)
		move.w  $0006(A0), $0066(A1)
		move.w  $000C(A0), $0068(A1)
		lea     (Pal_CNzCyc3), A0
		move.w  ($FFFFF652).w, D0
		addq.w  #$02, ($FFFFF652).w
		cmpi.w  #$0024, ($FFFFF652).w
		bcs.s   loc_220A
		move.w  #$0000, ($FFFFF652).w
loc_220A:
		lea     ($FFFFFB72).w, A1
		move.w  $04(A0, D0), (A1)+
		move.w  $02(A0, D0), (A1)+
		move.w  $00(A0, D0), (A1)+
loc_221A:
		rts
;-------------------------------------------------------------------------------
; Routine for Casino Nights cycling palettes
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routine for Chemical Plants cycling palettes
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_CPz:
		subq.w  #$01, ($FFFFF634).w
		bpl.s   loc_228C
		move.w  #$0007, ($FFFFF634).w
		lea     (Pal_CPzCyc1), A0
		move.w  ($FFFFF632).w, D0
		addq.w  #$06, ($FFFFF632).w
		cmpi.w  #$0036, ($FFFFF632).w
		bcs.s   loc_2244
		move.w  #$0000, ($FFFFF632).w
loc_2244:
		lea     ($FFFFFB78).w, A1
		move.l  $00(A0, D0), (A1)+
		move.w  $04(A0, D0), (A1)
		lea     (Pal_CPzCyc2), A0
		move.w  ($FFFFF652).w, D0
		addq.w  #$02, ($FFFFF652).w
		cmpi.w  #$002A, ($FFFFF652).w
		bcs.s   loc_226C
		move.w  #$0000, ($FFFFF652).w
loc_226C:
		move.w  $00(A0, D0), ($FFFFFB7E).w
		lea     (Pal_CPzCyc3), A0
		move.w  ($FFFFF654).w, D0
		addq.w  #$02, ($FFFFF654).w
		andi.w  #$001E, ($FFFFF654).w
		move.w  $00(A0, D0), ($FFFFFB5E).w
loc_228C:
		rts
;-------------------------------------------------------------------------------
; Routine for Chemical Plants cycling palettes
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routine for Neo Green Hill cycling palette
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_NGHz:
		lea     (Pal_NGHzCyc), A0
		subq.w  #$01, ($FFFFF634).w
		bpl.s   loc_22BA
		move.w  #$0005, ($FFFFF634).w
		move.w  ($FFFFF632).w, D0
		addq.w  #$01, ($FFFFF632).w
		andi.w  #$0003, D0
		lsl.w   #$03, D0
		lea     ($FFFFFB44).w, A1
		move.l  $00(A0, D0), (A1)+
		move.l  $04(A0, D0), (A1)
loc_22BA:
		rts
;-------------------------------------------------------------------------------
; Routine for Neo Green Hill cycling palette
; [ End ]
;-------------------------------------------------------------------------------
; Pal_S1_Title_Screen: ; Leftover
		dc.w    $0C42, $0E86, $0ECA, $0EEC, $0EEC, $0C42, $0E86, $0ECA
		dc.w    $0ECA, $0EEC, $0C42, $0E86, $0E86, $0ECA, $0EEC, $0C42
;-------------------------------------------------------------------------------
Pal_GHzCyc:
Pal_NGHzCyc:
		dc.w    $0A86, $0E86, $0EA8, $0ECA, $0ECA, $0A86, $0E86, $0EA8
		dc.w    $0EA8, $0ECA, $0A86, $0E86, $0E86, $0EA8, $0ECA, $0A86
;-------------------------------------------------------------------------------
Pal_HTzCyc:
		dc.w    $000E, $006E, $00AE, $00EE, $00EE, $000E, $006E, $00AE
		dc.w    $02CE, $00EE, $000E, $006E, $006E, $04EE, $08EE, $002E
		dc.w    $004E, $008E, $06EE, $0AEE, $08EE, $002E, $006E, $04EE
		dc.w    $02CE, $00EE, $000E, $006E, $006E, $02CE, $00EE, $000E
		dc.w    $000E, $006E, $00AE, $00EE, $00CE, $000C, $004E, $008E
		dc.w    $006E, $00AC, $000A, $002E, $000C, $004C, $008E, $0008
		dc.w    $000A, $002E, $006E, $00AC, $00CE, $000C, $004E, $008E
		dc.w    $00AE, $00EE, $000E, $006E, $006E, $00AE, $00EE, $000E
;-------------------------------------------------------------------------------
Pal_WzCyc:
		dc.w    $0248, $046A, $048C, $06CE, $0248, $046A, $048C, $06CE
;-------------------------------------------------------------------------------
Pal_MzCyc1:
		dc.w    $0006, $0008, $000A, $000C, $000A, $0008
;-------------------------------------------------------------------------------
Pal_MzCyc2:
		dc.w    $0422, $0866, $0ECC, $0422, $0866, $0ECC
;-------------------------------------------------------------------------------
Pal_MzCyc3:
		dc.w    $00A0, $0000, $00EE, $0000, $002E, $0000, $0E2E, $0000
		dc.w    $0E80, $0000
;-------------------------------------------------------------------------------
Pal_HPzCyc1:
		dc.w    $0E44, $0E82, $0EA8, $0EEE, $0E44, $0E82, $0EA8, $0EEE
;-------------------------------------------------------------------------------
Pal_HPzCyc2:
		dc.w    $0E84, $0EA6, $0EC6, $0EE6, $0E84, $0EA6, $0EC6, $0EE6
;-------------------------------------------------------------------------------
Pal_OOzCyc:
		dc.w    $0400, $0602, $0804, $0806, $0400, $0602, $0804, $0806
;-------------------------------------------------------------------------------
Pal_DHzCyc:
		dc.w    $000C, $006E, $00CE, $08EE
;-------------------------------------------------------------------------------
Pal_CNzCyc1:
		dc.w    $000E, $00EE, $006E, $006E, $000E, $00EE, $00EE, $006E
		dc.w    $000E, $00EC, $0080, $00C4, $00C4, $00EC, $0080, $0080
		dc.w    $00C4, $00EC
;-------------------------------------------------------------------------------
Pal_CNzCyc2:
		dc.w    $0044, $0088, $00EE, $0088, $00EE, $0044, $00EE, $0044
		dc.w    $0088
;-------------------------------------------------------------------------------
Pal_CNzCyc3:
		dc.w    $008E, $00AE, $00EC, $0EEE, $00EA, $00E4, $06C0, $0CC4
		dc.w    $0E80, $0E40, $0E04, $0C08, $0C2E, $080E, $040E, $000E
		dc.w    $004E, $006E, $008E, $00AE
;-------------------------------------------------------------------------------
Pal_CPzCyc1:
		dc.w    $0E40, $0C00, $0C00, $0E60, $0C20, $0C00, $0E40, $0E40
		dc.w    $0C00, $0C20, $0E60, $0C20, $0C00, $0E40, $0C40, $0C00
		dc.w    $0C20, $0E40, $0C00, $0C00, $0E60, $0C20, $0C00, $0E40
		dc.w    $0E20, $0C00, $0C20
;-------------------------------------------------------------------------------
Pal_CPzCyc2:
		dc.w    $00E0, $00C2, $00A4, $0086, $0068, $004A, $002C, $000E
		dc.w    $020C, $040A, $0608, $0806, $0A04, $0C02, $0E00, $0C20
		dc.w    $0A40, $0860, $0680, $04A0, $02C0
;-------------------------------------------------------------------------------
Pal_CPzCyc3:
		dc.w    $000E, $000C, $000A, $0008, $0006, $0004, $0002, $0004
		dc.w    $0006, $0008, $000A, $000C, $000E, $002E, $004E, $002E
;-------------------------------------------------------------------------------
; Routine for Super Sonics cycling palette
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_SuperSonic:
		tst.b   ($FFFFF65F).w
		beq.s   loc_2510
		bmi.s   loc_2512
		subq.b  #$01, ($FFFFF65E).w
		bpl.s   loc_2510
		move.b  #$03, ($FFFFF65E).w
		lea     (Pal_SuperSonic_Cyc), A0
		move.w  ($FFFFF65C).w, D0
		addq.w  #$08, ($FFFFF65C).w
		cmpi.w  #$0030, ($FFFFF65C).w
		bcs.s   loc_2504
		move.b  #$FF, ($FFFFF65F).w
		move.b  #$00, ($FFFFB02A).w
loc_2504:
		lea     ($FFFFFB04).w, A1
		move.l  $00(A0, D0), (A1)+
		move.l  $04(A0, D0), (A1)
loc_2510:
		rts
loc_2512:
		subq.b  #$01, ($FFFFF65E).w
		bpl.s   loc_2510
		move.b  #$07, ($FFFFF65E).w
		lea     (Pal_SuperSonic_Cyc), A0
		move.w  ($FFFFF65C).w, D0
		addq.w  #$08, ($FFFFF65C).w
		cmpi.w  #$0078, ($FFFFF65C).w
		bcs.s   loc_253A
		move.w  #$0030, ($FFFFF65C).w
loc_253A:
		lea     ($FFFFFB04).w, A1
		move.l  $00(A0, D0), (A1)+
		move.l  $04(A0, D0), (A1)
		rts
;-------------------------------------------------------------------------------
Pal_SuperSonic_Cyc:
		incbin "Palettes/SuperSonic_C.bin"
		even
;-------------------------------------------------------------------------------
; Routine for Super Sonics cycling palette
; [ End ]
;-------------------------------------------------------------------------------

;===============================================================================
; Color palette cycling routine
; [ End ]
;===============================================================================

;===============================================================================
; Routines for progressively fading out / in the screen
; [ Begin ]
;===============================================================================
Pal_FadeTo:
		move.w  #$003F, ($FFFFF626).w
Pal_FadeTo_2:
		moveq   #$00, D0
		lea     (Palette_Buffer).w, A0
		move.b  ($FFFFF626).w, D0
		adda.w  D0, A0
		moveq   #$00, D1
		move.b  ($FFFFF627).w, D0
loc_25E0:
		move.w  D1, (A0)+
		dbra    D0, loc_25E0
		move.w  #$0015, D4
Pal_FadeTo_Loop:
		move.b  #$12, (VBlank_Index).w
		bsr     Wait_For_VSync
		bsr.s   Pal_FadeIn
		bsr     RunPLC
		dbra    D4, Pal_FadeTo_Loop
		rts
;-------------------------------------------------------------------------------
Pal_FadeIn:
		moveq   #$00, D0
		lea     (Palette_Buffer).w, A0
		lea     (Palette_Underwater_Buffer).w, A1
		move.b  ($FFFFF626).w, D0
		adda.w  D0, A0
		adda.w  D0, A1
		move.b  ($FFFFF627).w, D0
loc_2616:
		bsr.s   Pal_AddColor
		dbra    D0, loc_2616
		tst.b   (Water_Level_Flag).w
		beq.s   loc_263E
		moveq   #$00, D0
		lea     ($FFFFFA80).w, A0
		lea     ($FFFFFA00).w, A1
		move.b  ($FFFFF626).w, D0
		adda.w  D0, A0
		adda.w  D0, A1
		move.b  ($FFFFF627).w, D0
loc_2638:
		bsr.s   Pal_AddColor
		dbra    D0, loc_2638
loc_263E:
		rts
;-------------------------------------------------------------------------------
Pal_AddColor:
		move.w  (A1)+, D2
		move.w  (A0), D3
		cmp.w   D2, D3
		beq.s   Pal_NoAdd
Pal_AddBlue:
		move.w  D3, D1
		addi.w  #$0200, D1
		cmp.w   D2, D1
		bhi.s   Pal_AddGreen
		move.w  D1, (A0)+
		rts
Pal_AddGreen:
		move.w  D3, D1
		addi.w  #$0020, D1
		cmp.w   D2, D1
		bhi.s   Pal_AddRed
		move.w  D1, (A0)+
		rts
Pal_AddRed:
		addq.w  #$02, (A0)+
		rts
Pal_NoAdd:
		addq.w  #$02, A0
		rts
;-------------------------------------------------------------------------------
Pal_FadeFrom:
		move.w  #$003F, ($FFFFF626).w
		move.w  #$0015, D4
Pal_FadeFrom_Loop:
		move.b  #$12, (VBlank_Index).w
		bsr     Wait_For_VSync
		bsr.s   Pal_FadeOut
		bsr     RunPLC
		dbra    D4, Pal_FadeFrom_Loop
		rts
;-------------------------------------------------------------------------------
Pal_FadeOut:
		moveq   #$00, D0
		lea     (Palette_Buffer).w, A0
		move.b  ($FFFFF626).w, D0
		adda.w  D0, A0
		move.b  ($FFFFF627).w, D0
loc_269C:
		bsr.s   Pal_DecColor
		dbra    D0, loc_269C
		moveq   #$00, D0
		lea     ($FFFFFA80).w, A0
		move.b  ($FFFFF626).w, D0
		adda.w  D0, A0
		move.b  ($FFFFF627).w, D0
loc_26B2:
		bsr.s   Pal_DecColor
		dbra    D0, loc_26B2
		rts
;-------------------------------------------------------------------------------
Pal_DecColor:
		move.w  (A0), D2
		beq.s   Pal_NoDec
Pal_DecRed:
		move.w  D2, D1
		andi.w  #$000E, D1
		beq.s   Pal_DecGreen
		subq.w  #$02, (A0)+
		rts
Pal_DecGreen:
		move.w  D2, D1
		andi.w  #$00E0, D1
		beq.s   Pal_DecBlue
		subi.w  #$0020, (A0)+
		rts
Pal_DecBlue:
		move.w  D2, D1
		andi.w  #$0E00, D1
		beq.s   Pal_NoDec
		subi.w  #$0200, (A0)+
		rts
Pal_NoDec:
		addq.w  #$02, A0
		rts
;-------------------------------------------------------------------------------
Pal_MakeWhite: ; Used by the Special Stage
		move.w  #$003F, ($FFFFF626).w
		moveq   #$00, D0
		lea     (Palette_Buffer).w, A0
		move.b  ($FFFFF626).w, D0
		adda.w  D0, A0
		move.w  #$0EEE, D1
		move.b  ($FFFFF627).w, D0
loc_2704:
		move.w  D1, (A0)+
		dbra    D0, loc_2704
		move.w  #$0015, D4
loc_270E:
		move.b  #$12, (VBlank_Index).w
		bsr     Wait_For_VSync
		bsr.s   Pal_WhiteToBlack
		bsr     RunPLC
		dbra    D4, loc_270E
		rts
;-------------------------------------------------------------------------------
Pal_WhiteToBlack:
		moveq   #$00, D0
		lea     (Palette_Buffer).w, A0
		lea     (Palette_Underwater_Buffer).w, A1
		move.b  ($FFFFF626).w, D0
		adda.w  D0, A0
		adda.w  D0, A1
		move.b  ($FFFFF627).w, D0
loc_273A:
		bsr.s   Pal_DecColor_2
		dbra    D0, loc_273A
		tst.b   (Water_Level_Flag).w
		beq.s   loc_2762
		moveq   #$00, D0
		lea     ($FFFFFA80).w, A0
		lea     ($FFFFFA00).w, A1
		move.b  ($FFFFF626).w, D0
		adda.w  D0, A0
		adda.w  D0, A1
		move.b  ($FFFFF627).w, D0
loc_275C:
		bsr.s   Pal_DecColor_2
		dbra    D0, loc_275C
loc_2762:
		rts
;-------------------------------------------------------------------------------
Pal_DecColor_2:
		move.w  (A1)+, D2
		move.w  (A0), D3
		cmp.w   D2, D3
		beq.s   Pal_NoDec_2
Pal_DecBlue_2:
		move.w  D3, D1
		subi.w  #$0200, D1
		bcs.s   Pal_DecGreen_2
		cmp.w   D2, D1
		bcs.s   Pal_DecGreen_2
		move.w  D1, (A0)+
		rts
Pal_DecGreen_2:
		move.w  D3, D1
		subi.w  #$0020, D1
		bcs.s   Pal_DecRed_2
		cmp.w   D2, D1
		bcs.s   Pal_DecRed_2
		move.w  D1, (A0)+
		rts
Pal_DecRed_2:
		subq.w  #$02, (A0)+
		rts
Pal_NoDec_2:
		addq.w  #$02, A0
		rts
;-------------------------------------------------------------------------------
Pal_MakeFlash:  ; Used by the Special Stage
		move.w  #$003F, ($FFFFF626).w
		move.w  #$0015, D4
loc_279E:
		move.b  #$12, (VBlank_Index).w
		bsr     Wait_For_VSync
		bsr.s   Pal_ToWhite
		bsr     RunPLC
		dbra    D4, loc_279E
		rts
;-------------------------------------------------------------------------------
Pal_ToWhite:
		moveq   #$00, D0
		lea     (Palette_Buffer).w, A0
		move.b  ($FFFFF626).w, D0
		adda.w  D0, A0
		move.b  ($FFFFF627).w, D0
loc_27C4:
		bsr.s   Pal_AddColor_2
		dbra    D0, loc_27C4
		moveq   #$00, D0
		lea     ($FFFFFA80).w, A0
		move.b  ($FFFFF626).w, D0
		adda.w  D0, A0
		move.b  ($FFFFF627).w, D0
loc_27DA:
		bsr.s   Pal_AddColor_2
		dbra    D0, loc_27DA
		rts
;-------------------------------------------------------------------------------
Pal_AddColor_2:
		move.w  (A0), D2
		cmpi.w  #$0EEE, D2
		beq.s   Pal_NoAdd_2
Pal_AddRed_2:
		move.w  D2, D1
		andi.w  #$000E, D1
		cmpi.w  #$000E, D1
		beq.s   Pal_AddGreen_2
		addq.w  #$02, (A0)+
		rts
Pal_AddGreen_2:
		move.w  D2, D1
		andi.w  #$00E0, D1
		cmpi.w  #$00E0, D1
		beq.s   Pal_AddBlue_2
		addi.w  #$0020, (A0)+
		rts
Pal_AddBlue_2:
		move.w  D2, D1
		andi.w  #$0E00, D1
		cmpi.w  #$0E00, D1
		beq.s   Pal_NoAdd_2
		addi.w  #$0200, (A0)+
		rts
Pal_NoAdd_2:
		addq.w  #$02, A0
		rts
;===============================================================================
; Routines for progressively fading out / in the screen
; [ End ]
;===============================================================================

;-------------------------------------------------------------------------------
; The SEGA logos cycling palette
; [ Begin ]
;-------------------------------------------------------------------------------
PalCycle_Sega:
		tst.b   ($FFFFF635).w
		bne.s   loc_2882
		lea     ($FFFFFB20).w, A1
		lea     (Pal_SegaCyc1), A0
		moveq   #$05, D1
		move.w  ($FFFFF632).w, D0
loc_2838:
		bpl.s   loc_2842
		addq.w  #$02, A0
		subq.w  #$01, D1
		addq.w  #$02, D0
		bra.s   loc_2838
loc_2842:
		move.w  D0, D2
		andi.w  #$001E, D2
		bne.s   loc_284C
		addq.w  #$02, D0
loc_284C:
		cmpi.w  #$0060, D0
		bcc.s   loc_2856
		move.w  (A0)+, $00(A1, D0)
loc_2856:
		addq.w  #$02, D0
		dbra    D1, loc_2842
		move.w  ($FFFFF632).w, D0
		addq.w  #$02, D0
		move.w  D0, D2
		andi.w  #$001E, D2
		bne.s   loc_286C
		addq.w  #$02, D0
loc_286C:
		cmpi.w  #$0064, D0
		blt.s   loc_287A
		move.w  #$0401, ($FFFFF634).w
		moveq   #-$0C, D0
loc_287A:
		move.w  D0, ($FFFFF632).w
		moveq   #$01, D0
		rts
loc_2882:
		subq.b  #$01, ($FFFFF634).w
		bpl.s   loc_28D4
		move.b  #$04, ($FFFFF634).w
		move.w  ($FFFFF632).w, D0
		addi.w  #$000C, D0
		cmpi.w  #$0030, D0
		bcs.s   loc_28A0
		moveq   #$00, D0
		rts
loc_28A0:
		move.w  D0, ($FFFFF632).w
		lea     (Pal_SegaCyc2), A0
		lea     $00(A0, D0), A0
		lea     ($FFFFFB04).w, A1
		move.l  (A0)+, (A1)+
		move.l  (A0)+, (A1)+
		move.w  (A0)+, (A1)
		lea     ($FFFFFB20).w, A1
		moveq   #$00, D0
		moveq   #$2C, D1
loc_28C0:
		move.w  D0, D2
		andi.w  #$001E, D2
		bne.s   loc_28CA
		addq.w  #$02, D0
loc_28CA:
		move.w  (A0), $00(A1, D0)
		addq.w  #$02, D0
		dbra    D1, loc_28C0
loc_28D4:
		moveq   #$01, D0
		rts
;-------------------------------------------------------------------------------
Pal_SegaCyc1:
		dc.w    $0EEE, $0EEA, $0EE4, $0EC0, $0EE4, $0EEA
;-------------------------------------------------------------------------------
Pal_SegaCyc2:
		dc.w    $0EEC, $0EEA, $0EEA, $0EEA, $0EEA, $0EEA, $0EEC, $0EEA
		dc.w    $0EE4, $0EC0, $0EC0, $0EC0, $0EEC, $0EEA, $0EE4, $0EC0
		dc.w    $0EA0, $0E60, $0EEA, $0EE4, $0EC0, $0EA0, $0E80, $0E00
;-------------------------------------------------------------------------------
; The SEGA logos cycling palette
; [ End ]
;-------------------------------------------------------------------------------

;===============================================================================
; Routines for loading the selected palette on D0 into the palette buffer
; [ Begin ]
;===============================================================================
PalLoad1:
		lea     (PalPointers), A1
		lsl.w   #$03, D0
		adda.w  D0, A1
		move.l  (A1)+, A2	; Location of the palette in the ROM
		move.w  (A1)+, A3	; Palette Destination in RAM
		adda.w  #$0080, A3	; Adds $80 to RAM Destination
		move.w  (A1)+, D7	; Number of colours to be read
PalLoad1_Loop:
		move.l  (A2)+, (A3)+
		dbra    D7, PalLoad1_Loop
		rts
;-------------------------------------------------------------------------------
PalLoad2:
		lea     (PalPointers), A1
		lsl.w   #$03, D0
		adda.w  D0, A1
		move.l  (A1)+, A2	; Location of the palette in the ROM
		move.w  (A1)+, A3	; Palette Destination in RAM
		move.w  (A1)+, D7	; Number of colours to be read
PalLoad2_Loop:
		move.l  (A2)+, (A3)+
		dbra    D7, PalLoad2_Loop
		rts
;-------------------------------------------------------------------------------
PalLoad3_Water:
		lea     (PalPointers), A1
		lsl.w   #$03, D0
		adda.w  D0, A1
		move.l  (A1)+, A2
		move.w  (A1)+, A3
		suba.w  #$0080, A3	; Subtract $80 from RAM Destination
		move.w  (A1)+, D7
loc_295C:
		move.l  (A2)+, (A3)+
		dbra    D7, loc_295C
		rts
;-------------------------------------------------------------------------------
PalLoad4_Water:
		lea     (PalPointers), A1
		lsl.w   #$03, D0
		adda.w  D0, A1
		move.l  (A1)+, A2
		move.w  (A1)+, A3
		suba.w  #$0100, A3	; Subtract $100 from RAM Destination
		move.w  (A1)+, D7
loc_2978:
		move.l  (A2)+, (A3)+
		dbra    D7, loc_2978
		rts
;-------------------------------------------------------------------------------
PalPointers:
		dc.l    Pal_Sega_Bg
		dc.w    $FB00, $001F
		dc.l    Pal_Title_Screen
		dc.w    $FB00, $001F
		dc.l    Pal_Level_Select_Menu
		dc.w    $FB00, $001F
		dc.l    Pal_Sonic_And_Tails
		dc.w    $FB00, $0007
		dc.l    Pal_GHz
		dc.w    $FB20, $0017
		dc.l    Pal_Lvl1
		dc.w    $FB20, $0017
		dc.l    Pal_Wz
		dc.w    $FB20, $0017
		dc.l    Pal_Lvl3
		dc.w    $FB20, $0017
		dc.l    Pal_Mz
		dc.w    $FB20, $0017
		dc.l    Pal_Mz
		dc.w    $FB20, $0017
		dc.l    Pal_Lvl6     ; Casino Night Act 2
		dc.w    $FB20, $0017
		dc.l    Pal_HTz
		dc.w    $FB20, $0017
		dc.l    Pal_HPz
		dc.w    $FB20, $0017
		dc.l    Pal_Lvl9
		dc.w    $FB20, $0017
		dc.l    Pal_OOz
		dc.w    $FB20, $0017
		dc.l    Pal_DHz
		dc.w    $FB20, $0017
		dc.l    Pal_CNz
		dc.w    $FB20, $0017
		dc.l    Pal_CPz
		dc.w    $FB20, $0017
		dc.l    Pal_GCz
		dc.w    $FB20, $0017
		dc.l    Pal_NGHz
		dc.w    $FB20, $0017
		dc.l    Pal_DEz
		dc.w    $FB20, $0017
		dc.l    Pal_HPz_Water
		dc.w    $FB00, $001F
		dc.l    Pal_CPz_Water
		dc.w    $FB00, $001F
		dc.l    Pal_NGHz_Water
		dc.w    $FB00, $001F
		dc.l    Pal_Special_Stage_Main
		dc.w    $FB00, $001F
		dc.l    loc_3230
		dc.w    $FB20, $0007

Pal_Sega_Bg:
		incbin  'palettes/sega_bg.pal'
Pal_Title_Screen:
		incbin  'palettes/titlscrn.pal'
Pal_Level_Select_Menu:
		incbin  'palettes/lvl_menu.pal'
Pal_Sonic_And_Tails:
		incbin  'palettes/sonic.pal'
Pal_GHz:
Pal_Lvl1:
Pal_Lvl3:
Pal_Lvl9:
Pal_GCz:
		incbin  'palettes/ghz.pal'
Pal_Wz:
		incbin  'palettes/wz.pal'
Pal_Mz:
		incbin  'palettes/mz.pal'
Pal_HTz:
		incbin  'palettes/htz.pal'
Pal_HPz:
		incbin  'palettes/hpz.pal'
Pal_HPz_Water:
		incbin  'palettes/hpz_uw.pal'
Pal_OOz:
		incbin  'palettes/ooz.pal'
Pal_DHz:
		incbin  'palettes/dhz.pal'
Pal_CNz:
		incbin  'palettes/cnz_1.pal'
Pal_Lvl6:     ; Casino Night Act 2
		incbin  'palettes/cnz_2.pal'
Pal_CPz:
		incbin  'palettes/cpz.pal'
Pal_CPz_Water:
		incbin  'palettes/cpz_uw.pal'
Pal_NGHz:
		incbin  'palettes/nghz.pal'
Pal_NGHz_Water:
		incbin  'palettes/nghz_uw.pal'
Pal_DEz:
		incbin  'palettes/dez.pal'
Pal_Special_Stage_Main:
		incbin  'palettes/ss_main.pal'
loc_3230:
		incbin  'palettes/unused.bin'
;===============================================================================
; Routines for loading the selected palette on D0 into the palette buffer
; [ End ]
;===============================================================================

;===============================================================================
; Wait for completion of the vertical blank
; [ Begin ]
;===============================================================================
Wait_For_VSync:
		move    #$2300, SR
Wait_For_VSync_Inf_Loop:
		tst.b   (VBlank_Index).w
		bne.s   Wait_For_VSync_Inf_Loop
		rts
;===============================================================================
; Wait for completion of the vertical blank
; [ End ]
;===============================================================================

;===============================================================================
; Generation of pseudo random numbers
; [ Begin ]
;===============================================================================
PseudoRandomNumber:
		move.l  ($FFFFF636).w, D1
		bne.s   loc_3268
		move.l  #$2A6D365A, D1
loc_3268:
		move.l  D1, D0
		asl.l   #$02, D1
		add.l   D0, D1
		asl.l   #$03, D1
		add.l   D0, D1
		move.w  D1, D0
		swap.w  D1
		add.w   D1, D0
		move.w  D0, D1
		swap.w  D1
		move.l  D1, ($FFFFF636).w
		rts
;===============================================================================
; Generation of pseudo random numbers
; [ End ]
;===============================================================================

;===============================================================================
; Routine to calculate a sine wave using a pre-calculated table
; [ Begin ]
;===============================================================================
CalcSine:
		andi.w  #$00FF, D0
		add.w   D0, D0
		addi.w  #$0080, D0
		move.w  Sine_Table(PC, D0), D1
		subi.w  #$0080, D0
		move.w  Sine_Table(PC, D0), D0
		rts
;-------------------------------------------------------------------------------
Sine_Table:
		incbin "misc/sinedata.bin"
		even
;===============================================================================
; Routine to calculate a sine wave using a pre-calculated table
; [ End ]
;===============================================================================

;===============================================================================
; Routine to calculate an angle using a pre-calculated table
; [ Begin ]
;===============================================================================
CalcAngle:
		movem.l D3/D4, -(A7)
		moveq   #$00, D3
		moveq   #$00, D4
		move.w  D1, D3
		move.w  D2, D4
		or.w    D3, D4
		beq.s   loc_3576
		move.w  D2, D4
		tst.w   D3
		bpl     loc_3534
		neg.w   D3
loc_3534:
		tst.w   D4
		bpl     loc_353C
		neg.w   D4
loc_353C:
		cmp.w   D3, D4
		bcc     loc_354E
		lsl.l   #$08, D4
		divu.w  D3, D4
		moveq   #$00, D0
		move.b  Angle_Table(PC, D4), D0
		bra.s   loc_3558
loc_354E:
		lsl.l   #$08, D3
		divu.w  D4, D3
		moveq   #$40, D0
		sub.b   Angle_Table(PC, D3), D0
loc_3558:
		tst.w   D1
		bpl     loc_3564
		neg.w   D0
		addi.w  #$0080, D0
loc_3564:
		tst.w   D2
		bpl     loc_3570
		neg.w   D0
		addi.w  #$0100, D0
loc_3570:
		movem.l (A7)+, D3/D4
		rts
loc_3576:
		move.w  #$0040, D0
		movem.l (A7)+, D3/D4
		rts
;-------------------------------------------------------------------------------
Angle_Table:
		incbin "Misc/AngleData.bin"
		even
;===============================================================================
; Routine to calculate an angle using a pre-calculated table
; [ End ]
;===============================================================================
		nop
;===============================================================================
; SEGA logo
; [ Begin ]
;===============================================================================
Sega_Screen:
		move.b  #$FD, D0
		bsr     Play_Music	; stop music
		bsr     ClearPLC
		bsr     Pal_FadeFrom
		lea     (VDP_Control_Port), A6
		move.w  #$8004, (A6)
		move.w  #$8230, (A6)
		move.w  #$8407, (A6)
		move.w  #$8700, (A6)
		move.w  #$8B00, (A6)
		move.w  #$8C81, (A6)
		clr.b   ($FFFFF64E).w
		move    #$2700, SR
		move.w  ($FFFFF60C).w, D0
		andi.b  #$BF, D0
		move.w  D0, (VDP_Control_Port)
		bsr     ClearScreen
		move.l  #$40000000, (VDP_Control_Port)
		lea     (Art_SEGA), A0
		bsr     NemDec
		lea     (M68K_RAM_Start), A1
		lea     (Sega_Mappings), A0
		move.w  #$0000, D0
		bsr     EniDec
		lea     (M68K_RAM_Start), A1
		move.l  #$65100003, D0
		moveq   #$17, D1
		moveq   #$07, D2
		bsr     ShowVDPGraphics
		lea     ($FFFF0180), A1
		move.l  #$40000003, D0
		moveq   #$27, D1
		moveq   #$1B, D2
		bsr     ShowVDPGraphics
		tst.b   (Hardware_Id).w
		bmi.s   loc_3736
		lea     ($FFFF0A40), A1
		move.l  #$453A0003, D0
		moveq   #$02, D1
		moveq   #$01, D2
		bsr     ShowVDPGraphics
loc_3736:
		moveq   #$00, D0
		bsr     PalLoad2
		move.w  #$FFF6, ($FFFFF632).w
		move.w  #$0000, ($FFFFF634).w
		move.w  #$0000, ($FFFFF662).w
		move.w  #$0000, ($FFFFF660).w
		move.w  #$00B4, (Timer_Count_Down).w
		move.w  ($FFFFF60C).w, D0
		ori.b   #$40, D0
		move.w  D0, (VDP_Control_Port)
;loc_3768:
Sega_WaitPalette:
		move.b  #$02, (VBlank_Index).w
		bsr     Wait_For_VSync
		bsr     PalCycle_Sega
		bne.s   Sega_WaitPalette
		move.b  #$FA, D0
		bsr     Play_Sfx
		move.b  #$02, (VBlank_Index).w
		bsr     Wait_For_VSync
		move.w  #$00B4, (Timer_Count_Down).w
;loc_3790:
Sega_WaitEnd:
		move.b  #$14, (VBlank_Index).w
		bsr     Wait_For_VSync
		tst.w   (Timer_Count_Down).w
		beq.s   Sega_GotoTitle
		andi.b  #$80, (Control_Ports_Buffer_Data+$0001).w
		beq.s   Sega_WaitEnd
;loc_37A8:
Sega_GotoTitle:
		move.b  #gm_TitleScreen, (Game_Mode).w
		rts
;===============================================================================
; SEGA logo
; [ End ]
;===============================================================================

;===============================================================================
; Title screen
; [ Begin ]
;===============================================================================
Title_Screen:
		move.b  #$FD, D0	
		bsr     Play_Music	; stop music
		bsr     ClearPLC
		bsr     Pal_FadeFrom
		move    #$2700, SR
		lea     (VDP_Control_Port), A6
		move.w  #$8004, (A6)
		move.w  #$8230, (A6)
		move.w  #$8407, (A6)
		move.w  #$9001, (A6)
		move.w  #$9200, (A6)
		move.w  #$8B03, (A6)
		move.w  #$8720, (A6)
		clr.b   ($FFFFF64E).w
		move.w  #$8C81, (A6)
		bsr     ClearScreen
		lea     ($FFFFAC00).w, A1
		moveq   #$00, D0
		move.w  #$00FF, D1
loc_37FC:
		move.l  D0, (A1)+
		dbra    D1, loc_37FC
		lea     (Obj_Memory_Address).w, A1
		moveq   #$00, D0
		move.w  #$07FF, D1
loc_380C:
		move.l  D0, (A1)+
		dbra    D1, loc_380C
		lea     ($FFFFF700).w, A1
		moveq   #$00, D0
		move.w  #$003F, D1
loc_381C:
		move.l  D0, (A1)+
		dbra    D1, loc_381C
		lea     (Camera_X).w, A1
		moveq   #$00, D0
		move.w  #$003F, D1
loc_382C:
		move.l  D0, (A1)+
		dbra    D1, loc_382C
		lea     (Palette_Underwater_Buffer).w, A1
		moveq   #$00, D0
		move.w  #$001F, D1
;loc_383C:
Title_ClrPalette:
		move.l  D0, (A1)+
		dbra    D1, Title_ClrPalette

		; load Sonic's palette
		; leftover from Sonic 1's "SONIC TEAM PRESENTS" screen
		moveq   #$03, D0                               
		bsr     PalLoad1

		bsr     Pal_FadeTo
		move    #$2700, SR
		move.l  #$40000000, (VDP_Control_Port)
		lea     (Art_Title_Screen_Bg_Wings), A0
		bsr     NemDec
		move.l  #$40000001, (VDP_Control_Port)
		lea     (Art_Title_Screen_Sonic_Tails), A0
		bsr     NemDec
		lea     (VDP_Data_Port), A6
		move.l  #$50000003, $0004(A6)
		lea     (Art_Menu_Text), A5
		move.w  #$028F, D1
loc_3890:
		move.w  (A5)+, (A6)
		dbra    D1, loc_3890
		nop
		move.b  #$00, (Saved_Level_Flag).w
		move.w  #$0000, (Debug_Mode_Flag_Index).w
		move.w  #$0000, (Auto_Control_Player_Flag).w
		move.w  #$0000, ($FFFFFFDA).w
		move.w  #$0000, (Level_Id).w
		move.w  #$0000, ($FFFFF634).w
		bsr     Pal_FadeFrom
		move    #$2700, SR
		lea     (M68K_RAM_Start), A1
		lea     (TS_Wings_Sonic_Mappings), A0
		move.w  #$0000, D0
		bsr     EniDec
		lea     (M68K_RAM_Start), A1
		move.l  #$40000003, D0
		moveq   #$27, D1
		moveq   #$1B, D2
		bsr     ShowVDPGraphics
		lea     (M68K_RAM_Start), A1
		lea     (Title_Screen_Bg_Mappings), A0
		move.w  #$0000, D0
		bsr     EniDec
		lea     (M68K_RAM_Start), A1
		move.l  #$60000003, D0
		moveq   #$1F, D1
		moveq   #$1B, D2
		bsr     ShowVDPGraphics
		lea     (M68K_RAM_Start), A1
		lea     (Title_Screen_R_Bg_Mappings), A0
		move.w  #$0000, D0
		bsr     EniDec
		lea     (M68K_RAM_Start), A1
		move.l  #$60400003, D0
		moveq   #$1F, D1
		moveq   #$1B, D2
		bsr     ShowVDPGraphics
		moveq   #$01, D0
		bsr     PalLoad1
		move.b  #$99, D0	; play title screen music
		bsr     Play_Music
		move.b  #$00, (Debug_Mode_Active_Flag).w
		move.w  #$0000, (Two_Player_Flag).w
		move.w  #$0178, (Timer_Count_Down).w
		lea     (Obj_Memory_Address+$0080).w, A1
		moveq   #$00, D0
		move.w  #$000F, D1
loc_3966:
		move.l  D0, (A1)+
		dbra    D1, loc_3966
		move.b  #$0E, (Obj_Memory_Address+$0040).w
		move.b  #$0E, (Obj_Memory_Address+$0080).w
		move.b  #$01, (Obj_Memory_Address+$009A).w
		jsr     (Load_Objects)
		jsr     (Build_Sprites)
		moveq   #$00, D0
		bsr     LoadPLC2
		move.w  #$0000, ($FFFFFFD4).w
		move.w  #$0000, ($FFFFFFD6).w
		move.b  #$01, (Level_select_flag).w
		move.w  #$0004, ($FFFFEED2).w
		move.w  #$0000, ($FFFFE500).w
		move.w  ($FFFFF60C).w, D0
		ori.b   #$40, D0
		move.w  D0, (VDP_Control_Port)
		bsr     Pal_FadeTo
TitleScreen_Loop:
		move.b  #$04, (VBlank_Index).w
		bsr     Wait_For_VSync
		jsr     (Load_Objects)
		bsr     Bg_Scroll_Title_Screen
		jsr     (Build_Sprites)
		bsr     RunPLC
		tst.b   (Hardware_Id).w
		bpl.s   Code_Sequence_J
		lea     (Level_Select_Code_J), A0
		bra.s   Level_Select_Cheat_Test
Code_Sequence_J:
		lea     (Level_Select_Code_US), A0
Level_Select_Cheat_Test:
		move.w  ($FFFFFFD4).w, D0
		adda.w  D0, A0
		move.b  (Control_Ports_Buffer_Data+$0001).w, D0
		andi.b  #$0F, D0
		cmp.b   (A0), D0
		bne.s   Title_Cheat_NoMatch
		addq.w  #$01, ($FFFFFFD4).w
		tst.b   D0
		bne.s   Title_Cheat_CountC
		lea     (Level_select_flag).w, A0
		move.w  ($FFFFFFD6).w, D1
		lsr.w   #$01, D1
		andi.w  #$0003, D1
		beq.s   Title_Cheat_PlayRing
		tst.b   (Hardware_Id).w
		bpl.s   Title_Cheat_PlayRing
		moveq   #$01, D1
		move.b  D1, $01(A0, D1)
Title_Cheat_PlayRing:
		move.b  #$01, $00(A0, D1)
		move.b  #$B5, D0
		bsr     Play_Sfx
		bra.s   Title_Cheat_CountC
Title_Cheat_NoMatch:
		tst.b   D0
		beq.s   Title_Cheat_CountC
		cmpi.w  #$0009, ($FFFFFFD4).w
		beq.s   Title_Cheat_CountC
		move.w  #$0000, ($FFFFFFD4).w
Title_Cheat_CountC:
		move.b  (Control_Ports_Buffer_Data+$0001).w, D0
		andi.b  #$20, D0
		beq.s   loc_3A58
		addq.w  #$01, ($FFFFFFD6).w
loc_3A58:
		tst.w   (Timer_Count_Down).w
		beq     loc_3BDA
		andi.b  #$80, (Control_Ports_Buffer_Data+$0001).w
		beq     TitleScreen_Loop
loc_3A6A:
		tst.b   (Level_select_flag).w
		beq     PlayLevel
		cmpi.b  #$C0, (Control_Ports_Buffer_Data).w
		bne     PlayLevel
		move.b  #$91, D0	; play level select music
		bsr     Play_Music
		moveq   #$02, D0	; load level select palette
		bsr     PalLoad2
		lea     (Scroll_Buffer_Data).w, A1
		moveq   #$00, D0
		move.w  #$00DF, D1
LevelSelect_ClearScroll:
		move.l  D0, (A1)+
		dbra    D1, LevelSelect_ClearScroll
		move.l  D0, ($FFFFF616).w
		move    #$2700, SR
		lea     (VDP_Data_Port), A6
		move.l  #$60000003, (VDP_Control_Port)
		move.w  #$03FF, D1
LevelSelect_ClearVRAM:
		move.l  D0, (A6)
		dbra    D1, LevelSelect_ClearVRAM
		bsr     loc_3D3C
LevelSelect_Loop:
		move.b  #$04, (VBlank_Index).w
		bsr     Wait_For_VSync
		bsr     LevelSelect_Controls
		bsr     RunPLC
		tst.l   (PLC_Buffer).w
		bne.s   LevelSelect_Loop
		andi.b  #$F0, (Control_Ports_Buffer_Data+$0001).w
		beq.s   LevelSelect_Loop
		move.w  #$0000, (Two_Player_Flag).w
		btst    #$04, (Control_Ports_Buffer_Data).w
		beq.s   loc_3AF4
		move.w  #$0001, (Two_Player_Flag).w
loc_3AF4:
		move.w  ($FFFFFF82).w, D0
		cmpi.w  #$001A, D0
		bne.s   loc_3B14
		btst    #$06, (Control_Ports_Buffer_Data+$0001).w
		bne.s   LevelSelect_Loop
		move.w  ($FFFFFF84).w, D0
		addi.w  #$0080, D0
		bsr     Play_Sfx
		bra.s   LevelSelect_Loop
loc_3B14:
		add.w   D0, D0
		move.w  Level_Select_Array(PC, D0), D0
		bmi     LevelSelect_Loop
		cmpi.w  #$4000, D0
		bne.s   Level_Select_Load_Level
		move.b  #gm_SpecialStage, (Game_Mode).w
		clr.w   (Level_Id).w
		move.b  #$03, (Life_Count).w
		moveq   #$00, D0
		move.w  D0, (Ring_Count).w
		move.l  D0, (Time_Count).w
		move.l  D0, (Score_Count).w
		move.l  #$00001388, ($FFFFFFC0).w
		rts
;-------------------------------------------------------------------------------
Level_Select_Array:                                            ; loc_3B4C
		dc.w    $0000, $0001         ; GHz
		dc.w    $0200, $0201         ; Wz
		dc.w    $0400, $0401, $0500  ; Mz
		dc.w    $0700, $0701         ; HTz
		dc.w    $0800, $0801         ; HPz
		dc.w    $0A00, $0A01         ; OOz
		dc.w    $0B00, $0B01         ; DHz
		dc.w    $0C00, $0C01         ; CNz
		dc.w    $0D00, $0D01         ; CPz
		dc.w    $0E00, $0E01         ; GCz
		dc.w    $0F00, $0F01         ; NGHz
		dc.w    $1000, $1001         ; Dez
		dc.w    $4000                ; SS
		dc.w    $0000                ; Sound Test
;-------------------------------------------------------------------------------
Level_Select_Load_Level:
		andi.w  #$3FFF, D0
		move.w  D0, (Level_Id).w
;loc_3B8A:
PlayLevel:
		move.b  #gm_PlayMode, (Game_Mode).w
		move.b  #$03, (Life_Count).w
		moveq   #$00, D0
		move.w  D0, (Ring_Count).w
		move.l  D0, (Time_Count).w
		move.l  D0, (Score_Count).w
		move.b  D0, ($FFFFFE16).w
		move.b  D0, (Emerald_Count).w
		move.l  D0, (Emerald_Collected_Flag_List).w
		move.l  D0, (Emerald_Collected_Flag_List+$0004).w
		move.b  D0, ($FFFFFE18).w
		move.l  #$00001388, ($FFFFFFC0).w
		move.b  #$E0, D0
		bsr     Play_Sfx
		rts
;-------------------------------------------------------------------------------
Level_Select_Code_US:
		dc.b    $01, $02, $02, $02, $02, $01, $00, $FF
Level_Select_Code_J:
		dc.b    $01, $02, $02, $02, $02, $01, $00, $FF
;-------------------------------------------------------------------------------
loc_3BDA:
		move.w  #$001E, (Timer_Count_Down).w
loc_3BE0:
		move.b  #$04, (VBlank_Index).w
		bsr     Wait_For_VSync
		bsr     RunPLC
		move.w  (Player_One_Position_X).w, D0
		addq.w  #$02, D0
		move.w  D0, (Player_One_Position_X).w
		cmpi.w  #$1C00, D0
		bcs.s   loc_3C06
		move.b  #$00, (Game_Mode).w
		rts
loc_3C06:
		andi.b  #$80, (Control_Ports_Buffer_Data+$0001).w
		bne     loc_3A6A
		tst.w   (Timer_Count_Down).w
		bne     loc_3BE0
		move.b  #$E0, D0
		bsr     Play_Sfx
		move.w  ($FFFFFFF2).w, D0
		andi.w  #$0007, D0
		add.w   D0, D0
		move.w  Demo_Mode_Level_Array(PC, D0), D0
		move.w  D0, (Level_Id).w
		addq.w  #$01, ($FFFFFFF2).w
		cmpi.w  #$0004, ($FFFFFFF2).w
		bcs.s   loc_3C44
		move.w  #$0000, ($FFFFFFF2).w
loc_3C44:
		move.w  #$0001, (Auto_Control_Player_Flag).w
		move.b  #$08, (Game_Mode).w
		cmpi.w  #$0000, D0
		bne.s   loc_3C5C
		move.w  #$0001, (Two_Player_Flag).w
loc_3C5C:
		cmpi.w  #$0600, D0
		bne.s   loc_3C70
		move.b  #$10, (Game_Mode).w
		clr.w   (Level_Id).w
		clr.b   ($FFFFFE16).w
loc_3C70:
		move.b  #$03, (Life_Count).w
		moveq   #$00, D0
		move.w  D0, (Ring_Count).w
		move.l  D0, (Time_Count).w
		move.l  D0, (Score_Count).w
		move.l  #$00001388, ($FFFFFFC0).w
		rts
;-------------------------------------------------------------------------------
Demo_Mode_Level_Array:
		dc.w    $0D00, $0000, $0800, $0700, $0500, $0500, $0500, $0500
		dc.w    $0400, $0400, $0400, $0400
;-------------------------------------------------------------------------------
LevelSelect_Controls:
		move.b  (Control_Ports_Buffer_Data+$0001).w, D1
		andi.b  #$03, D1
		bne.s   loc_3CB6
		subq.w  #$01, ($FFFFFF80).w
		bpl.s   loc_3CF0
loc_3CB6:
		move.w  #$000B, ($FFFFFF80).w
		move.b  (Control_Ports_Buffer_Data).w, D1
		andi.b  #$03, D1
		beq.s   loc_3CF0
		move.w  ($FFFFFF82).w, D0
		btst    #$00, D1
		beq.s   loc_3CD6
		subq.w  #$01, D0
		bcc.s   loc_3CD6
		moveq   #$1A, D0
loc_3CD6:
		btst    #$01, D1
		beq.s   loc_3CE6
		addq.w  #$01, D0
		cmpi.w  #$001B, D0
		bcs.s   loc_3CE6
		moveq   #$00, D0
loc_3CE6:
		move.w  D0, ($FFFFFF82).w
		bsr     loc_3D3C
		rts
loc_3CF0:
		cmpi.w  #$001A, ($FFFFFF82).w
		bne.s   loc_3D3A
		move.w  ($FFFFFF84).w, D0
		move.b  (Control_Ports_Buffer_Data+$0001).w, D1
		andi.b  #$0C, D1
		beq.s   loc_3D22
		btst    #$02, D1
		beq.s   loc_3D12
		subq.b  #$01, D0
		bcc.s   loc_3D12
		moveq   #$7F, D0
loc_3D12:
		btst    #$03, D1
		beq.s   loc_3D22
		addq.b  #$01, D0
		cmpi.w  #$0080, D0
		bcs.s   loc_3D22
		moveq   #$00, D0
loc_3D22:
		btst    #$06, (Control_Ports_Buffer_Data+$0001).w
		beq.s   loc_3D32
		addi.b  #$10, D0
		andi.b  #$7F, D0
loc_3D32:
		move.w  D0, ($FFFFFF84).w
		bsr     loc_3D3C
loc_3D3A:
		rts
loc_3D3C:
		lea     (Level_Select_Text), A1
		lea     (VDP_Data_Port), A6
		move.l  #$608C0003, D4
		move.w  #$8680, D3
		moveq   #$1A, D1
loc_3D54:
		move.l  D4, $0004(A6)
		bsr     loc_3DD8
		addi.l  #$00800000, D4
		dbra    D1, loc_3D54
		moveq   #$00, D0
		move.w  ($FFFFFF82).w, D0
		move.w  D0, D1
		move.l  #$608C0003, D4
		lsl.w   #$07, D0
		swap.w  D0
		add.l   D0, D4
		lea     (Level_Select_Text), A1
		mulu.w  #$001B, D1
		adda.w  D1, A1
		move.w  #$C680, D3
		move.l  D4, $0004(A6)
		bsr     loc_3DD8
		move.w  #$8680, D3
		cmpi.w  #$001A, ($FFFFFF82).w
		bne.s   loc_3DA2
		move.w  #$C680, D3
loc_3DA2:
		move.l  #$6DB00003, (VDP_Control_Port)
		move.w  ($FFFFFF84).w, D0
		addi.w  #$0080, D0
		move.b  D0, D2
		lsr.b   #$04, D0
		bsr     loc_3DC4
		move.b  D2, D0
		bsr     loc_3DC4
		rts
loc_3DC4:
		andi.w  #$000F, D0
		cmpi.b  #$0A, D0
		bcs.s   loc_3DD2
		addi.b  #$07, D0
loc_3DD2:
		add.w   D3, D0
		move.w  D0, (A6)
		rts
loc_3DD8:
		moveq   #$1A, D2
loc_3DDA:
		moveq   #$00, D0
		move.b  (A1)+, D0
		bpl.s   loc_3DEA
		move.w  #$0000, (A6)
		dbra    D2, loc_3DDA
		rts
loc_3DEA:
		add.w   D3, D0
		move.w  D0, (A6)
		dbra    D2, loc_3DDA
		rts
;-------------------------------------------------------------------------------
Level_Select_Text:
		dc.b    _G,_R,_E,_E,_N,__,_H,_I,_L,_L,__,_Z,_O,_N,_E,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _W,_O,_O,_D,__,_Z,_O,_N,_E,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _M,_E,_T,_R,_O,_P,_O,_L,_I,_S,__,_Z,_O,_N,_E,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_2
		dc.b    _H,_I,_L,_L,__,_T,_O,_P,__,_Z,_O,_N,_E,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _H,_I,_D,_D,_E,_N,__,_P,_A,_L,_A,_C,_E,__,_Z,_O,_N,_E,__,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _O,_I,_L,__,_O,_C,_E,_A,_N,__,_Z,_O,_N,_E,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _D,_U,_S,_T,__,_H,_I,_L,_L,__,_Z,_O,_N,_E,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _C,_A,_S,_I,_N,_O,__,_N,_I,_G,_H,_T,__,_Z,_O,_N,_E,__,__,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _C,_H,_E,_M,_I,_C,_A,_L,__,_P,_L,_A,_N,_T,__,_Z,_O,_N,_E,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _G,_E,_N,_O,_C,_I,_D,_E,__,_C,_I,_T,_Y,__,_Z,_O,_N,_E,__,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _N,_E,_O,__,_G,_R,_E,_E,_N,__,_H,_I,_L,_L,__,_Z,_O,_N,_E,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _D,_E,_A,_T,_H,__,_E,_G,_G,__,_Z,_O,_N,_E,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_0
		dc.b    __,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,_S,_T,_A,_G,_E,__,_1
		dc.b    _S,_P,_E,_C,_I,_A,_L,__,_S,_T,_A,_G,_E,__,__,__,__,__,__,__,__,__,__,__,__,__,__
		dc.b    _S,_O,_U,_N,_D,__,_S,_E,_L,_E,_C,_T,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__
		dc.b    $00 ; alignment
;-------------------------------------------------------------------------------
; loc_40CE:
		lea     (M68K_RAM_Start), A1
		move.w  #$02EB, D2
loc_40D8:
		move.w  (A1), D0
		move.w  D0, D1
		andi.w  #$F800, D1
		andi.w  #$07FF, D0
		lsr.w   #$01, D0
		or.w    D0, D1
		move.w  D1, (A1)+
		dbra    D2, loc_40D8
		rts
;-------------------------------------------------------------------------------
; loc_40F0:
		lea     ($00FE0000), A1
		lea     ($00FE0080), A2
		lea     (M68K_RAM_Start), A3
		move.w  #$003F, D1
loc_4106:
		bsr     loc_4198
		bsr     loc_4198
		dbra    D1, loc_4106
		lea     ($00FE0000), A1
		lea     (M68K_RAM_Start&$00FFFFFF), A2
		move.w  #$003F, D1
loc_4122:
		move.w  #$0000, (A2)+
		dbra    D1, loc_4122
		move.w  #$3FBF, D1
loc_412E:
		move.w  (A1)+, (A2)+
		dbra    D1, loc_412E
		rts
;-------------------------------------------------------------------------------
; loc_4136:
		lea     ($00FE0000), A1
		lea     (M68K_RAM_Start), A3
		moveq   #$1F, D0
loc_4144:
		move.l  (A1)+, (A3)+
		dbra    D0, loc_4144
		moveq   #$00, D7
		lea     ($00FE0000), A1
		move.w  #$00FF, D5
loc_4156:
		lea     (M68K_RAM_Start), A3
		move.w  D7, D6
loc_415E:
		movem.l A1-A3, -(A7)
		move.w  #$003F, D0
loc_4166:
		cmpm.w  (A1)+, (A3)+
		bne.s   loc_417C
		dbra    D0, loc_4166
		movem.l (A7)+, A1-A3
		adda.w  #$0080, A1
		dbra    D5, loc_4156
		bra.s   loc_4196
loc_417C:
		movem.l (A7)+, A1-A3
		adda.w  #$0080, A3
		dbra    D6, loc_415E
		moveq   #$1F, D0
loc_418A:
		move.l  (A1)+, (A3)+
		dbra    D0, loc_418A
		addq.l  #$01, D7
		dbra    D5, loc_4156
loc_4196:
		bra.s   loc_4196
;-------------------------------------------------------------------------------
loc_4198:
		moveq   #$07, D0
loc_419A:
		move.l  (A3)+, (A1)+
		move.l  (A3)+, (A1)+
		move.l  (A3)+, (A1)+
		move.l  (A3)+, (A1)+
		move.l  (A3)+, (A2)+
		move.l  (A3)+, (A2)+
		move.l  (A3)+, (A2)+
		move.l  (A3)+, (A2)+
		dbra    D0, loc_419A
		adda.w  #$0080, A1
		adda.w  #$0080, A2
		rts
;===============================================================================
; Title screen
; [ End ]
;===============================================================================

;===============================================================================
; Game mode or demonstration of the levels
; [ Begin ]
;===============================================================================
MusicList:
                dc.b    $82	; GHZ
                dc.b    $82	; Zone 01
                dc.b    $85	; WZ
                dc.b    $84	; Zone 03
                dc.b    $85	; MTZ
                dc.b    $85	; MTZ Act 3
                dc.b    $8C	; Zone 06
                dc.b    $86	; HTZ
                dc.b    $83	; HPZ
                dc.b    $8D	; Zone 09
                dc.b    $88	; OOZ
                dc.b    $8B	; DHZ
                dc.b    $89	; CNZ
                dc.b    $8E	; CPZ
                dc.b    $8E	; GCZ
                dc.b    $87	; NGHZ
		even
;-------------------------------------------------------------------------------
Level:
		bset    #$07, (Game_Mode).w
		tst.w   (Auto_Control_Player_Flag).w
		bmi.s   Level_Init
		move.b  #$F9, D0
		bsr     Play_Sfx
Level_Init:
		bsr     ClearPLC
		bsr     Pal_FadeFrom
		tst.w   (Auto_Control_Player_Flag).w
		bmi.s   loc_4224
		move    #$2700, SR
		bsr     ClearScreen
		move    #$2300, SR
		moveq   #$00, D0
		move.w  D0, ($FFFFFE04).w
		move.b  (Level_Id).w, D0
		add.w   D0, D0
		add.w   D0, D0
		move.w  D0, D1
		add.w   D0, D0
		add.w   D1, D0
		lea     (TilesMainTable), A2
		lea     $00(A2, D0), A2
		moveq   #$00, D0
		move.b  (A2), D0
		beq.s   loc_421E
		bsr     LoadPLC
loc_421E:
		moveq   #$01, D0
		bsr     LoadPLC
loc_4224:
		lea     ($FFFFAC00).w, A1
		moveq   #$00, D0
		move.w  #$00FF, D1
loc_422E:
		move.l  D0, (A1)+
		dbra    D1, loc_422E
		lea     (Obj_Memory_Address).w, A1
		moveq   #$00, D0
		move.w  #$07FF, D1
loc_423E:
		move.l  D0, (A1)+
		dbra    D1, loc_423E
		lea     ($FFFFF628).w, A1
		moveq   #$00, D0
		move.w  #$0015, D1
loc_424E:
		move.l  D0, (A1)+
		dbra    D1, loc_424E
		lea     ($FFFFF700).w, A1
		moveq   #$00, D0
		move.w  #$003F, D1
loc_425E:
		move.l  D0, (A1)+
		dbra    D1, loc_425E
		lea     ($FFFFFE60).w, A1
		moveq   #$00, D0
		move.w  #$0047, D1
loc_426E:
		move.l  D0, (A1)+
		dbra    D1, loc_426E
		cmpi.w  #$0D01, (Level_Id).w
		beq.s   Init_Water
		cmpi.b  #$0F, (Level_Id).w
		beq.s   Init_Water
		cmpi.b  #$08, (Level_Id).w
		bne.s   Init_No_Water
Init_Water:
		move.b  #$01, (Water_Level_Flag).w
		move.w  #$0000, (Two_Player_Flag).w
Init_No_Water:
		lea     (VDP_Control_Port), A6
		move.w  #$8B03, (A6)
		move.w  #$8230, (A6)
		move.w  #$8407, (A6)
		move.w  #$857C, (A6)
		move.w  #$9001, (A6)
		move.w  #$8004, (A6)
		move.w  #$8720, (A6)
		tst.b   ($FFFFFFD2).w
		beq.s   loc_42DA
		btst    #$05, (Control_Ports_Buffer_Data).w
		beq.s   loc_42CC
		move.w  #$8C89, (A6)
loc_42CC:
		btst    #$06, (Control_Ports_Buffer_Data).w
		beq.s   loc_42DA
		move.b  #$01, (Debug_Mode_Active_Flag).w
loc_42DA:
		move.w  #$8ADF, (Horizontal_Interrupt_Count).w
		tst.w   (Two_Player_Flag).w
		beq.s   loc_42F4
		move.w  #$8A6B, (Horizontal_Interrupt_Count).w
		move.w  #$8014, (A6)
		move.w  #$8C87, (A6)
loc_42F4:
		move.w  (Horizontal_Interrupt_Count).w, (A6)
		move.l  #DMA_Buffer_List, (DMA_Buffer_List_End).w
		tst.b   (Water_Level_Flag).w
		beq.s   LevelInit_NoWater
		move.w  #$8014, (A6)
		moveq   #$00, D0
		move.w  (Level_Id).w, D0
		subi.w  #$0800, D0
		ror.b   #$01, D0
		lsr.w   #$06, D0
		andi.w  #$FFFFFFFE, D0
		lea     (Water_Height_Array), A1
		move.w  $00(A1, D0), D0
		move.w  D0, (Water_Level).w
		move.w  D0, (Water_Level_Change).w
		move.w  D0, (Water_Level_New).w
		clr.b   ($FFFFF64D).w
		clr.b   ($FFFFF64E).w
		move.b  #$01, ($FFFFF64C).w
LevelInit_NoWater:
		moveq   #$03, D0
		bsr     PalLoad2
		tst.b   (Water_Level_Flag).w
		beq.s   LevelInit_NoUndewaterPalette
		moveq   #$15, D0
		cmpi.b  #$08, (Level_Id).w
		beq.s   LevelInit_UndewaterPalette
		moveq   #$16, D0
		cmpi.b  #$0D, (Level_Id).w 
		beq.s   LevelInit_UndewaterPalette
		moveq   #$17, D0
LevelInit_UndewaterPalette:
		bsr     PalLoad3_Water
		tst.b   (Saved_Level_Flag).w
		beq.s   LevelInit_NoUndewaterPalette
		move.b  ($FFFFFE53).w, ($FFFFF64E).w
LevelInit_NoUndewaterPalette:
		tst.w   (Auto_Control_Player_Flag).w
		bmi.s   loc_43C0
		moveq   #$00, D0
		move.b  (Level_Id).w, D0
		lea     MusicList(PC), A1
		move.b  $00(A1, D0), D0
		bsr     Play_Music
		move.b  #$34, (Title_Card_RAM_Obj_Data).w
LevelInit_TitleCard:
		move.b  #$0C, (VBlank_Index).w
		bsr     Wait_For_VSync
		jsr     (Load_Objects)
		jsr     (Build_Sprites)
		bsr     RunPLC
		move.w  ($FFFFB108).w, D0
		cmp.w   ($FFFFB130).w, D0
		bne.s   LevelInit_TitleCard
		tst.l   (PLC_Buffer).w
		bne.s   LevelInit_TitleCard
		jsr     (Head_Up_Display_Base)
loc_43C0:
		moveq   #$03, D0
		bsr     PalLoad1
		bsr     Level_Size_Load
		bsr     Background_Scroll_Layer
		bset    #$02, (Scroll_Flag_Array).w
		bsr     Main_Level_Load_16_128_Blocks
		jsr     (Load_16x16_Mappings_For_Dyn_Sprites)
		bsr     Load_Tiles_From_Start
		jsr     (FloorLog_Unk)
		bsr     Load_Colision_Index
		bsr     Water_Effects
		move.b  #$01, (Player_One).w
		tst.w   (Auto_Control_Player_Flag).w
		bmi.s   loc_4402
		move.b  #$21, (HUD_RAM_Obj_Data).w
loc_4402:
		move.b  #$02, (Player_Two).w
		move.w  (Player_One_Position_X).w, (Player_Two_Position_X).w
		move.w  (Player_One_Position_Y).w, (Player_Two_Position_Y).w
		subi.w  #$0020, (Player_Two_Position_X).w
		addi.w  #$0004, (Player_Two_Position_Y).w
		move.b  #$08, ($FFFFB400).w
		move.b  #$08, ($FFFFB440).w
		move.w  #$0000, ($FFFFF602).w
		move.w  #$0000, (Control_Ports_Buffer_Data).w
		tst.b   (Water_Level_Flag).w
		beq.s   loc_4456
		move.b  #$04, ($FFFFB780).w
		move.w  #$0060, ($FFFFB788).w
		move.b  #$04, ($FFFFB7C0).w
		move.w  #$0120, ($FFFFB7C8).w
loc_4456:
		cmpi.b  #$0D, (Level_Id).w
		bne.s   loc_4464
		move.b  #$7C, ($FFFFB580).w
loc_4464:
		cmpi.b  #$0A, (Level_Id).w
		bne.s   loc_4472
		move.b  #$07, ($FFFFB780).w
loc_4472:
		jsr     (Load_Object_Pos)
		jsr     (Load_Ring_Pos)
		jsr     (Load_Objects)
		jsr     (Build_Sprites)
		bsr     Jmp_00_To_Dynamic_Art_Cues
		moveq   #$00, D0
		tst.b   (Saved_Level_Flag).w
		bne.s   loc_44A2
		move.w  D0, (Ring_Count).w
		move.l  D0, (Time_Count).w
		move.b  D0, (Ring_Life_Flag).w
loc_44A2:
		move.b  D0, (Time_Over_Flag).w
		move.b  D0, (Shield_Flag).w
		move.b  D0, (Invincibility_Flag).w
		move.b  D0, (Hi_Speed_Flag).w
		move.b  D0, ($FFFFFE2F).w
		move.w  D0, (Debug_Mode_Flag_Index).w
		move.w  D0, ($FFFFFE02).w
		bsr     Oscillate_Num_Init
		move.b  #$01, (HUD_Score_Refresh_Flag).w
		move.b  #$01, (HUD_Rings_Refresh_Flag).w
		move.b  #$01, (HUD_Timer_Refresh_Flag).w
		move.w  #$0004, ($FFFFEED2).w
		move.w  #$0000, ($FFFFE500).w
		move.w  #$0000, ($FFFFF790).w
		move.w  #$0000, ($FFFFF732).w
		lea     (Demo_Index), A1
		moveq   #$00, D0
		move.b  (Level_Id).w, D0
		lsl.w   #$02, D0
		move.l  $00(A1, D0), A1
		tst.w   (Auto_Control_Player_Flag).w
		bpl.s   loc_4516
		lea     (Demo_End_Index), A1
		move.w  ($FFFFFFF4).w, D0
		subq.w  #$01, D0
		lsl.w   #$02, D0
		move.l  $00(A1, D0), A1
loc_4516:
		move.b  $0001(A1), ($FFFFF792).w
		subq.b  #$01, ($FFFFF792).w
		lea     (Demo_Green_Hill_Tails), A1
		move.b  $0001(A1), ($FFFFF734).w
		subq.b  #$01, ($FFFFF734).w
		move.w  #$0668, (Timer_Count_Down).w
		tst.w   (Auto_Control_Player_Flag).w
		bpl.s   loc_4550
		move.w  #$021C, (Timer_Count_Down).w
		cmpi.w  #$0004, ($FFFFFFF4).w
		bne.s   loc_4550
		move.w  #$01FE, (Timer_Count_Down).w
loc_4550:
		tst.b   (Water_Level_Flag).w
		beq.s   loc_4570
		moveq   #$15, D0
		cmpi.b  #$08, (Level_Id).w
		beq.s   loc_456C
		moveq   #$16, D0
		cmpi.b  #$0D, (Level_Id).w
		beq.s   loc_456C
		moveq   #$17, D0
loc_456C:
		bsr     PalLoad4_Water
loc_4570:
		move.w  #$0003, D1
loc_4574:
		move.b  #$08, (VBlank_Index).w
		bsr     Wait_For_VSync
		dbra    D1, loc_4574
		move.w  #$202F, ($FFFFF626).w
		bsr     Pal_FadeTo_2
		tst.w   (Auto_Control_Player_Flag).w
		bmi.s   loc_45A4
		addq.b  #$02, ($FFFFB0A4).w
		addq.b  #$04, ($FFFFB0E4).w
		addq.b  #$04, ($FFFFB124).w
		addq.b  #$04, ($FFFFB164).w
		bra.s   loc_45AC
loc_45A4:
		moveq   #$02, D0
		jsr     (LoadPLC)
loc_45AC:
		bclr    #$07, (Game_Mode).w
Level_Main_Loop:
		bsr     Pause
		move.b  #$08, (VBlank_Index).w
		bsr     Wait_For_VSync
		addq.w  #$01, ($FFFFFE04).w
		bsr     Init_Demo_Control
		bsr     Water_Effects
		jsr     (Load_Objects)
		tst.w   ($FFFFFE02).w
		bne     Level
		tst.w   (Debug_Mode_Flag_Index).w
		bne.s   loc_45E8
		cmpi.b  #$06, (Player_One+Obj_Routine).w
		bcc.s   loc_45EC
loc_45E8:
		bsr     Background_Scroll_Layer
loc_45EC:
		bsr     Change_Water_Surface_Pos
		jsr     (Load_Ring_Pos)
		bsr     Jmp_00_To_Dynamic_Art_Cues
		bsr     PalCycle_Load
		bsr     RunPLC
		bsr     Oscillate_Num_Do
		bsr     Change_Object_Frame
		bsr     Test_End_Level_Art_Load
		jsr     (Build_Sprites)
		jsr     (Load_Object_Pos)
		cmpi.b  #gm_DemoMode, (Game_Mode).w
		beq.s   loc_462E
		cmpi.b  #gm_PlayMode, (Game_Mode).w
		beq     Level_Main_Loop
		rts
loc_462E:
		tst.w   ($FFFFFE02).w
		bne.s   loc_464C
		tst.w   (Timer_Count_Down).w
		beq.s   loc_464C
		cmpi.b  #gm_DemoMode, (Game_Mode).w
		beq     Level_Main_Loop
		move.b  #gm_SEGALogo, (Game_Mode).w
		rts
loc_464C:
		cmpi.b  #gm_DemoMode, (Game_Mode).w
		bne.s   loc_4666
		move.b  #gm_SEGALogo, (Game_Mode).w
		tst.w   (Auto_Control_Player_Flag).w
		bpl.s   loc_4666
		move.b  #$1C, (Game_Mode).w
loc_4666:
		move.w  #$003C, (Timer_Count_Down).w
		move.w  #$003F, ($FFFFF626).w
		clr.w   ($FFFFF794).w
loc_4676:
		move.b  #$08, (VBlank_Index).w
		bsr     Wait_For_VSync
		bsr     Init_Demo_Control
		jsr     (Load_Objects)
		jsr     (Build_Sprites)
		jsr     (Load_Object_Pos)
		subq.w  #$01, ($FFFFF794).w
		bpl.s   loc_46A6
		move.w  #$0002, ($FFFFF794).w
		bsr     Pal_FadeOut
loc_46A6:
		tst.w   (Timer_Count_Down).w
		bne.s   loc_4676
		rts
;-------------------------------------------------------------------------------
; Modify the water surface
; [ Begin ]
;-------------------------------------------------------------------------------
Change_Water_Surface_Pos:
		tst.b   (Water_Level_Flag).w
		beq.s   loc_46D6
		move.w  (Camera_X).w, D1
		btst    #$00, ($FFFFFE05).w
		beq.s   loc_46C4
		addi.w  #$0020, D1
loc_46C4:
		move.w  D1, D0
		addi.w  #$0060, D0
		move.w  D0, ($FFFFB788).w
		addi.w  #$0120, D1
		move.w  D1, ($FFFFB7C8).w
loc_46D6:
		rts
;-------------------------------------------------------------------------------
; Modify the water surface
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Underwater effects
; [ Begin ]
;-------------------------------------------------------------------------------
Water_Effects:
		tst.b   (Water_Level_Flag).w
		beq.s   loc_4734
		tst.b   (Level_Scroll_Flag).w
		bne.s   loc_46F0
		cmpi.b  #$06, (Player_One+Obj_Routine).w
		bcc.s   loc_46F0
		bsr     Dynamic_Water_Height
loc_46F0:
		clr.b   ($FFFFF64E).w
		moveq   #$00, D0
		cmpi.b  #$0F, (Level_Id).w
		beq.s   loc_4704
		move.b  ($FFFFFE60).w, D0
		lsr.w   #$01, D0
loc_4704:
		add.w   (Water_Level_Change).w, D0
		move.w  D0, (Water_Level).w
		move.w  (Water_Level).w, D0
		sub.w   (Camera_Y).w, D0
		bcc.s   loc_4726
		tst.w   D0
		bpl.s   loc_4726
		move.b  #$DF, (Scanlines_Count).w
		move.b  #$01, ($FFFFF64E).w
loc_4726:
		cmpi.w  #$00DF, D0
		bcs.s   loc_4730
		move.w  #$00DF, D0
loc_4730:
		move.b  D0, (Scanlines_Count).w
loc_4734:
		rts
;-------------------------------------------------------------------------------
; Underwater effects
; [ End ]
;-------------------------------------------------------------------------------
Water_Height_Array:
		dc.w    $0600, $0600  ; HPZ
		dc.w    $0600, $0600
		dc.w    $0600, $0600  ; OOZ
		dc.w    $0600, $0600  ; DHZ
		dc.w    $0600, $0600  ; CNZ
		dc.w    $0600, $0710  ; CPZ
		dc.w    $0600, $0600  ; GCZ
		dc.w    $0410, $0510  ; NGHZ
;-------------------------------------------------------------------------------
; Changes the water height in the zones
; [ Begin ]
;-------------------------------------------------------------------------------
Dynamic_Water_Height:
		moveq   #$00, D0
		move.w  (Level_Id).w, D0
		subi.w  #$0800, D0
		ror.b   #$01, D0
		lsr.w   #$06, D0
		andi.w  #$FFFFFFFE, D0
		move.w  Dynamic_Water_Index(PC, D0), D0
		jsr     Dynamic_Water_Index(PC, D0)
		moveq   #$00, D1
		move.b  ($FFFFF64C).w, D1
		move.w  (Water_Level_New).w, D0
		sub.w   (Water_Level_Change).w, D0
		beq.s   loc_4788
		bcc.s   loc_4784
		neg.w   D1
loc_4784:
		add.w   D1, (Water_Level_Change).w
loc_4788:
		rts
;-------------------------------------------------------------------------------
Dynamic_Water_Index:
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; HPz_1
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; HPz_2
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; Lvl9_1
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; Lvl9_2
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; OOz_1
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; OOz_2
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; DHz_1
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; DHz_2
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; CNz_1
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; CNz_2
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; CPz_1
		dc.w    Dynamic_CPz_Water-Dynamic_Water_Index  ; CPz_2
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; DEz_1
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; DEz_2
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; NGHz_1
		dc.w    Dynamic_Null_Water-Dynamic_Water_Index ; NGHz_2
;-------------------------------------------------------------------------------
Dynamic_Null_Water:
		rts
;-------------------------------------------------------------------------------
Dynamic_CPz_Water:
		cmpi.w  #$1DE0, (Camera_X).w
		bcs.s   loc_47BA
		move.w  #$0510, (Water_Level_New).w
loc_47BA:
		rts
;-------------------------------------------------------------------------------
S1_Lz_Wind_Tunnels:  ; Leftover from Sonic 1                    ; loc_47BC
		tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
		bne     loc_4898
		lea     (S1_LZ_Wind_Data+$0008), A2            ; loc_48A2
		moveq   #$00, D0
		move.b  (Act_Id).w, D0                               ; $FFFFFE11
		lsl.w   #$03, D0
		adda.w  D0, A2
		moveq   #$00, D1
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne.s   loc_47E0
		moveq   #$01, D1
		subq.w  #$08, A2
loc_47E0:
		lea     (Player_One).w, A1                           ; $FFFFB000
loc_47E4:
		move.w  Obj_X(A1), D0                                    ; $0008
		cmp.w   (A2), D0
		bcs     loc_4882
		cmp.w   $0004(A2), D0
		bcc     loc_4882
		move.w  Obj_Y(A1), D2                                    ; $000C
		cmp.w   $0002(A2), D2
		bcs     loc_4882
		cmp.w   $0006(A2), D2
		bcc.s   loc_4882
		move.b  ($FFFFFE0F).w, D0
		andi.b  #$3F, D0
		bne.s   loc_481C
		move.w  #$00D0, D0
		jsr     (Play_Sfx)                             ; loc_1512
loc_481C:
		tst.b   ($FFFFF7C9).w
		bne     loc_4898
		cmpi.b  #$04, Obj_Routine(A1)                            ; $0024
		bcc.s   loc_4894
		move.b  #$01, ($FFFFF7C7).w
		subi.w  #$0080, D0
		cmp.w   (A2), D0
		bcc.s   loc_484A
		moveq   #$02, D0
		cmpi.b  #$01, (Act_Id).w                             ; $FFFFFE11
		bne.s   loc_4846
		neg.w   D0
loc_4846:
		add.w   D0, Obj_Y(A1)                                    ; $000C
loc_484A:
		addi.w  #$0004, Obj_X(A1)                                ; $0008
		move.w  #$0400, Obj_Speed(A1)                            ; $0010
		move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
		move.b  #$0F, Obj_Ani_Number(A1)                         ; $001C
		bset    #$01, Obj_Status(A1)                             ; $0022
		btst    #$00, (Control_Ports_Buffer_Data).w          ; $FFFFF604
		beq.s   loc_4874
		subq.w  #$01, Obj_Y(A1)                                  ; $000C
loc_4874:
		btst    #$01, (Control_Ports_Buffer_Data).w          ; $FFFFF604
		beq.s   loc_4880
		addq.w  #$01, Obj_Y(A1)                                  ; $000C
loc_4880:
		rts
loc_4882:
		addq.w  #$08, A2
		dbra    D1, loc_47E4
		tst.b   ($FFFFF7C7).w
		beq.s   loc_4898
		move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
loc_4894:
		clr.b   ($FFFFF7C7).w
loc_4898:
		rts
;-------------------------------------------------------------------------------
S1_LZ_Wind_Data:                                               ; loc_489A
		dc.w    $0A80, $0300, $0C10, $0380
		dc.w    $0F80, $0100, $1410, $0180
		dc.w    $0460, $0400, $0710, $0480
		dc.w    $0A20, $0600, $1610, $06E0
		dc.w    $0C80, $0600, $13D0, $0680
;-------------------------------------------------------------------------------
S1_LZ_Water_Slides:                                            ; loc_48C2
		lea     (Player_One).w, A1                           ; $FFFFB000
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_48F6
		move.w  Obj_Y(A1), D0                                    ; $000C
		andi.w  #$0700, D0
		move.b  Obj_X(A1), D1                                    ; $0008
		andi.w  #$007F, D1
		add.w   D1, D0
		lea     (Level_Map_Buffer).w, A2                     ; $FFFF8000
		move.b  $00(A2, D0), D0
		lea     loc_495B(PC), A2
		moveq   #$06, D1
loc_48EE:
		cmp.b   -(A2), D0
		dbeq    D1, loc_48EE
		beq.s   loc_4908
loc_48F6:
		tst.b   (Player_Status_Flag).w                       ; $FFFFF7CA
		beq.s   loc_4906
		move.w  #$0005, Obj_Player_Control(A1)                   ; $002E
		clr.b   (Player_Status_Flag).w                       ; $FFFFF7CA
loc_4906:
		rts
loc_4908:
		cmpi.w  #$0003, D1
		bcc.s   loc_4910
		nop
loc_4910:
		bclr    #$00, Obj_Status(A1)                             ; $0022
		move.b  loc_494C(PC, D1), D0
		move.b  D0, Obj_Inertia(A1)                              ; $0014
		bpl.s   loc_4926
		bset    #$00, Obj_Status(A1)                             ; $0022
loc_4926:
		clr.b   $0015(A1)
		move.b  #$1B, Obj_Ani_Number(A1)                         ; $001C
		move.b  #$01, (Player_Status_Flag).w                 ; $FFFFF7CA
		move.b  ($FFFFFE0F).w, D0
		andi.b  #$1F, D0
		bne.s   loc_494A
		move.w  #$00D0, D0
		jsr     (Play_Sfx)                             ; loc_1512
loc_494A:
		rts
;-------------------------------------------------------------------------------
loc_494C:
		dc.b    $0A, $F5, $0A, $F6, $F5, $F4, $0B, $00
		dc.b    $02, $07, $03, $4C, $4B, $08, $04
;-------------------------------------------------------------------------------
loc_495B:
		dc.b    $00
;-------------------------------------------------------------------------------
Init_Demo_Control:                                             ; loc_495C
		tst.w   (Auto_Control_Player_Flag).w                 ; $FFFFFFF0
		bne.s   Demo_Mode_Control                      ; loc_49DA
		rts
;-------------------------------------------------------------------------------
; Demo_Record: ; Not used                                    ;  loc_4964
		lea     ($00FE8000), A1
		move.w  ($FFFFF790).w, D0
		adda.w  D0, A1
		move.b  (Control_Ports_Buffer_Data).w, D0            ; $FFFFF604
		cmp.b   (A1), D0
		bne.s   loc_4986
		addq.b  #$01, $0001(A1)
		cmpi.b  #$FF, $0001(A1)
		beq.s   loc_4986
		bra.s   loc_499A
loc_4986:
		move.b  D0, $0002(A1)
		move.b  #$00, $0003(A1)
		addq.w  #$02, ($FFFFF790).w
		andi.w  #$03FF, ($FFFFF790).w
loc_499A:
		cmpi.b  #$00, (Level_Id).w                           ; $FFFFFE10
		bne.s   loc_49D8
		lea     ($00FEC000), A1
		move.w  ($FFFFF732).w, D0
		adda.w  D0, A1
		move.b  ($FFFFF606).w, D0
		cmp.b   (A1), D0
		bne.s   loc_49C4
		addq.b  #$01, $0001(A1)
		cmpi.b  #$FF, $0001(A1)
		beq.s   loc_49C4
		bra.s   loc_49D8
loc_49C4:
		move.b  D0, $0002(A1)
		move.b  #$00, $0003(A1)
		addq.w  #$02, ($FFFFF732).w
		andi.w  #$03FF, ($FFFFF732).w
loc_49D8:
		rts
;-------------------------------------------------------------------------------
Demo_Mode_Control:                                             ; loc_49DA
		tst.b   (Control_Ports_Buffer_Data).w                ; $FFFFF604
		bpl.s   loc_49EC
		tst.w   (Auto_Control_Player_Flag).w                 ; $FFFFFFF0
		bmi.s   loc_49EC
		move.b  #gm_TitleScreen, (Game_Mode).w          ; $04, $FFFFF600
loc_49EC:
		lea     (Demo_Index), A1                       ; loc_4A70
		moveq   #$00, D0
		move.b  (Level_Id).w, D0                             ; $FFFFFE10
		cmpi.b  #gm_SpecialStage, (Game_Mode).w         ; $10, $FFFFF600
		bne.s   loc_4A02
		moveq   #$06, D0
loc_4A02:
		lsl.w   #$02, D0
		move.l  $00(A1, D0), A1
		move.w  ($FFFFF790).w, D0
		adda.w  D0, A1
		move.b  (A1), D0
		lea     (Control_Ports_Buffer_Data).w, A0            ; $FFFFF604
		move.b  D0, D1
		moveq   #$00, D2
		eor.b   D2, D0
		move.b  D1, (A0)+
		and.b   D1, D0
		move.b  D0, (A0)+
		subq.b  #$01, ($FFFFF792).w
		bcc.s   loc_4A30
		move.b  $0003(A1), ($FFFFF792).w
		addq.w  #$02, ($FFFFF790).w
loc_4A30:
		cmpi.b  #$00, (Level_Id).w                           ; $FFFFFE10
		bne.s   loc_4A68
		lea     (Demo_Green_Hill_Tails), A1            ; loc_4EB2
		move.w  ($FFFFF732).w, D0
		adda.w  D0, A1
		move.b  (A1), D0
		lea     ($FFFFF606).w, A0
		move.b  D0, D1
		moveq   #$00, D2
		eor.b   D2, D0
		move.b  D1, (A0)+
		and.b   D1, D0
		move.b  D0, (A0)+
		subq.b  #$01, ($FFFFF734).w
		bcc.s   loc_4A66
		move.b  $0003(A1), ($FFFFF734).w
		addq.w  #$02, ($FFFFF732).w
loc_4A66:
		rts
loc_4A68:
		move.w  #$0000, ($FFFFF606).w
		rts
;-------------------------------------------------------------------------------
Demo_Index:                                                    ; loc_4A70
		dc.l    Demo_Green_Hill                        ; loc_4DB2
		dc.l    Demo_Lvl1                              ; loc_4DB2
		dc.l    Demo_Wood                              ; loc_4DB2
		dc.l    Demo_Lvl3                              ; loc_4DB2
		dc.l    Demo_Metropolis                        ; loc_4DB2
		dc.l    Demo_Metropolis                        ; loc_4DB2
		dc.l    Demo_Lvl6                              ; loc_4DB2
		dc.l    Demo_Hill_Top                          ; loc_4FB2
		dc.l    Demo_Hidden_Palace                     ; loc_50B2
		dc.l    Demo_Lvl9                              ; loc_4DB2
		dc.l    Demo_Oil_Ocean                         ; loc_4DB2
		dc.l    Demo_Dust_Hill                         ; loc_4DB2
		dc.l    Demo_Casino_Night                      ; loc_4DB2
		dc.l    Demo_Chemical_Plant                    ; loc_51B2
		dc.l    Demo_Genocide_City                     ; loc_4DB2
		dc.l    Demo_Neo_Green_Hill                    ; loc_4DB2
		dc.l    Demo_Death_Egg                         ; loc_4DB2
;-------------------------------------------------------------------------------
; loc_4AB4:
		dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
		dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
		dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
		dc.l    $00FE8000, $00FE8000, $00FE8000, $00FE8000
		dc.l    $00FE8000
;-------------------------------------------------------------------------------
Demo_End_Index: ; Leftover from Sonic 1                         ; loc_4AF8
		dc.w    $008B, $0837, $0042, $085C, $006A, $085F, $002F, $082C
		dc.w    $0021, $0803, $2830, $0808, $002E, $0815, $000F, $0846
		dc.w    $001A, $08FF, $08CA, $0000, $0000, $0000, $0000, $0000
;-------------------------------------------------------------------------------
Load_Colision_Index:                                           ; loc_4B28
		moveq   #$00, D0
		move.b  (Level_Id).w, D0                             ; $FFFFFE10
		lsl.w   #$02, D0
		move.l  #Primary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD000, $FFFFF796
		move.l  Primary_Colision_Index(PC, D0), A1     ; loc_4B5A
		lea     (Primary_Colision_Data_Buffer).w, A2         ; $FFFFD000
		bsr.s   Load_Load_Colision_Index               ; loc_4B4A
		move.l  Secundary_Colision_Index(PC, D0), A1   ; loc_4B9E
		lea     (Secundary_Colision_Data_Buffer).w, A2       ; $FFFFD600
Load_Load_Colision_Index:                                      ; loc_4B4A
		move.w  #$02FF, D1
		moveq   #$00, D2
Load_Load_Colision_Index_Loop:                                 ; loc_4B50
		move.b  (A1)+, D2
		move.w  D2, (A2)+
		dbra    D1, Load_Load_Colision_Index_Loop      ; loc_4B50
		rts
;-------------------------------------------------------------------------------
Primary_Colision_Index:                                        ; loc_4B5A
		dc.l    Green_Hill_Colision_Data_1             ; loc_389EA
		dc.l    Lvl1_Colision_Data_1                   ; loc_3B3EA
		dc.l    Wood_Colision_Data_1                   ; loc_38FEA
		dc.l    Lvl3_Colision_Data_1                   ; loc_3B3EA
		dc.l    Metropolis_Colision_Data_1             ; loc_392EA
		dc.l    Metropolis_Colision_Data_1             ; loc_392EA
		dc.l    Lvl6_Colision_Data_1                   ; loc_3B3EA
		dc.l    Hill_Top_Colision_Data_1               ; loc_389EA
		dc.l    Hidden_Palace_Colision_Data_1          ; loc_395EA
		dc.l    Lvl9_Colision_Data_1                   ; loc_3B3EA
		dc.l    Oil_Ocean_Colision_Data_1              ; loc_39BEA
		dc.l    Dust_Hill_Colision_Data_1              ; loc_39EEA
		dc.l    Casino_Night_Colision_Data_1           ; loc_3A1EA
		dc.l    Chemical_Plant_Colision_Data_1         ; loc_3A7EA
		dc.l    Genocide_City_Colision_Data_1          ; loc_3B3EA
		dc.l    Neo_Green_Hill_Colision_Data_1         ; loc_3ADEA
		dc.l    Death_Egg_Colision_Data_1              ; loc_3B3EA
;-------------------------------------------------------------------------------
Secundary_Colision_Index:                                      ; loc_4B9E
		dc.l    Green_Hill_Colision_Data_2             ; loc_38CEA
		dc.l    Lvl1_Colision_Data_2                   ; loc_3B3EA
		dc.l    Wood_Colision_Data_2                   ; loc_38FEA
		dc.l    Lvl3_Colision_Data_2                   ; loc_3B3EA
		dc.l    Metropolis_Colision_Data_2             ; loc_392EA
		dc.l    Metropolis_Colision_Data_2             ; loc_392EA
		dc.l    Lvl6_Colision_Data_2                   ; loc_3B3EA
		dc.l    Hill_Top_Colision_Data_2               ; loc_38CEA
		dc.l    Hidden_Palace_Colision_Data_2          ; loc_398EA
		dc.l    Lvl9_Colision_Data_2                   ; loc_3B3EA
		dc.l    Oil_Ocean_Colision_Data_2              ; loc_39BEA
		dc.l    Dust_Hill_Colision_Data_2              ; loc_39EEA
		dc.l    Casino_Night_Colision_Data_2           ; loc_3A4EA
		dc.l    Chemical_Plant_Colision_Data_2         ; loc_3AAEA
		dc.l    Genocide_City_Colision_Data_2          ; loc_3B3EA
		dc.l    Neo_Green_Hill_Colision_Data_2         ; loc_3B0EA
		dc.l    Death_Egg_Colision_Data_2              ; loc_3B3EA
;-------------------------------------------------------------------------------
Oscillate_Num_Init:                                            ; loc_4BE2
		lea     ($FFFFFE5E).w, A1
		lea     (Oscillate_Data), A2                   ; loc_4BF6
		moveq   #$20, D1
loc_4BEE:
		move.w  (A2)+, (A1)+
		dbra    D1, loc_4BEE
		rts
;-------------------------------------------------------------------------------
Oscillate_Data:                                                ; loc_4BF6
		dc.w    $007D, $0080, $0000, $0080, $0000, $0080, $0000, $0080
		dc.w    $0000, $0080, $0000, $0080, $0000, $0080, $0000, $0080
		dc.w    $0000, $0080, $0000, $3848, $00EE, $2080, $00B4, $3080
		dc.w    $010E, $5080, $01C2, $7080, $0276, $0080, $0000, $4000
		dc.w    $00FE
;-------------------------------------------------------------------------------
Oscillate_Num_Do:                                              ; loc_4C38
		cmpi.b  #$06, (Player_One+Obj_Routine).w             ; $FFFFB024
		bcc.s   loc_4C8E
		lea     ($FFFFFE5E).w, A1
		lea     (Oscillate_Data2), A2                  ; loc_4C90
		move.w  (A1)+, D3
		moveq   #$0F, D1
loc_4C4E:
		move.w  (A2)+, D2
		move.w  (A2)+, D4
		btst    D1, D3
		bne.s   loc_4C6E
		move.w  $0002(A1), D0
		add.w   D2, D0
		move.w  D0, $0002(A1)
		add.w   D0, $0000(A1)
		cmp.b   $0000(A1), D4
		bhi.s   loc_4C84
		bset    D1, D3
		bra.s   loc_4C84
loc_4C6E:
		move.w  $0002(A1), D0
		sub.w   D2, D0
		move.w  D0, $0002(A1)
		add.w   D0, $0000(A1)
		cmp.b   $0000(A1), D4
		bls.s   loc_4C84
		bclr    D1, D3
loc_4C84:
		addq.w  #$04, A1
		dbra    D1, loc_4C4E
		move.w  D3, ($FFFFFE5E).w
loc_4C8E:
		rts
;-------------------------------------------------------------------------------
Oscillate_Data2:                                               ; loc_4C90
		dc.w    $0002, $0010, $0002, $0018, $0002, $0020, $0002, $0030
		dc.w    $0004, $0020, $0008, $0008, $0008, $0040, $0004, $0040
		dc.w    $0002, $0038, $0002, $0038, $0002, $0020, $0003, $0030
		dc.w    $0005, $0050, $0007, $0070, $0002, $0040, $0002, $0040
;===============================================================================
; Sub Rotina para fazer os an is e outros Objects girarem em torno de si
; [ Begin ]
;===============================================================================
Change_Object_Frame:                                           ; loc_4CD0
		subq.b  #$01, (Object_Frame_Buffer).w                ; $FFFFFEA0
		bpl.s   loc_4CE6
		move.b  #$0B, (Object_Frame_Buffer).w                ; $FFFFFEA0
		subq.b  #$01, (Object_Frame_Buffer+$0001).w          ; $FFFFFEA1
		andi.b  #$07, (Object_Frame_Buffer+$0001).w          ; $FFFFFEA1
loc_4CE6:
		subq.b  #$01, (Object_Frame_Buffer+$0002).w          ; $FFFFFEA2
		bpl.s   loc_4CFC
		move.b  #$07, (Object_Frame_Buffer+$0002).w          ; $FFFFFEA2
		addq.b  #$01, (Object_Frame_Buffer+$0003).w          ; $FFFFFEA3
		andi.b  #$03, (Object_Frame_Buffer+$0003).w          ; $FFFFFEA3
loc_4CFC:
		subq.b  #$01, (Object_Frame_Buffer+$0004).w          ; $FFFFFEA4
		bpl.s   loc_4D1A
		move.b  #$07, (Object_Frame_Buffer+$0004).w          ; $FFFFFEA4
		addq.b  #$01, (Object_Frame_Buffer+$0005).w          ; $FFFFFEA5
		cmpi.b  #$06, (Object_Frame_Buffer+$0005).w          ; $FFFFFEA5
		bcs.s   loc_4D1A
		move.b  #$00, (Object_Frame_Buffer+$0005).w          ; $FFFFFEA5
loc_4D1A:
		tst.b   (Object_Frame_Buffer+$0006).w                ; $FFFFFEA6
		beq.s   loc_4D3C
		moveq   #$00, D0
		move.b  (Object_Frame_Buffer+$0006).w, D0            ; $FFFFFEA6
		add.w   (Object_Frame_Buffer+$0008).w, D0            ; $FFFFFEA8
		move.w  D0, (Object_Frame_Buffer+$0008).w            ; $FFFFFEA8
		rol.w   #$07, D0
		andi.w  #$0003, D0
		move.b  D0, (Object_Frame_Buffer+$0007).w            ; $FFFFFEA7
		subq.b  #$01, (Object_Frame_Buffer+$0006).w          ; $FFFFFEA6
loc_4D3C:
		rts
;===============================================================================
; Sub Rotina para fazer os an is e outros Objects girarem em torno de si
; [ End ]
;===============================================================================

;===============================================================================
; Check if it's at the end of the zone
; [ Begin ]
;===============================================================================
Test_End_Level_Art_Load:                                       ; loc_4D3E
		tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
		bne     loc_4DB0
		cmpi.w  #$0001, (Level_Id).w                         ; $FFFFFE10
		beq.s   loc_4DB0
		cmpi.w  #$0701, (Level_Id).w                         ; $FFFFFE10
		beq.s   loc_4DB0
		cmpi.w  #$0B01, (Level_Id).w                         ; $FFFFFE10
		beq.s   loc_4DB0
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		move.w  (Sonic_Level_Limits_Max_X).w, D1             ; $FFFFEECA
		subi.w  #$0100, D1
		cmp.w   D1, D0
		blt.s   loc_4D84
		tst.b   (HUD_Timer_Refresh_Flag).w                   ; $FFFFFE1E
		beq.s   loc_4D84
		cmp.w   (Sonic_Level_Limits_Min_X).w, D1             ; $FFFFEEC8
		beq.s   loc_4D84
		move.w  D1, (Sonic_Level_Limits_Min_X).w             ; $FFFFEEC8
		moveq   #$27, D0
		bra     LoadPLC2                               ; loc_17C6
loc_4D84:
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   loc_4DB0
		move.w  (Camera_X_2).w, D0                           ; $FFFFEE20
		move.w  (Tails_Level_Limits_Max_X).w, D1             ; $FFFFEEFA
		subi.w  #$0100, D1
		cmp.w   D1, D0
		blt.s   loc_4DB0
		tst.b   (HUD_Timer_Refresh_Flag).w                   ; $FFFFFE1E
		beq.s   loc_4DB0
		cmp.w   (Tails_Level_Limits_Min_X).w, D1             ; $FFFFEEF8
		beq.s   loc_4DB0
		move.w  D1, (Tails_Level_Limits_Min_X).w             ; $FFFFEEF8
		moveq   #$27, D0
		bra     LoadPLC2                               ; loc_17C6
loc_4DB0:
		rts
;===============================================================================
; Check if it's at the end of the zone
; [ End ]
;===============================================================================
Demo_Green_Hill:                                               ; loc_4DB2
Demo_Lvl1:                                                     ; loc_4DB2
Demo_Wood:                                                     ; loc_4DB2
Demo_Lvl3:                                                     ; loc_4DB2
Demo_Metropolis:                                               ; loc_4DB2
Demo_Lvl6:                                                     ; loc_4DB2
Demo_Lvl9:                                                     ; loc_4DB2
Demo_Oil_Ocean:                                                ; loc_4DB2
Demo_Dust_Hill:                                                ; loc_4DB2
Demo_Casino_Night:                                             ; loc_4DB2
Demo_Genocide_City:                                            ; loc_4DB2
Demo_Neo_Green_Hill:                                           ; loc_4DB2
Demo_Death_Egg:                                                ; loc_4DB2
		incbin  'misc/ehzdemosonic.dat'
Demo_Green_Hill_Tails:                                         ; loc_4EB2
		incbin  'misc/ehzdemotails.dat'
Demo_Hill_Top:                                                 ; loc_4FB2
		incbin  'misc/htzdemo.dat'
Demo_Hidden_Palace:                                            ; loc_50B2
		incbin  'misc/hpzdemo.dat'
Demo_Chemical_Plant:                                           ; loc_51B2
		incbin  'misc/cpzdemo.dat'
;===============================================================================
; Modo de jogo ou demonstra  o das fases
; [ End ]
;===============================================================================
		nop
Jmp_00_To_Dynamic_Art_Cues:                                    ; loc_52B4
		jmp     (Dynamic_Art_Cues)                     ; loc_2C61C
		dc.w    $0000
;===============================================================================
; Main control routine for the Special Stage
; [ Begin ]
;===============================================================================
Special_Stage:                                                 ; loc_52BC
		move.w  #$00CA, D0
		bsr     Play_Sfx                               ; loc_1512
		bsr     Pal_MakeFlash                          ; loc_2794
		move    #$2700, SR
		lea     (VDP_Control_Port), A6                       ; $00C00004
		move.w  #$8B03, (A6)
		move.w  #$8004, (A6)
		move.w  #$8AAF, (Horizontal_Interrupt_Count).w       ; $FFFFF624
		move.w  #$9011, (A6)
		move.w  ($FFFFF60C).w, D0
		andi.b  #$BF, D0
		move.w  D0, (VDP_Control_Port)                       ; $00C00004
		bsr     ClearScreen                            ; loc_1418
		move    #$2300, SR
		lea     (VDP_Control_Port), A5                       ; $00C00004
		move.w  #$8F01, (A5)
		move.l  #$946F93FF, (A5)
		move.w  #$9780, (A5)
		move.l  #$50000081, (A5)
		move.w  #$0000, (VDP_Data_Port)                      ; $00C00000
loc_531C:
		move.w  (A5), D1
		btst    #$01, D1
		bne.s   loc_531C
		move.w  #$8F02, (A5)
		bsr     Special_Stage_Background_Load          ; loc_556C
		moveq   #$14, D0
		bsr     RunPLC_ROM                             ; loc_1900
		lea     (Special_Stage_Memory_Address).w, A1         ; $FFFFD000
		moveq   #$00, D0
		move.w  #$07FF, D1
SS_Loop_Clear_ObjRam:                                          ; loc_533C
		move.l  D0, (A1)+
		dbra    D1, SS_Loop_Clear_ObjRam               ; loc_533C
		lea     ($FFFFF700).w, A1
		moveq   #$00, D0
		move.w  #$003F, D1
loc_534C:
		move.l  D0, (A1)+
		dbra    D1, loc_534C
		lea     ($FFFFFE60).w, A1
		moveq   #$00, D0
		move.w  #$0027, D1
loc_535C:
		move.l  D0, (A1)+
		dbra    D1, loc_535C
		lea     ($FFFFAA00).w, A1
		moveq   #$00, D0
		move.w  #$007F, D1
loc_536C:
		move.l  D0, (A1)+
		dbra    D1, loc_536C
		clr.b   ($FFFFF64E).w
		clr.w   ($FFFFFE02).w
		moveq   #$16, D0
		bsr     PalLoad1                               ; loc_2914
		jsr     (Special_Stage_Load)                   ; loc_2BC66
		move.l  #$00000000, (Camera_X).w                     ; $FFFFEE00
		move.l  #$00000000, (Camera_Y).w                     ; $FFFFEE04
		move.b  #$09, (Player_One).w                         ; $FFFFB000
		bsr     Special_Stage_Pal_Cycle                ; loc_5626
		clr.w   ($FFFFF750).w
		move.w  #$0040, ($FFFFF752).w
		move.w  #$0089, D0
		bsr     Play_Music                             ; loc_150C
		move.w  #$0000, ($FFFFF790).w
		lea     (Demo_Index), A1                       ; loc_4A70
		moveq   #$06, D0
		lsl.w   #$02, D0
		move.l  $00(A1, D0), A1
		move.b  $0001(A1), ($FFFFF792).w
		subq.b  #$01, ($FFFFF792).w
		clr.w   (Ring_Count).w                               ; $FFFFFE20
		clr.b   (Ring_Life_Flag).w                           ; $FFFFFE1B
		move.w  #$0000, (Debug_Mode_Flag_Index).w            ; $FFFFFE08
		move.w  #$0708, (Timer_Count_Down).w                 ; $FFFFF614
		tst.b   ($FFFFFFD2).w
		beq.s   loc_53F8
		btst    #$06, (Control_Ports_Buffer_Data).w          ; $FFFFF604
		beq.s   loc_53F8
		move.b  #$01, (Debug_Mode_Active_Flag).w             ; $FFFFFFFA
loc_53F8:
		move.w  ($FFFFF60C).w, D0
		ori.b   #$40, D0
		move.w  D0, (VDP_Control_Port)                       ; $00C00004
		bsr     Pal_MakeWhite                          ; loc_26EA
Special_Stage_Loop:                                            ; loc_540A
		bsr     Pause                                  ; loc_152A
		move.b  #$0A, (VBlank_Index).w                       ; $FFFFF62A
		bsr     Wait_For_VSync                         ; loc_3250
		bsr     Init_Demo_Control                      ; loc_495C
		move.w  (Control_Ports_Buffer_Data).w, ($FFFFF602).w ; $FFFFF604
		jsr     (Load_Objects)                         ; loc_CEA8
		jsr     (Build_Sprites)                        ; loc_D442
		jsr     (Special_Stage_Show_Layout)            ; loc_2B738
		bsr     Special_Stage_Background_Animate       ; loc_58A8
		tst.w   (Auto_Control_Player_Flag).w                 ; $FFFFFFF0
		beq.s   loc_5446
		tst.w   (Timer_Count_Down).w                         ; $FFFFF614
		beq     Special_Stage_Game_Reset               ; loc_555A
loc_5446:
		cmpi.b  #gm_SpecialStage, (Game_Mode).w         ; $10, $FFFFF600
		beq     Special_Stage_Loop                     ; loc_540A
		tst.w   (Auto_Control_Player_Flag).w                 ; $FFFFFFF0
		bne     Special_Stage_Exit_To_Level            ; loc_5562
		move.b  #gm_PlayMode, (Game_Mode).w            ; $0C,  $FFFFF600
		cmpi.w  #$0503, (Level_Id).w                         ; $FFFFFE10
		bcs.s   loc_546A
		clr.w   (Level_Id).w                                 ; $FFFFFE10
loc_546A:
		move.w  #$003C, (Timer_Count_Down).w                 ; $FFFFF614
		move.w  #$003F, ($FFFFF626).w
		clr.w   ($FFFFF794).w
Special_Stage_Loop_2:                                          ; loc_547A
		move.b  #$16, (VBlank_Index).w                       ; $FFFFF62A
		bsr     Wait_For_VSync                         ; loc_3250
		bsr     Init_Demo_Control                      ; loc_495C
		move.w  (Control_Ports_Buffer_Data).w, ($FFFFF602).w ; $FFFFF604
		jsr     (Load_Objects)                         ; loc_CEA8
		jsr     (Build_Sprites)                        ; loc_D442
		jsr     (Special_Stage_Show_Layout)            ; loc_2B738
		bsr     Special_Stage_Background_Animate       ; loc_58A8
		subq.w  #$01, ($FFFFF794).w
		bpl.s   loc_54B4
		move.w  #$0002, ($FFFFF794).w
		bsr     Pal_ToWhite                            ; loc_27B4
loc_54B4:
		tst.w   (Timer_Count_Down).w                         ; $FFFFF614
		bne.s   Special_Stage_Loop_2                   ; loc_547A
		move    #$2700, SR
		lea     (VDP_Control_Port), A6                       ; $00C00004
		move.w  #$8230, (A6)
		move.w  #$8407, (A6)
		move.w  #$9001, (A6)
		bsr     ClearScreen                            ; loc_1418
		jsr     (Head_Up_Display_Base)                 ; loc_2D488
		move    #$2300, SR
		moveq   #$16, D0
		bsr     PalLoad2                               ; loc_2930
		moveq   #$00, D0
		bsr     LoadPLC2                               ; loc_17C6
		moveq   #$1B, D0
		bsr     LoadPLC                                ; loc_1794
		move.b  #$01, (HUD_Score_Refresh_Flag).w             ; $FFFFFE1F
		move.b  #$01, ($FFFFF7D6).w
		move.w  (Ring_Count).w, D0                           ; $FFFFFE20
		mulu.w  #$000A, D0
		move.w  D0, ($FFFFF7D4).w
		move.w  #$008E, D0
		jsr     (Play_Sfx)                             ; loc_1512
		lea     (Obj_Memory_Address).w, A1                   ; $FFFFB000
		moveq   #$00, D0
		move.w  #$07FF, D1
S1_SS_Results_Clear_Ram_Loop:                                  ; loc_551C
		move.l  D0, (A1)+
		dbra    D1, S1_SS_Results_Clear_Ram_Loop       ; loc_551C
;-------------------------------------------------------------------------------
SS_Results_Loop:                                               ; loc_5522
		bsr     Pause                                  ; loc_152A
		move.b  #$0C, (VBlank_Index).w                       ; $FFFFF62A
		bsr     Wait_For_VSync                         ; loc_3250
		jsr     (Load_Objects)                         ; loc_CEA8
		jsr     (Build_Sprites)                        ; loc_D442
		bsr     RunPLC                                 ; loc_1800
		tst.w   ($FFFFFE02).w
		beq.s   SS_Results_Loop                        ; loc_5522
		tst.l   (PLC_Buffer).w                               ; $FFFFF680
		bne.s   SS_Results_Loop                        ; loc_5522
		move.w  #$00CA, D0
		bsr     Play_Sfx                               ; loc_1512
		bsr     Pal_MakeFlash                          ; loc_2794
		rts
;-------------------------------------------------------------------------------
Special_Stage_Game_Reset:                                      ; loc_555A
		move.b  #gm_SEGALogo, (Game_Mode).w             ; $00, $FFFFF600
		rts
;-------------------------------------------------------------------------------
Special_Stage_Exit_To_Level:                                   ; loc_5562
		cmpi.b  #gm_PlayMode, (Game_Mode).w             ; $0C, $FFFFF600
		beq.s   Special_Stage_Game_Reset               ; loc_555A
		rts
;-------------------------------------------------------------------------------
Special_Stage_Background_Load:                                 ; loc_556C
		lea     (M68K_RAM_Start), A1                         ; $FFFF0000
		move.w  #$4051, D0
		bsr     EniDec                              ; loc_1932
		move.l  #$50000001, D3
		lea     (M68K_RAM_Start+$0080), A2                   ; $FFFF0080
		moveq   #$06, D7
loc_5588:
		move.l  D3, D0
		moveq   #$03, D6
		moveq   #$00, D4
		cmpi.w  #$0003, D7
		bcc.s   loc_5596
		moveq   #$01, D4
loc_5596:
		moveq   #$07, D5
loc_5598:
		move.l  A2, A1
		eori.b  #$01, D4
		bne.s   loc_55AC
		cmpi.w  #$0006, D7
		bne.s   loc_55BC
		lea     (M68K_RAM_Start), A1                         ; $FFFF0000
loc_55AC:
		movem.l D0-D4, -(A7)
		moveq   #$07, D1
		moveq   #$07, D2
		bsr     ShowVDPGraphics                        ; loc_15A4
		movem.l (A7)+, D0-D4
loc_55BC:
		addi.l  #$00100000, D0
		dbra    D5, loc_5598
		addi.l  #$03800000, D0
		eori.b  #$01, D4
		dbra    D6, loc_5596
		addi.l  #$10000000, D3
		bpl.s   loc_55E6
		swap.w  D3
		addi.l  #$0000C000, D3
		swap.w  D3
loc_55E6:
		adda.w  #$0080, A2
		dbra    D7, loc_5588
		lea     (M68K_RAM_Start), A1                         ; $FFFF0000
		move.w  #$4000, D0
		bsr     EniDec                              ; loc_1932
		lea     (M68K_RAM_Start), A1                         ; $FFFF0000
		move.l  #$40000003, D0
		moveq   #$3F, D1
		moveq   #$1F, D2
		bsr     ShowVDPGraphics                        ; loc_15A4
		lea     (M68K_RAM_Start), A1                         ; $FFFF0000
		move.l  #$50000003, D0
		moveq   #$3F, D1
		moveq   #$3F, D2
		bsr     ShowVDPGraphics                        ; loc_15A4
		rts
;-------------------------------------------------------------------------------
Special_Stage_Pal_Cycle:                                       ; loc_5626
		tst.w   (Pause_Status).w                             ; $FFFFF63A
		bne.s   loc_56AA
		subq.w  #$01, ($FFFFF79C).w
		bpl.s   loc_56AA
		lea     (VDP_Control_Port), A6                       ; $00C00004
		move.w  ($FFFFF79A).w, D0
		addq.w  #$01, ($FFFFF79A).w
		andi.w  #$001F, D0
		lsl.w   #$02, D0
		lea     (SS_Pal_Cycle_Data), A0                ; loc_5700
		adda.w  D0, A0
		move.b  (A0)+, D0
		bpl.s   loc_5656
		move.w  #$01FF, D0
loc_5656:
		move.w  D0, ($FFFFF79C).w
		moveq   #$00, D0
		move.b  (A0)+, D0
		move.w  D0, ($FFFFF7A0).w
		lea     (SS_Pal_Cycle_Data_01), A1             ; loc_5780
		lea     $00(A1, D0), A1
		move.w  #$8200, D0
		move.b  (A1)+, D0
		move.w  D0, (A6)
		move.b  (A1), ($FFFFF616).w
		move.w  #$8400, D0
		move.b  (A0)+, D0
		move.w  D0, (A6)
		move.l  #$40000010, (VDP_Control_Port)               ; $00C00004
		move.l  ($FFFFF616).w, (VDP_Data_Port)               ; $00C00000
		moveq   #$00, D0
		move.b  (A0)+, D0
		bmi.s   loc_56AC
		lea     (Pal_SS_Cycle1), A1                    ; loc_578E
		adda.w  D0, A1
		lea     ($FFFFFB4E).w, A2
		move.l  (A1)+, (A2)+
		move.l  (A1)+, (A2)+
		move.l  (A1)+, (A2)+
loc_56AA:
		rts
loc_56AC:
		move.w  ($FFFFF79E).w, D1
		cmpi.w  #$008A, D0
		bcs.s   loc_56B8
		addq.w  #$01, D1
loc_56B8:
		mulu.w  #$002A, D1
		lea     (Pal_SS_Cycle2), A1                    ; loc_57D6
		adda.w  D1, A1
		andi.w  #$007F, D0
		bclr    #$00, D0
		beq.s   loc_56DC
		lea     ($FFFFFB6E).w, A2
		move.l  (A1), (A2)+
		move.l  $0004(A1), (A2)+
		move.l  $0008(A1), (A2)+
loc_56DC:
		adda.w  #$000C, A1
		lea     ($FFFFFB5A).w, A2
		cmpi.w  #$000A, D0
		bcs.s   loc_56F2
		subi.w  #$000A, D0
		lea     ($FFFFFB7A).w, A2
loc_56F2:
		move.w  D0, D1
		add.w   D0, D0
		add.w   D1, D0
		adda.w  D0, A1
		move.l  (A1)+, (A2)+
		move.w  (A1)+, (A2)+
		rts
;-------------------------------------------------------------------------------
SS_Pal_Cycle_Data:                                             ; loc_5700
		dc.w    $0300, $0792, $0300, $0790, $0300, $078E, $0300, $078C
		dc.w    $0300, $078B, $0300, $0780, $0300, $0782, $0300, $0784
		dc.w    $0300, $0786, $0300, $0788, $0708, $0700, $070A, $070C
		dc.w    $FF0C, $0718, $FF0C, $0718, $070A, $070C, $0708, $0700
		dc.w    $0300, $0688, $0300, $0686, $0300, $0684, $0300, $0682
		dc.w    $0300, $0681, $0300, $068A, $0300, $068C, $0300, $068E
		dc.w    $0300, $0690, $0300, $0692, $0702, $0624, $0704, $0630
		dc.w    $FF06, $063C, $FF06, $063C, $0704, $0630, $0702, $0624
;-------------------------------------------------------------------------------
SS_Pal_Cycle_Data_01:                                          ; loc_5780
		dc.w    $1001, $1800, $1801, $2000, $2001, $2800, $2801
;-------------------------------------------------------------------------------
Pal_SS_Cycle1:                                                 ; loc_578E
		dc.w    $0400, $0600, $0620, $0624, $0664, $0666, $0600, $0820
		dc.w    $0A64, $0A68, $0AA6, $0AAA, $0800, $0C42, $0E86, $0ECA
		dc.w    $0EEC, $0EEE, $0400, $0420, $0620, $0620, $0864, $0666
		dc.w    $0420, $0620, $0842, $0842, $0A86, $0AAA, $0620, $0842
		dc.w    $0A64, $0C86, $0EA8, $0EEE
;-------------------------------------------------------------------------------
Pal_SS_Cycle2:                                                 ; loc_57D6
		dc.w    $0EEA, $0EE0, $0AA0, $0880, $0660, $0440, $0EE0, $0AA0
		dc.w    $0440, $0AA0, $0AA0, $0AA0, $0860, $0860, $0860, $0640
		dc.w    $0640, $0640, $0400, $0400, $0400, $0AEC, $06EA, $04C6
		dc.w    $02A4, $0082, $0060, $06EA, $04C6, $0060, $04C6, $04C6
		dc.w    $04C6, $0484, $0484, $0484, $0442, $0442, $0442, $0400
		dc.w    $0400, $0400, $0ECC, $0E8A, $0C68, $0A46, $0824, $0602
		dc.w    $0E8A, $0C68, $0602, $0C68, $0C68, $0C68, $0846, $0846
		dc.w    $0846, $0624, $0624, $0624, $0400, $0400, $0400, $0AEC
		dc.w    $08CA, $06A8, $0486, $0264, $0042, $08CA, $06A8, $0042
		dc.w    $06A8, $06A8, $06A8, $0684, $0684, $0684, $0442, $0442
		dc.w    $0442, $0400, $0400, $0400, $0EEC, $0CCA, $0AA8, $0886
		dc.w    $0664, $0442, $0CCA, $0AA8, $0442, $0AA8, $0AA8, $0AA8
		dc.w    $0864, $0864, $0864, $0642, $0642, $0642, $0400, $0400
		dc.w    $0400
;-------------------------------------------------------------------------------
Special_Stage_Background_Animate:                              ; loc_58A8
		move.w  ($FFFFF7A0).w, D0
		bne.s   loc_58BA
		move.w  #$0000, (Camera_Y_x4).w                      ; $FFFFEE0C
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
loc_58BA:
		cmpi.w  #$0008, D0
		bcc.s   loc_5912
		cmpi.w  #$0006, D0
		bne.s   loc_58D4
		addq.w  #$01, (Camera_X_x4).w                        ; $FFFFEE18
		addq.w  #$01, (Camera_Y_x4).w                        ; $FFFFEE0C
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
loc_58D4:
		moveq   #$00, D0
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		neg.w   D0
		swap.w  D0
		lea     (SS_Bg_Animate_Data_02), A1            ; loc_598F
		lea     ($FFFFAA00).w, A3
		moveq   #$09, D3
loc_58EA:
		move.w  $0002(A3), D0
		bsr     CalcSine                               ; loc_3282
		moveq   #$00, D2
		move.b  (A1)+, D2
		muls.w  D2, D0
		asr.l   #$08, D0
		move.w  D0, (A3)+
		move.b  (A1)+, D2
		ext.w   D2
		add.w   D2, (A3)+
		dbra    D3, loc_58EA
		lea     ($FFFFAA00).w, A3
		lea     (SS_Bg_Animate_Data_00), A2            ; loc_597C
		bra.s   loc_5942
loc_5912:
		cmpi.w  #$000C, D0
		bne.s   loc_5938
		subq.w  #$01, (Camera_X_x4).w                        ; $FFFFEE18
		lea     ($FFFFAB00).w, A3
		move.l  #$00018000, D2
		moveq   #$06, D1
loc_5928:
		move.l  (A3), D0
		sub.l   D2, D0
		move.l  D0, (A3)+
		subi.l  #$00002000, D2
		dbra    D1, loc_5928
loc_5938:
		lea     ($FFFFAB00).w, A3
		lea     (SS_Bg_Animate_Data_01), A2            ; loc_5987
loc_5942:
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  (Camera_X_x4).w, D0                          ; $FFFFEE18
		neg.w   D0
		swap.w  D0
		moveq   #$00, D3
		move.b  (A2)+, D3
		move.w  (Camera_Y_x4).w, D2                          ; $FFFFEE0C
		neg.w   D2
		andi.w  #$00FF, D2
		lsl.w   #$02, D2
loc_595E:
		move.w  (A3)+, D0
		addq.w  #$02, A3
		moveq   #$00, D1
		move.b  (A2)+, D1
		subq.w  #$01, D1
loc_5968:
		move.l  D0, $00(A1, D2)
		addq.w  #$04, D2
		andi.w  #$03FC, D2
		dbra    D1, loc_5968
		dbra    D3, loc_595E
		rts
;-------------------------------------------------------------------------------
SS_Bg_Animate_Data_00:                                         ; loc_597C
		dc.b    $09, $28, $18, $10, $28, $18, $10, $30
		dc.b    $18, $08, $10
;-------------------------------------------------------------------------------
SS_Bg_Animate_Data_01:                                         ; loc_5987
		dc.b    $06, $30, $30, $30, $28, $18, $18, $18
;-------------------------------------------------------------------------------
SS_Bg_Animate_Data_02:                                         ; loc_598F
		dc.b    $08, $02, $04, $FF, $02, $03, $08, $FF
		dc.b    $04, $02, $02, $03, $08, $FD, $04, $02
		dc.b    $02, $03, $02, $FF, $00
;===============================================================================
; Main control routine for the Special Stage
; [ End ]
;===============================================================================

;===============================================================================
; Routine for loading level boundaries
; [ Begin ]
;===============================================================================
Level_Size_Load:                                               ; loc_59A4
		clr.w   (Scroll_Flag_Array).w                        ; $FFFFEE50
		clr.w   (Scroll_Flag_Array+$0002).w                  ; $FFFFEE52
		clr.w   (Scroll_Flag_Array+$0004).w                  ; $FFFFEE54
		clr.w   (Scroll_Flag_Array+$0006).w                  ; $FFFFEE56
		clr.w   (Scroll_Flag_Array+$0008).w                  ; $FFFFEE58
		clr.w   (Scroll_Flag_Array+$000A).w                  ; $FFFFEE5A
		clr.w   (Scroll_Flag_Array+$000C).w                  ; $FFFFEE5C
		clr.w   (Scroll_Flag_Array+$000E).w                  ; $FFFFEE5E
		clr.w   (Scroll_Flag_Array_2).w                      ; $FFFFEEA0
		clr.w   (Scroll_Flag_Array_2+$0002).w                ; $FFFFEEA2
		clr.w   (Scroll_Flag_Array_2+$0004).w                ; $FFFFEEA4
		clr.w   (Scroll_Flag_Array_2+$0006).w                ; $FFFFEEA6
		clr.w   (Scroll_Flag_Array_2+$0008).w                ; $FFFFEEA8
		clr.w   (Scroll_Flag_Array_2+$000A).w                ; $FFFFEEAA
		clr.w   (Scroll_Flag_Array_2+$000C).w                ; $FFFFEEAC
		clr.w   (Scroll_Flag_Array_2+$000E).w                ; $FFFFEEAE
		clr.b   (Level_Scroll_Flag).w                        ; $FFFFEEDC
		clr.b   ($FFFFEEBC).w
		clr.b   ($FFFFEEBD).w
		moveq   #$00, D0
		move.b  D0, (Dyn_Resize_Routine).w                   ; $FFFFEEDF
		move.w  (Level_Id).w, D0                             ; $FFFFFE10
		ror.b   #$01, D0
		lsr.w   #$04, D0
		lea     Level_Size_Array(PC, D0), A0           ; loc_5A2E
		move.l  (A0)+, D0
		move.l  D0, (Sonic_Level_Limits_Min_X).w             ; $FFFFEEC8
		move.l  D0, ($FFFFEEC0).w
		move.l  D0, (Tails_Level_Limits_Min_X).w             ; $FFFFEEF8
		move.l  (A0)+, D0
		move.l  D0, (Sonic_Level_Limits_Min_Y).w             ; $FFFFEECC
		move.l  D0, ($FFFFEEC4).w
		move.l  D0, ($FFFFEEFC).w
		move.w  #$1010, ($FFFFEE40).w
		move.w  #$0060, ($FFFFEED8).w
		bra     Level_Load_Player_Position             ; loc_5B3E
;-------------------------------------------------------------------------------
Level_Size_Array:                                              ; loc_5A2E
		dc.l    $000029A0, $00000320, $00002940, $00000420	; GHZ
		dc.l    $00003FFF, $00000720, $00003FFF, $00000720	; Zone 01
		dc.l    $00003FFF, $00000720, $00003FFF, $00000720	; WZ
		dc.l    $00003FFF, $00000720, $00003FFF, $00000720	; Zone 03
		dc.l    $00002280, $FF000800, $00001E80, $FF000800	; MTZ
		dc.l    $00002A80, $FF000800, $00003FFF, $FF000800	; MTZ Act 3
		dc.l    $00003FFF, $00000720, $00003FFF, $00000720	; Zone 06
		dc.l    $00002800, $00000720, $00003280, $00000720	; HTZ
		dc.l    $00003FFF, $00000720, $00003FFF, $00000720	; HPZ
		dc.l    $00003FFF, $00000720, $00003FFF, $00000720	; Zone 09
		dc.l    $00002F80, $00000680, $00002580, $00000680	; OOZ
		dc.l    $00002380, $03C00720, $00003FFF, $00600720	; DHZ
		dc.l    $00003FFF, $00000720, $00003FFF, $00000720	; CNZ
		dc.l    $00002780, $00000720, $00002880, $00000720	; CPZ
		dc.l    $00003FFF, $00000720, $00003FFF, $00000720	; GCZ
		dc.l    $000028C0, $020003A0, $000026C0, $018005A0	; NGHZ
		dc.l    $00003FFF, $00000720, $00003FFF, $00000720	; DEZ
;===============================================================================
; Routine for loading level boundaries
; [ End ]
;===============================================================================

;===============================================================================
; Routine to load the player's position on the screen
; [ Begin ]
;===============================================================================
Level_Load_Player_Position:                                    ; loc_5B3E
		tst.b   (Saved_Level_Flag).w                         ; $FFFFFE30
		beq.s   Level_Load_Player_Position_From_Start  ; loc_5B54
		jsr     (Level_Restore_Info)                   ; loc_14650
		move.w  (Player_One_Position_X).w, D1                ; $FFFFB008
		move.w  (Player_One_Position_Y).w, D0                ; $FFFFB00C
		bra.s   Level_Load_Player_Position_2           ; loc_5B70
Level_Load_Player_Position_From_Start:                         ; loc_5B54
		move.w  (Level_Id).w, D0                             ; $FFFFFE10
		ror.b   #$01, D0
		lsr.w   #$05, D0
		lea     Player_Start_Position_Array(PC, D0), A1 ; loc_5BAA
		moveq   #$00, D1
		move.w  (A1)+, D1
		move.w  D1, (Player_One_Position_X).w                ; $FFFFB008
		moveq   #$00, D0
		move.w  (A1), D0
		move.w  D0, (Player_One_Position_Y).w                ; $FFFFB00C
Level_Load_Player_Position_2:                                  ; loc_5B70
		subi.w  #$00A0, D1
		bcc.s   loc_5B78
		moveq   #$00, D1
loc_5B78:
		move.w  (Sonic_Level_Limits_Max_X).w, D2             ; $FFFFEECA
		cmp.w   D2, D1
		bcs.s   loc_5B82
		move.w  D2, D1
loc_5B82:
		move.w  D1, (Camera_X).w                             ; $FFFFEE00
		move.w  D1, (Camera_X_2).w                           ; $FFFFEE20
		subi.w  #$0060, D0
		bcc.s   loc_5B92
		moveq   #$00, D0
loc_5B92:
		cmp.w   (Sonic_Level_Limits_Max_Y).w, D0             ; $FFFFEECE
		blt.s   loc_5B9C
		move.w  (Sonic_Level_Limits_Max_Y).w, D0             ; $FFFFEECE
loc_5B9C:
		move.w  D0, (Camera_Y).w                             ; $FFFFEE04
		move.w  D0, (Camera_Y_2).w                           ; $FFFFEE24
		bsr     Background_Scroll_Speed                ; loc_5C32
		rts
;-------------------------------------------------------------------------------
Player_Start_Position_Array:                                   ; loc_5BAA
                incbin  'Level/Emerald Hill Zone/startposact1.bin'	; GHZ1
                incbin  'Level/Emerald Hill Zone/startposact2.bin'	; GHZ2
		dc.w    $0060, $028F, $0040, $02AF			; Zone 01
		incbin  'Level/Wood Zone/startposact1.bin'		; WZ1
                incbin  'Level/Wood Zone/startposact2.bin'		; WZ2
		dc.w    $0060, $028F, $0040, $02AF			; Zone 03
		incbin  'Level/Metropolis Zone/startposact1.bin'	; MZ1
                incbin  'Level/Metropolis Zone/startposact2.bin'	; MZ2
		incbin  'Level/Metropolis Zone/startposact3.bin'	; MZ3
                incbin  'Level/Metropolis Zone/startposact4.bin'	; MZ4
		dc.w    $0060, $028F, $0040, $02AF			; Zone 06
		incbin  'Level/Hill Top Zone/startposact1.bin'		; HTZ1
                incbin  'Level/Hill Top Zone/startposact2.bin'		; HTZ2
                incbin  'Level/Hidden Palace Zone/startposact1.bin'	; HPZ1
                incbin  'Level/Hidden Palace Zone/startposact2.bin'	; HPZ2
		dc.w    $0060, $028F, $0040, $02AF			; Zone 09
		incbin  'Level/Oil Ocean Zone/startposact1.bin'		; OOZ1
                incbin  'Level/Oil Ocean Zone/startposact2.bin'		; OOZ2
		incbin  'Level/Dust Hill Zone/startposact1.bin'		; DHZ1
                incbin  'Level/Dust Hill Zone/startposact2.bin'		; DHZ2
		incbin  'Level/Casino Night Zone/startposact1.bin'	; CNZ1
                incbin  'Level/Casino Night Zone/startposact2.bin'	; CNZ2
		incbin  'Level/Chemical Plant Zone/startposact1.bin'	; CPZ1
                incbin  'Level/Chemical Plant Zone/startposact2.bin'	; CPZ2
		incbin  'Level/Genocide City Zone/startposact1.bin'	; GCZ1
                incbin  'Level/Genocide City Zone/startposact2.bin'	; GCZ2
		incbin  'Level/Neo Green Hill Zone/startposact1.bin'	; NGHZ1
                incbin  'Level/Neo Green Hill Zone/startposact2.bin'	; NGHZ2
		incbin  'Level/Death Egg Zone/startposact1.bin'		; DEZ1
                incbin  'Level/Death Egg Zone/startposact2.bin'		; DEZ2
                even
;===============================================================================
; Routine to load the player's position on the screen
; [ End ]
;===============================================================================

;===============================================================================
; Routine for screen scroll control
; [ Begin ]
;===============================================================================
Background_Scroll_Speed:                                       ; loc_5C32
		tst.b   (Saved_Level_Flag).w                         ; $FFFFFE30
		bne.s   loc_5C60
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.w  D0, (Camera_Y_x4_Mod_10).w                   ; $FFFFEE14
		move.w  D1, (Camera_X_x2).w                          ; $FFFFEE08
		move.w  D1, (Camera_X_x8).w                          ; $FFFFEE10
		move.w  D1, (Camera_X_x4).w                          ; $FFFFEE18
		move.w  D0, ($FFFFEE2C).w
		move.w  D0, ($FFFFEE34).w
		move.w  D1, ($FFFFEE28).w
		move.w  D1, ($FFFFEE30).w
		move.w  D1, ($FFFFEE38).w
loc_5C60:
		moveq   #$00, D2
		move.b  (Level_Id).w, D2                             ; $FFFFFE10
		add.w   D2, D2
		move.w  Bg_Scroll_Speed_Index(PC, D2), D2      ; loc_5C70
		jmp     Bg_Scroll_Speed_Index(PC, D2)          ; loc_5C70
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_Index:                                         ; loc_5C70
		dc.w    Bg_Scroll_Speed_GHz-Bg_Scroll_Speed_Index  ; loc_5C92
		dc.w    Bg_Scroll_Speed_Lvl1-Bg_Scroll_Speed_Index ; loc_5CBE
		dc.w    Bg_Scroll_Speed_Wz-Bg_Scroll_Speed_Index   ; loc_5CC0
		dc.w    Bg_Scroll_Speed_Lvl3-Bg_Scroll_Speed_Index ; loc_5CBE
		dc.w    Bg_Scroll_Speed_Mz-Bg_Scroll_Speed_Index   ; loc_5CD2
		dc.w    Bg_Scroll_Speed_Mz-Bg_Scroll_Speed_Index   ; loc_5CD2
		dc.w    Bg_Scroll_Speed_Lvl6-Bg_Scroll_Speed_Index ; loc_5CBE
		dc.w    Bg_Scroll_Speed_HTz-Bg_Scroll_Speed_Index  ; loc_5CE0
		dc.w    Bg_Scroll_Speed_HPz-Bg_Scroll_Speed_Index  ; loc_5D0C
		dc.w    Bg_Scroll_Speed_Lvl9-Bg_Scroll_Speed_Index ; loc_5D2E
		dc.w    Bg_Scroll_Speed_OOz-Bg_Scroll_Speed_Index  ; loc_5D30
		dc.w    Bg_Scroll_Speed_DHz-Bg_Scroll_Speed_Index  ; loc_5D5E
		dc.w    Bg_Scroll_Speed_CNz-Bg_Scroll_Speed_Index  ; loc_5D90
		dc.w    Bg_Scroll_Speed_CPz-Bg_Scroll_Speed_Index  ; loc_5DBA
		dc.w    Bg_Scroll_Speed_GCz-Bg_Scroll_Speed_Index  ; loc_5DCE
		dc.w    Bg_Scroll_Speed_NGHz-Bg_Scroll_Speed_Index ; loc_5DD0
		dc.w    Bg_Scroll_Speed_DEz-Bg_Scroll_Speed_Index  ; loc_5E02
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_GHz:                                           ; loc_5C92
		clr.l   (Camera_X_x2).w                              ; $FFFFEE08
		clr.l   (Camera_Y_x4).w                              ; $FFFFEE0C
		clr.l   (Camera_Y_x4_Mod_10).w                       ; $FFFFEE14
		clr.l   (Camera_Y_x4_Mod_10_2).w                     ; $FFFFEE1C
		lea     ($FFFFA800).w, A2
		clr.l   (A2)+
		clr.l   (A2)+
		clr.l   (A2)+
		clr.l   ($FFFFEE28).w
		clr.l   ($FFFFEE2C).w
		clr.l   ($FFFFEE34).w
		clr.l   ($FFFFEE3C).w
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_Lvl1:                                          ; loc_5CBE
Bg_Scroll_Speed_Lvl3:                                          ; loc_5CBE
Bg_Scroll_Speed_Lvl6:                                          ; loc_5CBE
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_Wz:                                            ; loc_5CC0
		asr.w   #$02, D0
		addi.w  #$0400, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		asr.w   #$03, D1
		move.w  D1, (Camera_X_x2).w                          ; $FFFFEE08
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_Mz:                                            ; loc_5CD2
		asr.w   #$02, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		asr.w   #$03, D1
		move.w  D1, (Camera_X_x2).w                          ; $FFFFEE08
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_HTz:                                           ; loc_5CE0
		clr.l   (Camera_X_x2).w                              ; $FFFFEE08
		clr.l   (Camera_Y_x4).w                              ; $FFFFEE0C
		clr.l   (Camera_Y_x4_Mod_10).w                       ; $FFFFEE14
		clr.l   (Camera_Y_x4_Mod_10_2).w                     ; $FFFFEE1C
		lea     ($FFFFA800).w, A2
		clr.l   (A2)+
		clr.l   (A2)+
		clr.l   (A2)+
		clr.l   ($FFFFEE28).w
		clr.l   ($FFFFEE2C).w
		clr.l   ($FFFFEE34).w
		clr.l   ($FFFFEE3C).w
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_HPz:                                           ; loc_5D0C
		asr.w   #$01, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		clr.l   (Camera_X_x2).w                              ; $FFFFEE08
		rts
;-------------------------------------------------------------------------------
; Bg_Scroll_Speed_SYz: ; Leftover from Sonic 1                     ; loc_5D18
		asl.l   #$04, D0
		move.l  D0, D2
		asl.l   #$01, D0
		add.l   D2, D0
		asr.l   #$08, D0
		addq.w  #$01, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		clr.l   (Camera_X_x2).w                              ; $FFFFEE08
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_Lvl9:                                          ; loc_5D2E
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_OOz:                                           ; loc_5D30
		lsr.w   #$03, D0
		addi.w  #$0050, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		clr.l   (Camera_X_x2).w                              ; $FFFFEE08
		rts
;-------------------------------------------------------------------------------
; Bg_Scroll_Speed_SYz: ; Leftover from Sonic 1                     ; loc_5D40
		asl.l   #$04, D0
		move.l  D0, D2
		asl.l   #$01, D0
		add.l   D2, D0
		asr.l   #$08, D0
		addq.w  #$01, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		clr.l   (Camera_X_x2).w                              ; $FFFFEE08
		rts
;-------------------------------------------------------------------------------
; loc_5D56:
		asr.w   #$03, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_DHz:                                           ; loc_5D5E
		clr.l   (Camera_X_x2).w                              ; $FFFFEE08
		clr.l   ($FFFFEE28).w
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne.s   loc_5D7E
		divu.w  #$0003, D0
		subi.w  #$0140, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.w  D0, ($FFFFEE2C).w
		rts
loc_5D7E:
		divu.w  #$0006, D0
		subi.w  #$0010, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.w  D0, ($FFFFEE2C).w
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_CNz:                                           ; loc_5D90
		lsr.w   #$06, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.w  D0, ($FFFFEE2C).w
		clr.l   (Camera_X_x2).w                              ; $FFFFEE08
		lea     ($FFFFA800).w, A2
		clr.l   (A2)+
		clr.l   (A2)+
		clr.l   (A2)+
		clr.l   ($FFFFEE28).w
		clr.l   ($FFFFEE2C).w
		clr.l   ($FFFFEE34).w
		clr.l   ($FFFFEE3C).w
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_CPz:                                           ; loc_5DBA
		lsr.w   #$02, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.w  D0, ($FFFFEE2C).w
		clr.l   (Camera_X_x2).w                              ; $FFFFEE08
		clr.l   (Camera_X_x8).w                              ; $FFFFEE10
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_GCz:                                           ; loc_5DCE
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_NGHz:                                          ; loc_5DD0
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		beq.s   Bg_Scroll_Speed_NGHz_Act_1             ; loc_5DE2
		subi.w  #$00E0, D0
		lsr.w   #$01, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		bra.s   Bg_Scroll_Speed_NGHz_Init              ; loc_5DEA
Bg_Scroll_Speed_NGHz_Act_1:                                    ; loc_5DE2
		subi.w  #$0180, D0
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
Bg_Scroll_Speed_NGHz_Init:                                     ; loc_5DEA
		clr.l   (Camera_X_x2).w                              ; $FFFFEE08
		clr.l   (Camera_Y_x4_Mod_10).w                       ; $FFFFEE14
		clr.l   (Camera_Y_x4_Mod_10_2).w                     ; $FFFFEE1C
		lea     ($FFFFA800).w, A2
		clr.l   (A2)+
		clr.l   (A2)+
		clr.l   (A2)+
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Speed_DEz:                                           ; loc_5E02
		rts
;===============================================================================
; Routine for screen scroll control
; [ End ]
;===============================================================================

;===============================================================================
; Routine to scroll the screen according to the position of the character
; [ Begin ]
;===============================================================================
Background_Scroll_Layer:                                       ; loc_5E04
		tst.b   (Level_Scroll_Flag).w                        ; $FFFFEEDC
		beq.s   loc_5E0C
		rts
loc_5E0C:
		clr.w   (Scroll_Flag_Array).w                        ; $FFFFEE50
		clr.w   (Scroll_Flag_Array+$0002).w                  ; $FFFFEE52
		clr.w   (Scroll_Flag_Array+$0004).w                  ; $FFFFEE54
		clr.w   (Scroll_Flag_Array+$0006).w                  ; $FFFFEE56
		clr.w   (Scroll_Flag_Array+$0008).w                  ; $FFFFEE58
		clr.w   (Scroll_Flag_Array+$000A).w                  ; $FFFFEE5A
		clr.w   (Scroll_Flag_Array+$000C).w                  ; $FFFFEE5C
		clr.w   (Scroll_Flag_Array+$000E).w                  ; $FFFFEE5E
		lea     (Player_One).w, A0                           ; $FFFFB000
		lea     (Camera_X).w, A1                             ; $FFFFEE00
		lea     (Sonic_Level_Limits_Min_X).w, A2             ; $FFFFEEC8
		lea     (Scroll_Flag_Array).w, A3                    ; $FFFFEE50
		lea     (Horizontal_Scrolling).w, A4                 ; $FFFFEEB0
		lea     ($FFFFEED0).w, A5
		lea     ($FFFFE500).w, A6
		bsr     Scroll_Horizontal                      ; loc_6C32
		lea     ($FFFFEE40).w, A2
		bsr     Scroll_Horizontal_2                    ; loc_6C10
		lea     (Camera_Y).w, A1                             ; $FFFFEE04
		lea     (Sonic_Level_Limits_Min_X).w, A2             ; $FFFFEEC8
		lea     (Vertical_Scrolling).w, A4                   ; $FFFFEEB2
		bsr     Scroll_Vertical                        ; loc_6CA2
		lea     ($FFFFEE41).w, A2
		bsr     Scroll_Vertical_2                      ; loc_6DA6
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   loc_5EB2
		lea     (Player_Two).w, A0                           ; $FFFFB040
		lea     (Camera_X_2).w, A1                           ; $FFFFEE20
		lea     (Tails_Level_Limits_Min_X).w, A2             ; $FFFFEEF8
		lea     (Scroll_Flag_Array+$0008).w, A3              ; $FFFFEE58
		lea     ($FFFFEEB8).w, A4
		lea     ($FFFFEED4).w, A5
		lea     ($FFFFE700).w, A6
		bsr     Scroll_Horizontal                      ; loc_6C32
		lea     ($FFFFEE48).w, A2
		bsr     Scroll_Horizontal_2                    ; loc_6C10
		lea     (Camera_Y_2).w, A1                           ; $FFFFEE24
		lea     (Tails_Level_Limits_Min_X).w, A2             ; $FFFFEEF8
		lea     ($FFFFEEBA).w, A4
		bsr     Scroll_Vertical                        ; loc_6CA2
		lea     ($FFFFEE49).w, A2
		bsr     Scroll_Vertical_2                      ; loc_6DA6
loc_5EB2:
		bsr     Dyn_Screen_Boss_Loader                 ; loc_7AD4
		move.w  (Camera_Y).w, ($FFFFF616).w                  ; $FFFFEE04
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		move.l  (Camera_X).w, ($FFFFEEF0).w                  ; $FFFFEE00
		move.l  (Camera_Y).w, ($FFFFEEF4).w                  ; $FFFFEE04
		moveq   #$00, D0
		move.b  (Level_Id).w, D0                             ; $FFFFFE10
		add.w   D0, D0
		move.w  Bg_Scroll_Index(PC, D0), D0            ; loc_5EDE
		jmp     Bg_Scroll_Index(PC, D0)                ; loc_5EDE
;-------------------------------------------------------------------------------
Bg_Scroll_Index:                                               ; loc_5EDE
		dc.w    Bg_Scroll_GHz-Bg_Scroll_Index          ; loc_5F24
		dc.w    Bg_Scroll_Lvl1-Bg_Scroll_Index         ; loc_6B94
		dc.w    Bg_Scroll_Wz-Bg_Scroll_Index           ; loc_6160
		dc.w    Bg_Scroll_Lvl3-Bg_Scroll_Index         ; loc_6B94
		dc.w    Bg_Scroll_Mz-Bg_Scroll_Index           ; loc_6198
		dc.w    Bg_Scroll_Mz-Bg_Scroll_Index           ; loc_6198
		dc.w    Bg_Scroll_Lvl6-Bg_Scroll_Index         ; loc_6B94
		dc.w    Bg_Scroll_HTz-Bg_Scroll_Index          ; loc_61D0
		dc.w    Bg_Scroll_HPz-Bg_Scroll_Index          ; loc_640C
		dc.w    Bg_Scroll_Lvl9-Bg_Scroll_Index         ; loc_6B94
		dc.w    Bg_Scroll_OOz-Bg_Scroll_Index          ; loc_64D2
		dc.w    Bg_Scroll_DHz-Bg_Scroll_Index          ; loc_650A
		dc.w    Bg_Scroll_CNz-Bg_Scroll_Index          ; loc_68A4
		dc.w    Bg_Scroll_CPz-Bg_Scroll_Index          ; loc_6972
		dc.w    Bg_Scroll_GCz-Bg_Scroll_Index          ; loc_6B94
		dc.w    Bg_Scroll_NGHz-Bg_Scroll_Index         ; loc_6A78
		dc.w    Bg_Scroll_DEz-Bg_Scroll_Index          ; loc_6B94
;-------------------------------------------------------------------------------
Bg_Scroll_Title_Screen:                                        ; loc_5F00
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		cmpi.w  #$1C00, D0
		bcc.s   loc_5F12
		addq.w  #$08, D0
loc_5F12:
		move.w  D0, (Camera_X).w                             ; $FFFFEE00
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  (Camera_X).w, D2                             ; $FFFFEE00
		neg.w   D2
		moveq   #$00, D0
		bra.s   loc_5F40
;-------------------------------------------------------------------------------
Bg_Scroll_GHz:                                                 ; loc_5F24
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne     Bg_Scroll_GHz_Act_2                    ; loc_606A
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		move.w  D0, D2
		swap.w  D0
loc_5F40:
		move.w  #$0000, D0
		move.w  #$0015, D1
loc_5F48:
		move.l  D0, (A1)+
		dbra    D1, loc_5F48
		move.w  D2, D0
		asr.w   #$06, D0
		move.w  #$0039, D1
loc_5F56:
		move.l  D0, (A1)+
		dbra    D1, loc_5F56
		move.w  D0, D3
		move.b  ($FFFFFE0F).w, D1
		andi.w  #$0007, D1
		bne.s   loc_5F6C
		subq.w  #$01, ($FFFFA800).w
loc_5F6C:
		move.w  ($FFFFA800).w, D1
		andi.w  #$001F, D1
		lea     (Bg_Scroll_Data), A2                   ; loc_6028
		lea     $00(A2, D1), A2
		move.w  #$0014, D1
loc_5F82:
		move.b  (A2)+, D0
		ext.w   D0
		add.w   D3, D0
		move.l  D0, (A1)+
		dbra    D1, loc_5F82
		move.w  #$0000, D0
		move.w  #$000A, D1
loc_5F96:
		move.l  D0, (A1)+
		dbra    D1, loc_5F96
		move.w  D2, D0
		asr.w   #$04, D0
		move.w  #$000F, D1
loc_5FA4:
		move.l  D0, (A1)+
		dbra    D1, loc_5FA4
		move.w  D2, D0
		asr.w   #$04, D0
		move.w  D0, D1
		asr.w   #$01, D1
		add.w   D1, D0
		move.w  #$000F, D1
loc_5FB8:
		move.l  D0, (A1)+
		dbra    D1, loc_5FB8
		move.l  D0, D4
		swap.w  D4
		move.w  D2, D0
		asr.w   #$01, D0
		move.w  D2, D1
		asr.w   #$03, D1
		sub.w   D1, D0
		ext.l   D0
		asl.l   #$08, D0
		divs.w  #$0030, D0
		ext.l   D0
		asl.l   #$08, D0
		moveq   #$00, D3
		move.w  D2, D3
		asr.w   #$03, D3
		move.w  #$000E, D1
loc_5FE2:
		move.w  D4, (A1)+
		move.w  D3, (A1)+
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		dbra    D1, loc_5FE2
		move.w  #$0008, D1
loc_5FF4:
		move.w  D4, (A1)+
		move.w  D3, (A1)+
		move.w  D4, (A1)+
		move.w  D3, (A1)+
		swap.w  D3
		add.l   D0, D3
		add.l   D0, D3
		swap.w  D3
		dbra    D1, loc_5FF4
		move.w  #$000E, D1
loc_600C:
		move.w  D4, (A1)+
		move.w  D3, (A1)+
		move.w  D4, (A1)+
		move.w  D3, (A1)+
		move.w  D4, (A1)+
		move.w  D3, (A1)+
		swap.w  D3
		add.l   D0, D3
		add.l   D0, D3
		add.l   D0, D3
		swap.w  D3
		dbra    D1, loc_600C
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Data:                                                ; loc_6028
		dc.b    $01, $02, $01, $03, $01, $02, $02, $01
		dc.b    $02, $03, $01, $02, $01, $02, $00, $00
		dc.b    $02, $00, $03, $02, $02, $03, $02, $02
		dc.b    $01, $03, $00, $00, $01, $00, $01, $03
		dc.b    $01, $02, $01, $03, $01, $02, $02, $01
		dc.b    $02, $03, $01, $02, $01, $02, $00, $00
		dc.b    $02, $00, $03, $02, $02, $03, $02, $02
		dc.b    $01, $03, $00, $00, $01, $00, $01, $03
		dc.b    $01, $02
;-------------------------------------------------------------------------------
Bg_Scroll_GHz_Act_2:                                           ; loc_606A
		move.b  ($FFFFFE0F).w, D1
		andi.w  #$0007, D1
		bne.s   loc_6078
		subq.w  #$01, ($FFFFA800).w
loc_6078:
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		andi.l  #$FFFEFFFE, ($FFFFF616).w
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		move.w  #$000A, D1
		bsr.s   loc_60C0
		moveq   #$00, D0
		move.w  D0, ($FFFFF620).w
		subi.w  #$00E0, ($FFFFF620).w
		move.w  (Camera_Y_2).w, ($FFFFF61E).w                ; $FFFFEE24
		subi.w  #$00E0, ($FFFFF61E).w
		andi.l  #$FFFEFFFE, ($FFFFF61E).w
		lea     ($FFFFE1B0).w, A1
		move.w  (Camera_X_2).w, D0                           ; $FFFFEE20
		move.w  #$000E, D1
loc_60C0:
		neg.w   D0
		move.w  D0, D2
		swap.w  D0
		move.w  #$0000, D0
loc_60CA:
		move.l  D0, (A1)+
		dbra    D1, loc_60CA
		move.w  D2, D0
		asr.w   #$06, D0
		move.w  #$001C, D1
loc_60D8:
		move.l  D0, (A1)+
		dbra    D1, loc_60D8
		move.w  D0, D3
		move.w  ($FFFFA800).w, D1
		andi.w  #$001F, D1
		lea     Bg_Scroll_Data(PC), A2                 ; loc_6028
		lea     $00(A2, D1), A2
		move.w  #$000A, D1
loc_60F4:
		move.b  (A2)+, D0
		ext.w   D0
		add.w   D3, D0
		move.l  D0, (A1)+
		dbra    D1, loc_60F4
		move.w  #$0000, D0
		move.w  #$0004, D1
loc_6108:
		move.l  D0, (A1)+
		dbra    D1, loc_6108
		move.w  D2, D0
		asr.w   #$04, D0
		move.w  #$0007, D1
loc_6116:
		move.l  D0, (A1)+
		dbra    D1, loc_6116
		move.w  D2, D0
		asr.w   #$04, D0
		move.w  D0, D1
		asr.w   #$01, D1
		add.w   D1, D0
		move.w  #$0007, D1
loc_612A:
		move.l  D0, (A1)+
		dbra    D1, loc_612A
		move.w  D2, D0
		asr.w   #$01, D0
		move.w  D2, D1
		asr.w   #$03, D1
		sub.w   D1, D0
		ext.l   D0
		asl.l   #$08, D0
		divs.w  #$0030, D0
		ext.l   D0
		asl.l   #$08, D0
		moveq   #$00, D3
		move.w  D2, D3
		asr.w   #$03, D3
		move.w  #$0027, D1
loc_6150:
		move.w  D2, (A1)+
		move.w  D3, (A1)+
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		dbra    D1, loc_6150
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Wz:                                                  ; loc_6160
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		asl.l   #$05, D4
		move.w  (Vertical_Scrolling).w, D5                   ; $FFFFEEB2
		ext.l   D5
		asl.l   #$06, D5
		bsr     Scroll_Block_1                         ; loc_6DC8
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  #$00DF, D1
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		neg.w   D0
loc_6190:
		move.l  D0, (A1)+
		dbra    D1, loc_6190
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_Mz:                                                  ; loc_6198
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		asl.l   #$05, D4
		move.w  (Vertical_Scrolling).w, D5                   ; $FFFFEEB2
		ext.l   D5
		asl.l   #$06, D5
		bsr     Scroll_Block_1                         ; loc_6DC8
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  #$00DF, D1
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		neg.w   D0
loc_61C8:
		move.l  D0, (A1)+
		dbra    D1, loc_61C8
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_HTz:                                                 ; loc_61D0
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne     Bg_Scroll_HTz_Act_2                    ; loc_637C
		tst.b   ($FFFFEEBC).w
		bne     loc_62FE
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		move.w  D0, D2
		swap.w  D0
		move.w  D2, D0
		asr.w   #$03, D0
		move.w  #$007F, D1
loc_61FC:
		move.l  D0, (A1)+
		dbra    D1, loc_61FC
		move.l  D0, D4
		move.w  ($FFFFA822).w, D0
		addq.w  #$04, ($FFFFA822).w
		sub.w   D0, D2
		move.w  D2, D0
		move.w  D0, D1
		asr.w   #$01, D0
		asr.w   #$04, D1
		sub.w   D1, D0
		ext.l   D0
		asl.l   #$08, D0
		divs.w  #$0070, D0
		ext.l   D0
		asl.l   #$08, D0
		lea     ($FFFFA800).w, A2
		moveq   #$00, D3
		move.w  D1, D3
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, (A2)+
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, (A2)+
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, (A2)+
		move.w  D3, (A2)+
		swap.w  D3
		add.l   D0, D3
		add.l   D0, D3
		swap.w  D3
		moveq   #$03, D1
loc_6250:
		move.w  D3, (A2)+
		move.w  D3, (A2)+
		move.w  D3, (A2)+
		swap.w  D3
		add.l   D0, D3
		add.l   D0, D3
		add.l   D0, D3
		swap.w  D3
		dbra    D1, loc_6250
		add.l   D0, D0
		add.l   D0, D0
		move.w  D3, D4
		move.l  D4, (A1)+
		move.l  D4, (A1)+
		move.l  D4, (A1)+
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, D4
		move.l  D4, (A1)+
		move.l  D4, (A1)+
		move.l  D4, (A1)+
		move.l  D4, (A1)+
		move.l  D4, (A1)+
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, D4
		move.w  #$0006, D1
loc_628E:
		move.l  D4, (A1)+
		dbra    D1, loc_628E
		swap.w  D3
		add.l   D0, D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, D4
		move.w  #$0007, D1
loc_62A2:
		move.l  D4, (A1)+
		dbra    D1, loc_62A2
		swap.w  D3
		add.l   D0, D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, D4
		move.w  #$0009, D1
loc_62B6:
		move.l  D4, (A1)+
		dbra    D1, loc_62B6
		swap.w  D3
		add.l   D0, D3
		add.l   D0, D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, D4
		move.w  #$000E, D1
loc_62CC:
		move.l  D4, (A1)+
		dbra    D1, loc_62CC
		swap.w  D3
		add.l   D0, D3
		add.l   D0, D3
		add.l   D0, D3
		swap.w  D3
		move.w  #$0002, D2
loc_62E0:
		move.w  D3, D4
		move.w  #$000F, D1
loc_62E6:
		move.l  D4, (A1)+
		dbra    D1, loc_62E6
		swap.w  D3
		add.l   D0, D3
		add.l   D0, D3
		add.l   D0, D3
		add.l   D0, D3
		swap.w  D3
		dbra    D2, loc_62E0
		rts
loc_62FE:
		move.w  (Horizontal_Scrolling_Sub).w, D4             ; $FFFFEEB4
		ext.l   D4
		lsl.l   #$08, D4
		moveq   #$02, D6
		bsr     Scroll_Block_2                         ; loc_6E32
		move.w  (Vertical_Scrolling_Sub).w, D5               ; $FFFFEEB6
		ext.l   D5
		lsl.l   #$08, D5
		moveq   #$00, D6
		bsr     Scroll_Block_3                         ; loc_6E66
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		move.w  (Camera_Y).w, ($FFFFF616).w                  ; $FFFFEE04
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		moveq   #$00, D2
		tst.b   ($FFFFEEBD).w
		beq.s   loc_635A
		move.w  ($FFFFFE04).w, D0
		andi.w  #$003F, D0
		lea     Bg_Scroll_Data(PC), A1                 ; loc_6028
		lea     $00(A1, D0), A1
		moveq   #$00, D0
		move.b  (A1)+, D0
		add.w   D0, ($FFFFF616).w
		add.w   D0, ($FFFFF618).w
		add.w   D0, ($FFFFEEF4).w
		move.b  (A1)+, D2
		add.w   D2, ($FFFFEEF0).w
loc_635A:
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  #$00DF, D1
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		add.w   D2, D0
		neg.w   D0
		swap.w  D0
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		add.w   D2, D0
		neg.w   D0
loc_6374:
		move.l  D0, (A1)+
		dbra    D1, loc_6374
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_HTz_Act_2                                            ; loc_637C
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		asl.l   #$06, D4
		move.w  (Vertical_Scrolling).w, D5                   ; $FFFFEEB2
		ext.l   D5
		asl.l   #$02, D5
		moveq   #$00, D5
		bsr     Scroll_Block_1                         ; loc_6DC8
		move.b  #$00, (Scroll_Flag_Array+$0002).w            ; $FFFFEE52
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		andi.l  #$FFFEFFFE, ($FFFFF616).w
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  #$006F, D1
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		neg.w   D0
loc_63BC:
		move.l  D0, (A1)+
		dbra    D1, loc_63BC
		move.w  ($FFFFEEB8).w, D4
		ext.l   D4
		asl.l   #$06, D4
		add.l   D4, ($FFFFEE28).w
		moveq   #$00, D0
		move.w  D0, ($FFFFF620).w
		subi.w  #$00E0, ($FFFFF620).w
		move.w  (Camera_Y_2).w, ($FFFFF61E).w                ; $FFFFEE24
		subi.w  #$00E0, ($FFFFF61E).w
		andi.l  #$FFFEFFFE, ($FFFFF61E).w
		lea     ($FFFFE1B0).w, A1
		move.w  #$0073, D1
		move.w  (Camera_X_2).w, D0                           ; $FFFFEE20
		neg.w   D0
		swap.w  D0
		move.w  ($FFFFEE28).w, D0
		neg.w   D0
loc_6404:
		move.l  D0, (A1)+
		dbra    D1, loc_6404
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_HPz:                                                 ; loc_640C
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		asl.l   #$06, D4
		moveq   #$02, D6
		bsr     Scroll_Block_2                         ; loc_6E32
		move.w  (Vertical_Scrolling).w, D5                   ; $FFFFEEB2
		ext.l   D5
		asl.l   #$07, D5
		moveq   #$06, D6
		bsr     Scroll_Block_3                         ; loc_6E66
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		lea     ($FFFFA800).w, A1
		move.w  (Camera_X).w, D2                             ; $FFFFEE00
		neg.w   D2
		move.w  D2, D0
		asr.w   #$01, D0
		move.w  #$0007, D1
loc_6440:
		move.w  D0, (A1)+
		dbra    D1, loc_6440
		move.w  D2, D0
		asr.w   #$03, D0
		sub.w   D2, D0
		ext.l   D0
		asl.l   #$03, D0
		divs.w  #$0008, D0
		ext.l   D0
		asl.l   #$04, D0
		asl.l   #$08, D0
		moveq   #$00, D3
		move.w  D2, D3
		asr.w   #$01, D3
		lea     ($FFFFA860).w, A2
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, (A1)+
		move.w  D3, (A1)+
		move.w  D3, (A1)+
		move.w  D3, -(A2)
		move.w  D3, -(A2)
		move.w  D3, -(A2)
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, (A1)+
		move.w  D3, (A1)+
		move.w  D3, -(A2)
		move.w  D3, -(A2)
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, (A1)+
		move.w  D3, -(A2)
		swap.w  D3
		add.l   D0, D3
		swap.w  D3
		move.w  D3, (A1)+
		move.w  D3, -(A2)
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		neg.w   D0
		move.w  #$0019, D1
loc_64A2:
		move.w  D0, (A1)+
		dbra    D1, loc_64A2
		adda.w  #$000E, A1
		move.w  D2, D0
		asr.w   #$01, D0
		move.w  #$0017, D1
loc_64B4:
		move.w  D0, (A1)+
		dbra    D1, loc_64B4
		lea     ($FFFFA800).w, A2
		move.w  (Camera_Y_x4).w, D0                          ; $FFFFEE0C
		move.w  D0, D2
		andi.w  #$03F0, D0
		lsr.w   #$03, D0
		lea     $00(A2, D0), A2
		bra     Bg_Scroll_X                            ; loc_6BCC
;-------------------------------------------------------------------------------
Bg_Scroll_OOz:                                                 ; loc_64D2
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		asl.l   #$05, D4
		move.w  (Vertical_Scrolling).w, D5                   ; $FFFFEEB2
		ext.l   D5
		asl.l   #$05, D5
		bsr     Scroll_Block_1                         ; loc_6DC8
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  #$00DF, D1
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		neg.w   D0
loc_6502:
		move.l  D0, (A1)+
		dbra    D1, loc_6502
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_DHz:                                                 ; loc_650A
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne     Bg_Scroll_DHz_2P                       ; loc_6662
		move.w  (Camera_Y).w, D0                             ; $FFFFEE04
		move.l  (Camera_Y_x4).w, D3                          ; $FFFFEE0C
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne.s   Bg_Scroll_DHz_Act_2                    ; loc_652A
		divu.w  #$0003, D0
		subi.w  #$0140, D0
		bra.s   Bg_Scroll_DHz_1                        ; loc_6532
;-------------------------------------------------------------------------------
Bg_Scroll_DHz_Act_2:                                           ; loc_652A
		divu.w  #$0006, D0
		subi.w  #$0010, D0
Bg_Scroll_DHz_1:                                               ; loc_6532
		swap.w  D0
		moveq   #$06, D6
		bsr     Scroll_Block_3_D0                      ; loc_6E6E
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		moveq   #$00, D2
		tst.b   ($FFFFEEBD).w
		beq.s   loc_656E
		move.w  ($FFFFFE04).w, D0
		andi.w  #$003F, D0
		lea     Bg_Scroll_Data(PC), A1                 ; loc_6028
		lea     $00(A1, D0), A1
		moveq   #$00, D0
		move.b  (A1)+, D0
		add.w   D0, ($FFFFF616).w
		add.w   D0, ($FFFFF618).w
		add.w   D0, ($FFFFEEF4).w
		move.b  (A1)+, D2
		add.w   D2, ($FFFFEEF0).w
loc_656E:
		lea     ($FFFFA800).w, A2
		lea     $001E(A2), A3
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		ext.l   D0
		asl.l   #$04, D0
		divs.w  #$000A, D0
		ext.l   D0
		asl.l   #$04, D0
		asl.l   #$08, D0
		move.l  D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $000E(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $000C(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $000A(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0008(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0006(A2)
		move.w  D1, $0010(A2)
		move.w  D1, $001C(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0004(A2)
		move.w  D1, $0012(A2)
		move.w  D1, $001A(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0002(A2)
		move.w  D1, $0014(A2)
		move.w  D1, $0018(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, (A2)
		move.w  D1, $0016(A2)
		lea     (DHz_Bg_Scroll_Data), A3               ; loc_664A
		lea     ($FFFFA800).w, A2
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  (Camera_Y_x4).w, D1                          ; $FFFFEE0C
		moveq   #$00, D0
loc_661C:
		move.b  (A3)+, D0
		addq.w  #$02, A2
		sub.w   D0, D1
		bcc.s   loc_661C
		neg.w   D1
		subq.w  #$02, A2
		move.w  #$00DF, D2
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		move.w  (A2)+, D0
		neg.w   D0
loc_6638:
		move.l  D0, (A1)+
		subq.w  #$01, D1
		bne.s   loc_6644
		move.b  (A3)+, D1
		move.w  (A2)+, D0
		neg.w   D0
loc_6644:
		dbra    D2, loc_6638
		rts
;-------------------------------------------------------------------------------
DHz_Bg_Scroll_Data:                                            ; loc_664A
		dc.b    $25, $17
		dc.b    $12, $07
		dc.b    $07, $02
		dc.b    $02, $30
		dc.b    $0D, $13
		dc.b    $20, $40
		dc.b    $20, $13
		dc.b    $0D, $30
		dc.b    $02, $02
		dc.b    $07, $07
		dc.b    $20, $12
		dc.b    $17, $25
;-------------------------------------------------------------------------------
Bg_Scroll_DHz_2P:                                              ; loc_6662
		moveq   #$00, D0
		move.w  (Camera_Y).w, D0                             ; $FFFFEE04
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne.s   Bg_Scroll_DHz_2P_Act_2                 ; loc_6678
		divu.w  #$0003, D0
		subi.w  #$0140, D0
		bra.s   Bg_Scroll_DHz_2P_1                     ; loc_6680
;-------------------------------------------------------------------------------
Bg_Scroll_DHz_2P_Act_2:                                        ; loc_6678
		divu.w  #$0006, D0
		subi.w  #$0010, D0
Bg_Scroll_DHz_2P_1:                                            ; loc_6680
		move.w  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.w  D0, ($FFFFF618).w
		andi.l  #$FFFEFFFE, ($FFFFF616).w
		lea     ($FFFFA800).w, A2
		lea     $001E(A2), A3
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		ext.l   D0
		asl.l   #$04, D0
		divs.w  #$000A, D0
		ext.l   D0
		asl.l   #$04, D0
		asl.l   #$08, D0
		move.l  D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $000E(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $000C(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $000A(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0008(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0006(A2)
		move.w  D1, $0010(A2)
		move.w  D1, $001C(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0004(A2)
		move.w  D1, $0012(A2)
		move.w  D1, $001A(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0002(A2)
		move.w  D1, $0014(A2)
		move.w  D1, $0018(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, (A2)
		move.w  D1, $0016(A2)
		lea     (DHz_Bg_Scroll_Data_2P), A3            ; loc_676E
		lea     ($FFFFA800).w, A2
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  (Camera_Y_x4).w, D1                          ; $FFFFEE0C
		lsr.w   #$01, D1
		moveq   #$00, D0
loc_6740:
		move.b  (A3)+, D0
		addq.w  #$02, A2
		sub.w   D0, D1
		bcc.s   loc_6740
		neg.w   D1
		subq.w  #$02, A2
		move.w  #$006F, D2
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		move.w  (A2)+, D0
		neg.w   D0
loc_675C:
		move.l  D0, (A1)+
		subq.w  #$01, D1
		bne.s   loc_6768
		move.b  (A3)+, D1
		move.w  (A2)+, D0
		neg.w   D0
loc_6768:
		dbra    D2, loc_675C
		bra.s   loc_6786
;-------------------------------------------------------------------------------
DHz_Bg_Scroll_Data_2P:                                         ; loc_676E
		dc.b    $13, $0B, $09, $04, $03, $01, $01, $18
		dc.b    $06, $0A, $10, $20, $10, $0A, $06, $18
		dc.b    $01, $01, $03, $04, $10, $09, $0B, $13
;-------------------------------------------------------------------------------
loc_6786:
		moveq   #$00, D0
		move.w  (Camera_Y_2).w, D0                           ; $FFFFEE24
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne.s   loc_679C
		divu.w  #$0003, D0
		subi.w  #$0140, D0
		bra.s   loc_67A4
loc_679C:
		divu.w  #$0006, D0
		subi.w  #$0010, D0
loc_67A4:
		move.w  D0, ($FFFFEE2C).w
		move.w  D0, ($FFFFF620).w
		subi.w  #$00E0, ($FFFFF620).w
		move.w  (Camera_Y_2).w, ($FFFFF61E).w                ; $FFFFEE24
		subi.w  #$00E0, ($FFFFF61E).w
		andi.l  #$FFFEFFFE, ($FFFFF61E).w
		lea     ($FFFFA800).w, A2
		lea     $001E(A2), A3
		move.w  (Camera_X_2).w, D0                           ; $FFFFEE20
		ext.l   D0
		asl.l   #$04, D0
		divs.w  #$000A, D0
		ext.l   D0
		asl.l   #$04, D0
		asl.l   #$08, D0
		move.l  D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $000E(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $000C(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $000A(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0008(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0006(A2)
		move.w  D1, $0010(A2)
		move.w  D1, $001C(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0004(A2)
		move.w  D1, $0012(A2)
		move.w  D1, $001A(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, $0002(A2)
		move.w  D1, $0014(A2)
		move.w  D1, $0018(A2)
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, (A2)
		move.w  D1, $0016(A2)
		lea     DHz_Bg_Scroll_Data_2P+$0001(PC), A3    ; loc_676F
		lea     ($FFFFA800).w, A2
		lea     ($FFFFE1B0).w, A1
		move.w  ($FFFFEE2C).w, D1
		lsr.w   #$01, D1
		moveq   #$17, D0
		bra.s   loc_6878
loc_6876:
		move.b  (A3)+, D0
loc_6878:
		addq.w  #$02, A2
		sub.w   D0, D1
		bcc.s   loc_6876
		neg.w   D1
		subq.w  #$02, A2
		move.w  #$0073, D2
		move.w  (Camera_X_2).w, D0                           ; $FFFFEE20
		neg.w   D0
		swap.w  D0
		move.w  (A2)+, D0
		neg.w   D0
loc_6892:
		move.l  D0, (A1)+
		subq.w  #$01, D1
		bne.s   loc_689E
		move.b  (A3)+, D1
		move.w  (A2)+, D0
		neg.w   D0
loc_689E:
		dbra    D2, loc_6892
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_CNz:                                                 ; loc_68A4
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne     Bg_Scroll_CNz_2P                       ; loc_68E8
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		asl.l   #$06, D4
		move.w  (Vertical_Scrolling).w, D5                   ; $FFFFEEB2
		ext.l   D5
		asl.l   #$02, D5
		bsr     Scroll_Block_1                         ; loc_6DC8
		clr.b   (Scroll_Flag_Array+$0002).w                  ; $FFFFEE52
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  #$00DF, D1
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		neg.w   D0
loc_68E0:
		move.l  D0, (A1)+
		dbra    D1, loc_68E0
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_CNz_2P:                                              ; loc_68E8
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		asl.l   #$06, D4
		move.w  (Vertical_Scrolling).w, D5                   ; $FFFFEEB2
		ext.l   D5
		asl.l   #$02, D5
		moveq   #$00, D5
		bsr     Scroll_Block_1                         ; loc_6DC8
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		andi.l  #$FFFEFFFE, ($FFFFF616).w
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  #$006F, D1
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		neg.w   D0
loc_6922:
		move.l  D0, (A1)+
		dbra    D1, loc_6922
		move.w  ($FFFFEEB8).w, D4
		ext.l   D4
		asl.l   #$06, D4
		add.l   D4, ($FFFFEE28).w
		moveq   #$00, D0
		move.w  D0, ($FFFFF620).w
		subi.w  #$00E0, ($FFFFF620).w
		move.w  (Camera_Y_2).w, ($FFFFF61E).w                ; $FFFFEE24
		subi.w  #$00E0, ($FFFFF61E).w
		andi.l  #$FFFEFFFE, ($FFFFF61E).w
		lea     ($FFFFE1B0).w, A1
		move.w  #$0073, D1
		move.w  (Camera_X_2).w, D0                           ; $FFFFEE20
		neg.w   D0
		swap.w  D0
		move.w  ($FFFFEE28).w, D0
		neg.w   D0
loc_696A:
		move.l  D0, (A1)+
		dbra    D1, loc_696A
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_CPz:                                                 ; loc_6972
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		asl.l   #$05, D4
		move.w  (Vertical_Scrolling).w, D5                   ; $FFFFEEB2
		ext.l   D5
		asl.l   #$06, D5
		bsr     Scroll_Block_1                         ; loc_6DC8
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		asl.l   #$07, D4
		moveq   #$04, D6
		bsr     Scroll_Block_4                         ; loc_6E9A
		move.w  (Camera_Y_x4).w, D0                          ; $FFFFEE0C
		move.w  D0, (Camera_Y_x4_Mod_10).w                   ; $FFFFEE14
		move.w  D0, ($FFFFF618).w
		move.b  (Scroll_Flag_Array+$0002).w, D0              ; $FFFFEE52
		or.b    ($FFFFEE54).w, D0
		move.b  D0, (Scroll_Flag_Array+$0006).w              ; $FFFFEE56
		clr.b   (Scroll_Flag_Array+$0002).w                  ; $FFFFEE52
		clr.b   (Scroll_Flag_Array+$0004).w                  ; $FFFFEE54
		move.b  ($FFFFFE0F).w, D1
		andi.w  #$0007, D1
		bne.s   loc_69C2
		subq.w  #$01, ($FFFFA800).w
loc_69C2:
		lea     (Draw_CPz_Bg_Data+$0001), A0           ; loc_72A3
		move.w  (Camera_Y_x4).w, D0                          ; $FFFFEE0C
		move.w  D0, D2
		andi.w  #$03F0, D0
		lsr.w   #$04, D0
		lea     $00(A0, D0), A0
		move.w  D0, D4
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  #$000E, D1
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		andi.w  #$000F, D2
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		cmpi.b  #$12, D4
		beq.s   loc_6A40
		bcs.s   loc_69FE
		move.w  (Camera_X_x8).w, D0                          ; $FFFFEE10
loc_69FE:
		neg.w   D0
		add.w   D2, D2
		jmp     CPz_Bg_Scroll_X_Start_Index(PC, D2)    ; loc_6A18
;-------------------------------------------------------------------------------
CPz_Bg_Scroll_X_Loop:                                          ; loc_6A06
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		cmpi.b  #$12, D4
		beq.s   loc_6A4A
		bcs.s   CPz_Process_Scroll_X                   ; loc_6A16
		move.w  (Camera_X_x8).w, D0                          ; $FFFFEE10
CPz_Process_Scroll_X:                                          ; loc_6A16
		neg.w   D0
CPz_Bg_Scroll_X_Start_Index:                                   ; loc_6A18
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		addq.b  #$01, D4
		dbra    D1, CPz_Bg_Scroll_X_Loop               ; loc_6A06
		rts
loc_6A40:
		move.w  #$000F, D0
		sub.w   D2, D0
		move.w  D0, D2
		bra.s   loc_6A4E
loc_6A4A:
		move.w  #$000F, D2
loc_6A4E:
		move.w  (Camera_X_x2).w, D3                          ; $FFFFEE08
		neg.w   D3
		move.w  ($FFFFA800).w, D0
		andi.w  #$001F, D0
		lea     Bg_Scroll_Data(PC), A2                 ; loc_6028
		lea     $00(A2, D0), A2
loc_6A64:
		move.b  (A2)+, D0
		ext.w   D0
		add.w   D3, D0
		move.l  D0, (A1)+
		dbra    D2, loc_6A64
		addq.b  #$01, D4
		dbra    D1, CPz_Bg_Scroll_X_Loop               ; loc_6A06
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_NGHz:                                                ; loc_6A78
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		muls.w  #$0119, D4
		moveq   #$02, D6
		bsr     Scroll_Block_2                         ; loc_6E32
		move.w  (Vertical_Scrolling).w, D5                   ; $FFFFEEB2
		ext.l   D5
		asl.l   #$07, D5
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne.s   Bg_Scroll_NGHz_Act_2                   ; loc_6A98
		asl.l   #$01, D5
;-------------------------------------------------------------------------------
Bg_Scroll_NGHz_Act_2:                                          ; loc_6A98
		moveq   #$06, D6
		bsr     Scroll_Block_3                         ; loc_6E66
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		moveq   #$00, D2
		tst.b   ($FFFFEEBD).w
		beq.s   loc_6AD2
		move.w  ($FFFFFE04).w, D0
		andi.w  #$003F, D0
		lea     Bg_Scroll_Data(PC), A1                 ; loc_6028
		lea     $00(A1, D0), A1
		moveq   #$00, D0
		move.b  (A1)+, D0
		add.w   D0, ($FFFFF616).w
		add.w   D0, ($FFFFF618).w
		add.w   D0, ($FFFFEEF4).w
		move.b  (A1)+, D2
		add.w   D2, ($FFFFEEF0).w
loc_6AD2:
		lea     ($FFFFA800).w, A2
		lea     $0006(A2), A3
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		ext.l   D0
		asl.l   #$04, D0
		divs.w  #$000A, D0
		ext.l   D0
		asl.l   #$04, D0
		asl.l   #$08, D0
		move.l  D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		swap.w  D1
		add.l   D1, D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		swap.w  D1
		add.l   D0, D1
		swap.w  D1
		move.w  D1, (A3)+
		move.w  D1, (A2)
		move.w  D1, $0004(A2)
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		move.w  D0, $0002(A2)
		move.w  D0, $0016(A2)
		move.w  D0, $0000(A2)
		move.w  D0, $0004(A2)
		lea     (NGHz_Bg_Scroll_Data), A3              ; loc_6B88
		lea     ($FFFFA800).w, A2
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  (Camera_Y_x4).w, D1                          ; $FFFFEE0C
		moveq   #$00, D0
loc_6B5A:
		move.b  (A3)+, D0
		addq.w  #$02, A2
		sub.w   D0, D1
		bcc.s   loc_6B5A
		neg.w   D1
		subq.w  #$02, A2
		move.w  #$00DF, D2
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		move.w  (A2)+, D0
		neg.w   D0
loc_6B76:
		move.l  D0, (A1)+
		subq.w  #$01, D1
		bne.s   loc_6B82
		move.b  (A3)+, D1
		move.w  (A2)+, D0
		neg.w   D0
loc_6B82:
		dbra    D2, loc_6B76
		rts
;-------------------------------------------------------------------------------
NGHz_Bg_Scroll_Data:                                           ; loc_6B88
		dc.b    $B0, $70, $30, $60, $15, $0C, $0E, $06
		dc.b    $0C, $1F, $30, $C0
;-------------------------------------------------------------------------------
Bg_Scroll_Lvl1:                                                ; loc_6B94
Bg_Scroll_Lvl3:                                                ; loc_6B94
Bg_Scroll_Lvl6:                                                ; loc_6B94
Bg_Scroll_Lvl9:                                                ; loc_6B94
Bg_Scroll_GCz:                                                 ; loc_6B94
Bg_Scroll_DEz:                                                 ; loc_6B94
		move.w  (Horizontal_Scrolling).w, D4                 ; $FFFFEEB0
		ext.l   D4
		asl.l   #$05, D4
		move.w  (Vertical_Scrolling).w, D5                   ; $FFFFEEB2
		ext.l   D5
		asl.l   #$06, D5
		bsr     Scroll_Block_1                         ; loc_6DC8
		move.w  (Camera_Y_x4).w, ($FFFFF618).w               ; $FFFFEE0C
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  #$00DF, D1
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		move.w  (Camera_X_x2).w, D0                          ; $FFFFEE08
		neg.w   D0
loc_6BC4:
		move.l  D0, (A1)+
		dbra    D1, loc_6BC4
		rts
;-------------------------------------------------------------------------------
Bg_Scroll_X:                                                   ; loc_6BCC
		lea     (Scroll_Buffer_Data).w, A1                   ; $FFFFE000
		move.w  #$000E, D1               ; Varredura de tela * 16 pixels
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		neg.w   D0
		swap.w  D0
		andi.w  #$000F, D2
		add.w   D2, D2
		move.w  (A2)+, D0
		jmp     Bg_Scroll_X_Start_Index(PC, D2)        ; loc_6BEA
;-------------------------------------------------------------------------------
Bg_Scroll_X_Loop:                                              ; loc_6BE8
		move.w  (A2)+, D0
Bg_Scroll_X_Start_Index:                                       ; loc_6BEA
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		move.l  D0, (A1)+
		dbra    D1, Bg_Scroll_X_Loop                   ; loc_6BE8
		rts
;-------------------------------------------------------------------------------
Scroll_Horizontal_2:                                           ; loc_6C10
		move.w  (A1), D0
		andi.w  #$0010, D0
		move.b  (A2), D1
		eor.b   D1, D0
		bne.s   loc_6C30
		eori.b  #$10, (A2)
		move.w  (A1), D0
		sub.w   D4, D0
		bpl.s   loc_6C2C
		bset    #$02, (A3)
		rts
loc_6C2C:
		bset    #$03, (A3)
loc_6C30:
		rts
;-------------------------------------------------------------------------------
Scroll_Horizontal:                                             ; loc_6C32
		move.w  (A1), D4
		move.w  (A5), D1
		beq.s   loc_6C56
		subi.w  #$0100, D1
		move.w  D1, (A5)
		moveq   #$00, D1
		move.b  (A5), D1
		lsl.b   #$02, D1
		addq.b  #$04, D1
		move.w  $0002(A5), D0
		sub.b   D1, D0
		move.w  $00(A6, D0), D0
		andi.w  #$3FFF, D0
		bra.s   loc_6C5A
loc_6C56:
		move.w  $0008(A0), D0
loc_6C5A:
		sub.w   (A1), D0
		subi.w  #$0090, D0
		blt.s   loc_6C6C
		subi.w  #$0010, D0
		bge.s   loc_6C80
		clr.w   (A4)
		rts
loc_6C6C:
		cmpi.w  #$FFF0, D0
		bgt.s   loc_6C76
		move.w  #$FFF0, D0
loc_6C76:
		add.w   (A1), D0
		cmp.w   (A2), D0
		bgt.s   loc_6C96
		move.w  (A2), D0
		bra.s   loc_6C96
loc_6C80:
		cmpi.w  #$0010, D0
		bcs.s   loc_6C8A
		move.w  #$0010, D0
loc_6C8A:
		add.w   (A1), D0
		cmp.w   $0002(A2), D0
		blt.s   loc_6C96
		move.w  $0002(A2), D0
loc_6C96:
		move.w  D0, D1
		sub.w   (A1), D1
		asl.w   #$08, D1
		move.w  D0, (A1)
		move.w  D1, (A4)
		rts
;-------------------------------------------------------------------------------
Scroll_Vertical:                                               ; loc_6CA2
		moveq   #$00, D1
		move.w  $000C(A0), D0
		sub.w   (A1), D0
		cmpi.w  #$FF00, (Sonic_Level_Limits_Min_Y).w         ; $FFFFEECC
		bne.s   loc_6CB6
		andi.w  #$07FF, D0
loc_6CB6:
		btst    #$02, $0022(A0)
		beq.s   loc_6CC0
		subq.w  #$05, D0
loc_6CC0:
		btst    #$01, $0022(A0)
		beq.s   loc_6CE0
		addi.w  #$0020, D0
		sub.w   ($FFFFEED8).w, D0
		bcs.s   loc_6D2A
		subi.w  #$0040, D0
		bcc.s   loc_6D2A
		tst.b   (Vertical_Scroll_Flag).w                     ; $FFFFEEDE
		bne.s   loc_6D3C
		bra.s   loc_6CEC
loc_6CE0:
		sub.w   ($FFFFEED8).w, D0
		bne.s   loc_6CF0
		tst.b   (Vertical_Scroll_Flag).w                     ; $FFFFEEDE
		bne.s   loc_6D3C
loc_6CEC:
		clr.w   (A4)
		rts
loc_6CF0:
		cmpi.w  #$0060, ($FFFFEED8).w
		bne.s   loc_6D18
		move.w  $0014(A0), D1
		bpl.s   loc_6D00
		neg.w   D1
loc_6D00:
		cmpi.w  #$0800, D1
		bcc.s   loc_6D2A
		move.w  #$0600, D1
		cmpi.w  #$0006, D0
		bgt.s   loc_6D78
		cmpi.w  #$FFFFFFFA, D0
		blt.s   loc_6D52
		bra.s   loc_6D42
loc_6D18:
		move.w  #$0200, D1
		cmpi.w  #$0002, D0
		bgt.s   loc_6D78
		cmpi.w  #$FFFFFFFE, D0
		blt.s   loc_6D52
		bra.s   loc_6D42
loc_6D2A:
		move.w  #$1000, D1
		cmpi.w  #$0010, D0
		bgt.s   loc_6D78
		cmpi.w  #$FFF0, D0
		blt.s   loc_6D52
		bra.s   loc_6D42
loc_6D3C:
		moveq   #$00, D0
		move.b  D0, (Vertical_Scroll_Flag).w                 ; $FFFFEEDE
loc_6D42:
		moveq   #$00, D1
		move.w  D0, D1
		add.w   (A1), D1
		tst.w   D0
		bpl     loc_6D80
		bra     loc_6D5C
loc_6D52:
		neg.w   D1
		ext.l   D1
		asl.l   #$08, D1
		add.l   (A1), D1
		swap.w  D1
loc_6D5C:
		cmp.w   $0004(A2), D1
		bgt.s   loc_6D96
		cmpi.w  #$FF00, D1
		bgt.s   loc_6D72
		andi.w  #$07FF, D1
		andi.w  #$07FF, (A1)
		bra.s   loc_6D96
loc_6D72:
		move.w  $0004(A2), D1
		bra.s   loc_6D96
loc_6D78:
		ext.l   D1
		asl.l   #$08, D1
		add.l   (A1), D1
		swap.w  D1
loc_6D80:
		cmp.w   $0006(A2), D1
		blt.s   loc_6D96
		subi.w  #$0800, D1
		bcs.s   loc_6D92
		subi.w  #$0800, (A1)
		bra.s   loc_6D96
loc_6D92:
		move.w  $0006(A2), D1
loc_6D96:
		move.w  (A1), D4
		swap.w  D1
		move.l  D1, D3
		sub.l   (A1), D3
		ror.l   #$08, D3
		move.w  D3, (A4)
		move.l  D1, (A1)
		rts
;-------------------------------------------------------------------------------
Scroll_Vertical_2:                                             ; loc_6DA6
		move.w  (A1), D0
		andi.w  #$0010, D0
		move.b  (A2), D1
		eor.b   D1, D0
		bne.s   loc_6DC6
		eori.b  #$10, (A2)
		move.w  (A1), D0
		sub.w   D4, D0
		bpl.s   loc_6DC2
		bset    #$00, (A3)
		rts
loc_6DC2:
		bset    #$01, (A3)
loc_6DC6:
		rts
;-------------------------------------------------------------------------------
Scroll_Block_1:                                                ; loc_6DC8
		move.l  (Camera_X_x2).w, D2                          ; $FFFFEE08
		move.l  D2, D0
		add.l   D4, D0
		move.l  D0, (Camera_X_x2).w                          ; $FFFFEE08
		move.l  D0, D1
		swap.w  D1
		andi.w  #$0010, D1
		move.b  ($FFFFEE42).w, D3
		eor.b   D3, D1
		bne.s   loc_6DFC
		eori.b  #$10, ($FFFFEE42).w
		sub.l   D2, D0
		bpl.s   loc_6DF6
		bset    #$02, (Scroll_Flag_Array+$0002).w            ; $FFFFEE52
		bra.s   loc_6DFC
loc_6DF6:
		bset    #$03, (Scroll_Flag_Array+$0002).w            ; $FFFFEE52
loc_6DFC:
		move.l  (Camera_Y_x4).w, D3                          ; $FFFFEE0C
		move.l  D3, D0
		add.l   D5, D0
		move.l  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.l  D0, D1
		swap.w  D1
		andi.w  #$0010, D1
		move.b  ($FFFFEE43).w, D2
		eor.b   D2, D1
		bne.s   loc_6E30
		eori.b  #$10, ($FFFFEE43).w
		sub.l   D3, D0
		bpl.s   loc_6E2A
		bset    #$00, (Scroll_Flag_Array+$0002).w            ; $FFFFEE52
		rts
loc_6E2A:
		bset    #$01, (Scroll_Flag_Array+$0002).w            ; $FFFFEE52
loc_6E30:
		rts
;-------------------------------------------------------------------------------
Scroll_Block_2:                                                ; loc_6E32
		move.l  (Camera_X_x2).w, D2                          ; $FFFFEE08
		move.l  D2, D0
		add.l   D4, D0
		move.l  D0, (Camera_X_x2).w                          ; $FFFFEE08
		move.l  D0, D1
		swap.w  D1
		andi.w  #$0010, D1
		move.b  ($FFFFEE42).w, D3
		eor.b   D3, D1
		bne.s   loc_6E64
		eori.b  #$10, ($FFFFEE42).w
		sub.l   D2, D0
		bpl.s   loc_6E5E
		bset    D6, (Scroll_Flag_Array+$0002).w              ; $FFFFEE52
		bra.s   loc_6E64
loc_6E5E:
		addq.b  #$01, D6
		bset    D6, (Scroll_Flag_Array+$0002).w              ; $FFFFEE52
loc_6E64:
		rts
;-------------------------------------------------------------------------------
Scroll_Block_3:                                                ; loc_6E66
		move.l  (Camera_Y_x4).w, D3                          ; $FFFFEE0C
		move.l  D3, D0
		add.l   D5, D0
Scroll_Block_3_D0:                                             ; loc_6E6E
		move.l  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.l  D0, D1
		swap.w  D1
		andi.w  #$0010, D1
		move.b  ($FFFFEE43).w, D2
		eor.b   D2, D1
		bne.s   loc_6E98
		eori.b  #$10, ($FFFFEE43).w
		sub.l   D3, D0
		bpl.s   loc_6E92
		bset    D6, (Scroll_Flag_Array+$0002).w              ; $FFFFEE52
		rts
loc_6E92:
		addq.b  #$01, D6
		bset    D6, (Scroll_Flag_Array+$0002).w              ; $FFFFEE52
loc_6E98:
		rts
;-------------------------------------------------------------------------------
Scroll_Block_4:                                                ; loc_6E9A
		move.l  (Camera_X_x8).w, D2                          ; $FFFFEE10
		move.l  D2, D0
		add.l   D4, D0
		move.l  D0, (Camera_X_x8).w                          ; $FFFFEE10
		move.l  D0, D1
		swap.w  D1
		andi.w  #$0010, D1
		move.b  ($FFFFEE44).w, D3
		eor.b   D3, D1
		bne.s   loc_6ECC
		eori.b  #$10, ($FFFFEE44).w
		sub.l   D2, D0
		bpl.s   loc_6EC6
		bset    D6, (Scroll_Flag_Array+$0004).w              ; $FFFFEE54
		bra.s   loc_6ECC
loc_6EC6:
		addq.b  #$01, D6
		bset    D6, (Scroll_Flag_Array+$0004).w              ; $FFFFEE54
loc_6ECC:
		rts
;-------------------------------------------------------------------------------
; Scroll_Block_5: ; Leftover from Sonic 1, Not used            ; loc_6ECE
		move.l  (Camera_X_x4).w, D2                          ; $FFFFEE18
		move.l  D2, D0
		add.l   D4, D0
		move.l  D0, (Camera_X_x4).w                          ; $FFFFEE18
		move.l  D0, D1
		swap.w  D1
		andi.w  #$0010, D1
		move.b  ($FFFFEE46).w, D3
		eor.b   D3, D1
		bne.s   loc_6F00
		eori.b  #$10, ($FFFFEE46).w
		sub.l   D2, D0
		bpl.s   loc_6EFA
		bset    D6, (Scroll_Flag_Array+$0006).w              ; $FFFFEE56
		bra.s   loc_6F00
loc_6EFA:
		addq.b  #$01, D6
		bset    D6, (Scroll_Flag_Array+$0006).w              ; $FFFFEE56
loc_6F00:
		rts
;-------------------------------------------------------------------------------
; loc_6F02: ; Leftover from Sonic 1, Not used
		lea     (VDP_Control_Port), A5                       ; $00C00004
		lea     (VDP_Data_Port), A6                          ; $00C00000
		lea     (Scroll_Flag_Array+$0002).w, A2              ; $FFFFEE52
		lea     (Camera_X_x2).w, A3                          ; $FFFFEE08
		lea     (Level_Map_Bg_Buffer).w, A4                  ; $FFFF8080
		move.w  #$6000, D2
		bsr     loc_7094
		lea     (Scroll_Flag_Array+$0004).w, A2              ; $FFFFEE54
		lea     (Camera_X_x8).w, A3                          ; $FFFFEE10
		bra     loc_7164
;===============================================================================
; Routine to scroll the screen according to the position of the character
; [ End ]
;===============================================================================

;===============================================================================
; Screen scrolling processing routine during character movement
; [ Begin ]
;===============================================================================
LoadTilesAsYouMove:                                            ; loc_6F2E
		lea     (VDP_Control_Port), A5                       ; $00C00004
		lea     (VDP_Data_Port), A6                          ; $00C00000
		lea     (Scroll_Flag_Array_2+$0002).w, A2            ; $FFFFEEA2
		lea     ($FFFFEE68).w, A3
		lea     (Level_Map_Bg_Buffer).w, A4                  ; $FFFF8080
		move.w  #$6000, D2
		bsr     loc_7094
		lea     (Scroll_Flag_Array_2+$0004).w, A2            ; $FFFFEEA4
		lea     ($FFFFEE70).w, A3
		bsr     loc_7164
		lea     (Scroll_Flag_Array_2+$0006).w, A2            ; $FFFFEEA6
		lea     ($FFFFEE78).w, A3
		bsr     loc_7254
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   loc_6F80
		lea     (Scroll_Flag_Array_2+$0008).w, A2            ; $FFFFEEA8
		lea     ($FFFFEE80).w, A3
		lea     (Level_Map_Buffer).w, A4                     ; $FFFF8000
		move.w  #$6000, D2
		bsr     loc_702E
loc_6F80:
		lea     (Scroll_Flag_Array_2).w, A2                  ; $FFFFEEA0
		lea     ($FFFFEE60).w, A3
		lea     (Level_Map_Buffer).w, A4                     ; $FFFF8000
		move.w  #$4000, D2
		tst.b   (Refresh_Level_Layout).w                     ; $FFFFF720
		beq.s   Draw_FG                                ; loc_6FC8
		move.b  #$00, (Refresh_Level_Layout).w               ; $FFFFF720
		moveq   #-$10, D4
		moveq   #$0F, D6
Draw_All:                                                      ; loc_6FA0
		movem.l D4-D6, -(A7)
		moveq   #-$10, D5
		move.w  D4, D1
		bsr     Calc_VRAM_Pos                          ; loc_7758
		move.w  D1, D4
		moveq   #-$10, D5
		bsr     DrawTiles_LeftRight                    ; loc_7464
		movem.l (A7)+, D4-D6
		addi.w  #$0010, D4
		dbra    D6, Draw_All                           ; loc_6FA0
		move.b  #$00, (Scroll_Flag_Array_2).w                ; $FFFFEEA0
		rts
Draw_FG:                                                       ; loc_6FC8
		tst.b   (A2)
		beq.s   loc_702C
		bclr    #$00, (A2)
		beq.s   loc_6FE2
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     DrawTiles_LeftRight                    ; loc_7464
loc_6FE2:
		bclr    #$01, (A2)
		beq.s   loc_6FFC
		move.w  #$00E0, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		move.w  #$00E0, D4
		moveq   #-$10, D5
		bsr     DrawTiles_LeftRight                    ; loc_7464
loc_6FFC:
		bclr    #$02, (A2)
		beq.s   loc_7012
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     DrawTiles_TopBottom                    ; loc_73D6
loc_7012:
		bclr    #$03, (A2)
		beq.s   loc_702C
		moveq   #-$10, D4
		move.w  #$0140, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		moveq   #-$10, D4
		move.w  #$0140, D5
		bsr     DrawTiles_TopBottom                    ; loc_73D6
loc_702C:
		rts
loc_702E:
		tst.b   (A2)
		beq.s   loc_7092
		bclr    #$00, (A2)
		beq.s   loc_7048
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos_2                        ; loc_7794
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     DrawTiles_LeftRight                    ; loc_7464
loc_7048:
		bclr    #$01, (A2)
		beq.s   loc_7062
		move.w  #$00E0, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos_2                        ; loc_7794
		move.w  #$00E0, D4
		moveq   #-$10, D5
		bsr     DrawTiles_LeftRight                    ; loc_7464
loc_7062:
		bclr    #$02, (A2)
		beq.s   loc_7078
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos_2                        ; loc_7794
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     DrawTiles_TopBottom                    ; loc_73D6
loc_7078:
		bclr    #$03, (A2)
		beq.s   loc_7092
		moveq   #-$10, D4
		move.w  #$0140, D5
		bsr     Calc_VRAM_Pos_2                        ; loc_7794
		moveq   #-$10, D4
		move.w  #$0140, D5
		bsr     DrawTiles_TopBottom                    ; loc_73D6
loc_7092:
		rts
loc_7094:
		tst.b   (A2)
		beq     loc_7162
		bclr    #$00, (A2)
		beq.s   loc_70B0
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     DrawTiles_LeftRight                    ; loc_7464
loc_70B0:
		bclr    #$01, (A2)
		beq.s   loc_70CA
		move.w  #$00E0, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		move.w  #$00E0, D4
		moveq   #-$10, D5
		bsr     DrawTiles_LeftRight                    ; loc_7464
loc_70CA:
		bclr    #$02, (A2)
		beq.s   loc_70E0
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     DrawTiles_TopBottom                    ; loc_73D6
loc_70E0:
		bclr    #$03, (A2)
		beq.s   loc_70FA
		moveq   #-$10, D4
		move.w  #$0140, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		moveq   #-$10, D4
		move.w  #$0140, D5
		bsr     DrawTiles_TopBottom                    ; loc_73D6
loc_70FA:
		bclr    #$04, (A2)
		beq.s   loc_7112
		moveq   #-$10, D4
		moveq   #$00, D5
		bsr     Calc_VRAM_Pos_D5                       ; loc_775A
		moveq   #-$10, D4
		moveq   #$00, D5
		moveq   #$1F, D6
		bsr     DrawTiles_LeftRight_D6                 ; loc_7468
loc_7112:
		bclr    #$05, (A2)
		beq.s   loc_712E
		move.w  #$00E0, D4
		moveq   #$00, D5
		bsr     Calc_VRAM_Pos_D5                       ; loc_775A
		move.w  #$00E0, D4
		moveq   #$00, D5
		moveq   #$1F, D6
		bsr     DrawTiles_LeftRight_D6                 ; loc_7468
loc_712E:
		bclr    #$06, (A2)
		beq.s   loc_7146
		moveq   #-$10, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		moveq   #-$10, D4
		moveq   #-$10, D5
		moveq   #$1F, D6
		bsr     loc_745C
loc_7146:
		bclr    #$07, (A2)
		beq.s   loc_7162
		move.w  #$00E0, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		move.w  #$00E0, D4
		moveq   #-$10, D5
		moveq   #$1F, D6
		bsr     loc_745C
loc_7162:
		rts
loc_7164:
		tst.b   (A2)
		beq     loc_71A6
		bclr    #$00, (A2)
		beq.s   loc_7186
		move.w  #$0070, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		move.w  #$0070, D4
		moveq   #-$10, D5
		moveq   #$02, D6
		bsr     DrawTiles_TopBottom_D6                 ; loc_73D8
loc_7186:
		bclr    #$01, (A2)
		beq.s   loc_71A6
		move.w  #$0070, D4
		move.w  #$0140, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		move.w  #$0070, D4
		move.w  #$0140, D5
		moveq   #$02, D6
		bsr     DrawTiles_TopBottom_D6                 ; loc_73D8
loc_71A6:
		rts
;-------------------------------------------------------------------------------
; Scrap Brain Zone Deformation
; Leftover from Sonic 1
;-------------------------------------------------------------------------------
Draw_SBz_Bg_Data:                                              ; loc_71A8
		dc.b    $00, $00, $00, $00, $00, $06, $06, $06
		dc.b    $06, $06, $06, $06, $06, $06, $06, $04
		dc.b    $04, $04, $04, $04, $04, $04, $02, $02
		dc.b    $02, $02, $02, $02, $02, $02, $02, $02
		dc.b    $02, $00
;-------------------------------------------------------------------------------
Draw_SBz_Bg:                                                   ; loc_71CA
		moveq   #-$10, D4
		bclr    #$00, (A2)
		bne.s   loc_71DC
		bclr    #$01, (A2)
		beq.s   loc_7224
		move.w  #$00E0, D4
loc_71DC:
		lea     Draw_SBz_Bg_Data+$01(PC), A0           ; loc_71A9
		move.w  (Camera_Y_x4).w, D0                          ; $FFFFEE0C
		add.w   D4, D0
		andi.w  #$01F0, D0
		lsr.w   #$04, D0
		move.b  $00(A0, D0), D0
		lea     (Scroll_Mem_Address_Data), A3          ; loc_7350
		move.w  $00(A3, D0), A3
		beq.s   loc_7210
		moveq   #-$10, D5
		movem.l D4/D5, -(A7)
		bsr     Calc_VRAM_Pos                          ; loc_7758
		movem.l (A7)+, D4/D5
		bsr     DrawTiles_LeftRight                    ; loc_7464
		bra.s   loc_7224
loc_7210:
		moveq   #$00, D5
		movem.l D4/D5, -(A7)
		bsr     Calc_VRAM_Pos_D5                       ; loc_775A
		movem.l (A7)+, D4/D5
		moveq   #$1F, D6
		bsr     DrawTiles_LeftRight_D6                 ; loc_7468
loc_7224:
		tst.b   (A2)
		bne.s   loc_722A
		rts
loc_722A:
		moveq   #-$10, D4
		moveq   #-$10, D5
		move.b  (A2), D0
		andi.b  #$A8, D0
		beq.s   loc_723E
		lsr.b   #$01, D0
		move.b  D0, (A2)
		move.w  #$0140, D5
loc_723E:
		lea     Draw_SBz_Bg_Data(PC), A0               ; loc_71A8
		move.w  (Camera_Y_x4).w, D0                          ; $FFFFEE0C
		andi.w  #$01F0, D0
		lsr.w   #$04, D0
		lea     $00(A0, D0), A0
		bra     loc_7358
;-------------------------------------------------------------------------------
; Scrap Brain Zone Deformation
; Leftover from Sonic 1
; [ End ]
;-------------------------------------------------------------------------------
loc_7254:
		tst.b   (A2)
		beq     loc_72A0
		cmpi.b  #$0D, (Level_Id).w                           ; $FFFFFE10
		beq     Draw_CPz_Bg                            ; loc_72E4
		bclr    #$00, (A2)
		beq.s   loc_7280
		move.w  #$0040, D4
		moveq   #-$10, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		move.w  #$0040, D4
		moveq   #-$10, D5
		moveq   #$02, D6
		bsr     DrawTiles_TopBottom_D6                 ; loc_73D8
loc_7280:
		bclr    #$01, (A2)
		beq.s   loc_72A0
		move.w  #$0040, D4
		move.w  #$0140, D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		move.w  #$0040, D4
		move.w  #$0140, D5
		moveq   #$02, D6
		bsr     DrawTiles_TopBottom_D6                 ; loc_73D8
loc_72A0:
		rts
;-------------------------------------------------------------------------------
; Rotina de controle da rolagem da fase Chemical Plant
; [ Begin ]
;-------------------------------------------------------------------------------
Draw_CPz_Bg_Data:                                              ; loc_72A2
		dc.b    $02, $02, $02, $02, $02, $02, $02, $02
		dc.b    $02, $02, $02, $02, $02, $02, $02, $02
		dc.b    $02, $02, $02, $02, $04, $04, $04, $04
		dc.b    $04, $04, $04, $04, $04, $04, $04, $04
		dc.b    $04, $04, $04, $04, $04, $04, $04, $04
		dc.b    $04, $04, $04, $04, $04, $04, $04, $04
		dc.b    $04, $04, $04, $04, $04, $04, $04, $04
		dc.b    $04, $04, $04, $04, $04, $04, $04, $04
		dc.b    $04, $00
;-------------------------------------------------------------------------------
Draw_CPz_Bg:                                                   ; loc_72E4
		moveq   #-$10, D4
		bclr    #$00, (A2)
		bne.s   loc_72F6
		bclr    #$01, (A2)
		beq.s   loc_7320
		move.w  #$00E0, D4
loc_72F6:
		lea     Draw_CPz_Bg_Data+$01(PC), A0           ; loc_72A3
		move.w  (Camera_Y_x4).w, D0                          ; $FFFFEE0C
		add.w   D4, D0
		andi.w  #$03F0, D0
		lsr.w   #$04, D0
		move.b  $00(A0, D0), D0
		move.w  Scroll_Mem_Address_Data(PC, D0), A3    ; loc_7350
		moveq   #-$10, D5
		movem.l D4/D5, -(A7)
		bsr     Calc_VRAM_Pos                          ; loc_7758
		movem.l (A7)+, D4/D5
		bsr     DrawTiles_LeftRight                    ; loc_7464
loc_7320:
		tst.b   (A2)
		bne.s   loc_7326
		rts
loc_7326:
		moveq   #-$10, D4
		moveq   #-$10, D5
		move.b  (A2), D0
		andi.b  #$A8, D0
		beq.s   loc_733A
		lsr.b   #$01, D0
		move.b  D0, (A2)
		move.w  #$0140, D5
loc_733A:
		lea     Draw_CPz_Bg_Data(PC), A0               ; loc_72A2
		move.w  (Camera_Y_x4).w, D0                          ; $FFFFEE0C
		andi.w  #$07F0, D0
		lsr.w   #$04, D0
		lea     $00(A0, D0), A0
		bra     loc_7358
;-------------------------------------------------------------------------------
; Rotina de controle da rolagem da fase Chemical Plant
; [ End ]
;-------------------------------------------------------------------------------
Scroll_Mem_Address_Data:                                       ; loc_7350
		dc.w    $EE68, $EE68, $EE70, $EE78
;-------------------------------------------------------------------------------
loc_7358:
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne.s   loc_739A
		moveq   #$0F, D6
		move.l  #$00800000, D7
loc_7366:
		moveq   #$00, D0
		move.b  (A0)+, D0
		btst    D0, (A2)
		beq.s   loc_738E
		move.w  Scroll_Mem_Address_Data(PC, D0), A3    ; loc_7350
		movem.l D4/D5/A0, -(A7)
		movem.l D4/D5, -(A7)
		bsr     Draw_Blocks                            ; loc_7716
		movem.l (A7)+, D4/D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		bsr     Draw_Tiles_3                           ; loc_7646
		movem.l (A7)+, D4/D5/A0
loc_738E:
		addi.w  #$0010, D4
		dbra    D6, loc_7366
		clr.b   (A2)
		rts
loc_739A:
		moveq   #$0F, D6
		move.l  #$00800000, D7
loc_73A2:
		moveq   #$00, D0
		move.b  (A0)+, D0
		btst    D0, (A2)
		beq.s   loc_73CA
		move.w  Scroll_Mem_Address_Data(PC, D0), A3    ; loc_7350
		movem.l D4/D5/A0, -(A7)
		movem.l D4/D5, -(A7)
		bsr     Draw_Blocks                            ; loc_7716
		movem.l (A7)+, D4/D5
		bsr     Calc_VRAM_Pos                          ; loc_7758
		bsr     Draw_Tiles_4                           ; loc_76CC
		movem.l (A7)+, D4/D5/A0
loc_73CA:
		addi.w  #$0010, D4
		dbra    D6, loc_73A2
		clr.b   (A2)
		rts
;-------------------------------------------------------------------------------
; Routine for scrolling the screen vertically
; [ Begin ]
;-------------------------------------------------------------------------------
DrawTiles_TopBottom:                                           ; loc_73D6
		moveq   #$0F, D6
DrawTiles_TopBottom_D6:                                        ; loc_73D8
		add.w   (A3), D5
		add.w   $0004(A3), D4
		move.l  #$00800000, D7
		move.l  D0, D1
		bsr     Calc_Chunk_RAM_Pos                     ; loc_7570
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne.s   DrawTiles_TopBottom_2P                 ; loc_7426
loc_73F0:
		move.w  (A0), D3
		andi.w  #$03FF, D3
		lsl.w   #$03, D3
		lea     (Blocks_Mem_Address).w, A1                   ; $FFFF9000
		adda.w  D3, A1
		move.l  D1, D0
		bsr     Draw_Tiles_3                           ; loc_7646
		adda.w  #$0010, A0
		addi.w  #$0100, D1
		andi.w  #$0FFF, D1
		addi.w  #$0010, D4
		move.w  D4, D0
		andi.w  #$0070, D0
		bne.s   loc_7420
		bsr     Calc_Chunk_RAM_Pos                     ; loc_7570
loc_7420:
		dbra    D6, loc_73F0
		rts
DrawTiles_TopBottom_2P:                                        ; loc_7426
		move.w  (A0), D3
		andi.w  #$03FF, D3
		lsl.w   #$03, D3
		lea     (Blocks_Mem_Address).w, A1                   ; $FFFF9000
		adda.w  D3, A1
		move.l  D1, D0
		bsr     Draw_Tiles_4                           ; loc_76CC
		adda.w  #$0010, A0
		addi.w  #$0080, D1
		andi.w  #$0FFF, D1
		addi.w  #$0010, D4
		move.w  D4, D0
		andi.w  #$0070, D0
		bne.s   loc_7456
		bsr     Calc_Chunk_RAM_Pos                     ; loc_7570
loc_7456:
		dbra    D6, DrawTiles_TopBottom_2P             ; loc_7426
		rts
;-------------------------------------------------------------------------------
; Routine for scrolling the screen vertically
; [ End ]
;-------------------------------------------------------------------------------
loc_745C:
		add.w   (A3), D5
		add.w   $0004(A3), D4
		bra.s   loc_746C
;-------------------------------------------------------------------------------
; Routine for scrolling the screen horizontally
; [ Begin ]
;-------------------------------------------------------------------------------
DrawTiles_LeftRight:                                           ; loc_7464
		moveq   #$15, D6
		add.w   (A3), D5
DrawTiles_LeftRight_D6:                                        ; loc_7468
		add.w   $0004(A3), D4
loc_746C:
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne.s   loc_74EA
		move.l  A2, -(A7)
		move.w  D6, -(A7)
		lea     ($FFFFEF00).w, A2
		move.l  D0, D1
		or.w    D2, D1
		swap.w  D1
		move.l  D1, -(A7)
		move.l  D1, (A5)
		swap.w  D1
		bsr     Calc_Chunk_RAM_Pos                     ; loc_7570
loc_748A:
		move.w  (A0), D3
		andi.w  #$03FF, D3
		lsl.w   #$03, D3
		lea     (Blocks_Mem_Address).w, A1                   ; $FFFF9000
		adda.w  D3, A1
		bsr     Draw_Tiles                             ; loc_75A6
		addq.w  #$02, A0
		addq.b  #$04, D1
		bpl.s   loc_74AC
		andi.b  #$7F, D1
		swap.w  D1
		move.l  D1, (A5)
		swap.w  D1
loc_74AC:
		addi.w  #$0010, D5
		move.w  D5, D0
		andi.w  #$0070, D0
		bne.s   loc_74BC
		bsr     Calc_Chunk_RAM_Pos                     ; loc_7570
loc_74BC:
		dbra    D6, loc_748A
		move.l  (A7)+, D1
		addi.l  #$00800000, D1
		lea     ($FFFFEF00).w, A2
		move.l  D1, (A5)
		swap.w  D1
		move.w  (A7)+, D6
loc_74D2:
		move.l  (A2)+, (A6)
		addq.b  #$04, D1
		bmi.s   loc_74E2
		ori.b   #$80, D1
		swap.w  D1
		move.l  D1, (A5)
		swap.w  D1
loc_74E2:
		dbra    D6, loc_74D2
		move.l  (A7)+, A2
		rts
loc_74EA:
		move.l  D0, D1
		or.w    D2, D1
		swap.w  D1
		move.l  D1, (A5)
		swap.w  D1
		tst.b   D1
		bmi.s   loc_7534
		bsr     Calc_Chunk_RAM_Pos                     ; loc_7570
loc_74FC:
		move.w  (A0), D3
		andi.w  #$03FF, D3
		lsl.w   #$03, D3
		lea     (Blocks_Mem_Address).w, A1                   ; $FFFF9000
		adda.w  D3, A1
		bsr     Draw_Tiles_2                           ; loc_7608
		addq.w  #$02, A0
		addq.b  #$04, D1
		bpl.s   loc_751E
		andi.b  #$7F, D1
		swap.w  D1
		move.l  D1, (A5)
		swap.w  D1
loc_751E:
		addi.w  #$0010, D5
		move.w  D5, D0
		andi.w  #$0070, D0
		bne.s   loc_752E
		bsr     Calc_Chunk_RAM_Pos                     ; loc_7570
loc_752E:
		dbra    D6, loc_74FC
		rts
loc_7534:
		bsr     Calc_Chunk_RAM_Pos                     ; loc_7570
loc_7538:
		move.w  (A0), D3
		andi.w  #$03FF, D3
		lsl.w   #$03, D3
		lea     (Blocks_Mem_Address).w, A1                   ; $FFFF9000
		adda.w  D3, A1
		bsr     Draw_Tiles_2                           ; loc_7608
		addq.w  #$02, A0
		addq.b  #$04, D1
		bmi.s   loc_755A
		ori.b   #$80, D1
		swap.w  D1
		move.l  D1, (A5)
		swap.w  D1
loc_755A:
		addi.w  #$0010, D5
		move.w  D5, D0
		andi.w  #$0070, D0
		bne.s   loc_756A
		bsr     Calc_Chunk_RAM_Pos                     ; loc_7570
loc_756A:
		dbra    D6, loc_7538
		rts
;-------------------------------------------------------------------------------
; Routine for scrolling the screen horizontally
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Rotina para calcular o bloco em rela  o a posi  o da tela
; [ Begin ]
;-------------------------------------------------------------------------------
Calc_Chunk_RAM_Pos:                                            ; loc_7570
		movem.l D4/D5, -(A7)
		move.w  D4, D3
		add.w   D3, D3
		andi.w  #$0F00, D3
		lsr.w   #$03, D5
		move.w  D5, D0
		lsr.w   #$04, D0
		andi.w  #$007F, D0
		add.w   D3, D0
		moveq   #-$01, D3
		clr.w   D3
		move.b  $00(A4, D0), D3
		lsl.w   #$07, D3
		andi.w  #$0070, D4
		andi.w  #$000E, D5
		add.w   D4, D3
		add.w   D5, D3
		move.l  D3, A0
		movem.l (A7)+, D4/D5
		rts
;-------------------------------------------------------------------------------
; Rotina para calcular o bloco em rela  o a posi  o da tela
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routines for drawing 8x8 tiles
; [ Begin ]
;-------------------------------------------------------------------------------
Draw_Tiles:                                                    ; loc_75A6
		btst    #$03, (A0)              ; Y Flip ?
		bne.s   Draw_FlipY                             ; loc_75D2
		btst    #$02, (A0)              ; X_Flip ?
		bne.s   Draw_FlipX                             ; loc_75B8
		move.l  (A1)+, (A6)
		move.l  (A1)+, (A2)+
		rts
Draw_FlipX:                                                    ; loc_75B8
		move.l  (A1)+, D3
		eori.l  #$08000800, D3
		swap.w  D3
		move.l  D3, (A6)
		move.l  (A1)+, D3
		eori.l  #$08000800, D3
		swap.w  D3
		move.l  D3, (A2)+
		rts
Draw_FlipY:                                                    ; loc_75D2
		btst    #$02, (A0)              ; X_Flip ?
		bne.s   Draw_FlipXY                            ; loc_75EE
		move.l  (A1)+, D0
		move.l  (A1)+, D3
		eori.l  #$10001000, D3
		move.l  D3, (A6)
		eori.l  #$10001000, D0
		move.l  D0, (A2)+
		rts
Draw_FlipXY:                                                   ; loc_75EE
		move.l  (A1)+, D0
		move.l  (A1)+, D3
		eori.l  #$18001800, D3
		swap.w  D3
		move.l  D3, (A6)
		eori.l  #$18001800, D0
		swap.w  D0
		move.l  D0, (A2)+
		rts
;-------------------------------------------------------------------------------
Draw_Tiles_2:                                                  ; loc_7608
		btst    #$03, (A0)              ; Y Flip ?
		bne.s   Draw_FlipY_2                           ; loc_7626
		btst    #$02, (A0)              ; X Flip ?
		bne.s   Draw_FlipX_2                           ; loc_7618
		move.l  (A1)+, (A6)
		rts
Draw_FlipX_2:                                                  ; loc_7618
		move.l  (A1)+, D3
		eori.l  #$08000800, D3
		swap.w  D3
		move.l  D3, (A6)
		rts
Draw_FlipY_2:                                                  ; loc_7626
		btst    #$02, (A0)              ; X Flip ?
		bne.s   Draw_FlipXY_2                          ; loc_7638
		move.l  (A1)+, D3
		eori.l  #$10001000, D3
		move.l  D3, (A6)
		rts
Draw_FlipXY_2:                                                 ; loc_7638
		move.l  (A1)+, D3
		eori.l  #$18001800, D3
		swap.w  D3
		move.l  D3, (A6)
		rts
;-------------------------------------------------------------------------------
Draw_Tiles_3:                                                  ; loc_7646
		or.w    D2, D0
		swap.w  D0
		btst    #$03, (A0)              ; Y Flip ?
		bne.s   Draw_FlipY_3                           ; loc_7682
		btst    #$02, (A0)              ; X Flip ?
		bne.s   Draw_FlipX_3                           ; loc_7662
		move.l  D0, (A5)
		move.l  (A1)+, (A6)
		add.l   D7, D0
		move.l  D0, (A5)
		move.l  (A1)+, (A6)
		rts
Draw_FlipX_3:                                                  ; loc_7662
		move.l  D0, (A5)
		move.l  (A1)+, D3
		eori.l  #$08000800, D3
		swap.w  D3
		move.l  D3, (A6)
		add.l   D7, D0
		move.l  D0, (A5)
		move.l  (A1)+, D3
		eori.l  #$08000800, D3
		swap.w  D3
		move.l  D3, (A6)
		rts
Draw_FlipY_3:                                                  ; loc_7682
		btst    #$02, (A0)              ; X Flip ?
		bne.s   Draw_FlipXY_3                          ; loc_76A8
		move.l  D5, -(A7)
		move.l  D0, (A5)
		move.l  (A1)+, D5
		move.l  (A1)+, D3
		eori.l  #$10001000, D3
		move.l  D3, (A6)
		add.l   D7, D0
		move.l  D0, (A5)
		eori.l  #$10001000, D5
		move.l  D5, (A6)
		move.l  (A7)+, D5
		rts
Draw_FlipXY_3:                                                 ; loc_76A8
		move.l  D5, -(A7)
		move.l  D0, (A5)
		move.l  (A1)+, D5
		move.l  (A1)+, D3
		eori.l  #$18001800, D3
		swap.w  D3
		move.l  D3, (A6)
		add.l   D7, D0
		move.l  D0, (A5)
		eori.l  #$18001800, D5
		swap.w  D5
		move.l  D5, (A6)
		move.l  (A7)+, D5
		rts
;-------------------------------------------------------------------------------
Draw_Tiles_4:                                                  ; loc_76CC
		or.w    D2, D0
		swap.w  D0
		btst    #$03, (A0)              ; Y Flip ?
		bne.s   Draw_FlipY_4                           ; loc_76F2
		btst    #$02, (A0)              ; X Flip ?
		bne.s   Draw_FlipX_4                           ; loc_76E2
		move.l  D0, (A5)
		move.l  (A1)+, (A6)
		rts
Draw_FlipX_4:                                                  ; loc_76E2
		move.l  D0, (A5)
		move.l  (A1)+, D3
		eori.l  #$08000800, D3
		swap.w  D3
		move.l  D3, (A6)
		rts
Draw_FlipY_4:                                                  ; loc_76F2
		btst    #$02, (A0)              ; X Flip ?
		bne.s   Draw_FlipXY_4                          ; loc_7706
		move.l  D0, (A5)
		move.l  (A1)+, D3
		eori.l  #$10001000, D3
		move.l  D3, (A6)
		rts
Draw_FlipXY_4:                                                 ; loc_7706
		move.l  D0, (A5)
		move.l  (A1)+, D3
		eori.l  #$18001800, D3
		swap.w  D3
		move.l  D3, (A6)
		rts
;-------------------------------------------------------------------------------
; Routines for drawing 8x8 tiles
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routines for drawing 16x16 blocks
; [ Begin ]
;-------------------------------------------------------------------------------
Draw_Blocks:                                                   ; loc_7716
		add.w   (A3), D5
		add.w   $0004(A3), D4
		lea     (Blocks_Mem_Address).w, A1                   ; $FFFF9000
		move.w  D4, D3
		add.w   D3, D3
		andi.w  #$0F00, D3
		lsr.w   #$03, D5
		move.w  D5, D0
		lsr.w   #$04, D0
		andi.w  #$007F, D0
		add.w   D3, D0
		moveq   #-$01, D3
		clr.w   D3
		move.b  $00(A4, D0), D3
		lsl.w   #$07, D3
		andi.w  #$0070, D4
		andi.w  #$000E, D5
		add.w   D4, D3
		add.w   D5, D3
		move.l  D3, A0
		move.w  (A0), D3
		andi.w  #$03FF, D3
		lsl.w   #$03, D3
		adda.w  D3, A1
		rts
;-------------------------------------------------------------------------------
; Routines for drawing 16x16 blocks
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Routines to calculate the VRAM position
; [ Begin ]
;-------------------------------------------------------------------------------
Calc_VRAM_Pos:                                                 ; loc_7758
		add.w   (A3), D5
Calc_VRAM_Pos_D5:                                              ; loc_775A
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne.s   Calc_VRAM_Pos_2P                       ; loc_777A
		add.w   $0004(A3), D4
		andi.w  #$00F0, D4
		andi.w  #$01F0, D5
		lsl.w   #$04, D4
		lsr.w   #$02, D5
		add.w   D5, D4
		moveq   #$03, D0
		swap.w  D0
		move.w  D4, D0
		rts
Calc_VRAM_Pos_2P:                                              ; loc_777A
		add.w   $0004(A3), D4
Calc_VRAM_Pos_2P_D4:                                           ; loc_777E
		andi.w  #$01F0, D4
		andi.w  #$01F0, D5
		lsl.w   #$03, D4
		lsr.w   #$02, D5
		add.w   D5, D4
		moveq   #$03, D0
		swap.w  D0
		move.w  D4, D0
		rts
;-------------------------------------------------------------------------------
Calc_VRAM_Pos_2:                                               ; loc_7794
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne.s   Calc_VRAM_Pos_2_2P                     ; loc_77B6
		add.w   $0004(A3), D4
		add.w   (A3), D5
		andi.w  #$00F0, D4
		andi.w  #$01F0, D5
		lsl.w   #$04, D4
		lsr.w   #$02, D5
		add.w   D5, D4
		moveq   #$02, D0
		swap.w  D0
		move.w  D4, D0
		rts
Calc_VRAM_Pos_2_2P:                                            ; loc_77B6
		add.w   $0004(A3), D4
		add.w   (A3), D5
		andi.w  #$01F0, D4
		andi.w  #$01F0, D5
		lsl.w   #$03, D4
		lsr.w   #$02, D5
		add.w   D5, D4
		moveq   #$02, D0
		swap.w  D0
		move.w  D4, D0
		rts
;-------------------------------------------------------------------------------
; Routines to calculate the VRAM position
; [ End ]
;-------------------------------------------------------------------------------

;===============================================================================
; Screen scrolling processing routine during character movement
; [ End ]
;===============================================================================

;===============================================================================
; Rotina para carregar os tiles da fase a partir da posi  o do jogador usado
; [ Begin ]          durante a carga da fase.
;===============================================================================
Load_Tiles_From_Start:                                         ; loc_77D2
		lea     (VDP_Control_Port), A5                       ; $00C00004
		lea     (VDP_Data_Port), A6                          ; $00C00000
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   loc_77F2
		lea     (Camera_X_2).w, A3                           ; $FFFFEE20
		lea     (Level_Map_Buffer).w, A4                     ; $FFFF8000
		move.w  #$6000, D2
		bsr.s   loc_784E
loc_77F2:
		lea     (Camera_X).w, A3                             ; $FFFFEE00
		lea     (Level_Map_Buffer).w, A4                     ; $FFFF8000
		move.w  #$4000, D2
		bsr.s   loc_781E
		lea     (Camera_X_x2).w, A3                          ; $FFFFEE08
		lea     (Level_Map_Bg_Buffer).w, A4                  ; $FFFF8080
		move.w  #$6000, D2
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq     loc_781E
		cmpi.b  #$0B, (Level_Id).w                           ; $FFFFFE10
		beq     loc_787E
loc_781E:
		moveq   #-$10, D4
		moveq   #$0F, D6
loc_7822:
		movem.l D4-D6, -(A7)
		moveq   #$00, D5
		move.w  D4, D1
		bsr     Calc_VRAM_Pos                          ; loc_7758
		move.w  D1, D4
		moveq   #$00, D5
		moveq   #$1F, D6
		move    #$2700, SR
		bsr     loc_745C
		move    #$2300, SR
		movem.l (A7)+, D4-D6
		addi.w  #$0010, D4
		dbra    D6, loc_7822
		rts
loc_784E:
		moveq   #-$10, D4
		moveq   #$0F, D6
loc_7852:
		movem.l D4-D6, -(A7)
		moveq   #$00, D5
		move.w  D4, D1
		bsr     Calc_VRAM_Pos_2                        ; loc_7794
		move.w  D1, D4
		moveq   #$00, D5
		moveq   #$1F, D6
		move    #$2700, SR
		bsr     loc_745C
		move    #$2300, SR
		movem.l (A7)+, D4-D6
		addi.w  #$0010, D4
		dbra    D6, loc_7852
		rts
loc_787E:
		moveq   #$00, D4
		moveq   #$1F, D6
loc_7882:
		movem.l D4-D6, -(A7)
		moveq   #$00, D5
		move.w  D4, D1
		bsr     Calc_VRAM_Pos_2P_D4                    ; loc_777E
		move.w  D1, D4
		moveq   #$00, D5
		moveq   #$1F, D6
		move    #$2700, SR
		bsr     loc_746C
		move    #$2300, SR
		movem.l (A7)+, D4-D6
		addi.w  #$0010, D4
		dbra    D6, loc_7882
		rts
;===============================================================================
; Rotina para carregar os tiles da fase a partir da posi  o do jogador usado
; [ End ]          durante a carga da fase.
;===============================================================================

;===============================================================================
; Load the 16x16, 128x128 Tiles and the stage layout
; [ Begin ]
;===============================================================================
Main_Level_Load_16_128_Blocks:                                 ; loc_78AE
		moveq   #$00, D0
		move.b  (Level_Id).w, D0                             ; $FFFFFE10
		add.w   D0, D0
		add.w   D0, D0
		move.w  D0, D1
		add.w   D0, D0
		add.w   D1, D0
		lea     (TilesMainTable), A2                   ; loc_2E708
		lea     $00(A2, D0), A2
		move.l  A2, -(A7)
		addq.w  #$04, A2
		move.l  (A2)+, A0
		bra.s   Main_Level_Load_Blocks_Convert16       ; loc_78DE
;-------------------------------------------------------------------------------
; loc_78D0: ; Leftover from Sonic 1
		lea     (Blocks_Mem_Address).w, A1                   ; $FFFF9000
		move.w  #$0000, D0
		bsr     EniDec                              ; loc_1932
		bra.s   loc_7902
;-------------------------------------------------------------------------------
Main_Level_Load_Blocks_Convert16:                              ; loc_78DE
		lea     (Blocks_Mem_Address).w, A1                   ; $FFFF9000
		move.w  #$0BFF, D2
Main_Level_Load_16_Blocks_Loop:                                ; loc_78E6
		move.w  (A0)+, D0
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   Main_Level_Load_16_Blocks_Not2p        ; loc_78FC
		move.w  D0, D1
		andi.w  #$F800, D0
		andi.w  #$07FF, D1
		lsr.w   #$01, D1
		or.w    D1, D0
Main_Level_Load_16_Blocks_Not2p:                               ; loc_78FC
		move.w  D0, (A1)+
		dbra    D2, Main_Level_Load_16_Blocks_Loop     ; loc_78E6
loc_7902:
		cmpi.b  #$07, (Level_Id).w                           ; $FFFFFE10
		bne.s   loc_7934
		lea     (Blocks_Mem_Address+$0980).w, A1             ; $FFFF9980
		lea     (Hill_Top_Blocks), A0                  ; loc_8F64E
		move.w  #$03FF, D2
loc_7918:
		move.w  (A0)+, D0
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   loc_792E
		move.w  D0, D1
		andi.w  #$F800, D0
		andi.w  #$07FF, D1
		lsr.w   #$01, D1
		or.w    D1, D0
loc_792E:
		move.w  D0, (A1)+
		dbra    D2, loc_7918
loc_7934:
		move.l  (A2)+, A0
		lea     (M68K_RAM_Start), A1                         ; $FFFF0000
		bsr     KosDec                            ; loc_1AB0
		bra.s   Load_Level_Data                        ; loc_7972
;-------------------------------------------------------------------------------
; loc_7942:
		bra.s   loc_7962
;-------------------------------------------------------------------------------
; loc_7944:
		moveq   #$00, D1
		moveq   #$00, D2
		move.w  (A0)+, D0
		lea     $00(A0, D0), A1
		lea     (M68K_RAM_Start), A2                         ; $FFFF0000
		lea     (Level_Map_Buffer).w, A3                     ; $FFFF8000
loc_7958:
		bsr     loc_1B50
		tst.w   D0
		bmi.s   loc_7958
		bra.s   Load_Level_Data                        ; loc_7972
loc_7962:
		lea     (M68K_RAM_Start), A1                         ; $FFFF0000
		move.w  #$3FFF, D0
loc_796C:
		move.w  (A0)+, (A1)+
		dbra    D0, loc_796C
;-------------------------------------------------------------------------------
Load_Level_Data:                                               ; loc_7972
		bsr     Load_Level_Layout                      ; loc_799A
		move.l  (A7)+, A2
		addq.w  #$04, A2
		moveq   #$00, D0
		move.b  (A2), D0
		beq.s   Load_Level_Palete                      ; loc_7984
		bsr     LoadPLC                                ; loc_1794
;-------------------------------------------------------------------------------
Load_Level_Palete:                                             ; loc_7984
		addq.w  #$04, A2
		moveq   #$00, D0
		move.b  (A2), D0
		cmpi.w  #$0C01, (Level_Id).w                         ; $FFFFFE10
		bne.s   loc_7994
		moveq   #$0A, D0
loc_7994:
		bsr     PalLoad1                               ; loc_2914
		rts
;-------------------------------------------------------------------------------
Load_Level_Layout:                                             ; loc_799A
		lea     (Level_Map_Buffer).w, A3                     ; $FFFF8000
		move.w  #$03FF, D1
		moveq   #$00, D0
loc_79A4:
		move.l  D0, (A3)+
		dbra    D1, loc_79A4
		lea     (Level_Map_Buffer).w, A3                     ; $FFFF8000
		moveq   #$00, D1
		bsr     Interleave_Level_Layout                ; loc_79BA
		lea     (Level_Map_Bg_Buffer).w, A3                  ; $FFFF8080
		moveq   #$02, D1
Interleave_Level_Layout:                                       ; loc_79BA
		moveq   #$00, D0
		move.w  (Level_Id).w, D0                             ; $FFFFFE10
		ror.b   #$01, D0
		lsr.w   #$05, D0
		add.w   D1, D0
		lea     (Level_Layout), A1                     ; loc_3CA4E
		move.w  $00(A1, D0), D0
		lea     $00(A1, D0.l), A1
		moveq   #$00, D1
		move.w  D1, D2
		move.b  (A1)+, D1
		move.b  (A1)+, D2
		move.l  D1, D5
		addq.l  #$01, D5
		moveq   #$00, D3
		move.w  #$0080, D3
		divu.w  D5, D3
		subq.w  #$01, D3
loc_79EA:
		move.l  A3, A0
		move.w  D3, D4
loc_79EE:
		move.l  A1, -(A7)
		move.w  D1, D0
loc_79F2:
		move.b  (A1)+, (A0)+
		dbra    D0, loc_79F2
		move.l  (A7)+, A1
		dbra    D4, loc_79EE
		lea     $00(A1, D5), A1
		lea     $0100(A3), A3
		dbra    D2, loc_79EA
		rts
;===============================================================================
; Load the 16x16, 128x128 Tiles and the stage layout
; [ End ]
;===============================================================================

; loc_7A0C: ; Not used
		lea     ($00FE0000), A1
		lea     ($00FE0080), A2
		lea     (M68K_RAM_Start), A3                         ; $FFFF0000
		move.w  #$003F, D1
loc_7A22:
		bsr     loc_7AB4
		bsr     loc_7AB4
		dbra    D1, loc_7A22
		lea     ($00FE0000), A1
		lea     (M68K_RAM_Start&$00FFFFFF), A2               ; $00FF0000
		move.w  #$003F, D1
loc_7A3E:
		move.w  #$0000, (A2)+
		dbra    D1, loc_7A3E
		move.w  #$3FBF, D1
loc_7A4A:
		move.w  (A1)+, (A2)+
		dbra    D1, loc_7A4A
		rts
;-------------------------------------------------------------------------------
; loc_7A52: ; Not used
		lea     ($00FE0000), A1
		lea     (M68K_RAM_Start), A3                         ; $FFFF0000
		moveq   #$1F, D0
loc_7A60:
		move.l  (A1)+, (A3)+
		dbra    D0, loc_7A60
		moveq   #$00, D7
		lea     ($00FE0000), A1
		move.w  #$00FF, D5
loc_7A72:
		lea     (M68K_RAM_Start), A3                         ; $FFFF0000
		move.w  D7, D6
loc_7A7A:
		movem.l A1-A3, -(A7)
		move.w  #$003F, D0
loc_7A82:
		cmpm.w  (A1)+, (A3)+
		bne.s   loc_7A98
		dbra    D0, loc_7A82
		movem.l (A7)+, A1-A3
		adda.w  #$0080, A1
		dbra    D5, loc_7A72
		bra.s   loc_7AB2
loc_7A98:
		movem.l (A7)+, A1-A3
		adda.w  #$0080, A3
		dbra    D6, loc_7A7A
		moveq   #$1F, D0
loc_7AA6:
		move.l  (A1)+, (A3)+
		dbra    D0, loc_7AA6
		addq.l  #$01, D7
		dbra    D5, loc_7A72
loc_7AB2:
		bra.s   loc_7AB2
;-------------------------------------------------------------------------------
loc_7AB4: ; Refer ncia de rotina n o usada
		moveq   #$07, D0
loc_7AB6:
		move.l  (A3)+, (A1)+
		move.l  (A3)+, (A1)+
		move.l  (A3)+, (A1)+
		move.l  (A3)+, (A1)+
		move.l  (A3)+, (A2)+
		move.l  (A3)+, (A2)+
		move.l  (A3)+, (A2)+
		move.l  (A3)+, (A2)+
		dbra    D0, loc_7AB6
		adda.w  #$0080, A1
		adda.w  #$0080, A2
		rts
;===============================================================================
; Routine to define the boundaries of the screen and load the level bosses
; [ Begin ]
;===============================================================================
Dyn_Screen_Boss_Loader:                                        ; loc_7AD4
		moveq   #$00, D0
		move.b  (Level_Id).w, D0                             ; $FFFFFE10
		add.w   D0, D0
		move.w  DynResize_Index(PC, D0), D0            ; loc_7B3A
		jsr     DynResize_Index(PC, D0)                ; loc_7B3A
		moveq   #$02, D1
		move.w  ($FFFFEEC6).w, D0
		sub.w   ($FFFFEECE).w, D0
		beq.s   loc_7B12
		bcc.s   loc_7B14
		neg.w   D1
		move.w  (Camera_Y).w, D0                             ; $FFFFEE04
		cmp.w   ($FFFFEEC6).w, D0
		bls.s   loc_7B08
		move.w  D0, (Sonic_Level_Limits_Max_Y).w             ; $FFFFEECE
		andi.w  #$FFFFFFFE, (Sonic_Level_Limits_Max_Y).w         ; $FFFFEECE
loc_7B08:
		add.w   D1, ($FFFFEECE).w
		move.b  #$01, (Vertical_Scroll_Flag).w               ; $FFFFEEDE
loc_7B12:
		rts
loc_7B14:
		move.w  (Camera_Y).w, D0                             ; $FFFFEE04
		addi.w  #$0008, D0
		cmp.w   ($FFFFEECE).w, D0
		bcs.s   loc_7B2E
		btst    #$01, ($FFFFB022).w
		beq.s   loc_7B2E
		add.w   D1, D1
		add.w   D1, D1
loc_7B2E:
		add.w   D1, ($FFFFEECE).w
		move.b  #$01, (Vertical_Scroll_Flag).w               ; $FFFFEEDE
		rts
;-------------------------------------------------------------------------------
DynResize_Index:                                               ; loc_7B3A
		dc.w    DynResize_GHz-DynResize_Index          ; loc_7B5C
		dc.w    DynResize_Lvl1-DynResize_Index         ; loc_7BE4
		dc.w    DynResize_Wz-DynResize_Index           ; loc_7BE6
		dc.w    DynResize_Lvl3-DynResize_Index         ; loc_7BE8
		dc.w    DynResize_Mz-DynResize_Index           ; loc_7BEA
		dc.w    DynResize_Mz3-DynResize_Index          ; loc_7BEC
		dc.w    DynResize_Lvl6-DynResize_Index         ; loc_7C58
		dc.w    DynResize_HTz-DynResize_Index          ; loc_7C5A
		dc.w    DynResize_HPz-DynResize_Index          ; loc_82AC
		dc.w    DynResize_Lvl9-DynResize_Index         ; loc_82AE
		dc.w    DynResize_OOz-DynResize_Index          ; loc_82B0
		dc.w    DynResize_DHz-DynResize_Index          ; loc_82B2
		dc.w    DynResize_CNz-DynResize_Index          ; loc_8372
		dc.w    DynResize_CPz-DynResize_Index          ; loc_83EA
		dc.w    DynResize_GCz-DynResize_Index          ; loc_83EC
		dc.w    DynResize_NGHz-DynResize_Index         ; loc_83EE
		dc.w    DynResize_DEz-DynResize_Index          ; loc_8466
;===============================================================================
DynResize_GHz:                                                 ; loc_7B5C
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne.s   DynResize_GHz_Act_2                    ; loc_7B64
		rts
;-------------------------------------------------------------------------------
DynResize_GHz_Act_2:                                           ; loc_7B64
		moveq   #$00, D0
		move.b  (Dyn_Resize_Routine).w, D0                   ; $FFFFEEDF
		move.w  DynResize_GHz_Idx(PC, D0), D0          ; loc_7B72
		jmp     DynResize_GHz_Idx(PC, D0)              ; loc_7B72
;-------------------------------------------------------------------------------
DynResize_GHz_Idx:                                             ; loc_7B72
		dc.w    loc_7B78-DynResize_GHz_Idx
		dc.w    loc_7BC2-DynResize_GHz_Idx
		dc.w    loc_7BD6-DynResize_GHz_Idx
;-------------------------------------------------------------------------------
loc_7B78:
		cmpi.w  #$26E0, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_7BC0
		move.w  (Camera_X).w, (Sonic_Level_Limits_Min_X).w ; $FFFFEE00, $FFFFEEC8
		move.w  #$0390, ($FFFFEEC6).w
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		bsr     SingleObjectLoad                       ; loc_E6FE
		bne.s   loc_7BAC
		move.b  #$56, (A1)        ; Carrega o Object 0x56 - Chefe da GHz
		move.b  #$81, Obj_Subtype(A1)                            ; $0028
		move.w  #$29D0, Obj_X(A1)                                ; $0008
		move.w  #$0426, Obj_Y(A1)                                ; $000C
loc_7BAC:
		move.w  #$008E, D0   ; play Chemical Plant Zone music (wrong ID)
		bsr     Play_Music                             ; loc_150C
		move.b  #$02, (Boss_Flag).w                          ; $FFFFF7AA
		moveq   #$29, D0
		bra     LoadPLC                                ; loc_1794
loc_7BC0:
		rts
;-------------------------------------------------------------------------------
loc_7BC2:
		cmpi.w  #$2880, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_7BD4
		move.w  #$2880, (Sonic_Level_Limits_Min_X).w         ; $FFFFEEC8
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_7BD4:
		rts
;-------------------------------------------------------------------------------
loc_7BD6:
		tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
		beq.s   loc_7BE0
		bsr     Load_Level_Results                     ; loc_F1F6
loc_7BE0:
		rts
;===============================================================================
		rts
;===============================================================================
DynResize_Lvl1:                                                ; loc_7BE4
		rts
;===============================================================================
DynResize_Wz:                                                  ; loc_7BE6
		rts
;===============================================================================
DynResize_Lvl3:                                                ; loc_7BE8
		rts
;===============================================================================
DynResize_Mz:                                                  ; loc_7BEA
		rts
;===============================================================================
DynResize_Mz3:                                                 ; loc_7BEC
		rts
; loc_7BEE:
		moveq   #$00, D0
		move.b  (Dyn_Resize_Routine).w, D0                   ; $FFFFEEDF
		move.w  DynResize_Mz3_Idx(PC, D0), D0          ; loc_7BFC
		jmp     DynResize_Mz3_Idx(PC, D0)              ; loc_7BFC
;-------------------------------------------------------------------------------
DynResize_Mz3_Idx:                                             ; loc_7BFC
		dc.w    loc_7C02-DynResize_Mz3_Idx
		dc.w    loc_7C32-DynResize_Mz3_Idx
		dc.w    loc_7C4C-DynResize_Mz3_Idx
;-------------------------------------------------------------------------------
loc_7C02:
		cmpi.w  #$2800, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_7C30
		move.w  (Camera_X).w, (Sonic_Level_Limits_Min_X).w ; $FFFFEE00, $FFFFEEC8
		move.w  #$0400, ($FFFFEEC6).w
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		bsr     SingleObjectLoad                       ; loc_E6FE
		bne.s   loc_7C24
		move.b  #$54, (A1)         ; Carrega o Object 0x54 - Chefe da Mz
loc_7C24:
		move.b  #$07, (Boss_Flag).w                          ; $FFFFF7AA
		moveq   #$2E, D0
		bra     LoadPLC                                ; loc_1794
loc_7C30:
		rts
;-------------------------------------------------------------------------------
loc_7C32:
		cmpi.w  #$2980, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_7C4A
		move.w  #$2980, (Sonic_Level_Limits_Max_X).w         ; $FFFFEECA
		move.w  #$2980, (Sonic_Level_Limits_Min_X).w         ; $FFFFEEC8
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_7C4A:
		rts
;-------------------------------------------------------------------------------
loc_7C4C:
		tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
		beq.s   loc_7C56
		bsr     Load_Level_Results                     ; loc_F1F6
loc_7C56:
		rts
;===============================================================================
DynResize_Lvl6:                                                ; loc_7C58
		rts
;===============================================================================
DynResize_HTz:                                                 ; loc_7C5A
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne     DynResize_HTz_Act_2                    ; loc_7EBE
		moveq   #$00, D0
		move.b  (Dyn_Resize_Routine).w, D0                   ; $FFFFEEDF
		move.w  DynResize_HTz_Act_1_Idx(PC, D0), D0    ; loc_7C70
		jmp     DynResize_HTz_Act_1_Idx(PC, D0)        ; loc_7C70
;-------------------------------------------------------------------------------
DynResize_HTz_Act_1_Idx:                                       ; loc_7C70
		dc.w    loc_7C76-DynResize_HTz_Act_1_Idx
		dc.w    loc_7CE2-DynResize_HTz_Act_1_Idx
		dc.w    loc_7DE8-DynResize_HTz_Act_1_Idx
;-------------------------------------------------------------------------------
loc_7C76:
		cmpi.w  #$0400, (Camera_Y).w                         ; $FFFFEE04
		bcs.s   loc_7CBE
		cmpi.w  #$1800, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_7CBE
		move.b  #$01, ($FFFFEEBC).w
		move.l  (Camera_X).w, (Camera_X_x2).w     ; $FFFFEE00, $FFFFEE08
		move.l  (Camera_Y).w, (Camera_Y_x4).w     ; $FFFFEE04, $FFFFEE0C
		moveq   #$00, D0
		move.w  D0, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		move.w  D0, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		move.w  D0, ($FFFFEEE2).w
		move.w  #$0140, ($FFFFEEE4).w
		subi.w  #$0100, ($FFFFEE0C).w
		move.w  #$0000, ($FFFFEEE6).w
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_7CBC:
		rts
loc_7CBE:
		tst.b   ($FFFFEEBC).w
		beq.s   loc_7CBC
		move.w  #$0200, D0
		moveq   #$00, D1
		move.w  D1, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		move.w  D1, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		bsr     loc_7E4C
		or.w    D0, D1
		bne.s   loc_7CBC
		move.b  #$00, ($FFFFEEBC).w
		rts
;-------------------------------------------------------------------------------
loc_7CE2:
		cmpi.w  #$1978, (Camera_X).w                         ; $FFFFEE00
		bcs     loc_7D74
		cmpi.w  #$1E00, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_7CFC
		move.b  #$00, ($FFFFEEBD).w
		bra.s   loc_7D74
loc_7CFC:
		tst.b   ($FFFFEEE8).w
		bne.s   loc_7D2C
		cmpi.w  #$0140, ($FFFFEEE4).w
		beq.s   loc_7D56
		move.w  ($FFFFFE04).w, D0
		move.w  D0, D1
		andi.w  #$0003, D0
		bne.s   loc_7D74
		addq.w  #$01, ($FFFFEEE4).w
		andi.w  #$003F, D1
		bne.s   loc_7D74
		move.w  #$00E1, D0
		jsr     (Play_Sfx)                             ; loc_1512
		bra.s   loc_7D74
loc_7D2C:
		cmpi.w  #$00E0, ($FFFFEEE4).w
		beq.s   loc_7D56
		move.w  ($FFFFFE04).w, D0
		move.w  D0, D1
		andi.w  #$0003, D0
		bne.s   loc_7D74
		subq.w  #$01, ($FFFFEEE4).w
		andi.w  #$003F, D1
		bne.s   loc_7D74
		move.w  #$00E1, D0
		jsr     (Play_Sfx)                             ; loc_1512
		bra.s   loc_7D74
loc_7D56:
		move.b  #$00, ($FFFFEEBD).w
		subq.w  #$01, ($FFFFEEE6).w
		bpl.s   loc_7D74
		move.w  #$0078, ($FFFFEEE6).w
		eori.b  #$01, ($FFFFEEE8).w
		move.b  #$01, ($FFFFEEBD).w
loc_7D74:
		cmpi.w  #$1800, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_7D9C
		cmpi.w  #$1F00, (Camera_X).w                         ; $FFFFEE00
		bcc.s   loc_7DC2
		move.w  (Horizontal_Scrolling).w, (Horizontal_Scrolling_Sub).w ; $FFFFEEB0, $FFFFEEB4
		move.w  (Vertical_Scrolling).w, (Vertical_Scrolling_Sub).w ; $FFFFEEB2, $FFFFEEB6
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		move.w  (Camera_Y).w, D1                             ; $FFFFEE04
		bra     loc_7E4C
loc_7D9C:
		move.l  #$04000000, (Camera_X_x2).w                  ; $FFFFEE08
		moveq   #$00, D0
		move.l  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.l  D0, ($FFFFEEE2).w
		move.b  D0, ($FFFFEEE8).w
		subq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		move.w  #$00F8, D0
		jsr     (Play_Sfx)                             ; loc_1512
		rts
loc_7DC2:
		move.l  #$04000000, (Camera_X_x2).w                  ; $FFFFEE08
		moveq   #$00, D0
		move.l  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.l  D0, ($FFFFEEE2).w
		move.b  D0, ($FFFFEEE8).w
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		move.w  #$00F8, D0
		jsr     (Play_Sfx)                             ; loc_1512
		rts
;-------------------------------------------------------------------------------
loc_7DE8:
		cmpi.w  #$1F00, (Camera_X).w                         ; $FFFFEE00
		bcc.s   loc_7E28
		move.b  #$01, ($FFFFEEBC).w
		move.l  (Camera_X).w, (Camera_X_x2).w     ; $FFFFEE00, $FFFFEE08
		move.l  (Camera_Y).w, (Camera_Y_x4).w     ; $FFFFEE04, $FFFFEE0C
		moveq   #$00, D0
		move.w  D0, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		move.w  D0, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		move.w  D0, ($FFFFEEE2).w
		move.w  #$0140, ($FFFFEEE4).w
		subi.w  #$0100, ($FFFFEE0C).w
		move.w  #$0000, ($FFFFEEE6).w
		subq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_7E26:
		rts
loc_7E28:
		tst.b   ($FFFFEEBC).w
		beq.s   loc_7E26
		move.w  #$0200, D0
		moveq   #$00, D1
		move.w  D1, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		move.w  D1, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		bsr     loc_7E4C
		or.w    D0, D1
		bne.s   loc_7E26
		move.b  #$00, ($FFFFEEBC).w
		rts
loc_7E4C:
		sub.w   ($FFFFEE08).w, D0
		sub.w   ($FFFFEEE2).w, D0
		bpl.s   loc_7E62
		cmpi.w  #$FFF0, D0
		bgt.s   loc_7E60
		move.w  #$FFF0, D0
loc_7E60:
		bra.s   loc_7E6C
loc_7E62:
		cmpi.w  #$0010, D0
		bcs.s   loc_7E6C
		move.w  #$0010, D0
loc_7E6C:
		move.b  D0, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		sub.w   ($FFFFEE0C).w, D1
		sub.w   ($FFFFEEE4).w, D1
		bpl.s   loc_7E86
		cmpi.w  #$FFF0, D1
		bgt.s   loc_7E84
		move.w  #$FFF0, D1
loc_7E84:
		bra.s   loc_7E90
loc_7E86:
		cmpi.w  #$0010, D1
		bcs.s   loc_7E90
		move.w  #$0010, D1
loc_7E90:
		move.b  D1, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		rts
;-------------------------------------------------------------------------------
; loc_7E96: ; Not used
		btst    #$00, ($FFFFF606).w
		beq.s   loc_7EA8
		tst.w   ($FFFFEEE4).w
		beq.s   loc_7EA8
		subq.w  #$01, ($FFFFEEE4).w
loc_7EA8:
		btst    #$01, ($FFFFF606).w
		beq.s   loc_7EBC
		cmpi.w  #$0700, ($FFFFEEE4).w
		beq.s   loc_7EBC
		addq.w  #$01, ($FFFFEEE4).w
loc_7EBC:
		rts
;-------------------------------------------------------------------------------
DynResize_HTz_Act_2:                                           ; loc_7EBE
		bsr     loc_8238
		moveq   #$00, D0
		move.b  (Dyn_Resize_Routine).w, D0                   ; $FFFFEEDF
		move.w  DynResize_HTz_Act_2_Idx(PC, D0), D0    ; loc_7ED0
		jmp     DynResize_HTz_Act_2_Idx(PC, D0)        ; loc_7ED0
;-------------------------------------------------------------------------------
DynResize_HTz_Act_2_Idx:                                       ; loc_7ED0
		dc.w    loc_7EE0-DynResize_HTz_Act_2_Idx
		dc.w    loc_7F62-DynResize_HTz_Act_2_Idx
		dc.w    loc_8068-DynResize_HTz_Act_2_Idx
		dc.w    loc_80CC-DynResize_HTz_Act_2_Idx
		dc.w    loc_81CA-DynResize_HTz_Act_2_Idx
		dc.w    loc_8256-DynResize_HTz_Act_2_Idx
		dc.w    loc_8286-DynResize_HTz_Act_2_Idx
		dc.w    loc_82A0-DynResize_HTz_Act_2_Idx
;-------------------------------------------------------------------------------
loc_7EE0:
		cmpi.w  #$14C0, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_7F3E
		move.b  #$01, ($FFFFEEBC).w
		move.l  (Camera_X).w, (Camera_X_x2).w     ; $FFFFEE00, $FFFFEE08
		move.l  (Camera_Y).w, (Camera_Y_x4).w     ; $FFFFEE04, $FFFFEE0C
		moveq   #$00, D0
		move.w  D0, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		move.w  D0, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		move.w  D0, ($FFFFEEE2).w
		move.w  #$02C0, ($FFFFEEE4).w
		subi.w  #$0100, ($FFFFEE0C).w
		move.w  #$0000, ($FFFFEEE6).w
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		cmpi.w  #$0380, (Camera_Y).w                         ; $FFFFEE04
		bcs.s   loc_7F3C
		move.w  #$F980, ($FFFFEEE2).w
		addi.w  #$0480, ($FFFFEE08).w
		move.w  #$0300, ($FFFFEEE4).w
		addq.b  #$06, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_7F3C:
		rts
loc_7F3E:
		tst.b   ($FFFFEEBC).w
		beq.s   loc_7F3C
		move.w  #$0200, D0
		moveq   #$00, D1
		move.w  D1, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		move.w  D1, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		bsr     loc_7E4C
		or.w    D0, D1
		bne.s   loc_7F3C
		move.b  #$00, ($FFFFEEBC).w
		rts
;-------------------------------------------------------------------------------
loc_7F62:
		cmpi.w  #$1678, (Camera_X).w                         ; $FFFFEE00
		bcs     loc_7FF4
		cmpi.w  #$1A00, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_7F7C
		move.b  #$00, ($FFFFEEBD).w
		bra.s   loc_7FF4
loc_7F7C:
		tst.b   ($FFFFEEE8).w
		bne.s   loc_7FAC
		cmpi.w  #$02C0, ($FFFFEEE4).w
		beq.s   loc_7FD6
		move.w  ($FFFFFE04).w, D0
		move.w  D0, D1
		andi.w  #$0003, D0
		bne.s   loc_7FF4
		addq.w  #$01, ($FFFFEEE4).w
		andi.w  #$003F, D1
		bne.s   loc_7FF4
		move.w  #$00E1, D0
		jsr     (Play_Sfx)                             ; loc_1512
		bra.s   loc_7FF4
loc_7FAC:
		cmpi.w  #$0000, ($FFFFEEE4).w
		beq.s   loc_7FD6
		move.w  ($FFFFFE04).w, D0
		move.w  D0, D1
		andi.w  #$0003, D0
		bne.s   loc_7FF4
		subq.w  #$01, ($FFFFEEE4).w
		andi.w  #$003F, D1
		bne.s   loc_7FF4
		move.w  #$00E1, D0
		jsr     (Play_Sfx)                             ; loc_1512
		bra.s   loc_7FF4
loc_7FD6:
		move.b  #$00, ($FFFFEEBD).w
		subq.w  #$01, ($FFFFEEE6).w
		bpl.s   loc_7FF4
		move.w  #$0078, ($FFFFEEE6).w
		eori.b  #$01, ($FFFFEEE8).w
		move.b  #$01, ($FFFFEEBD).w
loc_7FF4:
		cmpi.w  #$14C0, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_801C
		cmpi.w  #$1B00, (Camera_X).w                         ; $FFFFEE00
		bcc.s   loc_8042
		move.w  (Horizontal_Scrolling).w, (Horizontal_Scrolling_Sub).w ; $FFFFEEB0, $FFFFEEB4
		move.w  (Vertical_Scrolling).w, (Vertical_Scrolling_Sub).w ; $FFFFEEB2, $FFFFEEB6
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		move.w  (Camera_Y).w, D1                             ; $FFFFEE04
		bra     loc_7E4C
loc_801C:
		move.l  #$04000000, (Camera_X_x2).w                  ; $FFFFEE08
		moveq   #$00, D0
		move.l  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.l  D0, ($FFFFEEE2).w
		move.b  D0, ($FFFFEEE8).w
		subq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		move.w  #$00F8, D0
		jsr     (Play_Sfx)                             ; loc_1512
		rts
loc_8042:
		move.l  #$04000000, (Camera_X_x2).w                  ; $FFFFEE08
		moveq   #$00, D0
		move.l  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.l  D0, ($FFFFEEE2).w
		move.b  D0, ($FFFFEEE8).w
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		move.w  #$00F8, D0
		jsr     (Play_Sfx)                             ; loc_1512
		rts
;-------------------------------------------------------------------------------
loc_8068:
		cmpi.w  #$1B00, (Camera_X).w                         ; $FFFFEE00
		bcc.s   loc_80A8
		move.b  #$01, ($FFFFEEBC).w
		move.l  (Camera_X).w, (Camera_X_x2).w     ; $FFFFEE00, $FFFFEE08
		move.l  (Camera_Y).w, (Camera_Y_x4).w     ; $FFFFEE04, $FFFFEE0C
		moveq   #$00, D0
		move.w  D0, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		move.w  D0, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		move.w  D0, ($FFFFEEE2).w
		move.w  #$02C0, ($FFFFEEE4).w
		subi.w  #$0100, ($FFFFEE0C).w
		move.w  #$0000, ($FFFFEEE6).w
		subq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_80A6:
		rts
loc_80A8:
		tst.b   ($FFFFEEBC).w
		beq.s   loc_80A6
		move.w  #$0200, D0
		moveq   #$00, D1
		move.w  D1, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		move.w  D1, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		bsr     loc_7E4C
		or.w    D0, D1
		bne.s   loc_80A6
		move.b  #$00, ($FFFFEEBC).w
		rts
;-------------------------------------------------------------------------------
loc_80CC:
		cmpi.w  #$15F0, (Camera_X).w                         ; $FFFFEE00
		bcs     loc_8156
		cmpi.w  #$1AC0, (Camera_X).w                         ; $FFFFEE00
		bcc.s   loc_8156
		tst.b   ($FFFFEEE8).w
		bne.s   loc_810E
		cmpi.w  #$0300, ($FFFFEEE4).w
		beq.s   loc_8138
		move.w  ($FFFFFE04).w, D0
		move.w  D0, D1
		andi.w  #$0003, D0
		bne.s   loc_8156
		addq.w  #$01, ($FFFFEEE4).w
		andi.w  #$003F, D1
		bne.s   loc_8156
		move.w  #$00E1, D0
		jsr     (Play_Sfx)                             ; loc_1512
		bra.s   loc_8156
loc_810E:
		cmpi.w  #$0000, ($FFFFEEE4).w
		beq.s   loc_8138
		move.w  ($FFFFFE04).w, D0
		move.w  D0, D1
		andi.w  #$0003, D0
		bne.s   loc_8156
		subq.w  #$01, ($FFFFEEE4).w
		andi.w  #$003F, D1
		bne.s   loc_8156
		move.w  #$00E1, D0
		jsr     (Play_Sfx)                             ; loc_1512
		bra.s   loc_8156
loc_8138:
		move.b  #$00, ($FFFFEEBD).w
		subq.w  #$01, ($FFFFEEE6).w
		bpl.s   loc_8156
		move.w  #$0078, ($FFFFEEE6).w
		eori.b  #$01, ($FFFFEEE8).w
		move.b  #$01, ($FFFFEEBD).w
loc_8156:
		cmpi.w  #$14C0, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_817E
		cmpi.w  #$1B00, (Camera_X).w                         ; $FFFFEE00
		bcc.s   loc_81A4
		move.w  (Horizontal_Scrolling).w, (Horizontal_Scrolling_Sub).w ; $FFFFEEB0, $FFFFEEB4
		move.w  (Vertical_Scrolling).w, (Vertical_Scrolling_Sub).w ; $FFFFEEB2, $FFFFEEB6
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		move.w  (Camera_Y).w, D1                             ; $FFFFEE04
		bra     loc_7E4C
loc_817E:
		move.l  #$04000000, (Camera_X_x2).w                  ; $FFFFEE08
		moveq   #$00, D0
		move.l  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.l  D0, ($FFFFEEE2).w
		move.b  D0, ($FFFFEEE8).w
		subq.b  #$06, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		move.w  #$00F8, D0
		jsr     (Play_Sfx)                             ; loc_1512
		rts
loc_81A4:
		move.l  #$04000000, (Camera_X_x2).w                  ; $FFFFEE08
		moveq   #$00, D0
		move.l  D0, (Camera_Y_x4).w                          ; $FFFFEE0C
		move.l  D0, ($FFFFEEE2).w
		move.b  D0, ($FFFFEEE8).w
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		move.w  #$00F8, D0
		jsr     (Play_Sfx)                             ; loc_1512
		rts
;-------------------------------------------------------------------------------
loc_81CA:
		cmpi.w  #$1B00, (Camera_X).w                         ; $FFFFEE00
		bcc.s   loc_8212
		move.b  #$01, ($FFFFEEBC).w
		move.l  (Camera_X).w, (Camera_X_x2).w     ; $FFFFEE00, $FFFFEE08
		move.l  (Camera_Y).w, (Camera_Y_x4).w     ; $FFFFEE04, $FFFFEE0C
		moveq   #$00, D0
		move.w  D0, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		move.w  D0, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		move.w  #$F980, ($FFFFEEE2).w
		addi.w  #$0480, ($FFFFEE08).w
		move.w  #$0300, ($FFFFEEE4).w
		subi.w  #$0100, ($FFFFEE0C).w
		move.w  #$0000, ($FFFFEEE6).w
		subq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_8210:
		rts
loc_8212:
		tst.b   ($FFFFEEBC).w
		beq.s   loc_8210
		move.w  #$0200, D0
		moveq   #$00, D1
		move.w  D1, (Horizontal_Scrolling_Sub).w             ; $FFFFEEB4
		move.w  D1, (Vertical_Scrolling_Sub).w               ; $FFFFEEB6
		bsr     loc_7E4C
		or.w    D0, D1
		bne.s   loc_8210
		move.b  #$00, ($FFFFEEBC).w
		rts
;-------------------------------------------------------------------------------
		rts
;-------------------------------------------------------------------------------
loc_8238:
		cmpi.w  #$2B00, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_8254
		cmpi.b  #$0A, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		bge.s   loc_8254
		move.b  #$0A, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		move.b  #$00, ($FFFFEEBC).w
loc_8254:
		rts
;-------------------------------------------------------------------------------
loc_8256:
		cmpi.w  #$2B80, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_8284
		move.w  (Camera_X).w, (Sonic_Level_Limits_Min_X).w ; $FFFFEE00, $FFFFEEC8
		move.w  #$04A0, ($FFFFEEC6).w
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		bsr     SingleObjectLoad                       ; loc_E6FE
		bne.s   loc_8278
		move.b  #$52, (A1)        ; Carrega o Object 0x52 - Chefe da HTz
loc_8278:
		move.b  #$03, (Boss_Flag).w                          ; $FFFFF7AA
		moveq   #$2A, D0
		bra     LoadPLC                                ; loc_1794
loc_8284:
		rts
;-------------------------------------------------------------------------------
loc_8286:
		cmpi.w  #$2E80, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_829E
		move.w  #$3040, ($FFFFEEC2).w
		move.w  #$2E80, (Sonic_Level_Limits_Min_X).w         ; $FFFFEEC8
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_829E:
		rts
;-------------------------------------------------------------------------------
loc_82A0:
		tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
		beq.s   loc_82AA
		bsr     Load_Level_Results                     ; loc_F1F6
loc_82AA:
		rts
;===============================================================================
DynResize_HPz:                                                 ; loc_82AC
		rts
;===============================================================================
DynResize_Lvl9:                                                ; loc_82AE
		rts
;===============================================================================
DynResize_OOz:                                                 ; loc_82B0
		rts
;===============================================================================
DynResize_DHz:                                                 ; loc_82B2
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne.s   DynResize_DHz_Act_2                    ; loc_82BA
		rts
;-------------------------------------------------------------------------------
DynResize_DHz_Act_2:                                           ; loc_82BA:
		moveq   #$00, D0
		move.b  (Dyn_Resize_Routine).w, D0                   ; $FFFFEEDF
		move.w  DynResize_DHz_Idx(PC, D0), D0          ; loc_82C8
		jmp     DynResize_DHz_Idx(PC, D0)              ; loc_82C8
;-------------------------------------------------------------------------------
DynResize_DHz_Idx:                                             ; loc_82C8
		dc.w    loc_82CE-DynResize_DHz_Idx
		dc.w    loc_8338-DynResize_DHz_Idx
		dc.w    loc_8366-DynResize_DHz_Idx
;-------------------------------------------------------------------------------
loc_82CE:
		cmpi.w  #$05C0, (Camera_Y).w                         ; $FFFFEE04
		bcs.s   loc_8336
		cmpi.w  #$1C00, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_8336
		move.w  (Camera_X).w, (Sonic_Level_Limits_Min_X).w ; $FFFFEE00, $FFFFEEC8
		move.w  #$0600, ($FFFFEEC6).w
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		bsr     SingleObjectLoad                       ; loc_E6FE
		bne.s   loc_82F8
		move.b  #$57, (A1)        ; Carrega o Object 0x57 - Chefe da DHz
loc_82F8:
		move.l  #$6C000002, (VDP_Control_Port)               ; $00C00004
		lea     (VDP_Data_Port), A6                          ; $00C00000
		lea     (Art_DHz_Boss_Rocks), A2               ; loc_88F8C
		moveq   #$03, D0
loc_8310:
		move.l  (A2)+, (A6)
		move.l  (A2)+, (A6)
		move.l  (A2)+, (A6)
		move.l  (A2)+, (A6)
		move.l  (A2)+, (A6)
		move.l  (A2)+, (A6)
		move.l  (A2)+, (A6)
		move.l  (A2)+, (A6)
		dbra    D0, loc_8310
		move.b  #$05, (Boss_Flag).w                          ; $FFFFF7AA
		moveq   #$2C, D0
		bsr     LoadPLC                                ; loc_1794
		moveq   #$19, D0
		bsr     PalLoad2                               ; loc_2930
loc_8336:
		rts
;-------------------------------------------------------------------------------
loc_8338:
		cmpi.w  #$20F0, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_8350
		move.w  #$20F0, (Sonic_Level_Limits_Max_X).w         ; $FFFFEECA
		move.w  #$20F0, (Sonic_Level_Limits_Min_X).w         ; $FFFFEEC8
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_8350:
		subi.w  #$0001, ($FFFFEEC6).w
		cmpi.w  #$05E0, ($FFFFEEC6).w
		bcc.s   loc_8364
		move.w  #$05E0, ($FFFFEEC6).w
loc_8364:
		rts
;-------------------------------------------------------------------------------
loc_8366:
		tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
		beq.s   loc_8370
		bsr     Load_Level_Results                     ; loc_F1F6
loc_8370:
		rts
;===============================================================================
DynResize_CNz:                                                 ; loc_8372
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne.s   DynResize_CNz_Act_2                    ; loc_837A
		rts
;-------------------------------------------------------------------------------
DynResize_CNz_Act_2:                                           ; loc_837A
		moveq   #$00, D0
		move.b  (Dyn_Resize_Routine).w, D0                   ; $FFFFEEDF
		move.w  DynResize_CNz_Idx(PC, D0), D0          ; loc_8388
		jmp     DynResize_CNz_Idx(PC, D0)              ; loc_8388
;-------------------------------------------------------------------------------
DynResize_CNz_Idx:                                             ; loc_8388
		dc.w    loc_838E-DynResize_CNz_Idx
		dc.w    loc_83C4-DynResize_CNz_Idx
		dc.w    loc_83DE-DynResize_CNz_Idx
;-------------------------------------------------------------------------------
loc_838E:
		cmpi.w  #$2400, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_83C2
		move.w  (Camera_X).w, (Sonic_Level_Limits_Min_X).w ; $FFFFEE00, $FFFFEEC8
		move.w  #$05C0, ($FFFFEEC6).w
		move.w  #$05C0, (Sonic_Level_Limits_Max_Y).w         ; $FFFFEECE
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		bsr     SingleObjectLoad                       ; loc_E6FE
		bne.s   loc_83B6
		move.b  #$51, (A1)        ; Carrega o Object 0x51 - Chefe da CNz
loc_83B6:
		move.b  #$06, (Boss_Flag).w                          ; $FFFFF7AA
		moveq   #$2D, D0
		bra     LoadPLC                                ; loc_1794
loc_83C2:
		rts
;-------------------------------------------------------------------------------
loc_83C4:
		cmpi.w  #$2700, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_83DC
		move.w  #$2748, (Sonic_Level_Limits_Max_X).w         ; $FFFFEECA
		move.w  #$2700, (Sonic_Level_Limits_Min_X).w         ; $FFFFEEC8
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_83DC:
		rts
;-------------------------------------------------------------------------------
loc_83DE:
		tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
		beq.s   loc_83E8
		bsr     Load_Level_Results                     ; loc_F1F6
loc_83E8:
		rts
;===============================================================================
DynResize_CPz:                                                 ; loc_83EA
		rts
;===============================================================================
DynResize_GCz:                                                 ; loc_83EC
		rts
;===============================================================================
DynResize_NGHz:                                                ; loc_83EE
		tst.b   (Act_Id).w                                   ; $FFFFFE11
		bne.s   DynResize_NGHz_Act_2                   ; loc_83F6
		rts
;-------------------------------------------------------------------------------
DynResize_NGHz_Act_2:                                          ; loc_83F6
		moveq   #$00, D0
		move.b  (Dyn_Resize_Routine).w, D0                   ; $FFFFEEDF
		move.w  DynResize_NGHz_Idx(PC, D0), D0         ; loc_8404
		jmp     DynResize_NGHz_Idx(PC, D0)             ; loc_8404
;-------------------------------------------------------------------------------
DynResize_NGHz_Idx:                                            ; loc_8404
		dc.w    loc_840A-DynResize_NGHz_Idx
		dc.w    loc_8440-DynResize_NGHz_Idx
		dc.w    loc_845A-DynResize_NGHz_Idx
;-------------------------------------------------------------------------------
loc_840A:
		cmpi.w  #$28A0, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_843E
		move.w  (Camera_X).w, (Sonic_Level_Limits_Min_X).w ; $FFFFEE00, $FFFFEEC8
		move.w  #$0400, ($FFFFEEC6).w
		move.w  #$0400, (Sonic_Level_Limits_Max_Y).w         ; $FFFFEECE
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
		bsr     SingleObjectLoad                       ; loc_E6FE
		bne.s   loc_8432
		move.b  #$89, (A1)       ; Carrega o Object 0x89 - Chefe da NGHz
loc_8432:
		move.b  #$04, (Boss_Flag).w                          ; $FFFFF7AA
		moveq   #$2B, D0
		bra     LoadPLC                                ; loc_1794
loc_843E:
		rts
;-------------------------------------------------------------------------------
loc_8440:
		cmpi.w  #$2A40, (Camera_X).w                         ; $FFFFEE00
		bcs.s   loc_8458
		move.w  #$2A40, (Sonic_Level_Limits_Max_X).w         ; $FFFFEECA
		move.w  #$2A40, (Sonic_Level_Limits_Min_X).w         ; $FFFFEEC8
		addq.b  #$02, (Dyn_Resize_Routine).w                 ; $FFFFEEDF
loc_8458:
		rts
;-------------------------------------------------------------------------------
loc_845A:
		tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
		beq.s   loc_8464
		bsr     Load_Level_Results                     ; loc_F1F6
loc_8464:
		rts
;===============================================================================
DynResize_DEz:                                                 ; loc_8466
		rts
;===============================================================================
; Routine to define the boundaries of the screen and load the level bosses
; [ End ]
;===============================================================================

Obj11_Bridge:                                               ; loc_8468
;===============================================================================
; Object 0x11 - Bridges from Green Hill / Hidden Palace
; [ Begin ]
;===============================================================================
; loc_8468:
                btst    #$06, Obj_Flags(A0)                              ; $0001
                bne     loc_8480
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_8488(PC, D0), D1
                jmp     loc_8488(PC, D1)
;-------------------------------------------------------------------------------
loc_8480:
                move.w  #$0180, D0
                bra     DisplaySprite_Param                    ; loc_D35E
;-------------------------------------------------------------------------------
loc_8488:
                dc.w    loc_8490-loc_8488
                dc.w    loc_8576-loc_8488
                dc.w    loc_8608-loc_8488
                dc.w    loc_860C-loc_8488
;-------------------------------------------------------------------------------
loc_8490:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #GHz_Bridge_Mappings, Obj_Map(A0) ; loc_8A6C, $0004
                move.w  #$43B6, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                cmpi.b  #$08, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_84C2
                addq.b  #$04, Obj_Routine(A0)                            ; $0024
                move.l  #HPz_Bridge_Mappings, Obj_Map(A0) ; loc_8A24, $0004
                move.w  #$6300, Obj_Art_VRAM(A0)                         ; $0002
loc_84C2:
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$80, Obj_Width(A0)                              ; $0019
                move.w  Obj_Y(A0), D2                                    ; $000C
                move.w  D2, Obj_Control_Var_10(A0)                       ; $003C
                move.w  Obj_X(A0), D3                                    ; $0008
                lea     Obj_Subtype(A0), A2                              ; $0028
                moveq   #$00, D1
                move.b  (A2), D1
                move.w  D1, D0
                lsr.w   #$01, D0
                lsl.w   #$04, D0
                sub.w   D0, D3
                swap.w  D1
                move.w  #$0008, D1
                bsr.s   loc_8524
                move.w  Obj_Subtype(A1), D0                              ; $0028
                subq.w  #$08, D0
                move.w  D0, Obj_X(A1)                                    ; $0008
                move.l  A1, Obj_Control_Var_04(A0)                       ; $0030
                swap.w  D1
                subq.w  #$08, D1
                bls.s   loc_8522
                move.w  D1, D4
                bsr.s   loc_8524
                move.l  A1, Obj_Control_Var_08(A0)                       ; $0034
                move.w  D4, D0
                add.w   D0, D0
                add.w   D4, D0
                move.w  $10(A1, D0), D0
                subq.w  #$08, D0
                move.w  D0, Obj_X(A1)                                    ; $0008
loc_8522:
                bra.s   loc_8576
loc_8524:
                bsr     SingleObjectLoad_2                     ; loc_E714
                bne.s   loc_8574
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                bset    #$06, Obj_Flags(A1)                              ; $0001
                move.b  #$40, $000E(A1)
                move.b  D1, $000F(A1)
                subq.b  #$01, D1
                lea     Obj_Speed(A1), A2                                ; $0010
loc_8564:
                move.w  D3, (A2)+
                move.w  D2, (A2)+
                move.w  #$0000, (A2)+
                addi.w  #$0010, D3
                dbra    D1, loc_8564
loc_8574:
                rts
;-------------------------------------------------------------------------------
loc_8576:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne.s   loc_858C
                tst.b   Obj_Control_Var_12(A0)                           ; $003E
                beq.s   loc_85B8
                subq.b  #$04, Obj_Control_Var_12(A0)                     ; $003E
                bra.s   loc_85B4
loc_858C:
                andi.b  #$10, D0
                beq.s   loc_85A8
                move.b  Obj_Control_Var_13(A0), D0                       ; $003F
                sub.b   Obj_Control_Var_0F(A0), D0                       ; $003B
                beq.s   loc_85A8
                bcc.s   loc_85A4
                addq.b  #$01, Obj_Control_Var_13(A0)                     ; $003F
                bra.s   loc_85A8
loc_85A4:
                subq.b  #$01, Obj_Control_Var_13(A0)                     ; $003F
loc_85A8:
                cmpi.b  #$40, Obj_Control_Var_12(A0)                     ; $003E
                beq.s   loc_85B4
                addq.b  #$04, Obj_Control_Var_12(A0)                     ; $003E
loc_85B4:
                bsr     loc_87E4
loc_85B8:
                moveq   #$00, D1
                move.b  Obj_Subtype(A0), D1                              ; $0028
                lsl.w   #$03, D1
                move.w  D1, D2
                addq.w  #$08, D1
                add.w   D2, D2
                moveq   #$08, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     loc_866E
loc_85D0:
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                beq.s   loc_85D8
                rts
loc_85D8:
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_85EC
                rts
loc_85EC:
                move.l  Obj_Control_Var_04(A0), A1                       ; $0030
                bsr     DeleteObject_A1                        ; loc_D316
                cmpi.b  #$08, Obj_Subtype(A0)                            ; $0028
                bls.s   loc_8604
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                bsr     DeleteObject_A1                        ; loc_D316
loc_8604:
                bra     DeleteObject                           ; loc_D314
;-------------------------------------------------------------------------------
loc_8608:
                bra     DisplaySprite                          ; loc_D322
;-------------------------------------------------------------------------------
loc_860C:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne.s   loc_8622
                tst.b   Obj_Control_Var_12(A0)                           ; $003E
                beq.s   loc_864E
                subq.b  #$04, Obj_Control_Var_12(A0)                     ; $003E
                bra.s   loc_864A
loc_8622:
                andi.b  #$10, D0
                beq.s   loc_863E
                move.b  Obj_Control_Var_13(A0), D0                       ; $003F
                sub.b   Obj_Control_Var_0F(A0), D0                       ; $003B
                beq.s   loc_863E
                bcc.s   loc_863A
                addq.b  #$01, Obj_Control_Var_13(A0)                     ; $003F
                bra.s   loc_863E
loc_863A:
                subq.b  #$01, Obj_Control_Var_13(A0)                     ; $003F
loc_863E:
                cmpi.b  #$40, Obj_Control_Var_12(A0)                     ; $003E
                beq.s   loc_864A
                addq.b  #$04, Obj_Control_Var_12(A0)                     ; $003E
loc_864A:
                bsr     loc_87E4
loc_864E:
                moveq   #$00, D1
                move.b  Obj_Subtype(A0), D1                              ; $0028
                lsl.w   #$03, D1
                move.w  D1, D2
                addq.w  #$08, D1
                add.w   D2, D2
                moveq   #$08, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     loc_866E
                bsr     loc_870E
                bra     loc_85D0
loc_866E:
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                moveq   #$3B, D5
                movem.l D1-D4, -(A7)
                bsr.s   loc_8688
                movem.l (A7)+, D1-D4
                lea     (Player_One).w, A1                           ; $FFFFB000
                subq.b  #$01, D6
                moveq   #$3F, D5
loc_8688:
                btst    D6, Obj_Status(A0)                               ; $0022
                beq.s   loc_86EC
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne.s   loc_86A8
                moveq   #$00, D0
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                add.w   D1, D0
                bmi.s   loc_86A8
                cmp.w   D2, D0
                bcs.s   loc_86B6
loc_86A8:
                bclr    #$03, Obj_Status(A1)                             ; $0022
                bclr    D6, Obj_Status(A0)                               ; $0022
                moveq   #$00, D4
                rts
loc_86B6:
                lsr.w   #$04, D0
                move.b  D0, $00(A0, D5)
                move.l  Obj_Control_Var_04(A0), A2                       ; $0030
                cmpi.w  #$0008, D0
                bcs.s   loc_86CE
                move.l  Obj_Control_Var_08(A0), A2                       ; $0034
                subi.w  #$0008, D0
loc_86CE:
                add.w   D0, D0
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                move.w  $12(A2, D0), D0
                subq.w  #$08, D0
                moveq   #$00, D1
                move.b  Obj_Height_2(A1), D1                             ; $0016
                sub.w   D1, D0
                move.w  D0, Obj_Y(A1)                                    ; $000C
                moveq   #$00, D4
                rts
loc_86EC:
                move.w  D1, -(A7)
                bsr     loc_F922
                move.w  (A7)+, D1
                btst    D6, Obj_Status(A0)                               ; $0022
                beq.s   loc_870C
                moveq   #$00, D0
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                add.w   D1, D0
                lsr.w   #$04, D0
                move.b  D0, $00(A0, D5)
loc_870C:
                rts
loc_870E:
                moveq   #$00, D0
                tst.w   (Player_One+Obj_Speed).w                     ; $FFFFB010
                bne.s   loc_8720
                move.b  ($FFFFFE0F).w, D0
                andi.w  #$001C, D0
                lsr.w   #$01, D0
loc_8720:
                moveq   #$00, D2
                move.b  loc_874C+$01(PC, D0), D2
                swap.w  D2
                move.b  loc_874C(PC, D0), D2
                moveq   #$00, D0
                tst.w   (Player_Two+Obj_Speed).w                     ; $FFFFB050
                bne.s   loc_873E
                move.b  ($FFFFFE0F).w, D0
                andi.w  #$001C, D0
                lsr.w   #$01, D0
loc_873E:
                moveq   #$00, D6
                move.b  loc_874C+$01(PC, D0), D6
                swap.w  D6
                move.b  loc_874C(PC, D0), D6
                bra.s   loc_875C
;-------------------------------------------------------------------------------
loc_874C:
                dc.b    $01, $02, $01, $02, $01, $02, $01, $02
                dc.b    $00, $01, $00, $00, $00, $00, $00, $01
;-------------------------------------------------------------------------------
loc_875C:
                moveq   #-$02, D3
                moveq   #-$02, D4
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$08, D0
                beq.s   loc_876E
                move.b  Obj_Control_Var_13(A0), D3                       ; $003F
loc_876E:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$10, D0
                beq.s   loc_877C
                move.b  Obj_Control_Var_0F(A0), D4                       ; $003B
loc_877C:
                move.l  Obj_Control_Var_04(A0), A1                       ; $0030
                lea     $0045(A1), A2
                lea     $0015(A1), A1
                moveq   #$00, D1
                move.b  Obj_Subtype(A0), D1                              ; $0028
                subq.b  #$01, D1
                moveq   #$00, D5
loc_8792:
                moveq   #$00, D0
                subq.w  #$01, D3
                cmp.b   D3, D5
                bne.s   loc_879C
                move.w  D2, D0
loc_879C:
                addq.w  #$02, D3
                cmp.b   D3, D5
                bne.s   loc_87A4
                move.w  D2, D0
loc_87A4:
                subq.w  #$01, D3
                subq.w  #$01, D4
                cmp.b   D4, D5
                bne.s   loc_87AE
                move.w  D6, D0
loc_87AE:
                addq.w  #$02, D4
                cmp.b   D4, D5
                bne.s   loc_87B6
                move.w  D6, D0
loc_87B6:
                subq.w  #$01, D4
                cmp.b   D3, D5
                bne.s   loc_87C2
                swap.w  D2
                move.w  D2, D0
                swap.w  D2
loc_87C2:
                cmp.b   D4, D5
                bne.s   loc_87CC
                swap.w  D6
                move.w  D6, D0
                swap.w  D6
loc_87CC:
                move.b  D0, (A1)
                addq.w  #$01, D5
                addq.w  #$06, A1
                cmpa.w  A2, A1
                bne.s   loc_87DE
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                lea     $0015(A1), A1
loc_87DE:
                dbra    D1, loc_8792
                rts
loc_87E4:
                move.b  Obj_Control_Var_12(A0), D0                       ; $003E
                bsr     CalcSine                               ; loc_3282
                move.w  D0, D4
                lea     (loc_8924), A4
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsl.w   #$04, D0
                moveq   #$00, D3
                move.b  Obj_Control_Var_13(A0), D3                       ; $003F
                move.w  D3, D2
                add.w   D0, D3
                moveq   #$00, D5
                lea     (loc_8894-$80), A5
                move.b  $00(A5, D3), D5
                andi.w  #$000F, D3
                lsl.w   #$04, D3
                lea     $00(A4, D3), A3
                move.l  Obj_Control_Var_04(A0), A1                       ; $0030
                lea     $0042(A1), A2
                lea     Obj_Speed_Y(A1), A1                              ; $0012
loc_8828:
                moveq   #$00, D0
                move.b  (A3)+, D0
                addq.w  #$01, D0
                mulu.w  D5, D0
                mulu.w  D4, D0
                swap.w  D0
                add.w   Obj_Control_Var_10(A0), D0                       ; $003C
                move.w  D0, (A1)
                addq.w  #$06, A1
                cmpa.w  A2, A1
                bne.s   loc_8848
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                lea     Obj_Speed_Y(A1), A1                              ; $0012
loc_8848:
                dbra    D2, loc_8828
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                moveq   #$00, D3
                move.b  Obj_Control_Var_13(A0), D3                       ; $003F
                addq.b  #$01, D3
                sub.b   D0, D3
                neg.b   D3
                bmi.s   loc_8892
                move.w  D3, D2
                lsl.w   #$04, D3
                lea     $00(A4, D3), A3
                adda.w  D2, A3
                subq.w  #$01, D2
                bcs.s   loc_8892
loc_886E:
                moveq   #$00, D0
                move.b  -(A3), D0
                addq.w  #$01, D0
                mulu.w  D5, D0
                mulu.w  D4, D0
                swap.w  D0
                add.w   Obj_Control_Var_10(A0), D0                       ; $003C
                move.w  D0, (A1)
                addq.w  #$06, A1
                cmpa.w  A2, A1
                bne.s   loc_888E
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                lea     Obj_Speed_Y(A1), A1                              ; $0012
loc_888E:
                dbra    D2, loc_886E
loc_8892:
                rts
;-------------------------------------------------------------------------------
loc_8894:
                dc.b    $02, $04, $06, $08, $08, $06, $04, $02
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $08, $06, $04
                dc.b    $02, $00, $00, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0A, $08, $06
                dc.b    $04, $02, $00, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0A, $08
                dc.b    $06, $04, $02, $00, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0C, $0A
                dc.b    $08, $06, $04, $02, $00, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $0C
                dc.b    $0A, $08, $06, $04, $02, $00, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $0E
                dc.b    $0C, $0A, $08, $06, $04, $02, $00, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $10
                dc.b    $0E, $0C, $0A, $08, $06, $04, $02, $00
                dc.b    $02, $04, $06, $08, $0A, $0C, $0E, $10
                dc.b    $10, $0E, $0C, $0A, $08, $06, $04, $02
;-------------------------------------------------------------------------------
loc_8924:
                dc.b    $FF, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $B5, $FF, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $7E, $DB, $FF, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $61, $B5, $EC, $FF, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $4A, $93, $CD, $F3, $FF, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $3E, $7E, $B0, $DB, $F6, $FF, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $38, $6D, $9D, $C5, $E4, $F8, $FF, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $31, $61, $8E, $B5, $D4, $EC, $FB, $FF
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $2B, $56, $7E, $A2, $C1, $DB, $EE, $FB
                dc.b    $FF, $00, $00, $00, $00, $00, $00, $00
                dc.b    $25, $4A, $73, $93, $B0, $CD, $E1, $F3
                dc.b    $FC, $FF, $00, $00, $00, $00, $00, $00
                dc.b    $1F, $44, $67, $88, $A7, $BD, $D4, $E7
                dc.b    $F4, $FD, $FF, $00, $00, $00, $00, $00
                dc.b    $1F, $3E, $5C, $7E, $98, $B0, $C9, $DB
                dc.b    $EA, $F6, $FD, $FF, $00, $00, $00, $00
                dc.b    $19, $38, $56, $73, $8E, $A7, $BD, $D1
                dc.b    $E1, $EE, $F8, $FE, $FF, $00, $00, $00
                dc.b    $19, $38, $50, $6D, $83, $9D, $B0, $C5
                dc.b    $D8, $E4, $F1, $F8, $FE, $FF, $00, $00
                dc.b    $19, $31, $4A, $67, $7E, $93, $A7, $BD
                dc.b    $CD, $DB, $E7, $F3, $F9, $FE, $FF, $00
                dc.b    $19, $31, $4A, $61, $78, $8E, $A2, $B5
                dc.b    $C5, $D4, $E1, $EC, $F4, $FB, $FE, $FF
;-------------------------------------------------------------------------------
HPz_Bridge_Mappings:                                           ; loc_8A24
                include 'mappings/sprite/obj11_hpz.asm'
;-------------------------------------------------------------------------------
GHz_Bridge_Mappings:                                           ; loc_8A6C
                include 'mappings/sprite/obj11_ghz.asm'
;===============================================================================
; Object 0x11 - Bridges from Green Hill / Hidden Palace
; [ End ]
;===============================================================================
Obj15_Bridge:                                               ; loc_8A84
;===============================================================================
; Object 0x15 - Plataformas tipo pend lo na Neo Green Hill, Dust Hill e
; [ Begin ]          Oil Ocean
;===============================================================================
; loc_8A84:
                btst    #$06, Obj_Flags(A0)                              ; $0001
                bne     loc_8A9C
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_8AA4(PC, D0), D1
                jmp     loc_8AA4(PC, D1)
loc_8A9C:
                move.w  #$0200, D0
                bra     DisplaySprite_Param                    ; loc_D35E
;-------------------------------------------------------------------------------
loc_8AA4:
                dc.w    loc_8AB2-loc_8AA4
                dc.w    loc_8BFC-loc_8AA4
                dc.w    loc_8DD4-loc_8AA4
                dc.w    loc_8DD8-loc_8AA4
                dc.w    loc_8E92-loc_8AA4
                dc.w    loc_8E9A-loc_8AA4
                dc.w    loc_8F00-loc_8AA4
;-------------------------------------------------------------------------------
loc_8AB2:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #OOz_Swing_Platforms_Mappings, Obj_Map(A0) ; loc_8F82, $0004
                move.w  #$43E3, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$10, Obj_Height_2(A0)                           ; $0016
                move.w  Obj_Y(A0), Obj_Control_Var_0C(A0)         ; $000C, $0038
                move.w  Obj_X(A0), Obj_Control_Var_0E(A0)         ; $0008, $003A
                cmpi.b  #$0B, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_8B0A
                move.l  #DHz_Swing_Platforms_Mappings, Obj_Map(A0) ; loc_8FF0, $0004
                move.w  #$0000, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$18, Obj_Width(A0)                              ; $0019
                move.b  #$08, Obj_Height_2(A0)                           ; $0016
loc_8B0A:
                cmpi.b  #$0F, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_8B2C
                move.l  #NGHz_Swing_Platforms_Mappings, Obj_Map(A0) ; loc_8FB8, $0004
                move.w  #$0000, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$08, Obj_Height_2(A0)                           ; $0016
loc_8B2C:
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                moveq   #$00, D1
                move.b  Obj_Subtype(A0), D1                              ; $0028
                bpl.s   loc_8B3C
                addq.b  #$04, Obj_Routine(A0)                            ; $0024
loc_8B3C:
                andi.w  #$000F, D1
                move.w  D1, D2
                lsl.w   #$04, D2
                addi.b  #$08, D2
                move.b  D2, Obj_Control_Var_10(A0)                       ; $003C
                move.w  Obj_X(A0), D2                                    ; $0008
                move.w  Obj_Y(A0), D3                                    ; $000C
                bsr     SingleObjectLoad_2                     ; loc_E714
                bne.s   loc_8BD0
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                bset    #$06, Obj_Flags(A1)                              ; $0001
                move.b  #$48, $000E(A1)
                move.b  D1, $000F(A1)
                subq.b  #$01, D1
                lea     Obj_Speed(A1), A2                                ; $0010
loc_8B88:
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                move.w  #$0001, (A2)+
                addi.w  #$0010, D3
                dbra    D1, loc_8B88
                move.b  #$02, $0015(A1)
                move.w  Obj_Subtype(A1), Obj_X(A1)                ; $0008, $0028
                move.w  Obj_Timer(A1), Obj_Y(A1)                  ; $000C, $002A
                move.w  D2, Obj_Subtype(A1)                              ; $0028
                move.w  D3, Obj_Timer(A1)                                ; $002A
                move.b  #$01, Obj_Boss_Ani_Map(A1)                       ; $000B
                move.l  A1, Obj_Control_Var_04(A0)                       ; $0030
                addi.w  #$0008, D3
                move.w  D3, Obj_Y(A0)                                    ; $000C
                move.b  #$50, Obj_Inertia(A1)                            ; $0014
                bset    #$04, Obj_Flags(A1)                              ; $0001
loc_8BD0:
                move.w  #$8000, Obj_Angle(A0)                            ; $0026
                move.w  #$0000, Obj_Control_Var_12(A0)                   ; $003E
                move.b  Obj_Subtype(A0), D1                              ; $0028
                andi.w  #$0070, D1
                move.b  D1, Obj_Subtype(A0)                              ; $0028
                cmpi.b  #$40, D1
                bne.s   loc_8BFC
                move.l  #DHz_Swing_Platforms_Mappings_01, Obj_Map(A0) ; loc_9024, $0004
                move.b  #$A7, Obj_Col_Flags(A0)                          ; $0020
;-------------------------------------------------------------------------------
loc_8BFC:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_8C1C
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                moveq   #$00, D3
                move.b  Obj_Height_2(A0), D3                             ; $0016
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     Platform_Object_3                      ; loc_F8D0
                bra     loc_8DA6
loc_8C1C:
                moveq   #$00, D0
                moveq   #$00, D1
                move.b  ($FFFFFE78).w, D0
                move.b  Obj_Subtype(A0), D1                              ; $0028
                beq.s   loc_8C72
                cmpi.b  #$10, D1
                bne.s   loc_8C4A
                cmpi.b  #$3F, D0
                beq.s   loc_8C3C
                bcc.s   loc_8C72
                moveq   #$40, D0
                bra.s   loc_8C72
loc_8C3C:
                move.w  #$00D7, D0
                jsr     (Play_Sfx_Ex)                          ; loc_151E
                moveq   #$40, D0
                bra.s   loc_8C72
loc_8C4A:
                cmpi.b  #$20, D1
                bne.s   loc_8C56
                moveq   #$40, D0
                bra     loc_8D06
loc_8C56:
                cmpi.b  #$30, D1
                bne.s   loc_8C68
                cmpi.b  #$41, D0
                beq.s   loc_8C3C
                bcs.s   loc_8C72
                moveq   #$40, D0
                bra.s   loc_8C72
loc_8C68:
                cmpi.b  #$40, D1
                bne.s   loc_8C72
                bsr     loc_8D08
loc_8C72:
                move.w  #$0080, D1
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_8C82
                neg.w   D0
                add.w   D1, D0
loc_8C82:
                bsr     CalcSine                               ; loc_3282
                move.w  Obj_Control_Var_0C(A0), D2                       ; $0038
                move.w  Obj_Control_Var_0E(A0), D3                       ; $003A
                moveq   #$00, D4
                move.b  Obj_Control_Var_10(A0), D4                       ; $003C
                move.l  D4, D5
                muls.w  D0, D4
                asr.l   #$08, D4
                muls.w  D1, D5
                asr.l   #$08, D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D4, Obj_Y(A0)                                    ; $000C
                move.w  D5, Obj_X(A0)                                    ; $0008
                moveq   #$00, D6
                move.l  Obj_Control_Var_04(A0), A1                       ; $0030
                move.b  $000F(A1), D6
                subq.w  #$01, D6
                bcs.s   loc_8D06
                swap.w  D0
                swap.w  D1
                asr.l   #$04, D0
                asr.l   #$04, D1
                moveq   #$00, D4
                moveq   #$00, D5
                lea     Obj_Speed(A1), A2                                ; $0010
loc_8CC8:
                movem.l D4/D5, -(A7)
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, (A2)+
                move.w  D4, (A2)+
                movem.l (A7)+, D4/D5
                add.l   D0, D4
                add.l   D1, D5
                addq.w  #$02, A2
                dbra    D6, loc_8CC8
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  Obj_Subtype(A1), D0                              ; $0028
                move.w  Obj_Timer(A1), D1                                ; $002A
                move.w  D5, Obj_Subtype(A1)                              ; $0028
                move.w  D4, Obj_Timer(A1)                                ; $002A
                move.w  D0, Obj_X(A1)                                    ; $0008
                move.w  D1, Obj_Y(A1)                                    ; $000C
loc_8D06:
                rts
loc_8D08:
                tst.w   Obj_Control_Var_0A(A0)                           ; $0036
                beq.s   loc_8D16
                subq.w  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                bra     loc_8DA0
loc_8D16:
                tst.b   Obj_Control_Var_08(A0)                           ; $0034
                bne.s   loc_8D3C
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_Control_Var_0E(A0), D0                       ; $003A
                addi.w  #$0020, D0
                cmpi.w  #$0040, D0
                bcc.s   loc_8DA0
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne     loc_8DA0
                move.b  #$01, Obj_Control_Var_08(A0)                     ; $0034
loc_8D3C:
                tst.b   Obj_Control_Var_11(A0)                           ; $003D
                beq.s   loc_8D72
                move.w  Obj_Control_Var_12(A0), D0                       ; $003E
                addi.w  #$0008, D0
                move.w  D0, Obj_Control_Var_12(A0)                       ; $003E
                add.w   D0, Obj_Angle(A0)                                ; $0026
                cmpi.w  #$0200, D0
                bne.s   loc_8DA0
                move.w  #$0000, Obj_Control_Var_12(A0)                   ; $003E
                move.w  #$8000, Obj_Angle(A0)                            ; $0026
                move.b  #$00, Obj_Control_Var_11(A0)                     ; $003D
                move.w  #$003C, Obj_Control_Var_0A(A0)                   ; $0036
                bra.s   loc_8DA0
loc_8D72:
                move.w  Obj_Control_Var_12(A0), D0                       ; $003E
                subi.w  #$0008, D0
                move.w  D0, Obj_Control_Var_12(A0)                       ; $003E
                add.w   D0, Obj_Angle(A0)                                ; $0026
                cmpi.w  #$FE00, D0
                bne.s   loc_8DA0
                move.w  #$0000, Obj_Control_Var_12(A0)                   ; $003E
                move.w  #$4000, Obj_Angle(A0)                            ; $0026
                move.b  #$01, Obj_Control_Var_11(A0)                     ; $003D
                move.w  #$003C, Obj_Control_Var_0A(A0)                   ; $0036
loc_8DA0:
                move.b  Obj_Angle(A0), D0                                ; $0026
                rts
loc_8DA6:
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                beq.s   loc_8DB0
                bra     DisplaySprite                          ; loc_D322
loc_8DB0:
                move.w  Obj_Control_Var_0E(A0), D0                       ; $003A
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_8DC8
                bra     DisplaySprite                          ; loc_D322
loc_8DC8:
                move.l  Obj_Control_Var_04(A0), A1                       ; $0030
                bsr     DeleteObject_A1                        ; loc_D316
                bra     DeleteObject                           ; loc_D314
;-------------------------------------------------------------------------------
loc_8DD4:
                bra     DisplaySprite                          ; loc_D322
;-------------------------------------------------------------------------------
loc_8DD8:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_8C1C
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                moveq   #$00, D3
                move.b  Obj_Height_2(A0), D3                             ; $0016
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     Platform_Object_3                      ; loc_F8D0
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq     loc_8E8E
                tst.b   ($FFFFFE78).w
                bne     loc_8E8E
                bsr     SingleObjectLoad_2                     ; loc_E714
                bne.s   loc_8E7E
                moveq   #$00, D0
                move.w  #$000F, D1
loc_8E14:
                move.l  $00(A0, D0), $00(A1, D0)
                addq.w  #$04, D0
                dbra    D1, loc_8E14
                move.b  #$0A, Obj_Routine(A1)                            ; $0024
                cmpi.b  #$0F, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_8E32
                addq.b  #$02, Obj_Routine(A1)                            ; $0024
loc_8E32:
                move.w  #$0200, Obj_Speed(A1)                            ; $0010
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_8E44
                neg.w   Obj_Speed(A1)                                    ; $0010
loc_8E44:
                bset    #$01, Obj_Status(A1)                             ; $0022
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.w  A1, D1
                subi.w  #$B000, D1
                lsr.w   #$06, D1
                andi.w  #$007F, D1
                lea     (Obj_Memory_Address).w, A1                   ; $FFFFB000
                cmp.b   Obj_Control_Var_11(A1), D0                       ; $003D
                bne.s   loc_8E70
                move.b  D1, Obj_Control_Var_11(A1)                       ; $003D
loc_8E70:
                lea     (Player_Two).w, A1                           ; $FFFFB040
                cmp.b   Obj_Control_Var_11(A1), D0                       ; $003D
                bne.s   loc_8E7E
                move.b  D1, Obj_Control_Var_11(A1)                       ; $003D
loc_8E7E:
                move.b  #$03, Obj_Map_Id(A0)                             ; $001A
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                andi.b  #$E7, Obj_Status(A0)                             ; $0022
loc_8E8E:
                bra     loc_8DA6
;-------------------------------------------------------------------------------
loc_8E92:
                bsr     loc_8C1C
                bra     loc_8DA6
;-------------------------------------------------------------------------------
loc_8E9A:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                btst    #$01, Obj_Status(A0)                             ; $0022
                beq.s   loc_8ED8
                bsr     SpeedToPos                             ; loc_D1DA
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                cmpi.w  #$0720, Obj_Y(A0)                                ; $000C
                bcs.s   loc_8EE8
                move.w  #$0720, Obj_Y(A0)                                ; $000C
                bclr    #$01, Obj_Status(A0)                             ; $0022
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.w  Obj_Y(A0), Obj_Control_Var_0C(A0)         ; $000C, $0038
                bra.s   loc_8EE8
loc_8ED8:
                moveq   #$00, D0
                move.b  ($FFFFFE74).w, D0
                lsr.w   #$01, D0
                add.w   Obj_Control_Var_0C(A0), D0                       ; $0038
                move.w  D0, Obj_Y(A0)                                    ; $000C
loc_8EE8:
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                moveq   #$00, D3
                move.b  Obj_Height_2(A0), D3                             ; $0016
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     Platform_Object_3                      ; loc_F8D0
                bra     MarkObjGone                            ; loc_D200
;-------------------------------------------------------------------------------
loc_8F00:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     SpeedToPos                             ; loc_D1DA
                btst    #$01, Obj_Status(A0)                             ; $0022
                beq.s   loc_8F3C
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                move.w  (Water_Level_Change).w, D0                   ; $FFFFF648
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bhi.s   loc_8F6A
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.w  D0, Obj_Control_Var_0C(A0)                       ; $0038
                bclr    #$01, Obj_Status(A0)                             ; $0022
                move.w  #$0100, Obj_Speed(A0)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                bra.s   loc_8F6A
loc_8F3C:
                moveq   #$00, D0
                move.b  ($FFFFFE74).w, D0
                lsr.w   #$01, D0
                add.w   Obj_Control_Var_0C(A0), D0                       ; $0038
                move.w  D0, Obj_Y(A0)                                    ; $000C
                tst.w   Obj_Speed(A0)                                    ; $0010
                beq.s   loc_8F6A
                moveq   #$00, D3
                move.b  Obj_Width(A0), D3                                ; $0019
                bsr     Jmp_00_To_Object_HitWall_Right         ; loc_903C
                tst.w   D1
                bpl.s   loc_8F6A
                add.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
loc_8F6A:
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                moveq   #$00, D3
                move.b  Obj_Height_2(A0), D3                             ; $0016
                addq.b  #$01, D3
                move.w  (A7)+, D4
                bsr     Platform_Object_3                      ; loc_F8D0
                bra     MarkObjGone                            ; loc_D200
;-------------------------------------------------------------------------------
OOz_Swing_Platforms_Mappings:
		include 'mappings/sprite/obj15_ooz.asm'
;-------------------------------------------------------------------------------
NGHz_Swing_Platforms_Mappings:
		include 'mappings/sprite/obj83.asm'                        ; also used in Obj83
;-------------------------------------------------------------------------------
DHz_Swing_Platforms_Mappings:
		include 'mappings/sprite/obj7A_dhz.asm'                    ; also used in Obj7A
;-------------------------------------------------------------------------------
DHz_Swing_Platforms_Mappings_01:
		include 'mappings/sprite/obj15_dhz.asm'
;===============================================================================
; Object 0x15 - Plataformas tipo pend lo na Neo Green Hill, Dust Hill e
; [ End ]          Oil Ocean
;===============================================================================
Jmp_00_To_Object_HitWall_Right:                                ; loc_903C
;-------------------------------------------------------------------------------
		jmp     (Object_HitWall_Right)                 ; loc_1430A
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj17_Log_Spikes:                                           ; loc_9044
;===============================================================================
; Object 0x17 - Espinhos em espiral girando na Green Hill - Leftover from Sonic 1
; [ Begin ]
;===============================================================================
; loc_9044
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_9052(PC, D0), D1
                jmp     loc_9052(PC, D1)
;-------------------------------------------------------------------------------
loc_9052:
                dc.w    loc_9058-loc_9052
                dc.w    loc_911C-loc_9052
                dc.w    loc_917E-loc_9052
;-------------------------------------------------------------------------------
loc_9058:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Log_Spikes_Mappings, Obj_Map(A0) ; loc_9186, $0004
                move.w  #$4398, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.w  Obj_Y(A0), D2                                    ; $000C
                move.w  Obj_X(A0), D3                                    ; $0008
                move.b  Obj_Id(A0), D4                                   ; $0000
                lea     Obj_Subtype(A0), A2                              ; $0028
                moveq   #$00, D1
                move.b  (A2), D1
                move.b  #$00, (A2)+
                move.w  D1, D0
                lsr.w   #$01, D0
                lsl.w   #$04, D0
                sub.w   D0, D3
                subq.b  #$02, D1
                bcs.s   loc_911C
                moveq   #$00, D6
loc_90A6:
                bsr     SingleObjectLoad_2                     ; loc_E714
                bne.s   loc_911C
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
                move.w  A1, D5
                subi.w  #Obj_Memory_Address, D5                          ; $B000
                lsr.w   #$06, D5
                andi.w  #$007F, D5
                move.b  D5, (A2)+
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.b  D4, Obj_Id(A1)                                   ; $0000
                move.w  D2, Obj_Y(A1)                                    ; $000C
                move.w  D3, Obj_X(A1)                                    ; $0008
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  #$4398, Obj_Art_VRAM(A1)                         ; $0002
                bsr     ModifySpriteAttr_2P_A1                 ; loc_DBDA
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$08, Obj_Width(A1)                              ; $0019
                move.b  D6, Obj_Control_Var_12(A1)                       ; $003E
                addq.b  #$01, D6
                andi.b  #$07, D6
                addi.w  #$0010, D3
                cmp.w   Obj_X(A0), D3                                    ; $0008
                bne.s   loc_9118
                move.b  D6, Obj_Control_Var_12(A0)                       ; $003E
                addq.b  #$01, D6
                andi.b  #$07, D6
                addi.w  #$0010, D3
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
loc_9118:
                dbra    D1, loc_90A6
;-------------------------------------------------------------------------------
loc_911C:
                bsr     loc_915E
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_9138
                bra     DisplaySprite                          ; loc_D322
loc_9138:
                moveq   #$00, D2
                lea     Obj_Subtype(A0), A2                              ; $0028
                move.b  (A2)+, D2
                subq.b  #$02, D2
                bcs.s   loc_915A
loc_9144:
                moveq   #$00, D0
                move.b  (A2)+, D0
                lsl.w   #$06, D0
                addi.l  #Obj_Memory_Address, D0                      ; $FFFFB000
                move.l  D0, A1
                bsr     DeleteObject_A1                        ; loc_D316
                dbra    D2, loc_9144
loc_915A:
                bra     DeleteObject                           ; loc_D314
loc_915E:
                move.b  (Object_Frame_Buffer+$0001).w, D0            ; $FFFFFEA1
                move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
                add.b   Obj_Control_Var_12(A0), D0                       ; $003E
                andi.b  #$07, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                bne.s   loc_917C
                move.b  #$84, Obj_Col_Flags(A0)                          ; $0020
loc_917C:
                rts
;-------------------------------------------------------------------------------
loc_917E:
                bsr     loc_915E
                bra     DisplaySprite                          ; loc_D322
;-------------------------------------------------------------------------------
Log_Spikes_Mappings:                                           ; loc_9186
                include 'mappings/sprite/obj17_S1.asm'
;===============================================================================
; Object 0x17 - Espinhos em espiral girando na Green Hill - Leftover from Sonic 1
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Obj18_Platforms:                                            ; loc_91E0
;===============================================================================
; Object 0x18 - Platforms
; [ Begin ]
;===============================================================================
; loc_91E0:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_91EE(PC, D0), D1
                jmp     loc_91EE(PC, D1)
;-------------------------------------------------------------------------------
loc_91EE:
                dc.w    loc_9202-loc_91EE
                dc.w    loc_929E-loc_91EE
                dc.w    loc_9304-loc_91EE
                dc.w    loc_92DC-loc_91EE
                dc.w    loc_9308-loc_91EE
;-------------------------------------------------------------------------------
loc_91F8:
                dc.b    $20, $00
                dc.b    $20, $01
                dc.b    $20, $02
                dc.b    $40, $03
                dc.b    $30, $04
;-------------------------------------------------------------------------------
loc_9202:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                lea     loc_91F8(PC, D0), A2
                move.b  (A2)+, Obj_Width(A0)                             ; $0019
                move.b  (A2)+, Obj_Map_Id(A0)                            ; $001A
                move.l  #GHz_HTz_Platforms_Mappings, Obj_Map(A0) ; loc_952A, $0004
                move.w  #$4000, Obj_Art_VRAM(A0)                         ; $0002
                cmpi.b  #$0F, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_9242
                move.l  #NGHz_Platforms_Mappings, Obj_Map(A0) ; loc_9582, $0004
                move.w  #$4000, Obj_Art_VRAM(A0)                         ; $0002
loc_9242:
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.w  Obj_Y(A0), Obj_Control_Var_00(A0)         ; $000C, $002C
                move.w  Obj_Y(A0), Obj_Control_Var_08(A0)         ; $000C, $0034
                move.w  Obj_X(A0), Obj_Control_Var_06(A0)         ; $0008, $0032
                move.w  #$0080, Obj_Angle(A0)                            ; $0026
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bpl.s   loc_9298
                addq.b  #$06, Obj_Routine(A0)                            ; $0024
                andi.b  #$0F, Obj_Subtype(A0)                            ; $0028
                move.b  #$30, Obj_Height_2(A0)                           ; $0016
                cmpi.b  #$0F, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_928E
                move.b  #$28, Obj_Height_2(A0)                           ; $0016
loc_928E:
                bset    #$04, Obj_Flags(A0)                              ; $0001
                bra     loc_9308
loc_9298:
                andi.b  #$0F, Obj_Subtype(A0)                            ; $0028
;-------------------------------------------------------------------------------
loc_929E:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne.s   loc_92B4
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                beq.s   loc_92C0
                subq.b  #$04, Obj_Control_Var_0C(A0)                     ; $0038
                bra.s   loc_92C0
loc_92B4:
                cmpi.b  #$40, Obj_Control_Var_0C(A0)                     ; $0038
                beq.s   loc_92C0
                addq.b  #$04, Obj_Control_Var_0C(A0)                     ; $0038
loc_92C0:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_936C
                bsr     loc_9352
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                moveq   #$08, D3
                move.w  (A7)+, D4
                bsr     Platform_Object                        ; loc_F82C
                bra.s   loc_92E4
;-------------------------------------------------------------------------------
loc_92DC:
                bsr     loc_936C
                bsr     loc_9352
loc_92E4:
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                beq.s   loc_92EE
                bra     DisplaySprite                          ; loc_D322
loc_92EE:
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_9304
                bra     DisplaySprite                          ; loc_D322
;-------------------------------------------------------------------------------
loc_9304:
                bra     DeleteObject                           ; loc_D314
;-------------------------------------------------------------------------------
loc_9308:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne.s   loc_931E
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                beq.s   loc_932A
                subq.b  #$04, Obj_Control_Var_0C(A0)                     ; $0038
                bra.s   loc_932A
loc_931E:
                cmpi.b  #$40, Obj_Control_Var_0C(A0)                     ; $0038
                beq.s   loc_932A
                addq.b  #$04, Obj_Control_Var_0C(A0)                     ; $0038
loc_932A:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_936C
                bsr     loc_9352
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     SolidObject                            ; loc_F344
                bra.s   loc_92E4
loc_9352:
                move.b  Obj_Control_Var_0C(A0), D0                       ; $0038
                bsr     CalcSine                               ; loc_3282
                move.w  #$0400, D1
                muls.w  D1, D0
                swap.w  D0
                add.w   Obj_Control_Var_00(A0), D0                       ; $002C
                move.w  D0, Obj_Y(A0)                                    ; $000C
                rts
loc_936C:
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                add.w   D0, D0
                move.w  loc_9380(PC, D0), D1
                jmp     loc_9380(PC, D1)
;-------------------------------------------------------------------------------
loc_9380:
                dc.w    loc_939C-loc_9380
                dc.w    loc_93AE-loc_9380
                dc.w    loc_93F4-loc_9380
                dc.w    loc_940C-loc_9380
                dc.w    loc_9436-loc_9380
                dc.w    loc_939E-loc_9380
                dc.w    loc_93E4-loc_9380
                dc.w    loc_94AC-loc_9380
                dc.w    loc_94D8-loc_9380
                dc.w    loc_939C-loc_9380
                dc.w    loc_94F0-loc_9380
                dc.w    loc_950A-loc_9380
                dc.w    loc_93D6-loc_9380
                dc.w    loc_93C6-loc_9380
;-------------------------------------------------------------------------------
loc_939C:
                rts
;-------------------------------------------------------------------------------
loc_939E:
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                move.b  Obj_Angle(A0), D1                                ; $0026
                neg.b   D1
                addi.b  #$40, D1
                bra.s   loc_93BA
;-------------------------------------------------------------------------------
loc_93AE:
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                move.b  Obj_Angle(A0), D1                                ; $0026
                subi.b  #$40, D1
loc_93BA:
                ext.w   D1
                add.w   D1, D0
                move.w  D0, Obj_X(A0)                                    ; $0008
                bra     loc_9522
;-------------------------------------------------------------------------------
loc_93C6:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                move.b  ($FFFFFE6C).w, D1
                neg.b   D1
                addi.b  #$30, D1
                bra.s   loc_9400
;-------------------------------------------------------------------------------
loc_93D6:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                move.b  ($FFFFFE6C).w, D1
                subi.b  #$30, D1
                bra.s   loc_9400
;-------------------------------------------------------------------------------
loc_93E4:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                move.b  Obj_Angle(A0), D1                                ; $0026
                neg.b   D1
                addi.b  #$40, D1
                bra.s   loc_9400
;-------------------------------------------------------------------------------
loc_93F4:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                move.b  Obj_Angle(A0), D1                                ; $0026
                subi.b  #$40, D1
loc_9400:
                ext.w   D1
                add.w   D1, D0
                move.w  D0, Obj_Control_Var_00(A0)                       ; $002C
                bra     loc_9522
;-------------------------------------------------------------------------------
loc_940C:
                tst.w   Obj_Control_Var_0E(A0)                           ; $003A
                bne.s   loc_9424
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_9422
                move.w  #$001E, Obj_Control_Var_0E(A0)                   ; $003A
loc_9422:
                rts
loc_9424:
                subq.w  #$01, Obj_Control_Var_0E(A0)                     ; $003A
                bne.s   loc_9422
                move.w  #$0020, Obj_Control_Var_0E(A0)                   ; $003A
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
                rts
;-------------------------------------------------------------------------------
loc_9436:
                tst.w   Obj_Control_Var_0E(A0)                           ; $003A
                beq.s   loc_9464
                subq.w  #$01, Obj_Control_Var_0E(A0)                     ; $003A
                bne.s   loc_9464
                bclr    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_9450
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_9492
loc_9450:
                bclr    #$04, Obj_Status(A0)                             ; $0022
                beq.s   loc_945E
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr.s   loc_9492
loc_945E:
                move.b  #$06, Obj_Routine(A0)                            ; $0024
loc_9464:
                move.l  Obj_Control_Var_00(A0), D3                       ; $002C
                move.w  Obj_Speed_Y(A0), D0                              ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D3, Obj_Control_Var_00(A0)                       ; $002C
                addi.w  #$0038, Obj_Speed_Y(A0)                          ; $0012
                move.w  (Sonic_Level_Limits_Max_Y).w, D0             ; $FFFFEECE
                addi.w  #$0120, D0
                cmp.w   Obj_Control_Var_00(A0), D0                       ; $002C
                bcc.s   loc_9490
                move.b  #$04, Obj_Routine(A0)                            ; $0024
loc_9490:
                rts
loc_9492:
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.w  Obj_Speed_Y(A0), Obj_Speed_Y(A1)          ; $0012, $0012
                rts
;-------------------------------------------------------------------------------
loc_94AC:
                tst.w   Obj_Control_Var_0E(A0)                           ; $003A
                bne.s   loc_94CC
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$04, D0
                tst.b   $00(A2, D0)
                beq.s   loc_94CA
                move.w  #$003C, Obj_Control_Var_0E(A0)                   ; $003A
loc_94CA:
                rts
loc_94CC:
                subq.w  #$01, Obj_Control_Var_0E(A0)                     ; $003A
                bne.s   loc_94CA
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
                rts
;-------------------------------------------------------------------------------
loc_94D8:
                subq.w  #$02, Obj_Control_Var_00(A0)                     ; $002C
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                subi.w  #$0200, D0
                cmp.w   Obj_Control_Var_00(A0), D0                       ; $002C
                bne.s   loc_94EE
                clr.b   Obj_Subtype(A0)                                  ; $0028
loc_94EE:
                rts
;-------------------------------------------------------------------------------
loc_94F0:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                move.b  Obj_Angle(A0), D1                                ; $0026
                subi.b  #$40, D1
                ext.w   D1
                asr.w   #$01, D1
                add.w   D1, D0
                move.w  D0, Obj_Control_Var_00(A0)                       ; $002C
                bra     loc_9522
;-------------------------------------------------------------------------------
loc_950A:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                move.b  Obj_Angle(A0), D1                                ; $0026
                neg.b   D1
                addi.b  #$40, D1
                ext.w   D1
                asr.w   #$01, D1
                add.w   D1, D0
                move.w  D0, Obj_Control_Var_00(A0)                       ; $002C
loc_9522:
                move.b  ($FFFFFE78).w, Obj_Angle(A0)                     ; $0026
                rts
;-------------------------------------------------------------------------------
GHz_HTz_Platforms_Mappings:                                    ; loc_952A
                include 'mappings/sprite/obj18_ghz_htz.asm'
;-------------------------------------------------------------------------------
NGHz_Platforms_Mappings:                                       ; loc_9582
                include 'mappings/sprite/obj18_nghz.asm'
;===============================================================================
; Object 0x18 - Platforms
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Obj1A_Collapsing_Platforms:                                 ; loc_95DC
;===============================================================================
; Object 0x1A - Plataformas que desmoronam na Hidden Palace / Oil Ocean
; [ Begin ]
;===============================================================================
; loc_95DC:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_95EA(PC, D0), D1
                jmp     loc_95EA(PC, D1)
;-------------------------------------------------------------------------------
loc_95EA:
                dc.w    loc_95F0-loc_95EA
                dc.w    loc_969C-loc_95EA
                dc.w    loc_96D4-loc_95EA
;-------------------------------------------------------------------------------
loc_95F0:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Collapsing_Platforms_Mappings, Obj_Map(A0) ; loc_998C, $0004
                move.w  #$4000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$07, Obj_Control_Var_0C(A0)                     ; $0038
                move.b  Obj_Subtype(A0), Obj_Map_Id(A0)           ; $001A, $0028
                move.l  #Collapsing_Platforms_Data, Obj_Control_Var_08(A0) ; loc_9912, $0034
                cmpi.b  #$08, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_9658
                move.l  #HPz_Collapsing_Platforms_Mappings, Obj_Map(A0) ; loc_9D3C, $0004
                move.w  #$434A, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$30, Obj_Width(A0)                              ; $0019
                move.l  #loc_9D0C, Obj_Control_Var_10(A0)         ; $003C
                move.l  #HPz_Collapsing_Platforms_Data, Obj_Control_Var_08(A0) ; loc_992B, $0034
                bra.s   loc_969C
loc_9658:
                cmpi.b  #$0A, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_9682
                move.l  #OOz_Collapsing_Platforms_Mappings, Obj_Map(A0) ; loc_9DE6, $0004
                move.w  #$639D, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$40, Obj_Width(A0)                              ; $0019
                move.l  #loc_9CFC, Obj_Control_Var_10(A0)         ; $003C
                bra.s   loc_969C
loc_9682:
                move.l  #loc_995C, Obj_Control_Var_10(A0)         ; $003C
                move.b  #$34, Obj_Width(A0)                              ; $0019
                move.b  #$38, Obj_Height_2(A0)                           ; $0016
                bset    #$04, Obj_Flags(A0)                              ; $0001
;-------------------------------------------------------------------------------
loc_969C:
                tst.b   Obj_Control_Var_0E(A0)                           ; $003A
                beq.s   loc_96AE
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                beq     loc_9888
                subq.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
loc_96AE:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_96BE
                move.b  #$01, Obj_Control_Var_0E(A0)                     ; $003A
loc_96BE:
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                move.l  Obj_Control_Var_10(A0), A2                       ; $003C
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Platform_Object_2                      ; loc_F87E
                bra     MarkObjGone                            ; loc_D200
;-------------------------------------------------------------------------------
loc_96D4:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                beq.s   loc_9718
                tst.b   Obj_Control_Var_0E(A0)                           ; $003A
                bne.s   loc_96E8
                subq.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bra     DisplaySprite                          ; loc_D322
loc_96E8:
                bsr     loc_96BE
                subq.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bne.s   loc_9716
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_96FC
                lea     (Player_Two).w, A1                           ; $FFFFB040
loc_96FC:
                btst    #$03, Obj_Status(A1)                             ; $0022
                beq.s   loc_9716
                bclr    #$03, Obj_Status(A1)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
                move.b  #$01, Obj_Ani_Flag(A1)                           ; $001D
loc_9716:
                rts
loc_9718:
                bsr     ObjectFall                             ; loc_D1AE
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322
;===============================================================================
; Object 0x1A - Plataformas que desmoronam na Hidden Palace / Oil Ocean
; [ End ]
;===============================================================================
Obj1F_Collapsing_Platforms:                                 ; loc_9728
;===============================================================================
; Object 0x1F - Plataformas que desmoronam na Dust Hill / Oil Ocean
; [ Begin ] 
;===============================================================================   
; loc_9728:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_9736(PC, D0), D1
                jmp     loc_9736(PC, D1)                     
;-------------------------------------------------------------------------------  
loc_9736:
                dc.w    loc_973C-loc_9736
                dc.w    loc_97F6-loc_9736
                dc.w    loc_982E-loc_9736      
;------------------------------------------------------------------------------- 
loc_973C:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Collapsing_Platforms_Mappings_2, Obj_Map(A0) ; loc_9C2C, $0004
                move.w  #$42B8, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$07, Obj_Control_Var_0C(A0)                     ; $0038
                move.b  #$44, Obj_Width(A0)                              ; $0019
                lea     (Collapsing_Platforms_2_Data), A4      ; loc_9937
                btst    #$00, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_977A
                lea     (Collapsing_Platforms_2_Data_2), A4    ; loc_993F
loc_977A:
                move.l  A4, Obj_Control_Var_08(A0)                       ; $0034
                cmpi.b  #$0A, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_97A6
                move.l  #OOz_Collapsing_Platforms_Mappings, Obj_Map(A0) ; loc_9DE6, $0004
                move.w  #$639D, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$40, Obj_Width(A0)                              ; $0019
                move.l  #OOz_Collapsing_Platforms_Data, Obj_Control_Var_08(A0) ; loc_9947, $0034
loc_97A6:
                cmpi.b  #$0B, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_97CE
                move.l  #DHz_Collapsing_Platforms_Mappings, Obj_Map(A0) ; loc_9E26, $0004
                move.w  #$63F4, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.l  #DHz_Collapsing_Platforms_Data, Obj_Control_Var_08(A0) ; loc_994E, 0034
loc_97CE:
                cmpi.b  #$0F, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_97F6
                move.l  #NGHz_Collapsing_Platforms_Mappings, Obj_Map(A0) ; loc_9E7E, $0004
                move.w  #$4000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.l  #NGHz_Collapsing_Platforms_Data, Obj_Control_Var_08(A0) ; loc_9954, $0034  
;-------------------------------------------------------------------------------
loc_97F6:
                tst.b   Obj_Control_Var_0E(A0)                           ; $003A
                beq.s   loc_9808
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                beq     loc_9882
                subq.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
loc_9808:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_9818
                move.b  #$01, Obj_Control_Var_0E(A0)                     ; $003A
loc_9818:
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                move.w  #$0010, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Platform_Object                        ; loc_F82C
                bra     MarkObjGone                            ; loc_D200  
;-------------------------------------------------------------------------------
loc_982E:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                beq.s   loc_9872
                tst.b   Obj_Control_Var_0E(A0)                           ; $003A
                bne.s   loc_9842
                subq.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bra     DisplaySprite                          ; loc_D322
loc_9842:
                bsr     loc_9818
                subq.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bne.s   loc_9870
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_9856
                lea     (Player_Two).w, A1                           ; $FFFFB040
loc_9856:
                btst    #$03, Obj_Status(A1)                             ; $0022
                beq.s   loc_9870
                bclr    #$03, Obj_Status(A1)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
                move.b  #$01, Obj_Ani_Flag(A1)                           ; $001D
loc_9870:
                rts
loc_9872:
                bsr     ObjectFall                             ; loc_D1AE
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322
loc_9882:
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                bra.s   loc_988C
loc_9888:
                addq.b  #$02, Obj_Map_Id(A0)                             ; $001A
loc_988C:
                move.l  Obj_Control_Var_08(A0), A4                       ; $0034
                moveq   #$00, D0
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                add.w   D0, D0
                move.l  Obj_Map(A0), A3                                  ; $0004
                adda.w  $00(A3, D0), A3
                move.w  (A3)+, D1
                subq.w  #$01, D1
                bset    #$05, Obj_Flags(A0)                              ; $0001
                move.b  Obj_Id(A0), D4                                   ; $0000
                move.b  Obj_Flags(A0), D5                                ; $0001
                move.l  A0, A1
                bra.s   loc_98BE
;-------------------------------------------------------------------------------  
loc_98B6:
                bsr     SingleObjectLoad                       ; loc_E6FE
                bne.s   loc_9904
                addq.w  #$08, A3
loc_98BE:
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.b  D4, Obj_Id(A1)                                   ; $0000
                move.l  A3, Obj_Map(A1)                                  ; $0004
                move.b  D5, Obj_Flags(A1)                                ; $0001
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  Obj_Priority(A0), Obj_Priority(A1)        ; $0018, $0018
                move.b  Obj_Width(A0), Obj_Width(A1)              ; $0019, $0019
                move.b  Obj_Height_2(A0), Obj_Height_2(A1)        ; $0016, $0016
                move.b  (A4)+, Obj_Control_Var_0C(A1)                    ; $0038
                cmpa.l  A0, A1
                bcc.s   loc_9900
                bsr     DisplaySprite_A1                       ; loc_D340
loc_9900:
                dbra    D1, loc_98B6
loc_9904:
                bsr     DisplaySprite                          ; loc_D322
                move.w  #$00B9, D0
                jmp     (Play_Sfx)                             ; loc_1512              
;===============================================================================
; Object 0x1F - Plataformas que desmoronam na Dust Hill / Oil Ocean
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
Collapsing_Platforms_Data:                                     ; loc_9912
		dc.b    $1C, $18, $14, $10, $1A, $16, $12, $0E
		dc.b    $0A, $06, $18, $14, $10, $0C, $08, $04
		dc.b    $16, $12, $0E, $0A, $06, $02, $14, $10
		dc.b    $0C
;-------------------------------------------------------------------------------
HPz_Collapsing_Platforms_Data:                                 ; loc_992B
		dc.b    $18, $1C, $20, $1E, $1A, $16, $06, $0E
		dc.b    $14, $12, $0A, $02
;-------------------------------------------------------------------------------
Collapsing_Platforms_2_Data:                                   ; loc_9937
		dc.b    $1E, $16, $0E, $06, $1A, $12, $0A, $02
;-------------------------------------------------------------------------------
Collapsing_Platforms_2_Data_2:                                 ; loc_993F
		dc.b    $16, $1E, $1A, $12, $06, $0E, $0A, $02
;-------------------------------------------------------------------------------
OOz_Collapsing_Platforms_Data:                                 ; loc_9947
		dc.b    $1A, $12, $0A, $02, $16, $0E, $06
;-------------------------------------------------------------------------------
DHz_Collapsing_Platforms_Data:                                 ; loc_994E
		dc.b    $1A, $16, $12, $0E, $0A, $02
;-------------------------------------------------------------------------------
NGHz_Collapsing_Platforms_Data:                                ; loc_9954
		dc.b    $16, $1A, $18, $12, $06, $0E, $0A, $02
;-------------------------------------------------------------------------------
loc_995C:
		dc.b    $20, $20, $20, $20, $20, $20, $20, $20
		dc.b    $21, $21, $22, $22, $23, $23, $24, $24
		dc.b    $25, $25, $26, $26, $27, $27, $28, $28
		dc.b    $29, $29, $2A, $2A, $2B, $2B, $2C, $2C
		dc.b    $2D, $2D, $2E, $2E, $2F, $2F, $30, $30
		dc.b    $30, $30, $30, $30, $30, $30, $30, $30
;-------------------------------------------------------------------------------
Collapsing_Platforms_Mappings:                                 ; loc_998C
                include 'mappings/sprite/obj1A_ghzS1.asm'                  ; unused leftover (the green hill from sonic 1)
;-------------------------------------------------------------------------------
Collapsing_Platforms_Mappings_2:                               ; loc_9C2C
		include 'mappings/sprite/obj1F_S1.asm'                     ; unused leftover (for Sonic 1 Zones MZ, SLZ, SBZ)
;-------------------------------------------------------------------------------
loc_9CFC:
		dc.b    $10, $10, $10, $10, $10, $10, $10, $10
		dc.b    $10, $10, $10, $10, $10, $10, $10, $10
;-------------------------------------------------------------------------------
loc_9D0C:
		dc.b    $10, $10, $10, $10, $10, $10, $10, $10
		dc.b    $10, $10, $10, $10, $10, $10, $10, $10
		dc.b    $10, $10, $10, $10, $10, $10, $10, $10
		dc.b    $10, $10, $10, $10, $10, $10, $10, $10
		dc.b    $10, $10, $10, $10, $10, $10, $10, $10
		dc.b    $10, $10, $10, $10, $10, $10, $10, $10
;-------------------------------------------------------------------------------
HPz_Collapsing_Platforms_Mappings:                             ; loc_9D3C
		include 'mappings/sprite/obj1A_hpz.asm'
;-------------------------------------------------------------------------------
OOz_Collapsing_Platforms_Mappings:                             ; loc_9DE6
		include 'mappings/sprite/obj1F_ooz.asm'
;-------------------------------------------------------------------------------
DHz_Collapsing_Platforms_Mappings:                             ; loc_9E26
		include 'mappings/sprite/obj1F_dhz.asm'
;-------------------------------------------------------------------------------
NGHz_Collapsing_Platforms_Mappings:                            ; loc_9E7E
		include 'mappings/sprite/obj1F_nghz.asm'
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Obj1C_Misc:                                                 ; loc_9EE8
;===============================================================================
; Object 0x1C - Miscellaneous Objects - Support of the bridges on Emerald Hill,
; [ End ]          poles from Hill Top, etc...
;===============================================================================
; loc_9EE8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_9EF6(PC, D0), D1
                jmp     loc_9EF6(PC, D1)
;-------------------------------------------------------------------------------
loc_9EF6:
                dc.w    loc_9F6A-loc_9EF6
                dc.w    loc_9F9C-loc_9EF6
;-------------------------------------------------------------------------------
Misc_Object_Definitions_List:                                  ; loc_9EFA
                dc.l    Mz_Misc_Mappings                       ; loc_A0E6
                dc.w    $43FD
                dc.b    $04, $06
                dc.l    ($01<<$18)|Mz_Misc_Mappings            ; loc_A0E6
                dc.w    $43FD
                dc.b    $04, $06
                dc.l    ($01<<$18)|GHz_Bridge_Mappings         ; loc_8A6C
                dc.w    $43B6
                dc.b    $04, $01
                dc.l    ($02<<$18)|Mz_Misc_Mappings            ; loc_A0E6
                dc.w    $23FD
                dc.b    $10, $06
                dc.l    ($03<<$18)|Teleferics_Mappings         ; loc_16DB2
                dc.w    $43E6
                dc.b    $08, $04
                dc.l    ($04<<$18)|Teleferics_Mappings         ; loc_16DB2
                dc.w    $43E6
                dc.b    $08, $04
                dc.l    ($01<<$18)|Teleferics_Mappings         ; loc_16DB2
                dc.w    $43E6
                dc.b    $20, $01
                dc.l    HTz_Misc_Mappings                      ; loc_A086
                dc.w    $4000
                dc.b    $08, $01
                dc.l    ($01<<$18)|HTz_Misc_Mappings           ; loc_A086
                dc.w    $4000
                dc.b    $08, $01
                dc.l    NGHz_Misc_Mappings
                dc.w    $4428
                dc.b    $04, $04
                dc.l    OOz_Misc_Mappings                      ; loc_A0B6
                dc.w    $4346
                dc.b    $08, $04
                dc.l    ($01<<$18)|OOz_Misc_Mappings           ; loc_A0B6
                dc.w    $4346
                dc.b    $08, $04
                dc.l    ($02<<$18)|OOz_Misc_Mappings           ; loc_A0B6
                dc.w    $4346
                dc.b    $08, $04
                dc.l    ($03<<$18)|OOz_Misc_Mappings           ; loc_A0B6
                dc.w    $4346
                dc.b    $08, $04
;-------------------------------------------------------------------------------
loc_9F6A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsl.w   #$03, D0
                lea     Misc_Object_Definitions_List(PC), A1   ; loc_9EFA
                lea     $00(A1, D0), A1
                move.b  (A1), Obj_Map_Id(A0)                             ; $001A
                move.l  (A1)+, Obj_Map(A0)                               ; $0004
                move.w  (A1)+, Obj_Art_VRAM(A0)                          ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  (A1)+, Obj_Width(A0)                             ; $0019
                move.b  (A1)+, Obj_Priority(A0)                          ; $0018
;-------------------------------------------------------------------------------
loc_9F9C:
                bra     MarkObjGone                            ; loc_D200
;===============================================================================
; Object 0x1C - Miscellaneous Objects - Support of the bridges on Emerald Hill,
; [ End ]          poles from Hill Top, etc...
;===============================================================================
Obj71_Mz_HPz_Misc:                                          ; loc_9FA0
;===============================================================================
; Object 0x71 - Miscellaneous Objects - Support of the bridges from the Hidden Palace,
; [ End ]          Orbs from the Hidden Palace, lava bubbles from the Metropolis, etc...
;===============================================================================
; loc_9FA0:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_9FAE(PC, D0), D1
                jmp     loc_9FAE(PC, D1)
;-------------------------------------------------------------------------------
loc_9FAE:
                dc.w    loc_9FCA-loc_9FAE
                dc.w    loc_A00C-loc_9FAE
;-------------------------------------------------------------------------------
Misc_Object_Definitions_List_2:                                ; loc_9FB2
                dc.l    ($03<<$18)|HPz_Bridge_Mappings         ; loc_8A24
                dc.w    $6300
                dc.b    $04, $01
                dc.l    Hpz_Orbs_Mappings                      ; loc_A046
                dc.w    $E35A
                dc.b    $10, $01
                dc.l    Mz_Lava_Bubble_Mappings                ; loc_A10A
                dc.w    $4536
                dc.b    $10, $01
;-------------------------------------------------------------------------------
loc_9FCA:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                lsl.w   #$03, D0
                lea     Misc_Object_Definitions_List_2(PC), A1 ; loc_9FB2
                lea     $00(A1, D0), A1
                move.b  (A1), Obj_Map_Id(A0)                             ; $001A
                move.l  (A1)+, Obj_Map(A0)                               ; $0004
                move.w  (A1)+, Obj_Art_VRAM(A0)                          ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  (A1)+, Obj_Width(A0)                             ; $0019
                move.b  (A1)+, Obj_Priority(A0)                          ; $0018
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$00F0, D0
                lsr.b   #$04, D0
                move.b  D0, Obj_Ani_Number(A0)                           ; $001C
;-------------------------------------------------------------------------------
loc_A00C:
                lea     (Mz_Hpz_Misc_Animate_Data), A1         ; loc_A01A
                bsr     AnimateSprite                          ; loc_D372
                bra     MarkObjGone                            ; loc_D200
;-------------------------------------------------------------------------------
Mz_Hpz_Misc_Animate_Data:                                      ; loc_A01A
                dc.w    loc_A022-Mz_Hpz_Misc_Animate_Data
                dc.w    loc_A02A-Mz_Hpz_Misc_Animate_Data
                dc.w    loc_A039-Mz_Hpz_Misc_Animate_Data
                dc.w    loc_A042-Mz_Hpz_Misc_Animate_Data
loc_A022:
                dc.b    $08, $03, $03, $04, $05, $05, $04, $FF
loc_A02A:
                dc.b    $05, $00, $00, $00, $01, $02, $03, $03
                dc.b    $02, $01, $02, $03, $03, $01, $FF
loc_A039:
                dc.b    $0B, $00, $01, $02, $03, $04, $05, $FD
                dc.b    $03
loc_A042:
                dc.b    $7F, $06, $FD, $02
;-------------------------------------------------------------------------------
Hpz_Orbs_Mappings:                                             ; loc_A046
                include 'mappings/sprite/obj71.asm'
;===============================================================================
; Object 0x71 - Miscellaneous Objects - Support of the bridges from the Hidden Palace,
; [ End ]          Orbs from the Hidden Palace, lava bubbles from the Metropolis, etc...
;===============================================================================
;-------------------------------------------------------------------------------
HTz_Misc_Mappings:                                             ; loc_A086
	        include 'mappings/sprite/obj1C_htz.asm'
;-------------------------------------------------------------------------------
NGHz_Misc_Mappings:
		include 'mappings/sprite/obj1C_nghz.asm'
;-------------------------------------------------------------------------------
OOz_Misc_Mappings:                                             ; loc_A0B6
		include 'mappings/sprite/obj1C_ooz.asm'
;-------------------------------------------------------------------------------
Mz_Misc_Mappings:                                              ; loc_A0E6
		include 'mappings/sprite/obj1C_mtz.asm'
;-------------------------------------------------------------------------------
Mz_Lava_Bubble_Mappings:                                       ; loc_A10A
		include 'mappings/sprite/obj71_mtz.asm'
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Obj2A_Up_Down_Pillar:                                       ; loc_A158
;===============================================================================
; Object 0x2A - Barrier that goes up and down from Dust Hill
; [ Begin ] 
;===============================================================================  
; loc_A158:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_A166(PC, D0), D1
                jmp     loc_A166(PC, D1)
;-------------------------------------------------------------------------------
loc_A166:
                dc.w    loc_A16A-loc_A166
                dc.w    loc_A1A4-loc_A166           
;-------------------------------------------------------------------------------  
loc_A16A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Up_Down_Pillar_Mappings, Obj_Map(A0) ; loc_A1FA, $0004
                move.w  #$4000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                move.b  #$50, Obj_Height_2(A0)                           ; $0016
                bset    #$04, Obj_Flags(A0)                              ; $0001   
;------------------------------------------------------------------------------- 
loc_A1A4:
                tst.b   Obj_Routine_2(A0)                                ; $0025
                bne.s   loc_A1BE
                addq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                cmpi.w  #$0060, Obj_Control_Var_04(A0)                   ; $0030
                bne.s   loc_A1D0
                move.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bra.s   loc_A1D0
loc_A1BE:
                subq.w  #$08, Obj_Control_Var_04(A0)                     ; $0030
                bhi.s   loc_A1D0
                move.w  #$0000, Obj_Control_Var_04(A0)                   ; $0030
                move.b  #$00, Obj_Routine_2(A0)                          ; $0025
loc_A1D0:
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                sub.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_Y(A0)                                    ; $000C
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                move.w  #$0040, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     SolidObject                            ; loc_F344
                bra     MarkObjGone                            ; loc_D200 
;-------------------------------------------------------------------------------
Up_Down_Pillar_Mappings:                                       ; loc_A1FA
		include "mappings/sprite/obj2A.asm"  
;===============================================================================
; Object 0x2A - Barrier that goes up and down from Dust Hill
; [ End ] 
;===============================================================================		
Obj2D_Automatic_Door:                                       ; loc_A22E
;===============================================================================
; Object 0x2D - Porta automática na Chemical Plant / Hill Top / Metropolis
; [ Begin ] 
;===============================================================================  
; loc_A22E
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_A23C(PC, D0), D1
                jmp     loc_A23C(PC, D1)   
;-------------------------------------------------------------------------------  
loc_A23C:
                dc.w    loc_A240-loc_A23C
                dc.w    loc_A2DE-loc_A23C        
;------------------------------------------------------------------------------- 
loc_A240:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Automatic_Door_Mappings, Obj_Map(A0) ; loc_A386, $0004
                move.w  #$2426, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$08, Obj_Width(A0)                              ; $0019
                cmpi.b  #$04, (Level_Id).w                           ; $FFFFFE10
                beq.s   loc_A268
                cmpi.b  #$05, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_A274
loc_A268:
                move.w  #$6000, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$0C, Obj_Width(A0)                              ; $0019
loc_A274:
                cmpi.b  #$0D, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_A288
                move.w  #$2394, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$0C, Obj_Width(A0)                              ; $0019
loc_A288:
                cmpi.b  #$0F, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_A29C
                move.w  #$23F8, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$08, Obj_Width(A0)                              ; $0019
loc_A29C:
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                move.b  Obj_Subtype(A0), Obj_Map_Id(A0)           ; $001A, $0028
                move.w  Obj_X(A0), D2                                    ; $0008
                move.w  D2, D3
                subi.w  #$0200, D2
                addi.w  #$0018, D3
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_A2D6
                subi.w  #$FE18, D2
                addi.w  #$01E8, D3
loc_A2D6:
                move.w  D2, Obj_Control_Var_0C(A0)                       ; $0038
                move.w  D3, Obj_Control_Var_0E(A0)                       ; $003A    
;------------------------------------------------------------------------------- 
loc_A2DE:
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_A2FA
                move.w  Obj_Control_Var_0C(A0), D2                       ; $0038
                move.w  Obj_X(A0), D3                                    ; $0008
                tst.b   Obj_Routine_2(A0)                                ; $0025
                beq.s   loc_A30C
                move.w  Obj_Control_Var_0E(A0), D3                       ; $003A
                bra.s   loc_A30C
loc_A2FA:
                move.w  Obj_X(A0), D2                                    ; $0008
                move.w  Obj_Control_Var_0E(A0), D3                       ; $003A
                tst.b   Obj_Routine_2(A0)                                ; $0025
                beq.s   loc_A30C
                move.w  Obj_Control_Var_0C(A0), D2                       ; $0038
loc_A30C:
                move.b  #$00, Obj_Routine_2(A0)                          ; $0025
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                cmp.w   D2, D0
                bcs     loc_A328
                cmp.w   D3, D0
                bcc     loc_A328
                move.b  #$02, Obj_Routine_2(A0)                          ; $0025
loc_A328:
                move.w  (Player_Two_Position_X).w, D0                ; $FFFFB048
                cmp.w   D2, D0
                bcs     loc_A33E
                cmp.w   D3, D0
                bcc     loc_A33E
                move.b  #$02, Obj_Routine_2(A0)                          ; $0025
loc_A33E:
                tst.b   Obj_Routine_2(A0)                                ; $0025
                beq.s   loc_A352
                cmpi.w  #$0040, Obj_Control_Var_04(A0)                   ; $0030
                beq.s   loc_A368
                addq.w  #$08, Obj_Control_Var_04(A0)                     ; $0030
                bra.s   loc_A35C
loc_A352:
                tst.w   Obj_Control_Var_04(A0)                           ; $0030
                beq.s   loc_A368
                subq.w  #$08, Obj_Control_Var_04(A0)                     ; $0030
loc_A35C:
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                sub.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_Y(A0)                                    ; $000C
loc_A368:
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                move.w  #$0020, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     SolidObject                            ; loc_F344
                bra     MarkObjGone                            ; loc_D200       
;-------------------------------------------------------------------------------
Automatic_Door_Mappings:                                       ; loc_A386
                dc.w    loc_A38E-Automatic_Door_Mappings
                dc.w    loc_A3B0-Automatic_Door_Mappings
                dc.w    loc_A3C2-Automatic_Door_Mappings
                dc.w    loc_A3D4-Automatic_Door_Mappings
loc_A38E:
                dc.w    $0004
                dc.l    $E0050000, $0000FFF8
                dc.l    $F0050000, $0000FFF8
                dc.l    $00050000, $0000FFF8
                dc.l    $10050000, $0000FFF8
loc_A3B0:
                dc.w    $0002
                dc.l    $E00B005F, $002FFFF4
                dc.l    $000B005F, $002FFFF4
loc_A3C2:
                dc.w    $0002
                dc.l    $E0070000, $0000FFF8
                dc.l    $00070000, $0000FFF8
loc_A3D4:
                dc.w    $0002
                dc.l    $E0070000, $0000FFF8
                dc.l    $00070000, $0000FFF8 
;===============================================================================
; Object 0x2D - Porta automática na Chemical Plant / Hill Top / Metropolis
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Obj28_Flickies:                                             ; loc_A3E8
;===============================================================================
; Object 0x28 - Flickies (birds, squirrels) that appear when destroying enemies
; [ Begin ] 
;===============================================================================
; loc_A3E8
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_A3F6(PC, D0), D1
                jmp     loc_A3F6(PC, D1)            
;-------------------------------------------------------------------------------
loc_A3F6:
                dc.w    loc_A51A-loc_A3F6
                dc.w    loc_A63A-loc_A3F6
                dc.w    loc_A694-loc_A3F6
                dc.w    loc_A6D0-loc_A3F6
                dc.w    loc_A694-loc_A3F6
                dc.w    loc_A694-loc_A3F6
                dc.w    loc_A694-loc_A3F6
                dc.w    loc_A6D0-loc_A3F6
                dc.w    loc_A694-loc_A3F6
                dc.w    loc_A6D0-loc_A3F6
                dc.w    loc_A694-loc_A3F6
                dc.w    loc_A694-loc_A3F6
                dc.w    loc_A694-loc_A3F6
                dc.w    loc_A694-loc_A3F6
                dc.w    loc_A750-loc_A3F6
                dc.w    loc_A770-loc_A3F6
                dc.w    loc_A770-loc_A3F6
                dc.w    loc_A790-loc_A3F6
                dc.w    loc_A7CA-loc_A3F6
                dc.w    loc_A824-loc_A3F6
                dc.w    loc_A842-loc_A3F6
                dc.w    loc_A824-loc_A3F6
                dc.w    loc_A842-loc_A3F6
                dc.w    loc_A824-loc_A3F6
                dc.w    loc_A880-loc_A3F6
                dc.w    loc_A7E6-loc_A3F6
;-------------------------------------------------------------------------------
loc_A42A:
                dc.b    $06, $05  ; GHz
                dc.b    $06, $05  ; Lvl 1
                dc.b    $06, $05  ; Wz
                dc.b    $06, $05  ; Lvl 3
                dc.b    $09, $07  ; Mz
                dc.b    $09, $07  ; Mz
                dc.b    $09, $07  ; Lvl 6
                dc.b    $09, $07  ; HTz
                dc.b    $08, $03  ; HPz
                dc.b    $08, $03  ; Lvl 9
                dc.b    $02, $03  ; OOz
                dc.b    $08, $01  ; DHz
                dc.b    $0B, $05  ; CNz
                dc.b    $00, $07  ; CPz
                dc.b    $04, $01  ; GCz
                dc.b    $02, $05  ; NGHz
                dc.b    $0A, $01  ; DEz  
;-------------------------------------------------------------------------------  
loc_A44C:
                dc.w    $FE00, $FC00
                dc.l    Flickies_Mappings_04                   ; loc_AA08
                dc.w    $FE00, $FD00
                dc.l    Flickies_Mappings                      ; loc_A978
                dc.w    $FE80, $FD00
                dc.l    Flickies_Mappings_04                   ; loc_AA08
                dc.w    $FEC0, $FE80
                dc.l    Flickies_Mappings_03                   ; loc_A9E4
                dc.w    $FE40, $FD00
                dc.l    Flickies_Mappings_02                   ; loc_A9C0
                dc.w    $FD00, $FC00
                dc.l    Flickies_Mappings                      ; loc_A978
                dc.w    $FD80, $FC80
                dc.l    Flickies_Mappings_01                   ; loc_A99C
                dc.w    $FD80, $FD00
                dc.l    Flickies_Mappings                      ; loc_A978
                dc.w    $FE00, $FC80
                dc.l    Flickies_Mappings_01                   ; loc_A99C
                dc.w    $FD40, $FD00
                dc.l    Flickies_Mappings_01                   ; loc_A99C
                dc.w    $FEC0, $FE00
                dc.l    Flickies_Mappings_01                   ; loc_A99C
                dc.w    $FE00, $FD00
                dc.l    Flickies_Mappings_01                   ; loc_A99C 
;------------------------------------------------------------------------------- 
loc_A4AC:
                dc.w    $FBC0, $FC00
                dc.w    $FBC0, $FC00
                dc.w    $FBC0, $FC00
                dc.w    $FD00, $FC00
                dc.w    $FD00, $FC00
                dc.w    $FE80, $FD00
                dc.w    $FE80, $FD00
                dc.w    $FEC0, $FE80
                dc.w    $FE40, $FD00
                dc.w    $FE00, $FD00
                dc.w    $FD80, $FC80
;------------------------------------------------------------------------------- 
loc_A4D8:
                dc.l    Flickies_Mappings                      ; loc_A978
                dc.l    Flickies_Mappings                      ; loc_A978
                dc.l    Flickies_Mappings                      ; loc_A978
                dc.l    Flickies_Mappings_04                   ; loc_AA08
                dc.l    Flickies_Mappings_04                   ; loc_AA08
                dc.l    Flickies_Mappings_04                   ; loc_AA08
                dc.l    Flickies_Mappings_04                   ; loc_AA08
                dc.l    Flickies_Mappings_03                   ; loc_A9E4
                dc.l    Flickies_Mappings_02                   ; loc_A9C0
                dc.l    Flickies_Mappings                      ; loc_A978
                dc.l    Flickies_Mappings_01                   ; loc_A99C 
;------------------------------------------------------------------------------- 
loc_A504:
                dc.w    $05A5
                dc.w    $05A5
                dc.w    $05A5
                dc.w    $0553
                dc.w    $0553
                dc.w    $0573
                dc.w    $0573
                dc.w    $0585
                dc.w    $0593
                dc.w    $0565
                dc.w    $05B3
;------------------------------------------------------------------------------- 
loc_A51A:
                tst.b   Obj_Subtype(A0)                                  ; $0028
                beq     loc_A588
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                add.w   D0, D0
                move.b  D0, Obj_Routine(A0)                              ; $0024
                subi.w  #$0014, D0
                move.w  loc_A504(PC, D0), Obj_Art_VRAM(A0)        ; $0002
                add.w   D0, D0
                move.l  loc_A4D8(PC, D0), Obj_Map(A0)             ; $0004
                lea     loc_A4AC(PC), A1
                move.w  $00(A1, D0), Obj_Control_Var_06(A0)              ; $0032
                move.w  $00(A1, D0), Obj_Speed(A0)                       ; $0010
                move.w  $02(A1, D0), Obj_Control_Var_08(A0)              ; $0034
                move.w  $02(A1, D0), Obj_Speed_Y(A0)                     ; $0012
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$0C, Obj_Height_2(A0)                           ; $0016
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                bset    #$00, Obj_Flags(A0)                              ; $0001
                move.b  #$06, Obj_Priority(A0)                           ; $0018
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.b  #$07, Obj_Ani_Time(A0)                           ; $001E
                bra     DisplaySprite                          ; loc_D322
loc_A588:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     PseudoRandomNumber                     ; loc_325C
                move.w  #$0580, Obj_Art_VRAM(A0)                         ; $0002
                andi.w  #$0001, D0
                beq.s   loc_A5A2
                move.w  #$0594, Obj_Art_VRAM(A0)                         ; $0002
loc_A5A2:
                moveq   #$00, D1
                move.b  (Level_Id).w, D1                             ; $FFFFFE10
                add.w   D1, D1
                add.w   D0, D1
                lea     loc_A42A(PC), A1
                move.b  $00(A1, D1), D0
                move.b  D0, Obj_Control_Var_04(A0)                       ; $0030
                lsl.w   #$03, D0
                lea     loc_A44C(PC), A1
                adda.w  D0, A1
                move.w  (A1)+, Obj_Control_Var_06(A0)                    ; $0032
                move.w  (A1)+, Obj_Control_Var_08(A0)                    ; $0034
                move.l  (A1)+, Obj_Map(A0)                               ; $0004
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$0C, Obj_Height_2(A0)                           ; $0016
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                bset    #$00, Obj_Flags(A0)                              ; $0001
                move.b  #$06, Obj_Priority(A0)                           ; $0018
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.b  #$07, Obj_Ani_Time(A0)                           ; $001E
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
                move.w  #$FC00, Obj_Speed_Y(A0)                          ; $0012
                tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
                bne.s   loc_A62C
                bsr     SingleObjectLoad                       ; loc_E6FE
                bne.s   loc_A628
                move.b  #$29, Obj_Id(A1)                                 ; $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_Control_Var_12(A0), D0                       ; $003E
                lsr.w   #$01, D0
                move.b  D0, Obj_Map_Id(A1)                               ; $001A
loc_A628:
                bra     DisplaySprite                          ; loc_D322
loc_A62C:
                move.b  #$1C, Obj_Routine(A0)                            ; $0024
                clr.w   Obj_Speed(A0)                                    ; $0010
                bra     DisplaySprite                          ; loc_D322     
;-------------------------------------------------------------------------------
loc_A63A:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     DeleteObject                           ; loc_D314
                bsr     ObjectFall                             ; loc_D1AE
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_A690
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_A690
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Control_Var_06(A0), Obj_Speed(A0)     ; $0010, $0032
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                move.b  Obj_Control_Var_04(A0), D0                       ; $0030
                add.b   D0, D0
                addq.b  #$04, D0
                move.b  D0, Obj_Routine(A0)                              ; $0024
                tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
                beq.s   loc_A690
                btst    #$04, ($FFFFFE0F).w
                beq.s   loc_A690
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Flags(A0)                               ; $0001
loc_A690:
                bra     DisplaySprite                          ; loc_D322  
;-------------------------------------------------------------------------------
loc_A694:
                bsr     ObjectFall                             ; loc_D1AE
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_A6BE
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_A6BE
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
loc_A6BE:
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bne.s   loc_A734
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322    
;-------------------------------------------------------------------------------
loc_A6D0:
                bsr     SpeedToPos                             ; loc_D1DA
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_A70C
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_A70C
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
                tst.b   Obj_Subtype(A0)                                  ; $0028
                beq.s   loc_A70C
                cmpi.b  #$0A, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_A70C
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Flags(A0)                               ; $0001
loc_A70C:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_A722
                move.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                andi.b  #$01, Obj_Map_Id(A0)                             ; $001A
loc_A722:
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bne.s   loc_A734
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322
loc_A734:
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                bcs.s   loc_A74C
                subi.w  #$0180, D0
                bpl.s   loc_A74C
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     DeleteObject                           ; loc_D314
loc_A74C:
                bra     DisplaySprite                          ; loc_D322   
;-------------------------------------------------------------------------------
loc_A750:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     DeleteObject                           ; loc_D314
                subq.w  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                bne     loc_A76C
                move.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$03, Obj_Priority(A0)                           ; $0018
loc_A76C:
                bra     DisplaySprite                          ; loc_D322  
;-------------------------------------------------------------------------------
loc_A770:
                bsr     loc_A914
                bcc.s   loc_A78C
                move.w  Obj_Control_Var_06(A0), Obj_Speed(A0)     ; $0010, $0032
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
                move.b  #$0E, Obj_Routine(A0)                            ; $0024
                bra     loc_A6D0
loc_A78C:
                bra     loc_A734 
;-------------------------------------------------------------------------------
loc_A790:
                bsr     loc_A914
                bpl.s   loc_A7C6
                clr.w   Obj_Speed(A0)                                    ; $0010
                clr.w   Obj_Control_Var_06(A0)                           ; $0032
                bsr     SpeedToPos                             ; loc_D1DA
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                bsr     loc_A8D4
                bsr     loc_A8FC
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_A7C6
                move.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                andi.b  #$01, Obj_Map_Id(A0)                             ; $001A
loc_A7C6:
                bra     loc_A734     
;-------------------------------------------------------------------------------
loc_A7CA:
                bsr     loc_A914
                bpl.s   loc_A820
                move.w  Obj_Control_Var_06(A0), Obj_Speed(A0)     ; $0010, $0032
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
                move.b  #$04, Obj_Routine(A0)                            ; $0024
                bra     loc_A694   
;-------------------------------------------------------------------------------
loc_A7E6:
                bsr     ObjectFall                             ; loc_D1AE
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_A820
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_A820
                not.b   Obj_Player_Flip_Flag(A0)                         ; $0029
                bne.s   loc_A816
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Flags(A0)                               ; $0001
loc_A816:
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
loc_A820:
                bra     loc_A734   
;-------------------------------------------------------------------------------
loc_A824:
                bsr     loc_A914
                bpl.s   loc_A83E
                clr.w   Obj_Speed(A0)                                    ; $0010
                clr.w   Obj_Control_Var_06(A0)                           ; $0032
                bsr     ObjectFall                             ; loc_D1AE
                bsr     loc_A8D4
                bsr     loc_A8FC
loc_A83E:
                bra     loc_A734      
;-------------------------------------------------------------------------------
loc_A842:
                bsr     loc_A914
                bpl.s   loc_A87C
                bsr     ObjectFall                             ; loc_D1AE
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_A87C
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_A87C
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Flags(A0)                               ; $0001
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
loc_A87C:
                bra     loc_A734  
;-------------------------------------------------------------------------------
loc_A880:
                bsr     loc_A914
                bpl.s   loc_A8D0
                bsr     SpeedToPos                             ; loc_D1DA
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_A8BA
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_A8BA
                not.b   Obj_Player_Flip_Flag(A0)                         ; $0029
                bne.s   loc_A8B0
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Flags(A0)                               ; $0001
loc_A8B0:
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
loc_A8BA:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_A8D0
                move.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                andi.b  #$01, Obj_Map_Id(A0)                             ; $001A
loc_A8D0:
                bra     loc_A734
loc_A8D4:
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_A8FA
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_A8FA
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
loc_A8FA:
                rts
loc_A8FC:
                bset    #$00, Obj_Flags(A0)                              ; $0001
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                bcc.s   loc_A912
                bclr    #$00, Obj_Flags(A0)                              ; $0001
loc_A912:
                rts
loc_A914:
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                subi.w  #$00B8, D0
                rts   
;===============================================================================
; Object 0x28 - Flickies (birds, squirrels) that appear when destroying enemies
; [ End ] 
;===============================================================================		
Obj29_Enemy_Points:                                         ; loc_A922
;===============================================================================
; Object 0x29 - Pontos obtidos ao destruir alguns Objects
; [ Begin ] 
;===============================================================================
; loc_A922:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_A930(PC, D0), D1
                jmp     loc_A930(PC, D1)   
;-------------------------------------------------------------------------------
loc_A930:
                dc.w    loc_A934-loc_A930
                dc.w    loc_A962-loc_A930           
;-------------------------------------------------------------------------------  
loc_A934:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Enemy_Points_Mappings, Obj_Map(A0) ; loc_AA2C, $0004
                move.w  #$04AC, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.w  #$FD00, Obj_Speed_Y(A0)                          ; $0012 
;-------------------------------------------------------------------------------  
loc_A962:
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bpl     DeleteObject                           ; loc_D314
                bsr     SpeedToPos                             ; loc_D1DA
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                bra     DisplaySprite                          ; loc_D322
;===============================================================================
; Object 0x29 - Pontos obtidos ao destruir alguns Objects
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
Flickies_Mappings:                                             ; loc_A978
		dc.w    loc_A988-Flickies_Mappings
		dc.w    loc_A992-Flickies_Mappings
		dc.w    loc_A97E-Flickies_Mappings
loc_A97E:
		dc.w    $0001
		dc.l    $EC070000, $0000FFF8
loc_A988:
		dc.w    $0001
		dc.l    $F8050008, $0004FFF8
loc_A992:
		dc.w    $0001
		dc.l    $F805000C, $0006FFF8
;-------------------------------------------------------------------------------
Flickies_Mappings_01:                                          ; loc_A99C
		dc.w    loc_A9AC-Flickies_Mappings_01
		dc.w    loc_A9B6-Flickies_Mappings_01
		dc.w    loc_A9A2-Flickies_Mappings_01
loc_A9A2:
		dc.w    $0001
		dc.l    $EC070000, $0000FFF8
loc_A9AC:
		dc.w    $0001
		dc.l    $F8090008, $0004FFF4
loc_A9B6:
		dc.w    $0001
		dc.l    $F809000E, $0007FFF4
;-------------------------------------------------------------------------------
Flickies_Mappings_02:                                          ; loc_A9C0
		dc.w    loc_A9D0-Flickies_Mappings_02
		dc.w    loc_A9DA-Flickies_Mappings_02
		dc.w    loc_A9C6-Flickies_Mappings_02
loc_A9C6:
		dc.w    $0001
		dc.l    $F4060000, $0000FFF8
loc_A9D0:
		dc.w    $0001
		dc.l    $F8090006, $0003FFF4
loc_A9DA:
		dc.w    $0001
		dc.l    $F809000C, $0006FFF4
;-------------------------------------------------------------------------------
Flickies_Mappings_03:                                          ; loc_A9E4
		dc.w    loc_A9F4-Flickies_Mappings_03
		dc.w    loc_A9FE-Flickies_Mappings_03
		dc.w    loc_A9EA-Flickies_Mappings_03
loc_A9EA:
		dc.w    $0001
		dc.l    $F4060000, $0000FFF8
loc_A9F4:
		dc.w    $0001
		dc.l    $F8050006, $0003FFF8
loc_A9FE:
		dc.w    $0001
		dc.l    $F805000A, $0005FFF8
;-------------------------------------------------------------------------------
Flickies_Mappings_04:                                          ; loc_AA08
		dc.w    loc_AA18-Flickies_Mappings_04
		dc.w    loc_AA22-Flickies_Mappings_04
		dc.w    loc_AA0E-Flickies_Mappings_04
loc_AA0E:
		dc.w    $0001
		dc.l    $F4060000, $0000FFF8
loc_AA18:
		dc.w    $0001
		dc.l    $F4060006, $0003FFF8
loc_AA22:
		dc.w    $0001
		dc.l    $F406000C, $0006FFF8
;-------------------------------------------------------------------------------
Enemy_Points_Mappings:                                         ; loc_AA2C
		dc.w    loc_AA3A-Enemy_Points_Mappings
		dc.w    loc_AA44-Enemy_Points_Mappings
		dc.w    loc_AA4E-Enemy_Points_Mappings
		dc.w    loc_AA58-Enemy_Points_Mappings
		dc.w    loc_AA6A-Enemy_Points_Mappings
		dc.w    loc_AA74-Enemy_Points_Mappings
		dc.w    loc_AA86-Enemy_Points_Mappings
loc_AA3A:
		dc.w    $0001
		dc.l    $F8050002, $0001FFF8
loc_AA44:
		dc.w    $0001
		dc.l    $F8050006, $0003FFF8
loc_AA4E:
		dc.w    $0001
		dc.l    $F805000A, $0005FFF8
loc_AA58:
		dc.w    $0002
		dc.l    $F8010000, $0000FFF8
		dc.l    $F805000E, $00070000
loc_AA6A:
		dc.w    $0001
		dc.l    $F8010000, $0000FFFC
loc_AA74:
		dc.w    $0002
		dc.l    $F8050002, $0001FFF0
		dc.l    $F805000E, $00070000
loc_AA86:
		dc.w    $0002
		dc.l    $F805000A, $0005FFF0
		dc.l    $F805000E, $00070000
;-------------------------------------------------------------------------------
Obj25_Rings:                                                ; loc_AA98
;===============================================================================
; Object 0x25 - An is - Este Object n o   usado pelos an is normais nas fases
; [ Begin ]
;===============================================================================
; loc_AA98:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_AAA6(PC, D0), D1
                jmp     loc_AAA6(PC, D1)
;-------------------------------------------------------------------------------
loc_AAA6:
                dc.w    loc_AAD0-loc_AAA6
                dc.w    loc_AB3E-loc_AAA6
                dc.w    loc_AB5A-loc_AAA6
                dc.w    loc_AB80-loc_AAA6
                dc.w    loc_AB8E-loc_AAA6
;-------------------------------------------------------------------------------
; loc_AAB0: ; Unused data, Leftover from Sonic 1
                dc.b    $10, $00, $18, $00, $20, $00, $00, $10
                dc.b    $00, $18, $00, $20, $10, $10, $18, $18
                dc.b    $20, $20, $F0, $10, $E8, $18, $E0, $20
                dc.b    $10, $08, $18, $10, $F0, $08, $E8, $10
;-------------------------------------------------------------------------------
loc_AAD0:
                move.l  A0, A1
                moveq   #$00, D1
                move.w  Obj_X(A0), D2                                    ; $0008
                move.w  Obj_Y(A0), D3                                    ; $000C
                bra.s   loc_AAE6
;-------------------------------------------------------------------------------
loc_AADE:
                swap.w  D1
                bsr     SingleObjectLoad                       ; loc_E6FE
                bne.s   loc_AB3E
loc_AAE6:
                move.b  #$25, Obj_Id(A1)                                 ; $0000
                addq.b  #$02, Obj_Routine(A1)                            ; $0024
                move.w  D2, Obj_X(A1)                                    ; $0008
                move.w  Obj_X(A0), Obj_Control_Var_06(A1)         ; $0008, $0032
                move.w  D3, Obj_Y(A1)                                    ; $000C
                move.l  #Rings_Mappings, Obj_Map(A1)    ; loc_AEA0, $0004
                move.w  #$26BC, Obj_Art_VRAM(A1)                         ; $0002
                bsr     ModifySpriteAttr_2P_A1                 ; loc_DBDA
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$02, Obj_Priority(A1)                           ; $0018
                move.b  #$47, Obj_Col_Flags(A1)                          ; $0020
                move.b  #$08, Obj_Width(A1)                              ; $0019
                move.b  Obj_Respaw_Ref(A0), Obj_Respaw_Ref(A1)    ; $0023, $0023
                move.b  D1, Obj_Control_Var_08(A1)                       ; $0034
                addq.w  #$01, D1
                add.w   D5, D2
                add.w   D6, D3
                swap.w  D1
                dbra    D1, loc_AADE
;-------------------------------------------------------------------------------
loc_AB3E:
                move.b  (Object_Frame_Buffer+$0003).w, Obj_Map_Id(A0)     ; $FFFFFEA3; $001A
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                andi.w  #$FF80, D0
                sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
                cmpi.w  #$0280, D0
                bhi.s   loc_AB8E
                bra     DisplaySprite                          ; loc_D322
;-------------------------------------------------------------------------------
loc_AB5A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                bsr     Add_Rings                              ; loc_AB92
                lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                move.b  Obj_Control_Var_08(A0), D1                       ; $0034
                bset    D1, $02(A2, D0)
;-------------------------------------------------------------------------------
loc_AB80:
                lea     (Rings_Animate_Data), A1               ; loc_AE98
                bsr     AnimateSprite                          ; loc_D372
                bra     DisplaySprite                          ; loc_D322
;-------------------------------------------------------------------------------
loc_AB8E:
                bra     DeleteObject                           ; loc_D314
;===============================================================================
; Object 0x25 - An is - Este Object n o   usado pelos an is normais nas fases
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
; Rotina para adicionar an is ao contador, verificando o limmite e bonificando
; [ Begin ]          com vida extra ao adiquirir 100 e 200 an is
;-------------------------------------------------------------------------------
Add_Rings:                                                     ; loc_AB92
		addq.w  #$01, (Ring_Count).w                         ; $FFFFFE20
		ori.b   #$01, (HUD_Rings_Refresh_Flag).w             ; $FFFFFE1D
		move.w  #$00B5, D0
		cmpi.w  #$0064, (Ring_Count).w                       ; $FFFFFE20
		bcs.s   loc_ABCC
		bset    #$01, (Ring_Life_Flag).w                     ; $FFFFFE1B
		beq.s   loc_ABC0
		cmpi.w  #$00C8, (Ring_Count).w                       ; $FFFFFE20
		bcs.s   loc_ABCC
		bset    #$02, (Ring_Life_Flag).w                     ; $FFFFFE1B
		bne.s   loc_ABCC
loc_ABC0:
		addq.b  #$01, (Life_Count).w                         ; $FFFFFE12
		addq.b  #$01, (HUD_Life_Refresh_Flag).w              ; $FFFFFE1C
		move.w  #$0088, D0
loc_ABCC:
		jmp     (Play_Sfx)                             ; loc_1512
;-------------------------------------------------------------------------------
; Rotina para adicionar an is ao contador, verificando o limmite e bonificando
; [ End ]          com vida extra ao adiquirir 100 e 200 an is
;-------------------------------------------------------------------------------
Obj37_Rings_Lost:                                           ; loc_ABD2
;===============================================================================
; Object 0x37 - Perdendo anéis após sofrer algum dano
; [ Begin ] 
;===============================================================================
; loc_ABD2
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_ABE0(PC, D0), D1
                jmp     loc_ABE0(PC, D1)           
;-------------------------------------------------------------------------------
loc_ABE0:
                dc.w    loc_ABEA-loc_ABE0
                dc.w    loc_ACAE-loc_ABE0
                dc.w    loc_AD00-loc_ABE0
                dc.w    loc_AD14-loc_ABE0
                dc.w    loc_AD22-loc_ABE0     
;-------------------------------------------------------------------------------   
loc_ABEA:
                move.l  A0, A1
                moveq   #$00, D5
                move.w  (Ring_Count).w, D5                           ; $FFFFFE20
                moveq   #$20, D0
                cmp.w   D0, D5
                bcs.s   loc_ABFA
                move.w  D0, D5
loc_ABFA:
                subq.w  #$01, D5
                move.w  #$0288, D4
                bra.s   loc_AC0A      
;-------------------------------------------------------------------------------
loc_AC02:
                bsr     SingleObjectLoad                       ; loc_E6FE
                bne     loc_AC92
loc_AC0A:
                move.b  #$37, Obj_Id(A1)                                 ; $0000
                addq.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  #$08, Obj_Height_2(A1)                           ; $0016
                move.b  #$08, Obj_Width_2(A1)                            ; $0017
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.l  #Rings_Mappings, Obj_Map(A1)    ; loc_AEA0, $0004
                move.w  #$26BC, Obj_Art_VRAM(A1)                         ; $0002
                bsr     ModifySpriteAttr_2P_A1                 ; loc_DBDA
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$47, Obj_Col_Flags(A1)                          ; $0020
                move.b  #$08, Obj_Width(A1)                              ; $0019
                move.b  #$FF, (Object_Frame_Buffer+$0006).w          ; $FFFFFEA6
                tst.w   D4
                bmi.s   loc_AC82
                move.w  D4, D0
                bsr     CalcSine                               ; loc_3282
                move.w  D4, D2
                lsr.w   #$08, D2
                asl.w   D2, D0
                asl.w   D2, D1
                move.w  D0, D2
                move.w  D1, D3
                addi.b  #$10, D4
                bcc.s   loc_AC82
                subi.w  #$0080, D4
                bcc.s   loc_AC82
                move.w  #$0288, D4
loc_AC82:
                move.w  D2, Obj_Speed(A1)                                ; $0010
                move.w  D3, Obj_Speed_Y(A1)                              ; $0012
                neg.w   D2
                neg.w   D4
                dbra    D5, loc_AC02
loc_AC92:
                move.w  #$0000, (Ring_Count).w                       ; $FFFFFE20
                move.b  #$80, (HUD_Rings_Refresh_Flag).w             ; $FFFFFE1D
                move.b  #$00, (Ring_Life_Flag).w                     ; $FFFFFE1B
                move.w  #$00C6, D0
                jsr     (Play_Sfx)                             ; loc_1512  
;-------------------------------------------------------------------------------
loc_ACAE:
                move.b  (Object_Frame_Buffer+$0007).w, Obj_Map_Id(A0) ; $FFFFFEA7; $001A
                bsr     SpeedToPos                             ; loc_D1DA
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                bmi.s   loc_ACE8
                move.b  ($FFFFFE0F).w, D0
                add.b   D7, D0
                andi.b  #$03, D0
                bne.s   loc_ACE8
                jsr     (Ring_FindFloor)                       ; loc_14260
                tst.w   D1
                bpl.s   loc_ACE8
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Speed_Y(A0), D0                              ; $0012
                asr.w   #$02, D0
                sub.w   D0, Obj_Speed_Y(A0)                              ; $0012
                neg.w   Obj_Speed_Y(A0)                                  ; $0012
loc_ACE8:
                tst.b   (Object_Frame_Buffer+$0006).w                ; $FFFFFEA6
                beq.s   loc_AD22
                move.w  (Sonic_Level_Limits_Max_Y).w, D0             ; $FFFFEECE
                addi.w  #$00E0, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcs.s   loc_AD22
                bra     DisplaySprite                          ; loc_D322  
;-------------------------------------------------------------------------------
loc_AD00:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                bsr     Add_Rings                              ; loc_AB92   
;-------------------------------------------------------------------------------
loc_AD14:
                lea     (Rings_Animate_Data), A1               ; loc_AE98
                bsr     AnimateSprite                          ; loc_D372
                bra     DisplaySprite                          ; loc_D322 
;-------------------------------------------------------------------------------
loc_AD22:
                bra     DeleteObject                           ; loc_D314 
;===============================================================================
; Object 0x37 - Perdendo anéis após sofrer algum dano
; [ End ] 
;===============================================================================
Obj_S1_0x4B_Big_Ring:                                          ; loc_AD26
;===============================================================================
; Object 0x4B - Giant ring used to access the Special Stage
; [ Begin ]          Not used, leftover from Sonic 1
;===============================================================================
; loc_AD26:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_AD34(PC, D0), D1
                jmp     loc_AD34(PC, D1)   
;-------------------------------------------------------------------------------  
loc_AD34:
                dc.w    loc_AD3C-loc_AD34
                dc.w    loc_AD8A-loc_AD34
                dc.w    loc_ADA8-loc_AD34
                dc.w    loc_ADE6-loc_AD34       
;-------------------------------------------------------------------------------
loc_AD3C:
                move.l  #Big_Ring_Mappings, Obj_Map(A0) ; loc_AF04, $0004
                move.w  #$2400, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$40, Obj_Width(A0)                              ; $0019
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_AD8A
                cmpi.b  #$06, (Emerald_Count).w                      ; $FFFFFE57
                beq     loc_ADE6
                cmpi.w  #$0032, (Ring_Count).w                       ; $FFFFFE20
                bcc.s   loc_AD74
                rts
loc_AD74:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$02, Obj_Priority(A0)                           ; $0018
                move.b  #$52, Obj_Col_Flags(A0)                          ; $0020
                move.w  #$0C40, ($FFFFF7BE).w      
;-------------------------------------------------------------------------------
loc_AD8A:
                move.b  (Object_Frame_Buffer+$0003).w, Obj_Map_Id(A0)     ; $FFFFFEA3; $001A
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322       
;-------------------------------------------------------------------------------
loc_ADA8:
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
                bsr     SingleObjectLoad                       ; loc_E6FE
                bne     loc_ADDA
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.l  A0, Obj_Control_Var_10(A1)                       ; $003C
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                cmp.w   Obj_X(A0), D0                                    ; $0008
                bcs.s   loc_ADDA
                bset    #$00, Obj_Flags(A1)                              ; $0001
loc_ADDA:
                move.w  #$00C3, D0
                jsr     (Play_Sfx)                             ; loc_1512
                bra.s   loc_AD8A        
;-------------------------------------------------------------------------------
loc_ADE6:
                bra     DeleteObject                           ; loc_D314 
;===============================================================================
; Object 0x4B - Giant ring used to access the Special Stage
; [ End ]          Not used, leftover from Sonic 1
;===============================================================================
Obj_S1_0x7C_Big_Ring_Flash:                                    ; loc_ADEA
;===============================================================================
; Object 0x7C - Flash of the giant Ring used to access the Special Stage
; [ Begin ]          Not used, leftover from Sonic 1
;===============================================================================
; loc_ADEA:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_ADF8(PC, D0), D1
                jmp     loc_ADF8(PC, D1)      
;-------------------------------------------------------------------------------   
loc_ADF8:
                dc.w    loc_ADFE-loc_ADF8
                dc.w    loc_AE2C-loc_ADF8
                dc.w    loc_AE94-loc_ADF8      
;-------------------------------------------------------------------------------
loc_ADFE:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Big_Ring_Flash_Mappings, Obj_Map(A0) ; loc_B004, $0004
                move.w  #$2462, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$00, Obj_Priority(A0)                           ; $0018
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$FF, Obj_Map_Id(A0)                             ; $001A 
;-------------------------------------------------------------------------------
loc_AE2C:
                bsr.s   loc_AE46
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322
loc_AE46:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_AE84
                move.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$08, Obj_Map_Id(A0)                             ; $001A
                bcc.s   loc_AE86
                cmpi.b  #$03, Obj_Map_Id(A0)                             ; $001A
                bne.s   loc_AE84
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.b  #$1C, ($FFFFB01C).w
                move.b  #$01, ($FFFFF7CD).w
                clr.b   (Invincibility_Flag).w                       ; $FFFFFE2D
                clr.b   (Shield_Flag).w                              ; $FFFFFE2C
loc_AE84:
                rts
loc_AE86:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0000, (Obj_Memory_Address).w               ; $FFFFB000
                addq.l  #$04, A7
                rts                 
;-------------------------------------------------------------------------------
loc_AE94:
                bra     DeleteObject                           ; loc_D314 
;===============================================================================
; Object 0x7C - Flash of the giant Ring used to access the Special Stage
; [ End ]          Not used, leftover from Sonic 1
;===============================================================================
;-------------------------------------------------------------------------------
Rings_Animate_Data:                                            ; loc_AE98
		dc.w    loc_AE9A-Rings_Animate_Data
loc_AE9A:
		dc.b    $05, $04, $05, $06, $07, $FC
;-------------------------------------------------------------------------------
Rings_Mappings:                                                ; loc_AEA0
		include 'mappings/sprite/obj25.asm'
;-------------------------------------------------------------------------------
Big_Ring_Mappings:                                             ; loc_AF04
		dc.w    loc_AF0C-Big_Ring_Mappings
		dc.w    loc_AF5E-Big_Ring_Mappings
		dc.w    loc_AFA0-Big_Ring_Mappings
		dc.w    loc_AFC2-Big_Ring_Mappings
loc_AF0C:
		dc.w    $000A
		dc.l    $E0080000, $0000FFE8
		dc.l    $E0080003, $00010000
		dc.l    $E80C0006, $0003FFE0
		dc.l    $E80C000A, $00050000
		dc.l    $F007000E, $0007FFE0
		dc.l    $F0070016, $000B0010
		dc.l    $100C001E, $000FFFE0
		dc.l    $100C0022, $00110000
		dc.l    $18080026, $0013FFE8
		dc.l    $18080029, $00140000
loc_AF5E:
		dc.w    $0008
		dc.l    $E00C002C, $0016FFF0
		dc.l    $E8080030, $0018FFE8
		dc.l    $E8090033, $00190000
		dc.l    $F0070039, $001CFFE8
		dc.l    $F8050041, $00200008
		dc.l    $08090045, $00220000
		dc.l    $1008004B, $0025FFE8
		dc.l    $180C004E, $0027FFF0
loc_AFA0:
		dc.w    $0004
		dc.l    $E0070052, $0029FFF4
		dc.l    $E0030852, $08290004
		dc.l    $0007005A, $002DFFF4
		dc.l    $0003085A, $082D0004
loc_AFC2:
		dc.w    $0008
		dc.l    $E00C082C, $0816FFF0
		dc.l    $E8080830, $08180000
		dc.l    $E8090833, $0819FFE8
		dc.l    $F0070839, $081C0008
		dc.l    $F8050841, $0820FFE8
		dc.l    $08090845, $0822FFE8
		dc.l    $1008084B, $08250000
		dc.l    $180C084E, $0827FFF0
;-------------------------------------------------------------------------------
Big_Ring_Flash_Mappings:                                       ; loc_B004
		dc.w    loc_B014-Big_Ring_Flash_Mappings
		dc.w    loc_B026-Big_Ring_Flash_Mappings
		dc.w    loc_B048-Big_Ring_Flash_Mappings
		dc.w    loc_B06A-Big_Ring_Flash_Mappings
		dc.w    loc_B08C-Big_Ring_Flash_Mappings
		dc.w    loc_B0AE-Big_Ring_Flash_Mappings
		dc.w    loc_B0D0-Big_Ring_Flash_Mappings
		dc.w    loc_B0E2-Big_Ring_Flash_Mappings
loc_B014:
		dc.w    $0002
		dc.l    $E00F0000, $00000000
		dc.l    $000F1000, $10000000
loc_B026:
		dc.w    $0004
		dc.l    $E00F0010, $0008FFF0
		dc.l    $E0070020, $00100010
		dc.l    $000F1010, $1008FFF0
		dc.l    $00071020, $10100010
loc_B048:
		dc.w    $0004
		dc.l    $E00F0028, $0014FFE8
		dc.l    $E00B0038, $001C0008
		dc.l    $000F1028, $1014FFE8
		dc.l    $000B1038, $101C0008
loc_B06A:
		dc.w    $0004
		dc.l    $E00F0834, $081AFFE0
		dc.l    $E00F0034, $001A0000
		dc.l    $000F1834, $181AFFE0
		dc.l    $000F1034, $101A0000
loc_B08C:
		dc.w    $0004
		dc.l    $E00B0838, $081CFFE0
		dc.l    $E00F0828, $0814FFF8
		dc.l    $000B1838, $181CFFE0
		dc.l    $000F1828, $1814FFF8
loc_B0AE:
		dc.w    $0004
		dc.l    $E0070820, $0810FFE0
		dc.l    $E00F0810, $0808FFF0
		dc.l    $00071820, $1810FFE0
		dc.l    $000F1810, $1808FFF0
loc_B0D0:
		dc.w    $0002
		dc.l    $E00F0800, $0800FFE0
		dc.l    $000F1800, $1800FFE0
loc_B0E2:
		dc.w    $0004
		dc.l    $E00F0044, $0022FFE0
		dc.l    $E00F0844, $08220000
		dc.l    $000F1044, $1022FFE0
		dc.l    $000F1844, $18220000
;-------------------------------------------------------------------------------
Obj26_Monitors:                                             ; loc_B104
;===============================================================================
; Object 0x26 - Monitores
; [ Begin ]
;===============================================================================    
; loc_B104:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_B112(PC, D0), D1
                jmp     loc_B112(PC, D1)
;-------------------------------------------------------------------------------   
loc_B112:
                dc.w    loc_B11C-loc_B112
                dc.w    loc_B182-loc_B112
                dc.w    loc_B274-loc_B112
                dc.w    loc_B266-loc_B112
                dc.w    loc_B270-loc_B112      
;-------------------------------------------------------------------------------  
loc_B11C:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$0E, Obj_Height_2(A0)                           ; $0016
                move.b  #$0E, Obj_Width_2(A0)                            ; $0017
                move.l  #Monitors_Mappings, Obj_Map(A0) ; loc_B580, $0004
                move.w  #$0680, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.b  #$0F, Obj_Width(A0)                              ; $0019
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                bclr    #$07, $02(A2, D0)
                btst    #$00, $02(A2, D0)
                beq.s   loc_B176
                move.b  #$08, Obj_Routine(A0)                            ; $0024
                move.b  #$0B, Obj_Map_Id(A0)                             ; $001A
                rts
loc_B176:
                move.b  #$46, Obj_Col_Flags(A0)                          ; $0020
                move.b  Obj_Subtype(A0), Obj_Ani_Number(A0)       ; $001C, $0028 
;-------------------------------------------------------------------------------  
loc_B182:
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                beq.s   loc_B1DC
                subq.b  #$02, D0
                bne.s   loc_B1BC
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                bsr     Exit_Plaform                           ; loc_FA68
                btst    #$03, Obj_Status(A1)                             ; $0022
                bne     loc_B1AC
                clr.b   Obj_Routine_2(A0)                                ; $0025
                bra     loc_B266
loc_B1AC:
                move.w  #$0010, D3
                move.w  Obj_X(A0), D2                                    ; $0008
                bsr     Player_On_Platform                     ; loc_F78C
                bra     loc_B266
loc_B1BC:
                bsr     ObjectFall                             ; loc_D1AE
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl     loc_B266
                add.w   D1, Obj_Y(A0)                                    ; $000C
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
                clr.b   Obj_Routine_2(A0)                                ; $0025
                bra     loc_B266
loc_B1DC:
                move.w  #$001A, D1
                move.w  #$000F, D2
                bsr     loc_B49E
                beq     loc_B24C
                tst.w   Obj_Speed_Y(A1)                                  ; $0012
                bmi.s   loc_B1FA
                cmpi.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                beq.s   loc_B24C
loc_B1FA:
                tst.w   D1
                bpl.s   loc_B210
                sub.w   D3, Obj_Y(A1)                                    ; $000C
                bsr     Player_On_Spiral                       ; loc_F99A
                move.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bra     loc_B266
loc_B210:
                tst.w   D0
                beq     loc_B236
                bmi.s   loc_B220
                tst.w   Obj_Speed(A1)                                    ; $0010
                bmi.s   loc_B236
                bra.s   loc_B226
loc_B220:
                tst.w   Obj_Speed(A1)                                    ; $0010
                bpl.s   loc_B236
loc_B226:
                sub.w   D0, Obj_X(A1)                                    ; $0008
                move.w  #$0000, Obj_Inertia(A1)                          ; $0014
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
loc_B236:
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne.s   loc_B25A
                bset    #$05, Obj_Status(A1)                             ; $0022
                bset    #$05, Obj_Status(A0)                             ; $0022
                bra.s   loc_B266
loc_B24C:
                btst    #$05, Obj_Status(A0)                             ; $0022
                beq.s   loc_B266
                move.w  #$0001, Obj_Ani_Number(A1)                       ; $001C
loc_B25A:
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022       
;-------------------------------------------------------------------------------  
loc_B266:
                lea     (Monitors_Animate_Data), A1            ; loc_B518
                bsr     AnimateSprite                          ; loc_D372  
;-------------------------------------------------------------------------------  
loc_B270:
                bra     MarkObjGone                            ; loc_D200   
;-------------------------------------------------------------------------------  
loc_B274:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
                bsr     SingleObjectLoad_2                     ; loc_E714
                bne.s   loc_B29C
                move.b  #$2E, Obj_Id(A1)                                 ; $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  Obj_Ani_Number(A0), Obj_Ani_Number(A1)    ; $001C, $001C
loc_B29C:
                bsr     SingleObjectLoad_2                     ; loc_E714
                bne.s   loc_B2B8
                move.b  #$27, Obj_Id(A1)                                 ; $0000
                addq.b  #$02, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
loc_B2B8:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                bset    #$00, $02(A2, D0)
                move.b  #$0A, Obj_Ani_Number(A0)                         ; $001C
                bra     DisplaySprite                          ; loc_D322       
;===============================================================================
; Object 0x26 - Monitores
; [ End ]
;===============================================================================
Obj2E_Monitors_Contents:                                    ; loc_B2D2
;===============================================================================
; Object 0x2E - Conteúdo dos monitores
; [ Begin ]
;===============================================================================    
; loc_B2D2:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_B2E0(PC, D0), D1
                jmp     loc_B2E0(PC, D1)    
;-------------------------------------------------------------------------------
loc_B2E0:
                dc.w    loc_B2E6-loc_B2E0
                dc.w    loc_B32A-loc_B2E0
                dc.w    loc_B492-loc_B2E0     
;-------------------------------------------------------------------------------  
loc_B2E6:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0680, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$24, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.w  #$FD00, Obj_Speed_Y(A0)                          ; $0012
                moveq   #$00, D0
                move.b  Obj_Ani_Number(A0), D0                           ; $001C
                addq.b  #$01, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.l  #Monitors_Mappings, A1                 ; loc_B580
                add.b   D0, D0
                adda.w  $00(A1, D0), A1
                addq.w  #$02, A1
                move.l  A1, Obj_Map(A0)                                  ; $0004
;-------------------------------------------------------------------------------  
loc_B32A:
                bsr.s   loc_B330
                bra     DisplaySprite                          ; loc_D322
loc_B330:
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bpl     loc_B344
                bsr     SpeedToPos                             ; loc_D1DA
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                rts
loc_B344:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$001D, Obj_Ani_Time(A0)                         ; $001E
                moveq   #$00, D0
                move.b  Obj_Ani_Number(A0), D0                           ; $001C
                add.w   D0, D0
                move.w  Monitor_Subroutines(PC, D0), D0        ; loc_B35E
                jmp     Monitor_Subroutines(PC, D0)            ; loc_B35E
;-------------------------------------------------------------------------------
Monitor_Subroutines:                                           ; loc_B35E
                dc.w    Monitor_Empty-Monitor_Subroutines      ; loc_B372
                dc.w    Monitor_SonicLife-Monitor_Subroutines  ; loc_B374
                dc.w    Monitor_MilesLife-Monitor_Subroutines  ; loc_B386
                dc.w    Monitor_Robotnik-Monitor_Subroutines   ; loc_B372
                dc.w    Monitor_Rings-Monitor_Subroutines      ; loc_B398
                dc.w    Monitor_Shoes-Monitor_Subroutines      ; loc_B3D2
                dc.w    Monitor_Shield-Monitor_Subroutines     ; loc_B3FA
                dc.w    Monitor_Invincibility-Monitor_Subroutines ; loc_B410
                dc.w    Monitor_Question_Mark-Monitor_Subroutines ; loc_B43C
                dc.w    Monitor_Spring-Monitor_Subroutines     ; loc_B372
;-------------------------------------------------------------------------------
Monitor_Empty:                                                 ; loc_B372
Monitor_Robotnik:                                              ; loc_B372
Monitor_Spring:                                                ; loc_B372
                rts
;-------------------------------------------------------------------------------                    
Monitor_SonicLife:                                             ; loc_B374
                addq.b  #$01, (Life_Count).w                         ; $FFFFFE12
                addq.b  #$01, (HUD_Life_Refresh_Flag).w              ; $FFFFFE1C
                move.w  #$0098, D0
                jmp     (Play_Music)                           ; loc_150C
;-------------------------------------------------------------------------------
Monitor_MilesLife:                                             ; loc_B386
                addq.b  #$01, (Life_Count).w                         ; $FFFFFE12
                addq.b  #$01, (HUD_Life_Refresh_Flag).w              ; $FFFFFE1C
                move.w  #$0098, D0
                jmp     (Play_Music)                           ; loc_150C
;-------------------------------------------------------------------------------
Monitor_Rings:                                                 ; loc_B398
                addi.w  #$000A, (Ring_Count).w                       ; $FFFFFE20
                ori.b   #$01, (HUD_Rings_Refresh_Flag).w             ; $FFFFFE1D
                cmpi.w  #$0064, (Ring_Count).w                       ; $FFFFFE20
                bcs.s   loc_B3C8
                bset    #$01, (Ring_Life_Flag).w                     ; $FFFFFE1B
                beq     Monitor_SonicLife                      ; loc_B374
                cmpi.w  #$00C8, (Ring_Count).w                       ; $FFFFFE20
                bcs.s   loc_B3C8
                bset    #$02, (Ring_Life_Flag).w                     ; $FFFFFE1B
                beq     Monitor_SonicLife                      ; loc_B374
loc_B3C8:
                move.w  #$00B5, D0
                jmp     (Play_Music)                           ; loc_150C
;-------------------------------------------------------------------------------    
Monitor_Shoes:                                                 ; loc_B3D2
                move.b  #$01, (Hi_Speed_Flag).w                      ; $FFFFFE2E
                move.w  #$04B0, ($FFFFB034).w
                move.w  #$0C00, (Sonic_Max_Speed).w                  ; $FFFFF760
                move.w  #$0018, (Sonic_Acceleration).w               ; $FFFFF762
                move.w  #$0080, (Sonic_Deceleration).w               ; $FFFFF764
                move.w  #$00FB, D0
                jmp     (Play_Music)                           ; loc_150C
;-------------------------------------------------------------------------------
Monitor_Shield:                                                ; loc_B3FA
                move.b  #$01, (Shield_Flag).w                        ; $FFFFFE2C
                move.b  #$38, ($FFFFB180).w
                move.w  #$00AF, D0
                jmp     (Play_Music)                           ; loc_150C
;-------------------------------------------------------------------------------
Monitor_Invincibility:                                         ; loc_B410
                move.b  #$01, (Invincibility_Flag).w                 ; $FFFFFE2D
                move.w  #$04B0, ($FFFFB032).w
                move.b  #$35, ($FFFFB200).w
                tst.b   (Boss_Flag).w                                ; $FFFFF7AA
                bne.s   loc_B43A
                cmpi.b  #$0C, ($FFFFB028).w
                bls.s   loc_B43A
                move.w  #$0097, D0
                jmp     (Play_Music)                           ; loc_150C
loc_B43A:
                rts
;-------------------------------------------------------------------------------
Monitor_Question_Mark:                                         ; loc_B43C
                move.b  #$01, ($FFFFF65F).w
                move.b  #$0F, ($FFFFF65E).w
                move.b  #$01, (Super_Sonic_Flag).w                   ; $FFFFFE19
                move.b  #$81, ($FFFFB02A).w
                move.b  #$1F, ($FFFFB01C).w
                move.b  #$7E, ($FFFFB540).w
                move.w  #$0A00, (Sonic_Max_Speed).w                  ; $FFFFF760
                move.w  #$0030, (Sonic_Acceleration).w               ; $FFFFF762
                move.w  #$0100, (Sonic_Deceleration).w               ; $FFFFF764
                move.w  #$0000, ($FFFFB032).w
                move.b  #$01, (Invincibility_Flag).w                 ; $FFFFFE2D
                move.w  #$00DF, D0
                jsr     (Play_Sfx)                             ; loc_1512
                move.w  #$0096, D0
                jmp     (Play_Music)                           ; loc_150C
;-------------------------------------------------------------------------------
loc_B492:
                subq.w  #$01, Obj_Ani_Time(A0)                           ; $001E
                bmi     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322  
;===============================================================================
; Object 0x2E - Conteúdo dos monitores
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
; Complementary routines referenced from Object 0x26
; [ Begin ]
;-------------------------------------------------------------------------------
loc_B49E:
		lea     (Player_One).w, A1                           ; $FFFFB000
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_B4F6
		move.w  D1, D3
		add.w   D3, D3
		cmp.w   D3, D0
		bhi.s   loc_B4F6
		move.b  Obj_Height_2(A1), D3                             ; $0016
		ext.w   D3
		add.w   D3, D2
		move.w  Obj_Y(A1), D3                                    ; $000C
		sub.w   Obj_Y(A0), D3                                    ; $000C
		add.w   D2, D3
		bmi.s   loc_B4F6
		add.w   D2, D2
		cmp.w   D2, D3
		bcc.s   loc_B4F6
		tst.b   Obj_Timer(A1)                                    ; $002A
		bmi.s   loc_B4F6
		cmpi.b  #$06, (Player_One+Obj_Routine).w             ; $FFFFB024
		bcc.s   loc_B4F6
		tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
		bne.s   loc_B4F6
		cmp.w   D0, D1
		bcc.s   loc_B4EC
		add.w   D1, D1
		sub.w   D1, D0
loc_B4EC:
		cmpi.w  #$0010, D3
		bcs.s   loc_B4FA
loc_B4F2:
		moveq   #$01, D1
		rts
loc_B4F6:
		moveq   #$00, D1
		rts
loc_B4FA:
		moveq   #$00, D1
		move.b  Obj_Width(A0), D1                                ; $0019
		addq.w  #$04, D1
		move.w  D1, D2
		add.w   D2, D2
		add.w   Obj_X(A1), D1                                    ; $0008
		sub.w   Obj_X(A0), D1                                    ; $0008
		bmi.s   loc_B4F2
		cmp.w   D2, D1
		bcc.s   loc_B4F2
		moveq   #-$01, D1
		rts
;-------------------------------------------------------------------------------
Monitors_Animate_Data:                                         ; loc_B518
		dc.w    loc_B52E-Monitors_Animate_Data
		dc.w    loc_B532-Monitors_Animate_Data
		dc.w    loc_B53A-Monitors_Animate_Data
		dc.w    loc_B542-Monitors_Animate_Data
		dc.w    loc_B54A-Monitors_Animate_Data
		dc.w    loc_B552-Monitors_Animate_Data
		dc.w    loc_B55A-Monitors_Animate_Data
		dc.w    loc_B562-Monitors_Animate_Data
		dc.w    loc_B56A-Monitors_Animate_Data
		dc.w    loc_B572-Monitors_Animate_Data
		dc.w    loc_B57A-Monitors_Animate_Data
loc_B52E:
		dc.b    $01, $00, $01, $FF
loc_B532:
		dc.b    $01, $00, $02, $02, $01, $02, $02, $FF
loc_B53A:
		dc.b    $01, $00, $03, $03, $01, $03, $03, $FF
loc_B542:
		dc.b    $01, $00, $04, $04, $01, $04, $04, $FF
loc_B54A:
		dc.b    $01, $00, $05, $05, $01, $05, $05, $FF
loc_B552:
		dc.b    $01, $00, $06, $06, $01, $06, $06, $FF
loc_B55A:
		dc.b    $01, $00, $07, $07, $01, $07, $07, $FF
loc_B562:
		dc.b    $01, $00, $08, $08, $01, $08, $08, $FF
loc_B56A:
		dc.b    $01, $00, $09, $09, $01, $09, $09, $FF
loc_B572:
		dc.b    $01, $00, $0A, $0A, $01, $0A, $0A, $FF
loc_B57A:
		dc.b    $02, $00, $01, $0B, $FE, $01
;-------------------------------------------------------------------------------
Monitors_Mappings:                                             ; loc_B580
		  include 'mappings/sprite/obj26.asm'
;-------------------------------------------------------------------------------
; Complementary routines referenced from Object 0x26
; [ End ]
;-------------------------------------------------------------------------------
Obj0E_Sonic_Tails:                                          ; loc_B660
;===============================================================================
; Object 0x0E - Sonic and Tails on the Title Screen
; [ Begin ]
;===============================================================================
; loc_B660:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_B66E(PC, D0), D1
                jmp     loc_B66E(PC, D1)
;-------------------------------------------------------------------------------
loc_B66E:
                dc.w    loc_B676-loc_B66E
                dc.w    loc_B6B8-loc_B66E
                dc.w    loc_B6CC-loc_B66E
                dc.w    loc_B6E2-loc_B66E
;-------------------------------------------------------------------------------
loc_B676:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0148, Obj_X(A0)                                ; $0008
                move.w  #$00C4, Obj_Sub_Y(A0)                            ; $000A
                move.l  #Sonic_Tails_Mappings, Obj_Map(A0) ; loc_B94E, $0004
                move.w  #$4200, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  #$1D, Obj_Ani_Time_2(A0)                         ; $001F
                tst.b   Obj_Map_Id(A0)                                   ; $001A
                beq.s   loc_B6B8
                move.w  #$00FC, Obj_X(A0)                                ; $0008
                move.w  #$00CC, Obj_Sub_Y(A0)                            ; $000A
                move.w  #$2200, Obj_Art_VRAM(A0)                         ; $0002
;-------------------------------------------------------------------------------
loc_B6B8:
                bra     DisplaySprite                          ; loc_D322
;-------------------------------------------------------------------------------
; loc_B6BC:
                subq.b  #$01, Obj_Ani_Time_2(A0)                         ; $001F
                bpl.s   loc_B6CA
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bra     DisplaySprite                          ; loc_D322
loc_B6CA:
                rts
;-------------------------------------------------------------------------------
loc_B6CC:
                subi.w  #$0008, Obj_Sub_Y(A0)                            ; $000A
                cmpi.w  #$0096, Obj_Sub_Y(A0)                            ; $000A
                bne.s   loc_B6DE
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_B6DE:
                bra     DisplaySprite                          ; loc_D322
;-------------------------------------------------------------------------------
loc_B6E2:
                bra     DisplaySprite                          ; loc_D322
;===============================================================================
; Object 0x0E - Sonic and Tails on the Title Screen
; [ End ]
;===============================================================================
Obj0F:                                                      ; loc_B6E6
;===============================================================================
; Object 0x0F
; [ Begin ] 
;===============================================================================
; loc_B6E6:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_B6F8(PC, D0), D1
                jsr     loc_B6F8(PC, D1)
                bra     DisplaySprite                          ; loc_D322  
;------------------------------------------------------------------------------- 
loc_B6F8:
                dc.w    loc_B6FE-loc_B6F8
                dc.w    loc_B720-loc_B6F8
                dc.w    loc_B720-loc_B6F8      
;-------------------------------------------------------------------------------
loc_B6FE:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0090, Obj_X(A0)                                ; $0008
                move.w  #$0090, Obj_Sub_Y(A0)                            ; $000A
                move.l  #Obj0F_Mappings, Obj_Map(A0) ; loc_B742, $0004
                move.w  #$0680, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE  
;-------------------------------------------------------------------------------
loc_B720:
                move.b  (Control_Ports_Buffer_Data+$0001).w, D0      ; $FFFFF605
                btst    #$05, D0
                beq.s   loc_B734
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                andi.b  #$0F, Obj_Map_Id(A0)                             ; $001A
loc_B734:
                btst    #$04, D0
                beq.s   loc_B740
                bchg    #00, ($FFFFFFD9).w
loc_B740:
                rts
;-------------------------------------------------------------------------------
Obj0F_Mappings:                                             ; loc_B742
                dc.w    loc_B762-Obj0F_Mappings
                dc.w    loc_B76C-Obj0F_Mappings
                dc.w    loc_B776-Obj0F_Mappings
                dc.w    loc_B780-Obj0F_Mappings
                dc.w    loc_B78A-Obj0F_Mappings
                dc.w    loc_B794-Obj0F_Mappings
                dc.w    loc_B79E-Obj0F_Mappings
                dc.w    loc_B7A8-Obj0F_Mappings
                dc.w    loc_B7B2-Obj0F_Mappings
                dc.w    loc_B7BC-Obj0F_Mappings
                dc.w    loc_B7C6-Obj0F_Mappings
                dc.w    loc_B7D0-Obj0F_Mappings
                dc.w    loc_B7DA-Obj0F_Mappings
                dc.w    loc_B7E4-Obj0F_Mappings
                dc.w    loc_B7EE-Obj0F_Mappings
                dc.w    loc_B7F8-Obj0F_Mappings
loc_B762:
                dc.w    $0001
                dc.l    $00000000, $00000000
loc_B76C:
                dc.w    $0001
                dc.l    $00010000, $00000000
loc_B776:
                dc.w    $0001
                dc.l    $00020000, $00000000
loc_B780:
                dc.w    $0001
                dc.l    $00030000, $00000000
loc_B78A:
                dc.w    $0001
                dc.l    $00040000, $00000000
loc_B794:
                dc.w    $0001
                dc.l    $00050000, $00000000
loc_B79E:
                dc.w    $0001
                dc.l    $00060000, $00000000
loc_B7A8:
                dc.w    $0001
                dc.l    $00070000, $00000000
loc_B7B2:
                dc.w    $0001
                dc.l    $00080000, $00000000
loc_B7BC:
                dc.w    $0001
                dc.l    $00090000, $00000000
loc_B7C6:
                dc.w    $0001
                dc.l    $000A0000, $00000000
loc_B7D0:
                dc.w    $0001
                dc.l    $000B0000, $00000000
loc_B7DA:
                dc.w    $0001
                dc.l    $000C0000, $00000000
loc_B7E4:
                dc.w    $0001
                dc.l    $000D0000, $00000000
loc_B7EE:
                dc.w    $0001
                dc.l    $000E0000, $00000000
loc_B7F8:
                dc.w    $0001
                dc.l    $000F0000, $00000000          
;===============================================================================
; Object 0x0F
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
S1_Sonic_In_Title_Screen_Animate_Data:                         ; loc_B802
		dc.w    loc_B804-S1_Sonic_In_Title_Screen_Animate_Data
loc_B804:
		dc.b    $07, $00, $01, $02, $03, $04, $05, $06
		dc.b    $07, $FE, $02, $00
;-------------------------------------------------------------------------------
S1_Press_Start_Button_Animate_Data:                            ; loc_B810
		dc.w    loc_B812-S1_Press_Start_Button_Animate_Data
loc_B812:
		dc.b    $1F, $00, $01, $FF
;-------------------------------------------------------------------------------
S1_Press_Start_Button_Mappings:                                ; loc_B816
		dc.w    loc_B81E-S1_Press_Start_Button_Mappings
		dc.w    loc_B820-S1_Press_Start_Button_Mappings
		dc.w    loc_B852-S1_Press_Start_Button_Mappings
		dc.w    loc_B944-S1_Press_Start_Button_Mappings
loc_B81E:
		dc.w    $0000
loc_B820:
		dc.w    $0006
		dc.l    $000C00F0, $00780000
		dc.l    $000000F3, $00790020
		dc.l    $000000F3, $00790030
		dc.l    $000C00F4, $007A0038
		dc.l    $000800F8, $007C0060
		dc.l    $000800FB, $007D0078
loc_B852:
		dc.w    $001E
		dc.l    $B80F0000, $0000FF80
		dc.l    $B80F0000, $0000FF80
		dc.l    $B80F0000, $0000FF80
		dc.l    $B80F0000, $0000FF80
		dc.l    $B80F0000, $0000FF80
		dc.l    $B80F0000, $0000FF80
		dc.l    $B80F0000, $0000FF80
		dc.l    $B80F0000, $0000FF80
		dc.l    $B80F0000, $0000FF80
		dc.l    $B80F0000, $0000FF80
		dc.l    $D80F0000, $0000FF80
		dc.l    $D80F0000, $0000FF80
		dc.l    $D80F0000, $0000FF80
		dc.l    $D80F0000, $0000FF80
		dc.l    $D80F0000, $0000FF80
		dc.l    $D80F0000, $0000FF80
		dc.l    $D80F0000, $0000FF80
		dc.l    $D80F0000, $0000FF80
		dc.l    $D80F0000, $0000FF80
		dc.l    $D80F0000, $0000FF80
		dc.l    $F80F0000, $0000FF80
		dc.l    $F80F0000, $0000FF80
		dc.l    $F80F0000, $0000FF80
		dc.l    $F80F0000, $0000FF80
		dc.l    $F80F0000, $0000FF80
		dc.l    $F80F0000, $0000FF80
		dc.l    $F80F0000, $0000FF80
		dc.l    $F80F0000, $0000FF80
		dc.l    $F80F0000, $0000FF80
		dc.l    $F80F0000, $0000FF80
loc_B944:
		dc.w    $0001
		dc.l    $FC040000, $0000FFF8
;-------------------------------------------------------------------------------
Sonic_Tails_Mappings:                                          ; loc_B94E
		include 'mappings/sprite/obj0E.asm'
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Obj34_Title_Cards:                                          ; loc_BA00
;===============================================================================
; Object 0x34 - Tela com o nome das fases conhecido tamb m conhecido como:
; [ Begin ]        - Splash Screen, Title Cards, etc...
;===============================================================================
; loc_BA00:
		moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_BA0E(PC, D0), D1
                jmp     loc_BA0E(PC, D1) 
;-------------------------------------------------------------------------------    
loc_BA0E:
                dc.w    loc_BA16-loc_BA0E
                dc.w    loc_BA88-loc_BA0E
                dc.w    loc_BAB0-loc_BA0E
                dc.w    loc_BAB0-loc_BA0E  
;-------------------------------------------------------------------------------
loc_BA16:
                move.l  A0, A1
                moveq   #$00, D0
                move.b  (Level_Id).w, D0                             ; $FFFFFE10
                move.w  D0, D2
                lea     (Title_Cards_Config), A3               ; loc_BB34
                lsl.w   #$04, D0
                adda.w  D0, A3
                lea     (Title_Cards_Main_Position), A2        ; loc_BB24
                moveq   #$03, D1
Title_Card_Loop:                                               ; loc_BA32
                move.b  #$34, Obj_Id(A1)                                 ; $0000
                move.w  (A3), Obj_X(A1)                                  ; $0008
                move.w  (A3)+, Obj_Control_Var_06(A1)                    ; $0032
                move.w  (A3)+, Obj_Control_Var_04(A1)                    ; $0030
                move.w  (A2)+, Obj_Sub_Y(A1)                             ; $000A
                move.b  (A2)+, Obj_Routine(A1)                           ; $0024
                move.b  (A2)+, D0
                bne.s   Title_Cards_MakeSprite                 ; loc_BA52
                move.b  D2, D0
Title_Cards_MakeSprite:                                        ; loc_BA52
                move.b  D0, Obj_Map_Id(A1)                               ; $001A
                move.l  #Title_Cards_Mappings, Obj_Map(A1) ; loc_C176, $0004
                move.w  #$8580, Obj_Art_VRAM(A1)                         ; $0002
                bsr     ModifySpriteAttr_2P_A1                 ; loc_DBDA
                move.b  #$78, Obj_Width(A1)                              ; $0019
                move.b  #$00, Obj_Flags(A1)                              ; $0001
                move.b  #$00, Obj_Priority(A1)                           ; $0018
                move.w  #$003C, Obj_Ani_Time(A1)                         ; $001E
                lea     Obj_Size(A1), A1                                 ; $0040
                dbra    D1, Title_Card_Loop                    ; loc_BA32
;-------------------------------------------------------------------------------  
loc_BA88:
                moveq   #$10, D1
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                cmp.w   Obj_X(A0), D0                                    ; $0008
                beq.s   loc_BA9C
                bge.s   loc_BA98
                neg.w   D1
loc_BA98:
                add.w   D1, Obj_X(A0)                                    ; $0008
loc_BA9C:
                move.w  Obj_X(A0), D0                                    ; $0008
                bmi.s   loc_BAAE
                cmpi.w  #$0200, D0
                bcc.s   loc_BAAE
                rts                     
;-------------------------------------------------------------------------------
; loc_BAAA:
                bra     DisplaySprite                          ; loc_D322
loc_BAAE:
                rts     
;-------------------------------------------------------------------------------
loc_BAB0:
                tst.w   Obj_Ani_Time(A0)                                 ; $001E
                beq.s   loc_BAC0
                subq.w  #$01, Obj_Ani_Time(A0)                           ; $001E
                rts                                                            
;-------------------------------------------------------------------------------  
; loc_BABC:
                bra     DisplaySprite                          ; loc_D322 
;------------------------------------------------------------------------------- 
loc_BAC0:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_BAEE
                moveq   #$20, D1
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                cmp.w   Obj_X(A0), D0                                    ; $0008
                beq.s   loc_BAEE
                bge.s   loc_BAD6
                neg.w   D1
loc_BAD6:
                add.w   D1, Obj_X(A0)                                    ; $0008
                move.w  Obj_X(A0), D0                                    ; $0008
                bmi.s   loc_BAEC
                cmpi.w  #$0200, D0
                bcc.s   loc_BAEC
                rts                                  
;-------------------------------------------------------------------------------     
; loc_BAE8:
                bra     DisplaySprite                          ; loc_D322
loc_BAEC:
                rts
loc_BAEE:
                cmpi.b  #$04, Obj_Routine(A0)                            ; $0024
                bne.s   loc_BB0E
                moveq   #$02, D0
                jsr     (LoadPLC)                              ; loc_1794
                moveq   #$00, D0
                move.b  (Level_Id).w, D0                             ; $FFFFFE10
                move.b  Flickies_Select_Array(PC, D0), D0      ; loc_BB12
                jsr     (LoadPLC)                              ; loc_1794
loc_BB0E:
                bra     DeleteObject                           ; loc_D314 
;-------------------------------------------------------------------------------  
Flickies_Select_Array:                                         ; loc_BB12
                dc.b    $32, $32, $32, $32, $34, $34, $34, $34
                dc.b    $36, $36, $37, $33, $39, $3A, $35, $3B
                dc.b    $38, $38                             
;------------------------------------------------------------------------------- 
Title_Cards_Main_Position:                                     ; loc_BB24
                dc.w    $00D0, $0200  ; Level Name Position X / Y
                dc.w    $00E4, $0206  ; "Zone" word Position X / Y
                dc.w    $00EA, $0207  ; "Act x" word Position X / Y
                dc.w    $00E0, $020A  ; Oval Position X / Y  
;------------------------------------------------------------------------------- 
Title_Cards_Config:                                            ; loc_BB34                
                dc.w    $0000, $0120, $FEFC, $013C, $0414, $0154, $0214, $0154
                dc.w    $0000, $0120, $FEF4, $0134, $040C, $014C, $020C, $014C
                dc.w    $0000, $0120, $FEE0, $0120, $03F8, $0138, $01F8, $0138
                dc.w    $0000, $0120, $FEFC, $013C, $0414, $0154, $0214, $0154
                dc.w    $0000, $0120, $FF04, $0144, $041C, $015C, $021C, $015C
                dc.w    $0000, $0120, $FF04, $0144, $041C, $015C, $021C, $015C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
                dc.w    $0000, $0120, $FEE4, $0124, $03EC, $03EC, $01EC, $012C
;===============================================================================
; Object 0x34 - Tela com o nome das fases conhecido tamb m conhecido como:
; [ End ]        - Splash Screen, Title Cards, etc...
;===============================================================================
Obj39_Time_Over_Game_Over:                                  ; loc_BC44
;===============================================================================
; Object 0x39 - Object de controle de Game Over / Time Over
; [ Begin ]
;===============================================================================
; loc_BC44:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_BC52(PC, D0), D1
                jmp     loc_BC52(PC, D1)
;-------------------------------------------------------------------------------   
loc_BC52:
                dc.w    loc_BC58-loc_BC52
                dc.w    loc_BC9C-loc_BC52
                dc.w    loc_BCBE-loc_BC52       
;-------------------------------------------------------------------------------  
loc_BC58:
                tst.l   (PLC_Buffer).w                               ; $FFFFF680
                beq.s   loc_BC60
                rts
loc_BC60:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0050, Obj_X(A0)                                ; $0008
                btst    #$00, Obj_Map_Id(A0)                             ; $001A
                beq.s   loc_BC78
                move.w  #$01F0, Obj_X(A0)                                ; $0008
loc_BC78:
                move.w  #$00F0, Obj_Sub_Y(A0)                            ; $000A
                move.l  #Time_Over_Game_Over_Mappings, Obj_Map(A0) ; loc_C42E, $0004
                move.w  #$855E, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$00, Obj_Flags(A0)                              ; $0001
                move.b  #$00, Obj_Priority(A0)                           ; $0018    
;------------------------------------------------------------------------------- 
loc_BC9C:
                moveq   #$10, D1
                cmpi.w  #$0120, Obj_X(A0)                                ; $0008
                beq.s   loc_BCB2
                bcs.s   loc_BCAA
                neg.w   D1
loc_BCAA:
                add.w   D1, Obj_X(A0)                                    ; $0008
                bra     DisplaySprite                          ; loc_D322
loc_BCB2:
                move.w  #$02D0, Obj_Ani_Time(A0)                         ; $001E
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                rts                          
;------------------------------------------------------------------------------- 
loc_BCBE:
                move.b  (Control_Ports_Buffer_Data+$0001).w, D0      ; $FFFFF605
                andi.b  #$70, D0
                bne.s   loc_BCDE
                btst    #$00, Obj_Map_Id(A0)                             ; $001A
                bne.s   loc_BD02
                tst.w   Obj_Ani_Time(A0)                                 ; $001E
                beq.s   loc_BCDE
                subq.w  #$01, Obj_Ani_Time(A0)                           ; $001E
                bra     DisplaySprite                          ; loc_D322
loc_BCDE:
                tst.b   (Time_Over_Flag).w
                bne.s   loc_BCF8
                move.b  #gm_Continue, (Game_Mode).w             ; $14, $FFFFF600
                tst.b   ($FFFFFE18).w
                bne.s   loc_BD02
                move.b  #gm_SEGALogo, (Game_Mode).w             ; $00, $FFFFF600
                bra.s   loc_BD02
loc_BCF8:
                clr.l   ($FFFFFE38).w
                move.w  #$0001, ($FFFFFE02).w
loc_BD02:
                bra     DisplaySprite                          ; loc_D322     
;===============================================================================
; Object 0x39 - Object de controle de Game Over / Time Over
; [ End ]
;===============================================================================
Obj3A_Level_Results:                                        ; loc_BD06
;===============================================================================
; Object 0x3A - Tela com a pontuação e bonificação da fase
; [ Begin ] 
;===============================================================================  
; loc_BD06:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_BD14(PC, D0), D1
                jmp     loc_BD14(PC, D1)       
;-------------------------------------------------------------------------------
loc_BD14:
                dc.w    loc_BD1C-loc_BD14
                dc.w    loc_BD78-loc_BD14
                dc.w    loc_BDC4-loc_BD14
                dc.w    loc_BE34-loc_BD14    
;-------------------------------------------------------------------------------
loc_BD1C:
                tst.l   (PLC_Buffer).w                               ; $FFFFF680
                beq.s   loc_BD24
                rts
loc_BD24:
                move.l  A0, A1
                lea     (Level_Results_Screen_Pos), A2         ; loc_BF06
                moveq   #$06, D1
loc_BD2E:
                move.b  #$3A, Obj_Id(A1)                                 ; $0000
                move.w  (A2), Obj_X(A1)                                  ; $0008
                move.w  (A2)+, Obj_Control_Var_06(A1)                    ; $0032
                move.w  (A2)+, Obj_Control_Var_04(A1)                    ; $0030
                move.w  (A2)+, Obj_Sub_Y(A1)                             ; $000A
                move.b  (A2)+, Obj_Routine(A1)                           ; $0024
                move.b  (A2)+, D0
                cmpi.b  #$06, D0
                bne.s   loc_BD54
                add.b   (Act_Id).w, D0                               ; $FFFFFE11
loc_BD54:
                move.b  D0, Obj_Map_Id(A1)                               ; $001A
                move.l  #Level_Results_Mappings, Obj_Map(A1) ; loc_C47E, $0004
                move.w  #$8580, Obj_Art_VRAM(A1)                         ; $0002
                bsr     ModifySpriteAttr_2P_A1                 ; loc_DBDA
                move.b  #$00, Obj_Flags(A1)                              ; $0001
                lea     Obj_Size(A1), A1                                 ; $0040
                dbra    D1, loc_BD2E           
;-------------------------------------------------------------------------------
loc_BD78:
                moveq   #$10, D1
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                cmp.w   Obj_X(A0), D0                                    ; $0008
                beq.s   loc_BDAA
                bge.s   loc_BD88
                neg.w   D1
loc_BD88:
                add.w   D1, Obj_X(A0)                                    ; $0008
loc_BD8C:                
                move.w  Obj_X(A0), D0                                    ; $0008
                bmi.s   loc_BD9E
                cmpi.w  #$0200, D0
                bcc.s   loc_BD9E
                rts                 
;------------------------------------------------------------------------------- 
; loc_BD9A:
                bra     DisplaySprite                          ; loc_D322 
;------------------------------------------------------------------------------- 
loc_BD9E:
                rts                                                     
;-------------------------------------------------------------------------------  
loc_BDA0:
                move.b  #$0E, Obj_Routine(A0)                            ; $0024
                bra     loc_BEB4           
;-------------------------------------------------------------------------------  
loc_BDAA:
                cmpi.b  #$0E, ($FFFFB724).w
                beq.s   loc_BDA0
                cmpi.b  #$04, Obj_Map_Id(A0)                             ; $001A
                bne.s   loc_BD8C
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$00B4, Obj_Ani_Time(A0)                         ; $001E
loc_BDC4:
                subq.w  #$01, Obj_Ani_Time(A0)                           ; $001E
                bne.s   loc_BDCE
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_BDCE:
                rts       
;-------------------------------------------------------------------------------
; loc_BDD0:
                bra     DisplaySprite                          ; loc_D322 
;-------------------------------------------------------------------------------  
; loc_BDD4:
                bsr     DisplaySprite                          ; loc_D322
                move.b  #$01, ($FFFFF7D6).w
                moveq   #$00, D0
                tst.w   ($FFFFF7D2).w
                beq.s   loc_BDF0
                addi.w  #$000A, D0
                subi.w  #$000A, ($FFFFF7D2).w
loc_BDF0:
                tst.w   ($FFFFF7D4).w
                beq.s   loc_BE00
                addi.w  #$000A, D0
                subi.w  #$000A, ($FFFFF7D4).w
loc_BE00:
                tst.w   D0
                bne.s   loc_BE1A
                move.w  #$00C5, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$00B4, Obj_Ani_Time(A0)                         ; $001E
loc_BE18:
                rts
loc_BE1A:
                jsr     (AddPoints)                            ; loc_2D2D4
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$03, D0
                bne.s   loc_BE18
                move.w  #$00CD, D0
                jmp     (Play_Sfx)                             ; loc_1512
loc_BE34:
                moveq   #$00, D0
                move.b  (Level_Id).w, D0                             ; $FFFFFE10
                add.w   D0, D0                      
                add.b   (Act_Id).w, D0                               ; $FFFFFE11
                add.w   D0, D0
                move.w  Level_Sequence_List(PC, D0), D0        ; loc_BE70
                move.w  D0, (Level_Id).w                             ; $FFFFFE10
                tst.w   D0
                bne.s   loc_BE56
                move.b  #gm_SEGALogo, (Game_Mode).w             ; $00, $FFFFF600
                bra.s   loc_BE6E
loc_BE56:
                clr.b   (Saved_Level_Flag).w                         ; $FFFFFE30
                tst.b   ($FFFFF7CD).w
                beq.s   loc_BE68
                move.b  #gm_SpecialStage, (Game_Mode).w         ; $10, $FFFFF600
                bra.s   loc_BE6E
loc_BE68:
                move.w  #$0001, ($FFFFFE02).w
loc_BE6E:
                rts
;-------------------------------------------------------------------------------
Level_Sequence_List:                                           ; loc_BE70
                dc.w    $0001, $0D00
                dc.w    $0000, $0000
                dc.w    $0201, $0400
                dc.w    $0000, $0000
                dc.w    $0401, $0500
                dc.w    $0F00, $0000
                dc.w    $0000, $0000
                dc.w    $0701, $0B00
                dc.w    $0801, $0A00
                dc.w    $0000, $0000
                dc.w    $0A01, $0B00
                dc.w    $0B01, $0400
                dc.w    $0C01, $0D00
                dc.w    $0D01, $0700
                dc.w    $0E01, $0F00
                dc.w    $0F01, $0000
                dc.w    $1001, $0000       
;-------------------------------------------------------------------------------   
loc_BEB4:
                moveq   #$20, D1
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                cmp.w   Obj_X(A0), D0                                    ; $0008
                beq.s   loc_BEDA
                bge.s   loc_BEC4
                neg.w   D1
loc_BEC4:
                add.w   D1, Obj_X(A0)                                    ; $0008
                move.w  Obj_X(A0), D0                                    ; $0008
                bmi.s   loc_BED8
                cmpi.w  #$0200, D0
                bcc.s   loc_BED8
                bra     DisplaySprite                          ; loc_D322
loc_BED8:
                rts
loc_BEDA:
                cmpi.b  #$04, Obj_Map_Id(A0)                             ; $001A
                bne     DeleteObject                           ; loc_D314
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                clr.b   ($FFFFF7CC).w
                move.w  #$009A, D0
                jmp     (Play_Music)                           ; loc_150C    
;-------------------------------------------------------------------------------
; loc_BEF6:
                addq.w  #$02, (Sonic_Level_Limits_Max_X).w           ; $FFFFEECA
                cmpi.w  #$2100, (Sonic_Level_Limits_Max_X).w         ; $FFFFEECA
                beq     DeleteObject                           ; loc_D314
                rts                                                     
;-------------------------------------------------------------------------------
Level_Results_Screen_Pos:                                      ; loc_BF06
                dc.w    $0004, $0124, $00BC, $0200
                dc.w    $FEE0, $0120, $00D0, $0201
                dc.w    $040C, $014C, $00D6, $0206
                dc.w    $0520, $0120, $00EC, $0202
                dc.w    $0540, $0120, $00FC, $0203
                dc.w    $0560, $0120, $010C, $0204
                dc.w    $020C, $014C, $00CC, $0205
;===============================================================================
; Object 0x3A - Tela com a pontuação e bonificação da fase
; [ End ] 
;===============================================================================
Obj_S1_0x7E_Special_Stage_Results:                             ; loc_BF3E
;===============================================================================
; Object 0x7E - Screen with scores and bonuses for the Special Stage
; [ Begin ]
;===============================================================================
; loc_BF3E:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_BF4C(PC, D0), D1
                jmp     loc_BF4C(PC, D1) 
;-------------------------------------------------------------------------------
loc_BF4C:
                dc.w    loc_BF62-loc_BF4C
                dc.w    loc_BFDA-loc_BF4C
                dc.w    loc_C012-loc_BF4C
                dc.w    loc_C020-loc_BF4C
                dc.w    loc_C012-loc_BF4C
                dc.w    loc_C07A-loc_BF4C
                dc.w    loc_C012-loc_BF4C
                dc.w    loc_C084-loc_BF4C
                dc.w    loc_C012-loc_BF4C
                dc.w    loc_C07A-loc_BF4C
                dc.w    loc_C0A8-loc_BF4C  
;-------------------------------------------------------------------------------
loc_BF62:
                tst.l   (PLC_Buffer).w                               ; $FFFFF680
                beq.s   loc_BF6A
                rts
loc_BF6A:
                move.l  A0, A1
                lea     (Special_Stage_Results_Screen_Pos), A2 ; loc_C0BC
                moveq   #$03, D1
                cmpi.w  #$0032, (Ring_Count).w                       ; $FFFFFE20
                bcs.s   loc_BF7E
                addq.w  #$01, D1
loc_BF7E:
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.w  (A2)+, Obj_X(A1)                                 ; $0008
                move.w  (A2)+, Obj_Control_Var_04(A1)                    ; $0030
                move.w  (A2)+, Obj_Sub_Y(A1)                             ; $000A
                move.b  (A2)+, Obj_Routine(A1)                           ; $0024
                move.b  (A2)+, Obj_Map_Id(A1)                            ; $001A
                move.l  #Special_Stage_Results_Mappings, Obj_Map(A1) ; loc_C5AA, $0004
                move.w  #$8580, Obj_Art_VRAM(A1)                         ; $0002
                bsr     ModifySpriteAttr_2P_A1                 ; loc_DBDA
                move.b  #$00, Obj_Flags(A1)                              ; $0001
                lea     Obj_Size(A1), A1                                 ; $0040
                dbra    D1, loc_BF7E
                moveq   #$07, D0
                move.b  (Emerald_Count).w, D1                        ; $FFFFFE57
                beq.s   loc_BFD6
                moveq   #$00, D0
                cmpi.b  #$06, D1
                bne.s   loc_BFD6
                moveq   #$08, D0
                move.w  #$0018, Obj_X(A0)                                ; $0008
                move.w  #$0118, Obj_Control_Var_04(A0)                   ; $0030
loc_BFD6:
                move.b  D0, Obj_Map_Id(A0)                               ; $001A  
;-------------------------------------------------------------------------------
loc_BFDA:
                moveq   #$10, D1
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                cmp.w   Obj_X(A0), D0                                    ; $0008
                beq.s   loc_C000
                bge.s   loc_BFEA
                neg.w   D1
loc_BFEA:
                add.w   D1, Obj_X(A0)                                    ; $0008
loc_BFEE:
                move.w  Obj_X(A0), D0                                    ; $0008
                bmi.s   loc_BFFE
                cmpi.w  #$0200, D0
                bcc.s   loc_BFFE
                bra     DisplaySprite                          ; loc_D322
loc_BFFE:
                rts
loc_C000:
                cmpi.b  #$02, Obj_Map_Id(A0)                             ; $001A
                bne.s   loc_BFEE
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$00B4, Obj_Ani_Time(A0)                         ; $001E  
;-------------------------------------------------------------------------------
loc_C012:
                subq.w  #$01, Obj_Ani_Time(A0)                           ; $001E
                bne.s   loc_C01C
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_C01C:
                bra     DisplaySprite                          ; loc_D322   
;-------------------------------------------------------------------------------
loc_C020:
                bsr     DisplaySprite                          ; loc_D322
                move.b  #$01, ($FFFFF7D6).w
                tst.w   ($FFFFF7D4).w
                beq.s   loc_C052
                subi.w  #$000A, ($FFFFF7D4).w
                moveq   #$0A, D0
                jsr     (AddPoints)                            ; loc_2D2D4
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$03, D0
                bne.s   loc_C078
                move.w  #$00CD, D0
                jmp     (Play_Sfx)                             ; loc_1512
loc_C052:
                move.w  #$00C5, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$00B4, Obj_Ani_Time(A0)                         ; $001E
                cmpi.w  #$0032, (Ring_Count).w                       ; $FFFFFE20
                bcs.s   loc_C078
                move.w  #$003C, Obj_Ani_Time(A0)                         ; $001E
                addq.b  #$04, Obj_Routine(A0)                            ; $0024
loc_C078:
                rts       
;-------------------------------------------------------------------------------
loc_C07A:
                move.w  #$0001, ($FFFFFE02).w
                bra     DisplaySprite                          ; loc_D322   
;-------------------------------------------------------------------------------
loc_C084:
                move.b  #$04, ($FFFFB6DA).w
                move.b  #$14, ($FFFFB6E4).w
                move.w  #$00BF, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0168, Obj_Ani_Time(A0)                         ; $001E
                bra     DisplaySprite                          ; loc_D322  
;-------------------------------------------------------------------------------
loc_C0A8:
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$0F, D0
                bne.s   loc_C0B8
                bchg    #00, Obj_Map_Id(A0)                              ; $001A
loc_C0B8:
                bra     DisplaySprite                          ; loc_D322 
;-------------------------------------------------------------------------------
Special_Stage_Results_Screen_Pos:                              ; loc_C0BC 
                dc.w    $0020, $0120, $00C4, $0200
                dc.w    $0320, $0120, $0118, $0201
                dc.w    $0360, $0120, $0128, $0202
                dc.w    $01EC, $011C, $00C4, $0203
                dc.w    $03A0, $0120, $0138, $0206                   
;===============================================================================
; Object 0x7E - Screen with scores and bonuses for the Special Stage
; [ End ]
;===============================================================================
Obj_S1_0x7F_Emeralds:                                          ; loc_C0E4
;===============================================================================
; Object 0x7F - Esmeraldas na tela de pontuação e bonificação do
; [ Begin ]          Estágio Especial
;===============================================================================
; loc_C0E4:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_C0F2(PC, D0), D1
                jmp     loc_C0F2(PC, D1)
;-------------------------------------------------------------------------------
loc_C0F2:
                dc.w    loc_C102-loc_C0F2
                dc.w    loc_C15C-loc_C0F2          
;------------------------------------------------------------------------------- 
Emeralds_Screen_Pos:                                           ; loc_C0F6               
                dc.w    $0110, $0128, $00F8, $0140, $00E0, $0158       
;-------------------------------------------------------------------------------
loc_C102:
                move.l  A0, A1
                lea     Emeralds_Screen_Pos(PC), A2            ; loc_C0F6 
                moveq   #$00, D2
                moveq   #$00, D1
                move.b  (Emerald_Count).w, D1                        ; $FFFFFE57
                subq.b  #$01, D1
                bcs     DeleteObject                           ; loc_D314
loc_C116:
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.w  (A2)+, Obj_X(A1)                                 ; $0008
                move.w  #$00F0, Obj_Sub_Y(A1)                            ; $000A
                lea     (Emerald_Collected_Flag_List).w, A3          ; $FFFFFE58
                move.b  $00(A3, D2), D3
                move.b  D3, Obj_Map_Id(A1)                               ; $001A
                move.b  D3, Obj_Ani_Number(A1)                           ; $001C
                addq.b  #$01, D2
                addq.b  #$02, Obj_Routine(A1)                            ; $0024
                move.l  #Emeralds_Mappings, Obj_Map(A1) ; loc_C7CC, $0004
                move.w  #$8541, Obj_Art_VRAM(A1)                         ; $0002
                bsr     ModifySpriteAttr_2P_A1                 ; loc_DBDA
                move.b  #$00, Obj_Flags(A1)                              ; $0001
                lea     Obj_Size(A1), A1                                 ; $0040
                dbra    D1, loc_C116
loc_C15C:
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                move.b  #$06, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$06, D0
                bne.s   loc_C172
                move.b  Obj_Ani_Number(A0), Obj_Map_Id(A0)        ; $001A, $001C
loc_C172:
                bra     DisplaySprite                          ; loc_D322 
;===============================================================================
; Object 0x7F - Esmeraldas na tela de pontuação e bonificação do
; [ End ]          Estágio Especial
;===============================================================================
;-------------------------------------------------------------------------------
; Sonic 1 Title Card Mappings
; [ Begin ]
;-------------------------------------------------------------------------------
Title_Cards_Mappings:                                          ; loc_C176
		dc.w    GHz_TC_Map-Title_Cards_Mappings        ; loc_C18E
		dc.w    Lz_TC_Map-Title_Cards_Mappings         ; loc_C1D8
		dc.w    Mz_TC_Map-Title_Cards_Mappings         ; loc_C222
		dc.w    SLz_TC_Map-Title_Cards_Mappings        ; loc_C254
		dc.w    SYz_TC_Map-Title_Cards_Mappings        ; loc_C29E
		dc.w    SBz_TC_Map-Title_Cards_Mappings        ; loc_C2F0
		dc.w    ZONE_TC_Map-Title_Cards_Mappings       ; loc_C342
		dc.w    Act_1_TC_Map-Title_Cards_Mappings      ; loc_C364
		dc.w    Act_2_TC_Map-Title_Cards_Mappings      ; loc_C376
		dc.w    Act_3_TC_Map-Title_Cards_Mappings      ; loc_C388
		dc.w    TC_Oval_Map-Title_Cards_Mappings       ; loc_C39A
		dc.w    Fz_TC_Map-Title_Cards_Mappings         ; loc_C404
GHz_TC_Map:                                                    ; loc_C18E
		dc.w    $0009
		dc.l    $F8050018, $000CFFB4  ; G
		dc.l    $F805003A, $001DFFC4  ; R
		dc.l    $F8050010, $0008FFD4  ; E
		dc.l    $F8050010, $0008FFE4  ; E
		dc.l    $F805002E, $0017FFF4  ; N
		dc.l    $F805001C, $000E0014  ; H
		dc.l    $F8010020, $00100024  ; I
		dc.l    $F8050026, $0013002C  ; L
		dc.l    $F8050026, $0013003C  ; L
Lz_TC_Map:                                                     ; loc_C1D8
		dc.w    $0009
		dc.l    $F8050026, $0013FFBC  ; L
		dc.l    $F8050000, $0000FFCC  ; A
		dc.l    $F8050004, $0002FFDC  ; B
		dc.l    $F805004A, $0025FFEC  ; Y
		dc.l    $F805003A, $001DFFFC  ; R
		dc.l    $F8010020, $0010000C  ; I
		dc.l    $F805002E, $00170014  ; N
		dc.l    $F8050042, $00210024  ; T
		dc.l    $F805001C, $000E0034  ; H
Mz_TC_Map:                                                     ; loc_C222
		dc.w    $0006
		dc.l    $F805002A, $0015FFCF  ; M
		dc.l    $F8050000, $0000FFE0  ; A
		dc.l    $F805003A, $001DFFF0  ; R
		dc.l    $F8050004, $00020000  ; B
		dc.l    $F8050026, $00130010  ; L
		dc.l    $F8050010, $00080020  ; E
SLz_TC_Map:                                                    ; loc_C254
		dc.w    $0009
		dc.l    $F805003E, $001FFFB4  ; S
		dc.l    $F8050042, $0021FFC4  ; T
		dc.l    $F8050000, $0000FFD4  ; A
		dc.l    $F805003A, $001DFFE4  ; R
		dc.l    $F8050026, $00130004  ; L
		dc.l    $F8010020, $00100014  ; I
		dc.l    $F8050018, $000C001C  ; G
		dc.l    $F805001C, $000E002C  ; H
		dc.l    $F8050042, $0021003C  ; T
SYz_TC_Map:                                                    ; loc_C29E
		dc.w    $000A
		dc.l    $F805003E, $001FFFAC  ; S
		dc.l    $F8050036, $001BFFBC  ; P
		dc.l    $F805003A, $001DFFCC  ; R
		dc.l    $F8010020, $0010FFDC  ; I
		dc.l    $F805002E, $0017FFE4  ; N
		dc.l    $F8050018, $000CFFF4  ; G
		dc.l    $F805004A, $00250014  ; Y
		dc.l    $F8050000, $00000024  ; A
		dc.l    $F805003A, $001D0034  ; R
		dc.l    $F805000C, $00060044  ; D
SBz_TC_Map:                                                    ; loc_C2F0
		dc.w    $000A
		dc.l    $F805003E, $001FFFAC  ; S
		dc.l    $F8050008, $0004FFBC  ; C
		dc.l    $F805003A, $001DFFCC  ; R
		dc.l    $F8050000, $0000FFDC  ; A
		dc.l    $F8050036, $001BFFEC  ; P
		dc.l    $F8050004, $0002000C  ; B
		dc.l    $F805003A, $001D001C  ; R
		dc.l    $F8050000, $0000002C  ; A
		dc.l    $F8010020, $0010003C  ; I
		dc.l    $F805002E, $00170044  ; N
ZONE_TC_Map:                                                   ; loc_C342
		dc.w    $0004
		dc.l    $F805004E, $0027FFE0  ; Z
		dc.l    $F8050032, $0019FFF0  ; O
		dc.l    $F805002E, $00170000  ; N
		dc.l    $F8050010, $00080010  ; E
Act_1_TC_Map:                                                  ; loc_C364
		dc.w    $0002
		dc.l    $040C0053, $0029FFEC  ; ACT
		dc.l    $F4020057, $002B000C  ; 1
Act_2_TC_Map:                                                  ; loc_C376
		dc.w    $0002
		dc.l    $040C0053, $0029FFEC  ; ACT
		dc.l    $F406005A, $002D0008  ; 2
Act_3_TC_Map:                                                  ; loc_C388
		dc.w    $0002
		dc.l    $040C0053, $0029FFEC  ; ACT
		dc.l    $F4060060, $00300008  ; 3
TC_Oval_Map:                                                   ; loc_C39A
		dc.w    $000D                 ; OVAL
		dc.l    $E40C0070, $0038FFF4
		dc.l    $E4020074, $003A0014
		dc.l    $EC040077, $003BFFEC
		dc.l    $F4050079, $003CFFE4
		dc.l    $140C1870, $1838FFEC
		dc.l    $04021874, $183AFFE4
		dc.l    $0C041877, $183B0004
		dc.l    $FC051879, $183C000C
		dc.l    $EC08007D, $003EFFFC
		dc.l    $F40C007C, $003EFFF4
		dc.l    $FC08007C, $003EFFF4
		dc.l    $040C007C, $003EFFEC
		dc.l    $0C08007C, $003EFFEC
Fz_TC_Map:                                                     ; loc_C404
		dc.w    $0005
		dc.l    $F8050014, $000AFFDC  ; F
		dc.l    $F8010020, $0010FFEC  ; I
		dc.l    $F805002E, $0017FFF4  ; N
		dc.l    $F8050000, $00000004  ; A
		dc.l    $F8050026, $00130014  ; L
;-------------------------------------------------------------------------------
; Sonic 1 Title Card Mappings
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Mapeamento das mensagens de "GAME OVER" e "TIME OVER"
; [ Begin ]
;-------------------------------------------------------------------------------
Time_Over_Game_Over_Mappings:                                  ; loc_C42E
		dc.w    loc_C436-Time_Over_Game_Over_Mappings
		dc.w    loc_C448-Time_Over_Game_Over_Mappings
		dc.w    loc_C45A-Time_Over_Game_Over_Mappings
		dc.w    loc_C46C-Time_Over_Game_Over_Mappings
loc_C436:
		dc.w    $0002
		dc.l    $F80D0000, $0000FFB8
		dc.l    $F80D0008, $0004FFD8
loc_C448:
		dc.w    $0002
		dc.l    $F80D0014, $000A0008
		dc.l    $F80D000C, $00060028
loc_C45A:
		dc.w    $0002
		dc.l    $F809001C, $000EFFC4
		dc.l    $F80D0008, $0004FFDC
loc_C46C:
		dc.w    $0002
		dc.l    $F80D0014, $000A000C
		dc.l    $F80D000C, $0006002C
;-------------------------------------------------------------------------------
; Mapeamento das mensagens de "GAME OVER" e "TIME OVER"
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Mapeamento da tela de resultado das fases
; [ Begin ]
;-------------------------------------------------------------------------------
Level_Results_Mappings:                                        ; loc_C47E
		dc.w    LR_Sonic_Has_Map-Level_Results_Mappings ; loc_C490
		dc.w    LR_Passed_Map-Level_Results_Mappings   ; loc_C4D2
		dc.w    LR_Score_Map-Level_Results_Mappings    ; loc_C504
		dc.w    LR_Time_Bonus_Map-Level_Results_Mappings ; loc_C536
		dc.w    LR_Ring_Bonus_Map-Level_Results_Mappings ; loc_C570
		dc.w    TC_Oval_Map-Level_Results_Mappings     ; loc_C39A
		dc.w    Act_1_TC_Map-Level_Results_Mappings    ; loc_C364
		dc.w    Act_2_TC_Map-Level_Results_Mappings    ; loc_C376
		dc.w    Act_3_TC_Map-Level_Results_Mappings    ; loc_C388
LR_Sonic_Has_Map:                                              ; loc_C490
		dc.w    $0008
		dc.l    $F805003E, $001FFFB8  ; S
		dc.l    $F8050032, $0019FFC8  ; O
		dc.l    $F805002E, $0017FFD8  ; N
		dc.l    $F8010020, $0010FFE8  ; I
		dc.l    $F8050008, $0004FFF0  ; C
		dc.l    $F805001C, $000E0010  ; H
		dc.l    $F8050000, $00000020  ; A
		dc.l    $F805003E, $001F0030  ; S
LR_Passed_Map:                                                 ; loc_C4D2
		dc.w    $0006
		dc.l    $F8050036, $001BFFD0  ; P
		dc.l    $F8050000, $0000FFE0  ; A
		dc.l    $F805003E, $001FFFF0  ; S
		dc.l    $F805003E, $001F0000  ; S
		dc.l    $F8050010, $00080010  ; E
		dc.l    $F805000C, $00060020  ; D
LR_Score_Map:                                                  ; loc_C504
		dc.w    $0006
		dc.l    $F80D014A, $00A5FFB0  ; SCOR
		dc.l    $F8010162, $00B1FFD0  ; E
		dc.l    $F8090164, $00B20018
		dc.l    $F80D016A, $00B50030
		dc.l    $F704006E, $0037FFCD
		dc.l    $FF04186E, $1837FFCD
LR_Time_Bonus_Map:                                             ; loc_C536
		dc.w    $0007
		dc.l    $F80D015A, $00ADFFB0  ; TIME
		dc.l    $F80D0066, $0033FFD9  ; BONU
		dc.l    $F801014A, $00A5FFF9  ; S
		dc.l    $F704006E, $0037FFF6
		dc.l    $FF04186E, $1837FFF6
		dc.l    $F80DFFF0, $FBF80028
		dc.l    $F8010170, $00B80048
LR_Ring_Bonus_Map:                                             ; loc_C570
		dc.w    $0007
		dc.l    $F80D0152, $00A9FFB0  ; RING
		dc.l    $F80D0066, $0033FFD9  ; BONU
		dc.l    $F801014A, $00A5FFF9  ; S
		dc.l    $F704006E, $0037FFF6
		dc.l    $FF04186E, $1837FFF6
		dc.l    $F80DFFF8, $FBFC0028
		dc.l    $F8010170, $00B80048
;-------------------------------------------------------------------------------
; Mapeamento da tela de resultado das fases
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Mapeamento da tela de resultado dos est gios especiais
; [ Begin ]
;-------------------------------------------------------------------------------
Special_Stage_Results_Mappings:                                ; loc_C5AA
		dc.w    SS_Res_CHAOS_EMERALDS_Map-Special_Stage_Results_Mappings ; loc_C5BC
		dc.w    SS_Res_SCORE_Map-Special_Stage_Results_Mappings ; loc_C626
		dc.w    SS_Res_RING_BONUS_Map-Special_Stage_Results_Mappings ; loc_C658
		dc.w    TC_Oval_Map-Special_Stage_Results_Mappings ; loc_C39A
		dc.w    SS_Res_CONTINUE_Frame1_Map-Special_Stage_Results_Mappings ; loc_C692
		dc.w    SS_Res_CONTINUE_Frame2_Map-Special_Stage_Results_Mappings ; loc_C6B4
		dc.w    SS_Res_CONTINUE_Frame3_Map-Special_Stage_Results_Mappings ; loc_C6D6
		dc.w    SS_Res_SPECIAL_STAGE_Map-Special_Stage_Results_Mappings ; loc_C6F0
		dc.w    SS_Res_SONIC_GOT_THEM_ALL_Map-Special_Stage_Results_Mappings ; loc_C752
SS_Res_CHAOS_EMERALDS_Map:                                     ; loc_C5BC
		dc.w    $000D
		dc.l    $F8050008, $0004FF90  ; C
		dc.l    $F805001C, $000EFFA0  ; H
		dc.l    $F8050000, $0000FFB0  ; A
		dc.l    $F8050032, $0019FFC0  ; O
		dc.l    $F805003E, $001FFFD0  ; S
		dc.l    $F8050010, $0008FFF0  ; E
		dc.l    $F805002A, $00150000  ; M
		dc.l    $F8050010, $00080010  ; E
		dc.l    $F805003A, $001D0020  ; R
		dc.l    $F8050000, $00000030  ; A
		dc.l    $F8050026, $00130040  ; L
		dc.l    $F805000C, $00060050  ; D
		dc.l    $F805003E, $001F0060  ; S
SS_Res_SCORE_Map:                                              ; loc_C626
		dc.w    $0006
		dc.l    $F80D014A, $00A5FFB0  ; SCOR
		dc.l    $F8010162, $00B1FFD0  ; E
		dc.l    $F8090164, $00B20018
		dc.l    $F80D016A, $00B50030
		dc.l    $F704006E, $0037FFCD
		dc.l    $FF04186E, $1837FFCD
SS_Res_RING_BONUS_Map:                                         ; loc_C658
		dc.w    $0007
		dc.l    $F80D0152, $00A9FFB0  ; RING
		dc.l    $F80D0066, $0033FFD9  ; BONU
		dc.l    $F801014A, $00A5FFF9  ; S
		dc.l    $F704006E, $0037FFF6
		dc.l    $FF04186E, $1837FFF6
		dc.l    $F80DFFF8, $FBFC0028
		dc.l    $F8010170, $00B80048
SS_Res_CONTINUE_Frame1_Map:                                    ; loc_C692
		dc.w    $0004
		dc.l    $F80DFFD1, $7FC8FFB0
		dc.l    $F80DFFD9, $7FD4FFD0
		dc.l    $F801FFE1, $7FE0FFF0
		dc.l    $F8061FE3, $2FE30040
SS_Res_CONTINUE_Frame2_Map:                                    ; loc_C6B4
		dc.w    $0004
		dc.l    $F80DFFD1, $7FC8FFB0
		dc.l    $F80DFFD9, $7FD4FFD0
		dc.l    $F801FFE1, $7FE0FFF0
		dc.l    $F8061FE9, $2FEC0040
SS_Res_CONTINUE_Frame3_Map:                                    ; loc_C6D6
		dc.w    $0003
		dc.l    $F80DFFD1, $7FC8FFB0
		dc.l    $F80DFFD9, $7FD4FFD0
		dc.l    $F801FFE1, $7FE0FFF0
SS_Res_SPECIAL_STAGE_Map:                                      ; loc_C6F0
		dc.w    $000C
		dc.l    $F805003E, $001FFF9C  ; S
		dc.l    $F8050036, $001BFFAC  ; P
		dc.l    $F8050010, $0008FFBC  ; E
		dc.l    $F8050008, $0004FFCC  ; C
		dc.l    $F8010020, $0010FFDC  ; I
		dc.l    $F8050000, $0000FFE4  ; A
		dc.l    $F8050026, $0013FFF4  ; L
		dc.l    $F805003E, $001F0014  ; S
		dc.l    $F8050042, $00210024  ; T
		dc.l    $F8050000, $00000034  ; A
		dc.l    $F8050018, $000C0044  ; G
		dc.l    $F8050010, $00080054  ; E
SS_Res_SONIC_GOT_THEM_ALL_Map:                                 ; loc_C752
		dc.w    $000F
		dc.l    $F805003E, $001FFF88  ; S
		dc.l    $F8050032, $0019FF98  ; O
		dc.l    $F805002E, $0017FFA8  ; N
		dc.l    $F8010020, $0010FFB8  ; I
		dc.l    $F8050008, $0004FFC0  ; C
		dc.l    $F8050018, $000CFFD8  ; G
		dc.l    $F8050032, $0019FFE8  ; O
		dc.l    $F8050042, $0021FFF8  ; T
		dc.l    $F8050042, $00210010  ; T
		dc.l    $F805001C, $000E0020  ; H
		dc.l    $F8050010, $00080030  ; E
		dc.l    $F805002A, $00150040  ; M
		dc.l    $F8050000, $00000058  ; A
		dc.l    $F8050026, $00130068  ; L
		dc.l    $F8050026, $00130078  ; L
;-------------------------------------------------------------------------------
; Mapeamento da tela de resultado dos est gios especiais
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Mapeamento das esmeraldas usadas na tela de resultado dos est gios especiais
; [ Begin ]
;-------------------------------------------------------------------------------
Emeralds_Mappings:                                             ; loc_C7CC
		dc.w    loc_C7DA-Emeralds_Mappings
		dc.w    loc_C7E4-Emeralds_Mappings
		dc.w    loc_C7EE-Emeralds_Mappings
		dc.w    loc_C7F8-Emeralds_Mappings
		dc.w    loc_C802-Emeralds_Mappings
		dc.w    loc_C80C-Emeralds_Mappings
		dc.w    loc_C816-Emeralds_Mappings
loc_C7DA:
		dc.w    $0001
		dc.l    $F8052004, $2002FFF8
loc_C7E4:
		dc.w    $0001
		dc.l    $F8050000, $0000FFF8
loc_C7EE:
		dc.w    $0001
		dc.l    $F8054004, $4002FFF8
loc_C7F8:
		dc.w    $0001
		dc.l    $F8056004, $6002FFF8
loc_C802:
		dc.w    $0001
		dc.l    $F8052008, $2004FFF8
loc_C80C:
		dc.w    $0001
		dc.l    $F805200C, $2006FFF8
loc_C816:
		dc.w    $0000
;-------------------------------------------------------------------------------
; Mapeamento das esmeraldas usadas na tela de resultado dos est gios especiais
; [ End ]
;-------------------------------------------------------------------------------
Obj36_Spikes:                                               ; loc_C818
;===============================================================================
; Object 0x36 - Spikes
; [ Begin ] 
;===============================================================================   
; loc_C818:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_C826(PC, D0), D1
                jmp     loc_C826(PC, D1) 
;-------------------------------------------------------------------------------
loc_C826:
                dc.w    loc_C83E-loc_C826
                dc.w    loc_C8AA-loc_C826
                dc.w    loc_C8FA-loc_C826
                dc.w    loc_C956-loc_C826         
;-------------------------------------------------------------------------------    
Spikes_Conf:                                                   ; loc_C82E
                dc.b    $10, $10  ; Largura / Altura do espinho
                dc.b    $20, $10
                dc.b    $30, $10
                dc.b    $40, $10
                dc.b    $10, $10
                dc.b    $10, $20
                dc.b    $10, $30
                dc.b    $10, $40       
;------------------------------------------------------------------------------- 
loc_C83E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Spikes_Mappings, Obj_Map(A0)   ; loc_CA74, $0004
                move.w  #$2434, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.b  #$0F, Obj_Subtype(A0)                            ; $0028
                andi.w  #$00F0, D0
                lea     Spikes_Conf(PC), A1                    ; loc_C82E
                lsr.w   #$03, D0
                adda.w  D0, A1
                move.b  (A1)+, Obj_Width(A0)                             ; $0019
                move.b  (A1)+, Obj_Height_2(A0)                          ; $0016
                lsr.w   #$01, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                cmpi.b  #$04, D0
                bcs.s   loc_C88E
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_C88E:
                btst    #$01, Obj_Status(A0)                             ; $0022
                beq.s   loc_C89C
                move.b  #$06, Obj_Routine(A0)                            ; $0024
loc_C89C:
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                rts      
;------------------------------------------------------------------------------- 
loc_C8AA:
                bsr     MoveSpikes
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     SolidObject                            ; loc_F344
                move.b  Obj_Status(A0), D6                               ; $0022
                andi.b  #$18, D6
                beq.s   loc_C8F2
                move.b  D6, D0
                andi.b  #$08, D0
                beq.s   loc_C8E4
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr     Touch_ChkHurt2                         ; loc_C9A4
loc_C8E4:
                andi.b  #$10, D6
                beq.s   loc_C8F2
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr     Touch_ChkHurt2                         ; loc_C9A4
loc_C8F2:
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                bra     MarkObjGone_2                          ; loc_D238   
;------------------------------------------------------------------------------- 
loc_C8FA:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     MoveSpikes
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     SolidObject                            ; loc_F344
                swap.w  D6
                andi.w  #$0003, D6
                beq.s   loc_C94E
                move.b  D6, D0
                andi.b  #$01, D0
                beq.s   loc_C93A
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr     Touch_ChkHurt2                         ; loc_C9A4
                bclr    #$05, Obj_Status(A0)                             ; $0022
loc_C93A:
                andi.b  #$02, D6
                beq.s   loc_C94E
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr     Touch_ChkHurt2                         ; loc_C9A4
                bclr    #$06, Obj_Status(A0)                             ; $0022
loc_C94E:
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                bra     MarkObjGone_2                          ; loc_D238   
;-------------------------------------------------------------------------------    
loc_C956:
                bsr     MoveSpikes
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     SolidObject                            ; loc_F344
                swap.w  D6
                andi.w  #$000C, D6
                beq.s   loc_C99C
                move.b  D6, D0
                andi.b  #$04, D0
                beq.s   loc_C98E
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr     Touch_ChkHurt2                         ; loc_C9A4
loc_C98E:
                andi.b  #$08, D6
                beq.s   loc_C99C
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr     Touch_ChkHurt2                         ; loc_C9A4
loc_C99C:
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                bra     MarkObjGone_2                          ; loc_D238   
;-------------------------------------------------------------------------------  
;Hurt_Player_A1:                                               ; loc_C9A4
Touch_ChkHurt2:
                tst.b   (Invincibility_Flag).w                       ; $FFFFFE2D
                bne.s   Exit_Touch_ChkHurt2                    ; loc_C9D0
		; the "spike bug" was not fixed yet in this build
                cmpi.b  #$04, Obj_Routine(A1)                            ; $0024
                bcc.s   Exit_Touch_ChkHurt2                    ; loc_C9D0
                move.l  Obj_Y(A1), D3                                    ; $000C
                move.w  Obj_Speed_Y(A1), D0                              ; $0012
                ext.l   D0
                asl.l   #$08, D0
                sub.l   D0, D3
                move.l  D3, Obj_Y(A1)                                    ; $000C
                move.l  A0, A2
                move.l  A1, A0
                jsr     (HurtCharacter)                        ; loc_2B4DE
                move.l  A2, A0
Exit_Touch_ChkHurt2:                                           ; loc_C9D0
                rts                                                             
;-------------------------------------------------------------------------------  
MoveSpikes:
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                add.w   D0, D0
                move.w  loc_C9E2(PC, D0), D1
                jmp     loc_C9E2(PC, D1)                 
;-------------------------------------------------------------------------------  
loc_C9E2:
                dc.w    loc_C9E8-loc_C9E2
                dc.w    loc_C9EA-loc_C9E2
                dc.w    loc_C9FE-loc_C9E2         
;-------------------------------------------------------------------------------  
loc_C9E8:
                rts 
;-------------------------------------------------------------------------------  
loc_C9EA:
                bsr     loc_CA12
                moveq   #$00, D0
                move.b  Obj_Control_Var_08(A0), D0                       ; $0034
                add.w   Obj_Control_Var_06(A0), D0                       ; $0032
                move.w  D0, Obj_Y(A0)                                    ; $000C
                rts    
;-------------------------------------------------------------------------------  
loc_C9FE:
                bsr     loc_CA12
                moveq   #$00, D0
                move.b  Obj_Control_Var_08(A0), D0                       ; $0034
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_X(A0)                                    ; $0008
                rts
loc_CA12:
                tst.w   Obj_Control_Var_0C(A0)                           ; $0038
                beq.s   loc_CA30
                subq.w  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bne.s   loc_CA72
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_CA72
                move.w  #$00B6, D0
                jsr     (Play_Sfx)                             ; loc_1512
                bra.s   loc_CA72
loc_CA30:
                tst.w   Obj_Control_Var_0A(A0)                           ; $0036
                beq.s   loc_CA52
                subi.w  #$0800, Obj_Control_Var_08(A0)                   ; $0034
                bcc.s   loc_CA72
                move.w  #$0000, Obj_Control_Var_08(A0)                   ; $0034
                move.w  #$0000, Obj_Control_Var_0A(A0)                   ; $0036
                move.w  #$003C, Obj_Control_Var_0C(A0)                   ; $0038
                bra.s   loc_CA72
loc_CA52:
                addi.w  #$0800, Obj_Control_Var_08(A0)                   ; $0034
                cmpi.w  #$2000, Obj_Control_Var_08(A0)                   ; $0034
                bcs.s   loc_CA72
                move.w  #$2000, Obj_Control_Var_08(A0)                   ; $0034
                move.w  #$0001, Obj_Control_Var_0A(A0)                   ; $0036
                move.w  #$003C, Obj_Control_Var_0C(A0)                   ; $0038
loc_CA72:
                rts        
;-------------------------------------------------------------------------------
Spikes_Mappings:                                               ; loc_CA74
                include 'mappings/sprite/obj36.asm'
;===============================================================================
; Object 0x36 - Spikes
; [ End ] 
;===============================================================================		
Obj3B_Rock:                                                 ; loc_CBD4
;===============================================================================
; Object 0x3B - Pedra roxa na Green Hill do Sonic 1 não usado (Left over)
; [ Begin ]
;===============================================================================  
; loc_CBD4:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_CBE2(PC, D0), D1
                jmp     loc_CBE2(PC, D1)      
;-------------------------------------------------------------------------------  
loc_CBE2:
                dc.w    loc_CBE6-loc_CBE2
                dc.w    loc_CC0E-loc_CBE2                 
;------------------------------------------------------------------------------- 
loc_CBE6:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Rock_Mappings, Obj_Map(A0)     ; loc_CC3A, $0004
                move.w  #$66C0, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$13, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018   
;------------------------------------------------------------------------------- 
loc_CC0E:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0010, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     SolidObject                            ; loc_F344
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322    
;-------------------------------------------------------------------------------  
Rock_Mappings:                                                 ; loc_CC3A
                dc.w    loc_CC3C-Rock_Mappings
loc_CC3C:
                dc.w    $0002
                dc.l    $F00B0000, $0000FFE8
                dc.l    $F00B000C, $00060000
;===============================================================================
; Object 0x3B - Pedra roxa na Green Hill do Sonic 1 não usado (Left over)
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj3C_Breakable_Wall:                                       ; loc_CC50
;===============================================================================
; Object 0x3C - Parede quebrável na Green Hill do Sonic 1 não usado (Left over)
; [ Begin ]
;===============================================================================  
; loc_CC50:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_CC62(PC, D0), D1
                jsr     loc_CC62(PC, D1)
                bra     MarkObjGone                            ; loc_D200  
;-------------------------------------------------------------------------------  
loc_CC62:
                dc.w    loc_CC68-loc_CC62
                dc.w    loc_CC96-loc_CC62
                dc.w    loc_CD0E-loc_CC62                      
;-------------------------------------------------------------------------------   
loc_CC68:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #S1_Breakable_Wall_Mappings, Obj_Map(A0) ; loc_CDD8, $0004
                move.w  #$4590, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), Obj_Map_Id(A0)           ; $001A, $0028   
;-------------------------------------------------------------------------------  
loc_CC96:
                move.w  ($FFFFB010).w, Obj_Control_Var_04(A0)            ; $0030
                move.w  #$001B, D1
                move.w  #$0020, D2
                move.w  #$0020, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     SolidObject                            ; loc_F344
                btst    #$05, Obj_Status(A0)                             ; $0022
                bne.s   loc_CCBA
loc_CCB8:
                rts
loc_CCBA:
                lea     (Obj_Memory_Address).w, A1                   ; $FFFFB000
                cmpi.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                bne.s   loc_CCB8
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                bpl.s   loc_CCCE
                neg.w   D0
loc_CCCE:
                cmpi.w  #$0480, D0
                bcs.s   loc_CCB8
                move.w  Obj_Control_Var_04(A0), Obj_Speed(A1)     ; $0010, $0030
                addq.w  #$04, Obj_X(A1)                                  ; $0008
                lea     (loc_CD98), A4
                move.w  Obj_X(A0), D0                                    ; $0008
                cmp.w   Obj_X(A1), D0                                    ; $0008
                bcs.s   loc_CCFA
                subi.w  #$0008, Obj_X(A1)                                ; $0008
                lea     (loc_CDB8), A4
loc_CCFA:
                move.w  Obj_Speed(A1), Obj_Inertia(A1)            ; $0010, $0014
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
                bsr.s   Smash_Object                           ; loc_CD24       
;-------------------------------------------------------------------------------  
loc_CD0E:
                bsr     SpeedToPos                             ; loc_D1DA
                addi.w  #$0070, Obj_Speed_Y(A0)                          ; $0012
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322  
;-------------------------------------------------------------------------------                
Smash_Object:                                                  ; loc_CD24
                moveq   #$00, D0
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                add.w   D0, D0
                move.l  Obj_Map(A0), A3                                  ; $0004
                adda.w  $00(A3, D0), A3
                move.w  (A3)+, D1
                subq.w  #$01, D1
                bset    #$05, Obj_Flags(A0)                              ; $0001
                move.b  Obj_Id(A0), D4                                   ; $0000
                move.b  Obj_Flags(A0), D5                                ; $0001
                move.l  A0, A1
                bra.s   loc_CD52             
;-------------------------------------------------------------------------------   
loc_CD4A:
                bsr     SingleObjectLoad_2                     ; loc_E714
                bne.s   loc_CD8E
                addq.w  #$08, A3      
;-------------------------------------------------------------------------------
loc_CD52:
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.b  D4, Obj_Id(A1)                                   ; $0000
                move.l  A3, Obj_Map(A1)                                  ; $0004
                move.b  D5, Obj_Flags(A1)                                ; $0001
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  Obj_Priority(A0), Obj_Priority(A1)        ; $0018, $0018
                move.b  Obj_Width(A0), Obj_Width(A1)              ; $0019, $0019
                move.w  (A4)+, Obj_Speed(A1)                             ; $0010
                move.w  (A4)+, Obj_Speed_Y(A1)                           ; $0012
                dbra    D1, loc_CD4A
loc_CD8E:
                move.w  #$00CB, D0
                jmp     (Play_Sfx)                             ; loc_1512 
;-------------------------------------------------------------------------------  
loc_CD98:     
                dc.w    $0400, $FB00, $0600, $FF00, $0600, $0100, $0400, $0500
                dc.w    $0600, $FA00, $0800, $FE00, $0800, $0200, $0600, $0600
;-------------------------------------------------------------------------------
loc_CDB8: 
                dc.w    $FA00, $FA00, $F800, $FE00, $F800, $0200, $FA00, $0600
                dc.w    $FC00, $FB00, $FA00, $FF00, $FA00, $0100, $FC00, $0500
;-------------------------------------------------------------------------------
S1_Breakable_Wall_Mappings:                                    ; loc_CDD8
                dc.w    loc_CDDE-S1_Breakable_Wall_Mappings
                dc.w    loc_CE20-S1_Breakable_Wall_Mappings
                dc.w    loc_CE62-S1_Breakable_Wall_Mappings
loc_CDDE:
                dc.w    $0008
                dc.l    $E0050000, $0000FFF0
                dc.l    $F0050000, $0000FFF0
                dc.l    $00050000, $0000FFF0
                dc.l    $10050000, $0000FFF0
                dc.l    $E0050004, $00020000
                dc.l    $F0050004, $00020000
                dc.l    $00050004, $00020000
                dc.l    $10050004, $00020000
loc_CE20:
                dc.w    $0008
                dc.l    $E0050004, $0002FFF0
                dc.l    $F0050004, $0002FFF0
                dc.l    $00050004, $0002FFF0
                dc.l    $10050004, $0002FFF0
                dc.l    $E0050004, $00020000
                dc.l    $F0050004, $00020000
                dc.l    $00050004, $00020000
                dc.l    $10050004, $00020000
loc_CE62:
                dc.w    $0008
                dc.l    $E0050004, $0002FFF0
                dc.l    $F0050004, $0002FFF0
                dc.l    $00050004, $0002FFF0
                dc.l    $10050004, $0002FFF0
                dc.l    $E0050008, $00040000
                dc.l    $F0050008, $00040000
                dc.l    $00050008, $00040000
                dc.l    $10050008, $00040000
;===============================================================================
; Object 0x3C - Parede quebrável na Green Hill do Sonic 1 não usado (Left over)
; [ End ]
;===============================================================================
Obj_Null:                                                      ; loc_CEA4
		bra     Obj_Null_2                             ; loc_D1AA
;===============================================================================
; Carrega os Objects na mem ria
; [ Begin ]
;===============================================================================
Load_Objects:                                                  ; loc_CEA8
		lea     (Obj_Memory_Address).w, A0                   ; $FFFFB000
		moveq   #$7F, D7
		moveq   #$00, D0
		cmpi.b  #$06, (Player_One+Obj_Routine).w             ; $FFFFB024
		bcc.s   loc_CED2
Loop_Load_Object:                                              ; loc_CEB8
		move.b  (A0), D0
		beq.s   Load_Next_Object                       ; loc_CEC8
		add.w   D0, D0
		add.w   D0, D0
		move.l  Object_List-$0004(PC, D0), A1          ; loc_CEEE
		jsr     (A1)
		moveq   #$00, D0
Load_Next_Object:                                              ; loc_CEC8
		lea     Obj_Size(A0), A0                                 ; $0040
		dbra    D7, Loop_Load_Object                   ; loc_CEB8
		rts
loc_CED2:
		moveq   #$1F, D7
		bsr.s   Loop_Load_Object                       ; loc_CEB8
		moveq   #$5F, D7
Loop_Load_Object_2:                                            ; loc_CED8
		moveq   #$00, D0
		move.b  (A0), D0
		beq.s   Load_Next_Object_2                     ; loc_CEE8
		tst.b   Obj_Flags(A0)                                    ; $0001
		bpl.s   Load_Next_Object_2                     ; loc_CEE8
		bsr     DisplaySprite                          ; loc_D322
Load_Next_Object_2:                                            ; loc_CEE8
		lea     Obj_Size(A0), A0                                 ; $0040
		dbra    D7, Loop_Load_Object_2                 ; loc_CED8
		rts
;-------------------------------------------------------------------------------
Object_List:                                                   ; loc_CEF2
		dc.l    Obj01_Sonic                         ; loc_FAF0
		dc.l    Obj02_Tails                         ; loc_11130
		dc.l    Obj03_Layer_Switch                  ; loc_14DC8
		dc.l    Obj04_Water_Surface                 ; loc_159CC
		dc.l    Obj05_Tails_Tail                    ; loc_12442
		dc.l    Obj06_Spiral_Attributes             ; loc_163A8
		dc.l    Obj07_0il_Attributes                ; loc_18E50
		dc.l    Obj08_Dust_Water_Splash             ; loc_131B0
		dc.l    Obj09_Sonic_In_Special_Stage        ; loc_2BF70
		dc.l    Obj0A_Sonic_Tails_Underwater        ; loc_1254C
		dc.l    Obj0B_Open_Close_Platform           ; loc_151C4
		dc.l    Obj0C_Unk_Platform                  ; loc_1531C
		dc.l    Obj0D_End_Panel                     ; loc_F098
		dc.l    Obj0E_Sonic_Tails                   ; loc_B660
		dc.l    Obj0F                               ; loc_B6E6
		dc.l    Obj_Null_3                          ; loc_2C612
		dc.l    Obj11_Bridge                        ; loc_8468
		dc.l    Obj12_HPz_Master_Emerald            ; loc_15420
		dc.l    Obj13_HPz_Waterfalls                ; loc_154A8
		dc.l    Obj14_Seesaw                        ; loc_16808
		dc.l    Obj15_Bridge                        ; loc_8A84
		dc.l    Obj16_Teleferics                    ; loc_16C8C
		dc.l    Obj17_Log_Spikes                    ; loc_9044
		dc.l    Obj18_Platforms                     ; loc_91E0
		dc.l    Obj19_Rotating_Platforms            ; loc_16EB8
		dc.l    Obj1A_Collapsing_Platforms          ; loc_95DC
		dc.l    Obj1B_Speed_Booster                 ; loc_17114
		dc.l    Obj1C_Misc                          ; loc_9EE8
		dc.l    Obj1D_Worms                         ; loc_1726C
		dc.l    Obj1E_Tube_Attributes               ; loc_173E4
		dc.l    Obj1F_Collapsing_Platforms          ; loc_9728
		dc.l    Obj20_HTz_Boss_FireBall             ; loc_17E34
		dc.l    Obj21_Head_Up_Display               ; loc_2D100
		dc.l    Obj22_Arrow_Shooter                 ; loc_1A44C
		dc.l    Obj23_Pillar                        ; loc_1A644
		dc.l    Obj24_Oxygen_Bubbles                ; loc_149CC
		dc.l    Obj25_Rings                         ; loc_AA98
		dc.l    Obj26_Monitors                      ; loc_B104
		dc.l    Obj27_Object_Hit                    ; loc_16174
		dc.l    Obj28_Flickies                      ; loc_A3E8
		dc.l    Obj29_Enemy_Points                  ; loc_A922
		dc.l    Obj2A_Up_Down_Pillar                ; loc_A158
		dc.l    Obj2B_Raising_Pillar                ; loc_1A812
		dc.l    Obj2C_Leaves                        ; loc_1AEB8
		dc.l    Obj2D_Automatic_Door                ; loc_A22E
		dc.l    Obj2E_Monitors_Contents             ; loc_B2D2
		dc.l    Obj2F_Breakable_Floor               ; loc_1813C
		dc.l    Obj30_Earthquake_Tiles_Attributes   ; loc_1870C
		dc.l    Obj31_Lava_Attributes               ; loc_15EDC
		dc.l    Obj32_Breakable_Obstacle            ; loc_1834A
		dc.l    Obj33_Touch_Booster                 ; loc_18924
		dc.l    Obj34_Title_Cards                   ; loc_BA00
		dc.l    Obj35_Invincibility                 ; loc_12B72
		dc.l    Obj36_Spikes                        ; loc_C818
		dc.l    Obj37_Rings_Lost                    ; loc_ABD2
		dc.l    Obj38_Shield                        ; loc_12AF0
		dc.l    Obj39_Time_Over_Game_Over           ; loc_BC44
		dc.l    Obj3A_Level_Results                 ; loc_BD06
		dc.l    Obj3B_Rock                          ; loc_CBD4
		dc.l    Obj3C_Breakable_Wall                ; loc_CC50
		dc.l    Obj3D_Break_Boost                   ; loc_19BF8
		dc.l    Obj3E_Egg_Prison                    ; loc_2AEE8
		dc.l    Obj3F_Fans                          ; loc_1F538
		dc.l    Obj40_Diagonal_Springs              ; loc_1B12C
		dc.l    Obj41_Springs                       ; loc_E744
		dc.l    Obj42_Steam_Vent                    ; loc_1B3EC
		dc.l    Obj43_Giant_Spikeball               ; loc_18C70
		dc.l    Obj44_Red_Ball_Bumper               ; loc_1486C
		dc.l    Obj45_Spring_Push_Boost             ; loc_18F20
		dc.l    Obj46_Spring_Ball                   ; loc_1983E
		dc.l    Obj47_Switch                        ; loc_19B1C
		dc.l    Obj48_Cannon                        ; loc_1A03C
		dc.l    Obj49_Waterfall                     ; loc_15C8E
		dc.l    Obj4A_Octus                         ; loc_21704
		dc.l    Obj4B_Buzzer                        ; loc_23F78
		dc.l    Obj4C_Batbot                        ; loc_1FA18
		dc.l    Obj4D_Rhinobot                      ; loc_228EC
		dc.l    Obj4E_Crocobot                      ; loc_21160
		dc.l    Obj4F_Dinobot                       ; loc_219B4
		dc.l    Obj50_Aquis                         ; loc_21DAC
		dc.l    Obj51_CNz_Boss                      ; loc_271CC
		dc.l    Obj52_HTz_Boss                      ; loc_25860
		dc.l    Obj53_Mz_Boss_Balls_Robotniks       ; loc_27B80
		dc.l    Obj54_Mz_Boss                       ; loc_27A90
		dc.l    Obj55_Mz_Boss                       ; loc_27A90
		dc.l    Obj56_GHz_Boss                      ; loc_200F8
		dc.l    Obj57_DHz_Boss                      ; loc_26990
		dc.l    Obj58_GHz_Boss                      ; loc_20372
		dc.l    Obj59_Snail                         ; loc_22638
		dc.l    Obj5A                               ; loc_21B18
		dc.l    Obj5B_GHz_Boss                      ; loc_20786
		dc.l    Obj5C_Masher                        ; loc_24294
		dc.l    Obj5D                               ; loc_24394
		dc.l    Obj_Null                               ; loc_CEA4
		dc.l    Obj_Null                               ; loc_CEA4
		dc.l    Obj_Null                               ; loc_CEA4
		dc.l    Obj_Null                               ; loc_CEA4
		dc.l    Obj_Null                               ; loc_CEA4
		dc.l    Obj_Null                               ; loc_CEA4
		dc.l    Obj64_Pistons                       ; loc_1B6D4
		dc.l    Obj65_Platform_Over_Gear            ; loc_1B894
		dc.l    Obj66_Springs_Wall                  ; loc_1BCF4
		dc.l    Obj67_Teleport_Attributes           ; loc_1BEFC
		dc.l    Obj68_Block_Harpon                  ; loc_1C334
		dc.l    Obj69_Screw_Nut                     ; loc_1C624
		dc.l    Obj6A_DHz_Three_Boxes_Mz_Ptfrm      ; loc_1C850
		dc.l    Obj6B_Mz_Platform                   ; loc_1CB0C
		dc.l    Obj6C_Mz_Moving_Platforms           ; loc_1CDC8
		dc.l    Obj6D_Harpoon                       ; loc_1C534
		dc.l    Obj6E_Machine                       ; loc_1D140
		dc.l    Obj_Ox6F_Parallelogram_Elevator        ; loc_1D354
		dc.l    Obj70_Rotating_Gears                ; loc_1D6AC
		dc.l    Obj71_Mz_HPz_Misc                   ; loc_9FA0
		dc.l    Obj72_Conveyor_Belt_Attributes      ; loc_1DA28
		dc.l    Obj73_Rotating_Rings                ; loc_1DAB0
		dc.l    Obj74_Invisible_Block               ; loc_15FBA
		dc.l    Obj75_Spikeball_Chain               ; loc_1DCA4
		dc.l    Obj76_Platform_Spikes               ; loc_1DED4
		dc.l    Obj77_Bridge                        ; loc_1E064
		dc.l    Obj78_Stair_Case_Platforms          ; loc_1E2A8
		dc.l    Obj79_Lamp_Post                     ; loc_144C0
		dc.l    Obj7A_Platform_Horizontal           ; loc_1E47C
		dc.l    Obj7B_Spring_Tubes                  ; loc_1E66C
		dc.l    Obj7C_Metal_Structure               ; loc_160BE
		dc.l    Obj7D_Hidden_Bonus                  ; loc_14768
		dc.l    Obj7E_Super_Sonic_Stars             ; loc_13552
		dc.l    Obj7F_Vines_Switch                  ; loc_1E8A4
		dc.l    Obj80_Vines_Chain_Hook              ; loc_1EA30
		dc.l    Obj81_Vertical_Bridge               ; loc_1ED8C
		dc.l    Obj82_Falling_Pillar                ; loc_1F018
		dc.l    Obj83_Three_Rotating_Platforms      ; loc_1F284
		dc.l    Obj84_Auto_Spin                     ; loc_16248
		dc.l    Obj_Null_2                             ; loc_D1AA
		dc.l    Obj_Null_2                             ; loc_D1AA
		dc.l    Obj_Null                               ; loc_CEA4
		dc.l    Obj_Null                               ; loc_CEA4
		dc.l    Obj89_NGHz_Boss                     ; loc_25FE0
		dc.l    Obj8A_S1_Credits                    ; loc_2A7CC
		dc.l    Obj_Null_2                             ; loc_D1AA
		dc.l    Obj8C_NGHz_Whisp                    ; loc_27F84
		dc.l    Obj8D_Hidden_Grounder               ; loc_280A0
		dc.l    Obj8E_Grounder                      ; loc_280A0
		dc.l    Obj8F_Wall_Hidden_Grounder          ; loc_2819E
		dc.l    Obj90_Rock_Hidden_Grounder          ; loc_281E4
		dc.l    Obj91_Chop_Chop                     ; loc_283BC
		dc.l    Obj92_Spiker                        ; loc_2851E
		dc.l    Obj93_Spiker_Drill                  ; loc_285F8
		dc.l    Obj94_Rexon_Body                    ; loc_2891E
		dc.l    Obj95_Sol                           ; loc_286FA
		dc.l    Obj96_Rexon_Body                    ; loc_2891E
		dc.l    Obj97_Rexon_Head                    ; loc_289CC
		dc.l    Obj98_Enemies_Weapons               ; loc_28CE4
		dc.l    Obj99_Nebula                        ; loc_28DA2
		dc.l    Obj9A_Turtloid                      ; loc_28F08
		dc.l    Obj9B_Turtloid_Rider                ; loc_28FE4
		dc.l    Obj9C_Enemy_Boost                   ; loc_29060
		dc.l    Obj9D_Coconuts                      ; loc_291D8
		dc.l    Obj9E_Crawlton                      ; loc_293F4
		dc.l    Obj9F_Shellcracker                  ; loc_295B2
		dc.l    ObjA0_Shellcracker_Craw             ; loc_296DE
		dc.l    ObjA1_Slicer                        ; loc_29906
		dc.l    ObjA2_Slicer_Pincers                ; loc_299CE
		dc.l    ObjA3_Flasher                       ; loc_29C34
		dc.l    ObjA4_Asteron                       ; loc_29E94
		dc.l    ObjA5_Horizontal_Spiny              ; loc_2A004
		dc.l    ObjA6_Vertical_Spiny                ; loc_2A0A0
		dc.l    ObjA7_Grabber                       ; loc_2A2D4
		dc.l    ObjA8_Grabber_Sub                   ; loc_2A2EE
		dc.l    ObjA9_Grabber_Sub                   ; loc_2A308
		dc.l    ObjAA_Grabber_Sub                   ; loc_2A322
		dc.l    ObjAB_Grabber_Sub                   ; loc_2A33C
		dc.l    ObjAC_Balkiry                       ; loc_2A3F4
		dc.l    ObjAD_Clucker_Platform              ; loc_2A47E
		dc.l    ObjAE_Clucker                       ; loc_2A4D0
;===============================================================================
; Carrega os Objects na mem ria
; [ End ]
;===============================================================================

;-------------------------------------------------------------------------------
Obj_Null_2:                                                    ; loc_D1AA
		bra     DeleteObject                           ; loc_D314
;-------------------------------------------------------------------------------
;ObjectMoveAndFall:
ObjectFall:                                                    ; loc_D1AE
		move.l  Obj_X(A0), D2                                    ; $0008
		move.l  Obj_Y(A0), D3                                    ; $000C
		move.w  Obj_Speed(A0), D0                                ; $0010
		ext.l   D0
		asl.l   #$08, D0
		add.l   D0, D2
		move.w  Obj_Speed_Y(A0), D0                              ; $0012
		addi.w  #$0038, Obj_Speed_Y(A0)                          ; $0012
		ext.l   D0
		asl.l   #$08, D0
		add.l   D0, D3
		move.l  D2, Obj_X(A0)                                    ; $0008
		move.l  D3, Obj_Y(A0)                                    ; $000C
		rts
;-------------------------------------------------------------------------------
;ObjectMove:
SpeedToPos:                                                    ; loc_D1DA
		move.l  Obj_X(A0), D2                                    ; $0008
		move.l  Obj_Y(A0), D3                                    ; $000C
		move.w  Obj_Speed(A0), D0                                ; $0010
		ext.l   D0
		asl.l   #$08, D0
		add.l   D0, D2
		move.w  Obj_Speed_Y(A0), D0                              ; $0012
		ext.l   D0
		asl.l   #$08, D0
		add.l   D0, D3
		move.l  D2, Obj_X(A0)                                    ; $0008
		move.l  D3, Obj_Y(A0)                                    ; $000C
		rts
;-------------------------------------------------------------------------------
MarkObjGone:                                                   ; loc_D200
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   loc_D20A
		bra     DisplaySprite                          ; loc_D322
loc_D20A:
		move.w  Obj_X(A0), D0                                    ; $0008
		andi.w  #$FF80, D0
		sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
		cmpi.w  #$0280, D0
		bhi     loc_D222
		bra     DisplaySprite                          ; loc_D322
loc_D222:
		lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
		moveq   #$00, D0
		move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
		beq.s   loc_D234
		bclr    #$07, $02(A2, D0)
loc_D234:
		bra     DeleteObject                           ; loc_D314
;-------------------------------------------------------------------------------
MarkObjGone_2:                                                 ; loc_D238
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   loc_D242
		bra     DisplaySprite                          ; loc_D322
loc_D242:
		andi.w  #$FF80, D0
		sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
		cmpi.w  #$0280, D0
		bhi     loc_D256
		bra     DisplaySprite                          ; loc_D322
loc_D256:
		lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
		moveq   #$00, D0
		move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
		beq.s   loc_D268
		bclr    #$07, $02(A2, D0)
loc_D268:
		bra     DeleteObject                           ; loc_D314
;-------------------------------------------------------------------------------
MarkObjGone_3:                                                 ; loc_D26C
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   loc_D274
		rts
loc_D274:
		move.w  Obj_X(A0), D0                                    ; $0008
		andi.w  #$FF80, D0
		sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
		cmpi.w  #$0280, D0
		bhi     loc_D28A
		rts
loc_D28A:
		lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
		moveq   #$00, D0
		move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
		beq.s   loc_D29C
		bclr    #$07, $02(A2, D0)
loc_D29C:
		bra     DeleteObject                           ; loc_D314
;-------------------------------------------------------------------------------
MarkObjGone_4:                                                 ; loc_D2A0
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne.s   MarkObjGone_4_2P                       ; loc_D2D4
		move.w  Obj_X(A0), D0                                    ; $0008
		andi.w  #$FF80, D0
		sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
		cmpi.w  #$0280, D0
		bhi     loc_D2BE
		bra     DisplaySprite                          ; loc_D322
loc_D2BE:
		lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
		moveq   #$00, D0
		move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
		beq.s   loc_D2D0
		bclr    #$07, $02(A2, D0)
loc_D2D0:
		bra     DeleteObject                           ; loc_D314
MarkObjGone_4_2P                                               ; loc_D2D4
		move.w  Obj_X(A0), D0                                    ; $0008
		andi.w  #$FF00, D0
		move.w  D0, D1
		sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
		cmpi.w  #$0300, D0
		bhi     loc_D2EE
		bra     DisplaySprite                          ; loc_D322
loc_D2EE:
		sub.w   ($FFFFF7DC).w, D1
		cmpi.w  #$0300, D1
		bhi     loc_D2FE
		bra     DisplaySprite                          ; loc_D322
loc_D2FE:
		lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
		moveq   #$00, D0
		move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
		beq.s   loc_D310
		bclr    #$07, $02(A2, D0)
loc_D310:
		bra     DeleteObject                           ; loc_D314
;===============================================================================
; Routines for clearing the memory used by the Object
; [ Begin ]
;===============================================================================
DeleteObject:                                                  ; loc_D314
		move.l  A0, A1
DeleteObject_A1:                                               ; loc_D316
		moveq   #$00, D1
		moveq   #$0F, D0
DeleteObject_FreeRam_Loop:                                     ; loc_D31A
		move.l  D1, (A1)+
		dbra    D0, DeleteObject_FreeRam_Loop          ; loc_D31A
		rts
;===============================================================================
; Routines for clearing the memory used by the Object
; [ End ]
;===============================================================================

;===============================================================================
; Routine for displaying a sprite
; [ Begin ]
;===============================================================================
DisplaySprite:                                                 ; loc_D322
		lea     ($FFFFAC00).w, A1
		move.w  Obj_Priority(A0), D0                             ; $0018
		lsr.w   #$01, D0
		andi.w  #$0380, D0
		adda.w  D0, A1
		cmpi.w  #$007E, (A1)
		bcc.s   Exit_DisplaySprite                     ; loc_D33E
		addq.w  #$02, (A1)
		adda.w  (A1), A1
		move.w  A0, (A1)
Exit_DisplaySprite:                                            ; loc_D33E
		rts
;-------------------------------------------------------------------------------
DisplaySprite_A1:                                              ; loc_D340
		lea     ($FFFFAC00).w, A2
		move.w  Obj_Priority(A1), D0                             ; $0018
		lsr.w   #$01, D0
		andi.w  #$0380, D0
		adda.w  D0, A2
		cmpi.w  #$007E, (A2)
		bcc.s   Exit_DisplaySprite_A1                  ; loc_D35C
		addq.w  #$02, (A2)
		adda.w  (A2), A2
		move.w  A1, (A2)
Exit_DisplaySprite_A1:                                         ; loc_D35C
		rts
;-------------------------------------------------------------------------------
DisplaySprite_Param:                                           ; loc_D35E
		lea     ($FFFFAC00).w, A1
		adda.w  D0, A1
		cmpi.w  #$007E, (A1)
		bcc.s   Exit_DisplaySprite_Param               ; loc_D370
		addq.w  #$02, (A1)
		adda.w  (A1), A1
		move.w  A0, (A1)
Exit_DisplaySprite_Param:                                      ; loc_D370
		rts
;===============================================================================
; Routine for displaying a sprite
; [ End ]
;===============================================================================

;===============================================================================
; Routine for animating a sprite
; [ Begin ]
;===============================================================================
AnimateSprite:                                                 ; loc_D372
		moveq   #$00, D0
		move.b  Obj_Ani_Number(A0), D0                           ; $001C
		cmp.b   Obj_Ani_Flag(A0), D0                             ; $001D
		beq.s   loc_D38E
		move.b  D0, Obj_Ani_Flag(A0)                             ; $001D
		move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
		move.b  #$00, Obj_Ani_Time(A0)                           ; $001E
loc_D38E:
		subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
		bpl.s   loc_D3C8
		add.w   D0, D0
		adda.w  $00(A1, D0), A1
		move.b  (A1), Obj_Ani_Time(A0)                           ; $001E
		moveq   #$00, D1
		move.b  Obj_Ani_Frame(A0), D1                            ; $001B
		move.b  $01(A1, D1), D0
		bmi.s   loc_D3CA
loc_D3AA:
		andi.b  #$7F, D0
		move.b  D0, Obj_Map_Id(A0)                               ; $001A
		move.b  Obj_Status(A0), D1                               ; $0022
		andi.b  #$03, D1
		andi.b  #$FC, Obj_Flags(A0)                              ; $0001
		or.b    D1, Obj_Flags(A0)                                ; $0001
		addq.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
loc_D3C8:
		rts
loc_D3CA:
		addq.b  #$01, D0
		bne.s   loc_D3DA
		move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
		move.b  Obj_Flags(A1), D0                                ; $0001
		bra.s   loc_D3AA
loc_D3DA:
		addq.b  #$01, D0
		bne.s   loc_D3EE
		move.b  $02(A1, D1), D0
		sub.b   D0, Obj_Ani_Frame(A0)                            ; $001B
		sub.b   D0, D1
		move.b  $01(A1, D1), D0
		bra.s   loc_D3AA
loc_D3EE:
		addq.b  #$01, D0
		bne.s   loc_D3FA
		move.b  $02(A1, D1), Obj_Ani_Number(A0)                  ; $001C
		rts
loc_D3FA:
		addq.b  #$01, D0
		bne.s   loc_D40E
		addq.b  #$02, Obj_Routine(A0)                            ; $0024
		move.b  #$00, Obj_Ani_Time(A0)                           ; $001E
		addq.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
		rts
loc_D40E:
		addq.b  #$01, D0
		bne.s   loc_D41E
		move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
		clr.b   Obj_Routine_2(A0)                                ; $0025
		rts
loc_D41E:
		addq.b  #$01, D0
		bne.s   loc_D428
		addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
		rts
loc_D428:
		addq.b  #$01, D0
		bne.s   loc_D430
		addq.b  #$02, Obj_Timer(A0)                              ; $002A
loc_D430:
		rts
;===============================================================================
; Routine for animating a sprite
; [ End ]
;===============================================================================

;===============================================================================
; Routine to convert mappings (etc) to proper Megadrive sprites
; [ Begin ]
;===============================================================================
Build_Sprites_Screen_Pos:                                      ; loc_D432
		dc.l    $00000000, $FFFFEEF0, $FFFFEE08, $FFFFEE18
;-------------------------------------------------------------------------------
Build_Sprites:                                                 ; loc_D442
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne     Build_Sprites_2P                       ; loc_D7A2
		lea     ($FFFFF800).w, A2
		moveq   #$00, D5
		moveq   #$00, D4
		tst.b   ($FFFFF711).w
		beq.s   loc_D45C
		bsr     Build_Rings                            ; loc_DFAC
loc_D45C:
		lea     ($FFFFAC00).w, A4
		moveq   #$07, D7
loc_D462:
		tst.w   (A4)
		beq     loc_D53C
		moveq   #$02, D6
loc_D46A:
		move.w  $00(A4, D6), A0
		tst.b   (A0)
		beq     loc_D55E
		tst.l   Obj_Map(A0)                                      ; $0004
		beq     loc_D55E
		andi.b  #$7F, Obj_Flags(A0)                              ; $0001
		move.b  Obj_Flags(A0), D0                                ; $0001
		move.b  D0, D4
		btst    #$06, D0
		bne     loc_D560
		andi.w  #$000C, D0
		beq.s   loc_D4E8
		move.l  Build_Sprites_Screen_Pos(PC, D0), A1   ; loc_D432
		moveq   #$00, D0
		move.b  Obj_Width(A0), D0                                ; $0019
		move.w  Obj_X(A0), D3                                    ; $0008
		sub.w   (A1), D3
		move.w  D3, D1
		add.w   D0, D1
		bmi     loc_D534
		move.w  D3, D1
		sub.w   D0, D1
		cmpi.w  #$0140, D1
		bge     loc_D534
		addi.w  #$0080, D3
		btst    #$04, D4
		beq.s   loc_D4F2
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A1), D2                                  ; $0004
		move.w  D2, D1
		add.w   D0, D1
		bmi.s   loc_D534
		move.w  D2, D1
		sub.w   D0, D1
		cmpi.w  #$00E0, D1
		bge.s   loc_D534
		addi.w  #$0080, D2
		bra.s   loc_D50E
loc_D4E8:
		move.w  Obj_Sub_Y(A0), D2                                ; $000A
		move.w  Obj_X(A0), D3                                    ; $0008
		bra.s   loc_D50E
loc_D4F2:
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A1), D2                                  ; $0004
		addi.w  #$0080, D2
		andi.w  #$07FF, D2
		cmpi.w  #$0060, D2
		bcs.s   loc_D534
		cmpi.w  #$0180, D2
		bcc.s   loc_D534
loc_D50E:
		move.l  Obj_Map(A0), A1                                  ; $0004
		moveq   #$00, D1
		btst    #$05, D4
		bne.s   loc_D52A
		move.b  Obj_Map_Id(A0), D1                               ; $001A
		add.w   D1, D1
		adda.w  $00(A1, D1), A1
		move.w  (A1)+, D1
		subq.w  #$01, D1
		bmi.s   loc_D52E
loc_D52A:
		bsr     loc_D656
loc_D52E:
		ori.b   #$80, Obj_Flags(A0)                              ; $0001
loc_D534:
		addq.w  #$02, D6
		subq.w  #$02, (A4)
		bne     loc_D46A
loc_D53C:
		lea     $0080(A4), A4
		dbra    D7, loc_D462
		move.b  D5, ($FFFFF62C).w
		cmpi.b  #$50, D5
		beq.s   loc_D556
		move.l  #$00000000, (A2)
		rts
loc_D556:
		move.b  #$00, $FFFFFFFB(a2)
		rts
loc_D55E:
		bra.s   loc_D534
loc_D560:
		move.l  A4, -(A7)
		lea     (Camera_X).w, A4                             ; $FFFFEE00
		move.w  Obj_Art_VRAM(A0), A3                             ; $0002
		move.l  Obj_Map(A0), A5                                  ; $0004
		moveq   #$00, D0
		move.b  $000E(A0), D0
		move.w  Obj_X(A0), D3                                    ; $0008
		sub.w   (A4), D3
		move.w  D3, D1
		add.w   D0, D1
		bmi     loc_D648
		move.w  D3, D1
		sub.w   D0, D1
		cmpi.w  #$0140, D1
		bge     loc_D648
		addi.w  #$0080, D3
		btst    #$04, D4
		beq.s   loc_D5C0
		moveq   #$00, D0
		move.b  Obj_Inertia(A0), D0                              ; $0014
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A4), D2                                  ; $0004
		move.w  D2, D1
		add.w   D0, D1
		bmi     loc_D648
		move.w  D2, D1
		sub.w   D0, D1
		cmpi.w  #$00E0, D1
		bge     loc_D648
		addi.w  #$0080, D2
		bra.s   loc_D5DC
loc_D5C0:
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A4), D2                                  ; $0004
		addi.w  #$0080, D2
		andi.w  #$07FF, D2
		cmpi.w  #$0060, D2
		bcs.s   loc_D648
		cmpi.w  #$0180, D2
		bcc.s   loc_D648
loc_D5DC:
		moveq   #$00, D1
		move.b  Obj_Boss_Ani_Map(A0), D1                         ; $000B
		beq.s   loc_D5FA
		add.w   D1, D1
		move.l  A5, A1
		adda.w  $00(A1, D1), A1
		move.w  (A1)+, D1
		subq.w  #$01, D1
		bmi.s   loc_D5FA
		move.w  D4, -(A7)
		bsr     loc_D64E
		move.w  (A7)+, D4
loc_D5FA:
		ori.b   #$80, Obj_Flags(A0)                              ; $0001
		lea     Obj_Speed(A0), A6                                ; $0010
		moveq   #$00, D0
		move.b  Obj_Ani_Boss_Cnt(A0), D0                         ; $000F
		subq.w  #$01, D0
		bcs.s   loc_D648
loc_D60E:
		swap.w  D0
		move.w  (A6)+, D3
		sub.w   (A4), D3
		addi.w  #$0080, D3
		move.w  (A6)+, D2
		sub.w   Obj_Map(A4), D2                                  ; $0004
		addi.w  #$0080, D2
		andi.w  #$07FF, D2
		addq.w  #$01, A6
		moveq   #$00, D1
		move.b  (A6)+, D1
		add.w   D1, D1
		move.l  A5, A1
		adda.w  $00(A1, D1), A1
		move.w  (A1)+, D1
		subq.w  #$01, D1
		bmi.s   loc_D642
		move.w  D4, -(A7)
		bsr     loc_D64E
		move.w  (A7)+, D4
loc_D642:
		swap.w  D0
		dbra    D0, loc_D60E
loc_D648:
		move.l  (A7)+, A4
		bra     loc_D534
loc_D64E:
		cmpi.b  #$50, D5
		bcs.s   loc_D660
		rts
loc_D656:
		move.w  Obj_Art_VRAM(A0), A3                             ; $0002
		cmpi.b  #$50, D5
		bcc.s   loc_D696
loc_D660:
		btst    #$00, D4
		bne.s   loc_D698
		btst    #$01, D4
		bne     Build_Sprite_Upside_Down_Right         ; loc_D6F8
Build_Sprite_Right:                                            ; loc_D66E
		move.b  (A1)+, D0
		ext.w   D0
		add.w   D2, D0
		move.w  D0, (A2)+
		move.b  (A1)+, (A2)+
		addq.b  #$01, D5
		move.b  D5, (A2)+
		move.w  (A1)+, D0
		add.w   A3, D0
		move.w  D0, (A2)+
		addq.w  #$02, A1
		move.w  (A1)+, D0
		add.w   D3, D0
		andi.w  #$01FF, D0
		bne.s   loc_D690
		addq.w  #$01, D0
loc_D690:
		move.w  D0, (A2)+
		dbra    D1, Build_Sprite_Right                 ; loc_D66E
loc_D696:
		rts
loc_D698:
		btst    #$01, D4
		bne     Build_Sprite_Upside_Down_Left          ; loc_D740
Build_Sprite_Left:                                             ; loc_D6A0
		move.b  (A1)+, D0
		ext.w   D0
		add.w   D2, D0
		move.w  D0, (A2)+
		move.b  (A1)+, D4
		move.b  D4, (A2)+
		addq.b  #$01, D5
		move.b  D5, (A2)+
		move.w  (A1)+, D0
		add.w   A3, D0
		eori.w  #$0800, D0
		move.w  D0, (A2)+
		addq.w  #$02, A1
		move.w  (A1)+, D0
		neg.w   D0
		move.b  loc_D6D8(PC, D4), D4
		sub.w   D4, D0
		add.w   D3, D0
		andi.w  #$01FF, D0
		bne.s   loc_D6D0
		addq.w  #$01, D0
loc_D6D0:
		move.w  D0, (A2)+
		dbra    D1, Build_Sprite_Left                  ; loc_D6A0
		rts
;-------------------------------------------------------------------------------
loc_D6D8:
		dc.b    $08, $08, $08, $08, $10, $10, $10, $10
		dc.b    $18, $18, $18, $18, $20, $20, $20, $20
;-------------------------------------------------------------------------------
loc_D6E8:
		dc.b    $08, $10, $18, $20, $08, $10, $18, $20
		dc.b    $08, $10, $18, $20, $08, $10, $18, $20
;-------------------------------------------------------------------------------
Build_Sprite_Upside_Down_Right:                                ; loc_D6F8
		move.b  (A1)+, D0
		move.b  (A1), D4
		ext.w   D0
		neg.w   D0
		move.b  loc_D6E8(PC, D4), D4
		sub.w   D4, D0
		add.w   D2, D0
		move.w  D0, (A2)+
		move.b  (A1)+, (A2)+
		addq.b  #$01, D5
		move.b  D5, (A2)+
		move.w  (A1)+, D0
		add.w   A3, D0
		eori.w  #$1000, D0
		move.w  D0, (A2)+
		addq.w  #$02, A1
		move.w  (A1)+, D0
		add.w   D3, D0
		andi.w  #$01FF, D0
		bne.s   loc_D728
		addq.w  #$01, D0
loc_D728:
		move.w  D0, (A2)+
		dbra    D1, Build_Sprite_Upside_Down_Right     ; loc_D6F8
		rts
;-------------------------------------------------------------------------------
loc_D730:
		dc.b    $08, $10, $18, $20, $08, $10, $18, $20
		dc.b    $08, $10, $18, $20, $08, $10, $18, $20
;-------------------------------------------------------------------------------
Build_Sprite_Upside_Down_Left:                                 ; loc_D740
		move.b  (A1)+, D0
		move.b  (A1), D4
		ext.w   D0
		neg.w   D0
		move.b  loc_D730(PC, D4), D4
		sub.w   D4, D0
		add.w   D2, D0
		move.w  D0, (A2)+
		move.b  (A1)+, D4
		move.b  D4, (A2)+
		addq.b  #$01, D5
		move.b  D5, (A2)+
		move.w  (A1)+, D0
		add.w   A3, D0
		eori.w  #$1800, D0
		move.w  D0, (A2)+
		addq.w  #$02, A1
		move.w  (A1)+, D0
		neg.w   D0
		move.b  loc_D782(PC, D4), D4
		sub.w   D4, D0
		add.w   D3, D0
		andi.w  #$01FF, D0
		bne.s   loc_D77A
		addq.w  #$01, D0
loc_D77A:
		move.w  D0, (A2)+
		dbra    D1, Build_Sprite_Upside_Down_Left      ; loc_D740
		rts
;-------------------------------------------------------------------------------
loc_D782:
		dc.b    $08, $08, $08, $08, $10, $10, $10, $10
		dc.b    $18, $18, $18, $18, $20, $20, $20, $20
;-------------------------------------------------------------------------------
Build_Sprites_Screen_Pos_2P:                                   ; loc_D792
		dc.l    $00000000, $FFFFEE00, $FFFFEE08, $FFFFEE18
;-------------------------------------------------------------------------------
Build_Sprites_2P:                                              ; loc_D7A2
		tst.w   ($FFFFF644).w
		bne.s   Build_Sprites_2P                       ; loc_D7A2
		lea     ($FFFFF800).w, A2
		moveq   #$02, D5
		moveq   #$00, D4
		move.l  #$01D80F01, (A2)+
		move.l  #$00000001, (A2)+
		move.l  #$01D80F02, (A2)+
		move.l  #$00000000, (A2)+
		tst.b   ($FFFFF711).w
		beq.s   loc_D7D2
		bsr     Build_Rings_2P                         ; loc_E02C
loc_D7D2:
		lea     ($FFFFAC00).w, A4
		moveq   #$07, D7
loc_D7D8:
		move.w  (A4), D0
		beq     loc_D8B0
		move.w  D0, -(A7)
		moveq   #$02, D6
loc_D7E2:
		move.w  $00(A4, D6), A0
		tst.b   (A0)
		beq     loc_D8A6
		andi.b  #$7F, Obj_Flags(A0)                              ; $0001
		move.b  Obj_Flags(A0), D0                                ; $0001
		move.b  D0, D4
		btst    #$06, D0
		bne     loc_D9EA
		andi.w  #$000C, D0
		beq.s   loc_D856
		move.l  Build_Sprites_Screen_Pos_2P(PC, D0), A1 ; loc_D792
		moveq   #$00, D0
		move.b  Obj_Width(A0), D0                                ; $0019
		move.w  Obj_X(A0), D3                                    ; $0008
		sub.w   (A1), D3
		move.w  D3, D1
		add.w   D0, D1
		bmi     loc_D8A6
		move.w  D3, D1
		sub.w   D0, D1
		cmpi.w  #$0140, D1
		bge.s   loc_D8A6
		addi.w  #$0080, D3
		btst    #$04, D4
		beq.s   loc_D864
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A1), D2                                  ; $0004
		move.w  D2, D1
		add.w   D0, D1
		bmi.s   loc_D8A6
		move.w  D2, D1
		sub.w   D0, D1
		cmpi.w  #$00E0, D1
		bge.s   loc_D8A6
		addi.w  #$0100, D2
		bra.s   loc_D880
loc_D856:
		move.w  Obj_Sub_Y(A0), D2                                ; $000A
		move.w  Obj_X(A0), D3                                    ; $0008
		addi.w  #$0080, D2
		bra.s   loc_D880
loc_D864:
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A1), D2                                  ; $0004
		addi.w  #$0080, D2
		cmpi.w  #$0060, D2
		bcs.s   loc_D8A6
		cmpi.w  #$0180, D2
		bcc.s   loc_D8A6
		addi.w  #$0080, D2
loc_D880:
		move.l  Obj_Map(A0), A1                                  ; $0004
		moveq   #$00, D1
		btst    #$05, D4
		bne.s   loc_D89C
		move.b  Obj_Map_Id(A0), D1                               ; $001A
		add.w   D1, D1
		adda.w  $00(A1, D1), A1
		move.w  (A1)+, D1
		subq.w  #$01, D1
		bmi.s   loc_D8A0
loc_D89C:
		bsr     Build_Sprites_2P_Sub_01                ; loc_DBFE
loc_D8A0:
		ori.b   #$80, Obj_Flags(A0)                              ; $0001
loc_D8A6:
		addq.w  #$02, D6
		subq.w  #$02, (A7)
		bne     loc_D7E2
		addq.w  #$02, A7
loc_D8B0:
		lea     $0080(A4), A4
		dbra    D7, loc_D7D8
		move.b  D5, ($FFFFF62C).w
		cmpi.b  #$50, D5
		bcc.s   loc_D8CA
		move.l  #$00000000, (A2)
		bra.s   loc_D8E2
loc_D8CA:
		move.b  #$00, $FFFFFFFB(a2)
		bra.s   loc_D8E2
;-------------------------------------------------------------------------------
loc_D8D2:
		dc.l    $00000000, $FFFFEE20, $FFFFEE28, $FFFFEE38
;-------------------------------------------------------------------------------
loc_D8E2:
		lea     ($FFFFDD00).w, A2
		moveq   #$00, D5
		moveq   #$00, D4
		tst.b   ($FFFFF711).w
		beq.s   loc_D8F4
		bsr     Build_Rings_2P_Tails                   ; loc_E042
loc_D8F4:
		lea     ($FFFFAC00).w, A4
		moveq   #$07, D7
loc_D8FA:
		tst.w   (A4)
		beq     loc_D9C8
		moveq   #$02, D6
loc_D902:
		move.w  $00(A4, D6), A0
		tst.b   (A0)
		beq     loc_D9C0
		move.b  Obj_Flags(A0), D0                                ; $0001
		move.b  D0, D4
		btst    #$06, D0
		bne     loc_DAD4
		andi.w  #$000C, D0
		beq.s   loc_D970
		move.l  loc_D8D2(PC, D0), A1
		moveq   #$00, D0
		move.b  Obj_Width(A0), D0                                ; $0019
		move.w  Obj_X(A0), D3                                    ; $0008
		sub.w   (A1), D3
		move.w  D3, D1
		add.w   D0, D1
		bmi     loc_D9C0
		move.w  D3, D1
		sub.w   D0, D1
		cmpi.w  #$0140, D1
		bge.s   loc_D9C0
		addi.w  #$0080, D3
		btst    #$04, D4
		beq.s   loc_D97E
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A1), D2                                  ; $0004
		move.w  D2, D1
		add.w   D0, D1
		bmi.s   loc_D9C0
		move.w  D2, D1
		sub.w   D0, D1
		cmpi.w  #$00E0, D1
		bge.s   loc_D9C0
		addi.w  #$01E0, D2
		bra.s   loc_D99A
loc_D970:
		move.w  Obj_Sub_Y(A0), D2                                ; $000A
		move.w  Obj_X(A0), D3                                    ; $0008
		addi.w  #$0160, D2
		bra.s   loc_D99A
loc_D97E:
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A1), D2                                  ; $0004
		addi.w  #$0080, D2
		cmpi.w  #$0060, D2
		bcs.s   loc_D9C0
		cmpi.w  #$0180, D2
		bcc.s   loc_D9C0
		addi.w  #$0160, D2
loc_D99A:
		move.l  Obj_Map(A0), A1                                  ; $0004
		moveq   #$00, D1
		btst    #$05, D4
		bne.s   loc_D9B6
		move.b  Obj_Map_Id(A0), D1                               ; $001A
		add.w   D1, D1
		adda.w  $00(A1, D1), A1
		move.w  (A1)+, D1
		subq.w  #$01, D1
		bmi.s   loc_D9BA
loc_D9B6:
		bsr     Build_Sprites_2P_Sub_01                ; loc_DBFE
loc_D9BA:
		ori.b   #$80, Obj_Flags(A0)                              ; $0001
loc_D9C0:
		addq.w  #$02, D6
		subq.w  #$02, (A4)
		bne     loc_D902
loc_D9C8:
		lea     $0080(A4), A4
		dbra    D7, loc_D8FA
		move.b  D5, ($FFFFF62C).w
		cmpi.b  #$50, D5
		beq.s   loc_D9E2
		move.l  #$00000000, (A2)
		rts
loc_D9E2:
		move.b  #$00, $FFFFFFFB(a2)
		rts
loc_D9EA:
		move.l  A4, -(A7)
		lea     (Camera_X).w, A4                             ; $FFFFEE00
		move.w  Obj_Art_VRAM(A0), A3                             ; $0002
		move.l  Obj_Map(A0), A5                                  ; $0004
		moveq   #$00, D0
		move.b  $000E(A0), D0
		move.w  Obj_X(A0), D3                                    ; $0008
		sub.w   (A4), D3
		move.w  D3, D1
		add.w   D0, D1
		bmi     loc_DACE
		move.w  D3, D1
		sub.w   D0, D1
		cmpi.w  #$0140, D1
		bge     loc_DACE
		addi.w  #$0080, D3
		btst    #$04, D4
		beq.s   loc_DA4A
		moveq   #$00, D0
		move.b  Obj_Inertia(A0), D0                              ; $0014
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A4), D2                                  ; $0004
		move.w  D2, D1
		add.w   D0, D1
		bmi     loc_DACE
		move.w  D2, D1
		sub.w   D0, D1
		cmpi.w  #$00E0, D1
		bge     loc_DACE
		addi.w  #$0100, D2
		bra.s   loc_DA66
loc_DA4A:
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A4), D2                                  ; $0004
		addi.w  #$0080, D2
		cmpi.w  #$0060, D2
		bcs.s   loc_DACE
		cmpi.w  #$0180, D2
		bcc.s   loc_DACE
		addi.w  #$0080, D2
loc_DA66:
		moveq   #$00, D1
		move.b  Obj_Boss_Ani_Map(A0), D1                         ; $000B
		beq.s   loc_DA84
		add.w   D1, D1
		move.l  A5, A1
		adda.w  $00(A1, D1), A1
		move.w  (A1)+, D1
		subq.w  #$01, D1
		bmi.s   loc_DA84
		move.w  D4, -(A7)
		bsr     Build_Sprites_2P_Sub_00                ; loc_DBF6
		move.w  (A7)+, D4
loc_DA84:
		ori.b   #$80, Obj_Flags(A0)                              ; $0001
		lea     Obj_Speed(A0), A6                                ; $0010
		moveq   #$00, D0
		move.b  Obj_Ani_Boss_Cnt(A0), D0                         ; $000F
		subq.w  #$01, D0
		bcs.s   loc_DACE
loc_DA98:
		swap.w  D0
		move.w  (A6)+, D3
		sub.w   (A4), D3
		addi.w  #$0080, D3
		move.w  (A6)+, D2
		sub.w   Obj_Map(A4), D2                                  ; $0004
		addi.w  #$0100, D2
		addq.w  #$01, A6
		moveq   #$00, D1
		move.b  (A6)+, D1
		add.w   D1, D1
		move.l  A5, A1
		adda.w  $00(A1, D1), A1
		move.w  (A1)+, D1
		subq.w  #$01, D1
		bmi.s   loc_DAC8
		move.w  D4, -(A7)
		bsr     Build_Sprites_2P_Sub_00                ; loc_DBF6
		move.w  (A7)+, D4
loc_DAC8:
		swap.w  D0
		dbra    D0, loc_DA98
loc_DACE:
		move.l  (A7)+, A4
		bra     loc_D8A6
loc_DAD4:
		move.l  A4, -(A7)
		lea     (Camera_X_2).w, A4                           ; $FFFFEE20
		move.w  Obj_Art_VRAM(A0), A3                             ; $0002
		move.l  Obj_Map(A0), A5                                  ; $0004
		moveq   #$00, D0
		move.b  $000E(A0), D0
		move.w  Obj_X(A0), D3                                    ; $0008
		sub.w   (A4), D3
		move.w  D3, D1
		add.w   D0, D1
		bmi     loc_DBB8
		move.w  D3, D1
		sub.w   D0, D1
		cmpi.w  #$0140, D1
		bge     loc_DBB8
		addi.w  #$0080, D3
		btst    #$04, D4
		beq.s   loc_DB34
		moveq   #$00, D0
		move.b  Obj_Inertia(A0), D0                              ; $0014
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A4), D2                                  ; $0004
		move.w  D2, D1
		add.w   D0, D1
		bmi     loc_DBB8
		move.w  D2, D1
		sub.w   D0, D1
		cmpi.w  #$00E0, D1
		bge     loc_DBB8
		addi.w  #$01E0, D2
		bra.s   loc_DB50
loc_DB34:
		move.w  Obj_Y(A0), D2                                    ; $000C
		sub.w   Obj_Map(A4), D2                                  ; $0004
		addi.w  #$0080, D2
		cmpi.w  #$0060, D2
		bcs.s   loc_DBB8
		cmpi.w  #$0180, D2
		bcc.s   loc_DBB8
		addi.w  #$0160, D2
loc_DB50:
		moveq   #$00, D1
		move.b  Obj_Boss_Ani_Map(A0), D1                         ; $000B
		beq.s   loc_DB6E
		add.w   D1, D1
		move.l  A5, A1
		adda.w  $00(A1, D1), A1
		move.w  (A1)+, D1
		subq.w  #$01, D1
		bmi.s   loc_DB6E
		move.w  D4, -(A7)
		bsr     Build_Sprites_2P_Sub_00                ; loc_DBF6
		move.w  (A7)+, D4
loc_DB6E:
		ori.b   #$80, Obj_Flags(A0)                              ; $0001
		lea     Obj_Speed(A0), A6                                ; $0010
		moveq   #$00, D0
		move.b  Obj_Ani_Boss_Cnt(A0), D0                         ; $000F
		subq.w  #$01, D0
		bcs.s   loc_DBB8
loc_DB82:
		swap.w  D0
		move.w  (A6)+, D3
		sub.w   (A4), D3
		addi.w  #$0080, D3
		move.w  (A6)+, D2
		sub.w   Obj_Map(A4), D2                                  ; $0004
		addi.w  #$01E0, D2
		addq.w  #$01, A6
		moveq   #$00, D1
		move.b  (A6)+, D1
		add.w   D1, D1
		move.l  A5, A1
		adda.w  $00(A1, D1), A1
		move.w  (A1)+, D1
		subq.w  #$01, D1
		bmi.s   loc_DBB2
		move.w  D4, -(A7)
		bsr     Build_Sprites_2P_Sub_00                ; loc_DBF6
		move.w  (A7)+, D4
loc_DBB2:
		swap.w  D0
		dbra    D0, loc_DB82
loc_DBB8:
		move.l  (A7)+, A4
		bra     loc_D9C0

;-------------------------------------------------------------------------------
; Rotinas para modificar os atributos das sprites no modo entrela ado / 2P
; [ Begin ]
;-------------------------------------------------------------------------------
ModifySpriteAttr_2P:                                           ; loc_DBBE
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   Exit_ModifySpriteAttr_2P               ; loc_DBD8
		move.w  Obj_Art_VRAM(A0), D0                             ; $0002
		andi.w  #$07FF, D0
		lsr.w   #$01, D0
		andi.w  #$F800, Obj_Art_VRAM(A0)                         ; $0002
		add.w   D0, Obj_Art_VRAM(A0)                             ; $0002
Exit_ModifySpriteAttr_2P:                                      ; loc_DBD8
		rts
;-------------------------------------------------------------------------------
ModifySpriteAttr_2P_A1:                                        ; loc_DBDA
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   Exit_ModifySpriteAttr_2P_A1            ; loc_DBF4
		move.w  Obj_Art_VRAM(A1), D0                             ; $0002
		andi.w  #$07FF, D0
		lsr.w   #$01, D0
		andi.w  #$F800, Obj_Art_VRAM(A1)                         ; $0002
		add.w   D0, Obj_Art_VRAM(A1)                             ; $0002
Exit_ModifySpriteAttr_2P_A1:                                   ; loc_DBF4
		rts
;-------------------------------------------------------------------------------
; Rotinas para modificar os atributos das sprites no modo entrela ado / 2P
; [ End ]
;-------------------------------------------------------------------------------
Build_Sprites_2P_Sub_00:                                       ; loc_DBF6
		cmpi.b  #$50, D5
		bcs.s   loc_DC16
		rts
;-------------------------------------------------------------------------------
Build_Sprites_2P_Sub_01:                                       ; loc_DBFE
		move.w  Obj_Art_VRAM(A0), A3                             ; $0002
		cmpi.b  #$50, D5
		bcc.s   loc_DC42
		btst    #$00, D4
		bne.s   loc_DC54
		btst    #$01, D4
		bne     loc_DCB6
loc_DC16:
		move.b  (A1)+, D0
		ext.w   D0
		add.w   D2, D0
		move.w  D0, (A2)+
		move.b  (A1)+, D4
		move.b  loc_DC44(PC, D4), (A2)+
		addq.b  #$01, D5
		move.b  D5, (A2)+
		addq.w  #$02, A1
		move.w  (A1)+, D0
		add.w   A3, D0
		move.w  D0, (A2)+
		move.w  (A1)+, D0
		add.w   D3, D0
		andi.w  #$01FF, D0
		bne.s   loc_DC3C
		addq.w  #$01, D0
loc_DC3C:
		move.w  D0, (A2)+
		dbra    D1, loc_DC16
loc_DC42:
		rts
;-------------------------------------------------------------------------------
loc_DC44:
		dc.b    $00, $00, $01, $01, $04, $04, $05, $05
		dc.b    $08, $08, $09, $09, $0C, $0C, $0D, $0D
;-------------------------------------------------------------------------------
loc_DC54:
		btst    #$01, D4
		bne     loc_DD12
loc_DC5C:
		move.b  (A1)+, D0
		ext.w   D0
		add.w   D2, D0
		move.w  D0, (A2)+
		move.b  (A1)+, D4
		move.b  loc_DC44(PC, D4), (A2)+
		addq.b  #$01, D5
		move.b  D5, (A2)+
		addq.w  #$02, A1
		move.w  (A1)+, D0
		add.w   A3, D0
		eori.w  #$0800, D0
		move.w  D0, (A2)+
		move.w  (A1)+, D0
		neg.w   D0
		move.b  loc_DC96(PC, D4), D4
		sub.w   D4, D0
		add.w   D3, D0
		andi.w  #$01FF, D0
		bne.s   loc_DC8E
		addq.w  #$01, D0
loc_DC8E:
		move.w  D0, (A2)+
		dbra    D1, loc_DC5C
		rts
;-------------------------------------------------------------------------------
loc_DC96:
		dc.b    $08, $08, $08, $08, $10, $10, $10, $10
		dc.b    $18, $18, $18, $18, $20, $20, $20, $20
;-------------------------------------------------------------------------------
loc_DCA6:
		dc.b    $08, $10, $18, $20, $08, $10, $18, $20
		dc.b    $08, $10, $18, $20, $08, $10, $18, $20
;-------------------------------------------------------------------------------
loc_DCB6:
		move.b  (A1)+, D0
		move.b  (A1), D4
		ext.w   D0
		neg.w   D0
		move.b  loc_DCA6(PC, D4), D4
		sub.w   D4, D0
		add.w   D2, D0
		move.w  D0, (A2)+
		move.b  (A1)+, D4
		move.b  loc_DCF2(PC, D4), (A2)+
		addq.b  #$01, D5
		move.b  D5, (A2)+
		addq.w  #$02, A1
		move.w  (A1)+, D0
		add.w   A3, D0
		eori.w  #$1000, D0
		move.w  D0, (A2)+
		move.w  (A1)+, D0
		add.w   D3, D0
		andi.w  #$01FF, D0
		bne.s   loc_DCEA
		addq.w  #$01, D0
loc_DCEA:
		move.w  D0, (A2)+
		dbra    D1, loc_DCB6
		rts
;-------------------------------------------------------------------------------
loc_DCF2:
		dc.b    $00, $00, $01, $01, $04, $04, $05, $05
		dc.b    $08, $08, $09, $09, $0C, $0C, $0D, $0D
;-------------------------------------------------------------------------------
loc_DD02:
		dc.b    $08, $10, $18, $20, $08, $10, $18, $20
		dc.b    $08, $10, $18, $20, $08, $10, $18, $20
;-------------------------------------------------------------------------------
loc_DD12:
		move.b  (A1)+, D0
		move.b  (A1), D4
		ext.w   D0
		neg.w   D0
		move.b  loc_DD02(PC, D4), D4
		sub.w   D4, D0
		add.w   D2, D0
		move.w  D0, (A2)+
		move.b  (A1)+, D4
		move.b  loc_DCF2(PC, D4), (A2)+
		addq.b  #$01, D5
		move.b  D5, (A2)+
		addq.w  #$02, A1
		move.w  (A1)+, D0
		add.w   A3, D0
		eori.w  #$1800, D0
		move.w  D0, (A2)+
		move.w  (A1)+, D0
		neg.w   D0
		move.b  loc_DD56(PC, D4), D4
		sub.w   D4, D0
		add.w   D3, D0
		andi.w  #$01FF, D0
		bne.s   loc_DD4E
		addq.w  #$01, D0
loc_DD4E:
		move.w  D0, (A2)+
		dbra    D1, loc_DD12
		rts
;-------------------------------------------------------------------------------
loc_DD56:
		dc.b    $08, $08, $08, $08, $10, $10, $10, $10
		dc.b    $18, $18, $18, $18, $20, $20, $20, $20
;===============================================================================
; Rotina para compilar os sprites de acordo com as defini  es dos Objects
; [ End ]
;===============================================================================
Check_Object_On_Screen:                                        ; loc_DD66
		move.w  Obj_X(A0), D0                                    ; $0008
		sub.w   (Camera_X).w, D0                             ; $FFFFEE00
		bmi.s   Not_On_Screen                          ; loc_DD8A
		cmpi.w  #$0140, D0
		bge.s   Not_On_Screen                          ; loc_DD8A
		move.w  Obj_Y(A0), D1                                    ; $000C
		sub.w   (Camera_Y).w, D1                             ; $FFFFEE04
		bmi.s   Not_On_Screen                          ; loc_DD8A
		cmpi.w  #$00E0, D1
		bge.s   Not_On_Screen                          ; loc_DD8A
		moveq   #$00, D0
		rts
Not_On_Screen:                                                 ; loc_DD8A
		moveq   #$01, D0
		rts
;-------------------------------------------------------------------------------
Check_Object_On_Screen_2:                                      ; loc_DD8E
		moveq   #$00, D1
		move.b  Obj_Width(A0), D1                                ; $0019
		move.w  Obj_X(A0), D0                                    ; $0008
		sub.w   (Camera_X).w, D0                             ; $FFFFEE00
		add.w   D1, D0
		bmi.s   Not_On_Screen_2                        ; loc_DDBE
		add.w   D1, D1
		sub.w   D1, D0
		cmpi.w  #$0140, D0
		bge.s   Not_On_Screen_2                        ; loc_DDBE
		move.w  Obj_Y(A0), D1                                    ; $000C
		sub.w   (Camera_Y).w, D1                             ; $FFFFEE04
		bmi.s   Not_On_Screen_2                        ; loc_DDBE
		cmpi.w  #$00E0, D1
		bge.s   Not_On_Screen_2                        ; loc_DDBE
		moveq   #$00, D0
		rts
Not_On_Screen_2:                                               ; loc_DDBE
		moveq   #$01, D0
		rts
		nop
;===============================================================================
; Rotina para carregar o pocicionamento dos an is nas fases
; [ Begin ]
;===============================================================================
Load_Ring_Pos:                                                 ; loc_DDC4
		moveq   #$00, D0
		move.b  ($FFFFF710).w, D0
		move.w  loc_DDD2(PC, D0), D0
		jmp     loc_DDD2(PC, D0)
;-------------------------------------------------------------------------------
loc_DDD2:
		dc.w    loc_DDD6-loc_DDD2
		dc.w    loc_DE20-loc_DDD2
;-------------------------------------------------------------------------------
loc_DDD6:
		addq.b  #$02, ($FFFFF710).w
		bsr     Load_Rings_Layout                      ; loc_E0D8
		lea     ($FFFFE800).w, A1
		move.w  (Camera_X).w, D4                             ; $FFFFEE00
		subq.w  #$08, D4
		bhi.s   loc_DDF2
		moveq   #$01, D4
		bra.s   loc_DDF2
loc_DDEE:
		lea     $0006(A1), A1
loc_DDF2:
		cmp.w   $0002(A1), D4
		bhi.s   loc_DDEE
		move.w  A1, ($FFFFF712).w
		move.w  A1, ($FFFFF716).w
		addi.w  #$0150, D4
		bra.s   loc_DE0A
loc_DE06:
		lea     $0006(A1), A1
loc_DE0A:
		cmp.w   $0002(A1), D4
		bhi.s   loc_DE06
		move.w  A1, ($FFFFF714).w
		move.w  A1, ($FFFFF718).w
		move.b  #$01, ($FFFFF711).w
		rts
;-------------------------------------------------------------------------------
loc_DE20:
		lea     ($FFFFEF80).w, A2
		move.w  (A2)+, D1
		subq.w  #$01, D1
		bcs.s   loc_DE56
loc_DE2A:
		move.w  (A2)+, D0
		beq.s   loc_DE2A
		move.w  D0, A1
		subq.b  #$01, (A1)
		bne.s   loc_DE52
		move.b  #$06, (A1)
		addq.b  #$01, $0001(A1)
		cmpi.b  #$08, $0001(A1)
		bne.s   loc_DE52
		move.w  #$FFFF, (A1)
		move.w  #$0000, $FFFFFFFE(A2)
		subq.w  #$01, ($FFFFEF80).w
loc_DE52:
		dbra    D1, loc_DE2A
loc_DE56:
		move.w  ($FFFFF712).w, A1
		move.w  (Camera_X).w, D4                             ; $FFFFEE00
		subq.w  #$08, D4
		bhi.s   loc_DE6A
		moveq   #$01, D4
		bra.s   loc_DE6A
loc_DE66:
		lea     $0006(A1), A1
loc_DE6A:
		cmp.w   $0002(A1), D4
		bhi.s   loc_DE66
		bra.s   loc_DE74
loc_DE72:
		subq.w  #$06, A1
loc_DE74:
		cmp.w   $FFFFFFFC(A1), D4
		bls.s   loc_DE72
		move.w  A1, ($FFFFF712).w
		move.w  ($FFFFF714).w, A2
		addi.w  #$0150, D4
		bra.s   loc_DE8C
loc_DE88:
		lea     $0006(A2), A2
loc_DE8C:
		cmp.w   $0002(A2), D4
		bhi.s   loc_DE88
		bra.s   loc_DE96
loc_DE94:
		subq.w  #$06, A2
loc_DE96:
		cmp.w   $FFFFFFFC(A2), D4
		bls.s   loc_DE94
		move.w  A2, ($FFFFF714).w
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne.s   loc_DEB0
		move.w  A1, ($FFFFF716).w
		move.w  A2, ($FFFFF718).w
		rts
loc_DEB0:
		move.w  ($FFFFF716).w, A1
		move.w  (Camera_X_2).w, D4                           ; $FFFFEE20
		subq.w  #$08, D4
		bhi.s   loc_DEC4
		moveq   #$01, D4
		bra.s   loc_DEC4
loc_DEC0:
		lea     $0006(A1), A1
loc_DEC4:
		cmp.w   $0002(A1), D4
		bhi.s   loc_DEC0
		bra.s   loc_DECE
loc_DECC:
		subq.w  #$06, A1
loc_DECE:
		cmp.w   $FFFFFFFC(A1), D4
		bls.s   loc_DECC
		move.w  A1, ($FFFFF716).w
		move.w  ($FFFFF718).w, A2
		addi.w  #$0150, D4
		bra.s   loc_DEE6
loc_DEE2:
		lea     $0006(A2), A2
loc_DEE6:
		cmp.w   $0002(A2), D4
		bhi.s   loc_DEE2
		bra.s   loc_DEF0
loc_DEEE:
		subq.w  #$06, A2
loc_DEF0:
		cmp.w   $FFFFFFFC(A2), D4
		bls.s   loc_DEEE
		move.w  A2, ($FFFFF718).w
		rts
;===============================================================================
; Rotina para carregar o pocicionamento dos an is nas fases
; [ End ]
;===============================================================================

;===============================================================================
; Rotinas para responder ao toque dos an is pelo jogador
; [ Begin ]
;===============================================================================
TouchRings:                                                    ; loc_DEFC
		move.w  ($FFFFF712).w, A1
		move.w  ($FFFFF714).w, A2
		cmpa.w  #Player_One, A0                                  ; $B000
		beq.s   loc_DF12
		move.w  ($FFFFF716).w, A1
		move.w  ($FFFFF718).w, A2
loc_DF12:
		cmpa.l  A1, A2
		beq     loc_DFAA
		cmpi.w  #$005A, Obj_P_Invunerblt_Time(A0)                ; $0030
		bcc     loc_DFAA
		move.w  Obj_X(A0), D2                                    ; $0008
		move.w  Obj_Y(A0), D3                                    ; $000C
		subi.w  #$0008, D2
		moveq   #$00, D5
		move.b  Obj_Height_2(A0), D5                             ; $0016
		subq.b  #$03, D5
		sub.w   D5, D3
		cmpi.b  #$4D, Obj_Map_Id(A0)                             ; $001A
		bne.s   Touch_Rings_NoDuck                     ; loc_DF46
		addi.w  #$000C, D3
		moveq   #$0A, D5
Touch_Rings_NoDuck:                                            ; loc_DF46
		move.w  #$0006, D1
		move.w  #$000C, D6
		move.w  #$0010, D4
		add.w   D5, D5
loc_DF54:
		tst.w   (A1)
		bne     loc_DFA0
		move.w  $0002(A1), D0
		sub.w   D1, D0
		sub.w   D2, D0
		bcc.s   loc_DF6C
		add.w   D6, D0
		bcs.s   loc_DF72
		bra     loc_DFA0
loc_DF6C:
		cmp.w   D4, D0
		bhi     loc_DFA0
loc_DF72:
		move.w  $0004(A1), D0
		sub.w   D1, D0
		sub.w   D3, D0
		bcc.s   loc_DF84
		add.w   D6, D0
		bcs.s   loc_DF8A
		bra     loc_DFA0
loc_DF84:
		cmp.w   D5, D0
		bhi     loc_DFA0
loc_DF8A:
		move.w  #$0604, (A1)
		bsr     Add_Rings                              ; loc_AB92
		lea     ($FFFFEF82).w, A3
loc_DF96:
		tst.w   (A3)+
		bne.s   loc_DF96
		move.w  A1, -(A3)
		addq.w  #$01, ($FFFFEF80).w
loc_DFA0:
		lea     $0006(A1), A1
		cmpa.l  A1, A2
		bne     loc_DF54
loc_DFAA:
		rts
;===============================================================================
; Rotinas para responder ao toque dos an is pelo jogador
; [ End ]
;===============================================================================

;===============================================================================
; Rotinas para mostrar os an is de acordo com a localiza  o do jogador na fase
; [ Begin ]
;===============================================================================
Build_Rings:                                                   ; loc_DFAC
		move.w  ($FFFFF712).w, A0
		move.w  ($FFFFF714).w, A4
		cmpa.l  A0, A4
		bne.s   loc_DFBA
		rts
loc_DFBA:
		lea     (Camera_X).w, A3                             ; $FFFFEE00
loc_DFBE:
		tst.w   (A0)
		bmi     loc_E020
		move.w  $0002(A0), D3
		sub.w   (A3), D3
		addi.w  #$0080, D3
		move.w  $0004(A0), D2
		sub.w   $0004(A3), D2
		andi.w  #$07FF, D2
		addi.w  #$0008, D2
		bmi.s   loc_E020
		cmpi.w  #$00F0, D2
		bge.s   loc_E020
		addi.w  #$0078, D2
		lea     (Level_Rings_Mappings), A1             ; loc_E198
		moveq   #$00, D1
		move.b  $0001(A0), D1
		bne.s   loc_DFFC
		move.b  (Object_Frame_Buffer+$0003).w, D1            ; $FFFFFEA3
loc_DFFC:
		add.w   D1, D1
		adda.w  $00(A1, D1), A1
		move.b  (A1)+, D0
		ext.w   D0
		add.w   D2, D0
		move.w  D0, (A2)+
		move.b  (A1)+, (A2)+
		addq.b  #$01, D5
		move.b  D5, (A2)+
		move.w  (A1)+, D0
		addi.w  #$26BC, D0
		move.w  D0, (A2)+
		addq.w  #$02, A1
		move.w  (A1)+, D0
		add.w   D3, D0
		move.w  D0, (A2)+
loc_E020:
		lea     $0006(A0), A0
		cmpa.l  A0, A4
		bne     loc_DFBE
		rts
;-------------------------------------------------------------------------------
Build_Rings_2P:                                                ; loc_E02C
		lea     (Camera_X).w, A3                             ; $FFFFEE00
		move.w  #$0078, D6
		move.w  ($FFFFF712).w, A0
		move.w  ($FFFFF714).w, A4
		cmpa.l  A0, A4
		bne.s   loc_E058
		rts
;-------------------------------------------------------------------------------
Build_Rings_2P_Tails:                                          ; loc_E042
		lea     (Camera_X_2).w, A3                           ; $FFFFEE20
		move.w  #$0158, D6
		move.w  ($FFFFF716).w, A0
		move.w  ($FFFFF718).w, A4
		cmpa.l  A0, A4
		bne.s   loc_E058
		rts
loc_E058:
		tst.w   (A0)
		bmi     loc_E0BC
		move.w  $0002(A0), D3
		sub.w   (A3), D3
		addi.w  #$0080, D3
		move.w  $0004(A0), D2
		sub.w   $0004(A3), D2
		andi.w  #$07FF, D2
		addi.w  #$0088, D2
		bmi.s   loc_E0BC
		cmpi.w  #$0170, D2
		bge.s   loc_E0BC
		add.w   D6, D2
		lea     (Level_Rings_Mappings), A1             ; loc_E198
		moveq   #$00, D1
		move.b  $0001(A0), D1
		bne.s   loc_E094
		move.b  (Object_Frame_Buffer+$0003).w, D1            ; $FFFFFEA3
loc_E094:
		add.w   D1, D1
		adda.w  $00(A1, D1), A1
		move.b  (A1)+, D0
		ext.w   D0
		add.w   D2, D0
		move.w  D0, (A2)+
		move.b  (A1)+, D4
		move.b  loc_E0C8(PC, D4), (A2)+
		addq.b  #$01, D5
		move.b  D5, (A2)+
		addq.w  #$02, A1
		move.w  (A1)+, D0
		addi.w  #$235E, D0
		move.w  D0, (A2)+
		move.w  (A1)+, D0
		add.w   D3, D0
		move.w  D0, (A2)+
loc_E0BC:
		lea     $0006(A0), A0
		cmpa.l  A0, A4
		bne     loc_E058
		rts
;-------------------------------------------------------------------------------
loc_E0C8:
		dc.b    $00, $00, $01, $01, $04, $04, $05, $05
		dc.b    $08, $08, $09, $09, $0C, $0C, $0D, $0D
;===============================================================================
; Rotinas para mostrar os an is de acordo com a localiza  o do jogador na fase
; [ End ]
;===============================================================================

;===============================================================================
; Rotina para carregar os an is das fases
; [ Begin ]
;===============================================================================
Load_Rings_Layout:                                             ; loc_E0D8
		lea     ($FFFFE800).w, A1
		moveq   #$00, D0
		move.w  #$017F, D1
loc_E0E2:
		move.l  D0, (A1)+
		dbra    D1, loc_E0E2
		lea     ($FFFFEF80).w, A1
		move.w  #$000F, D1
loc_E0F0:
		move.l  D0, (A1)+
		dbra    D1, loc_E0F0
		moveq   #$00, D5
		moveq   #$00, D0
		move.w  (Level_Id).w, D0                             ; $FFFFFE10
		ror.b   #$01, D0
		lsr.w   #$06, D0
		lea     (Rings_Layout), A1                     ; loc_E8000
		move.w  $00(A1, D0), D0
		lea     $00(A1, D0), A1
		lea     ($FFFFE806).w, A2
loc_E114:
		move.w  (A1)+, D2
		bmi.s   loc_E15C
		move.w  (A1)+, D3
		bmi.s   loc_E13C
		move.w  D3, D0
		rol.w   #$04, D0
		andi.w  #$0007, D0
		andi.w  #$0FFF, D3
loc_E128:
		move.w  #$0000, (A2)+
		move.w  D2, (A2)+
		move.w  D3, (A2)+
		addi.w  #$0018, D2
		addq.w  #$01, D5
		dbra    D0, loc_E128
		bra.s   loc_E114
loc_E13C:
		move.w  D3, D0
		rol.w   #$04, D0
		andi.w  #$0007, D0
		andi.w  #$0FFF, D3
loc_E148:
		move.w  #$0000, (A2)+
		move.w  D2, (A2)+
		move.w  D3, (A2)+
		addi.w  #$0018, D3
		addq.w  #$01, D5
		dbra    D0, loc_E148
		bra.s   loc_E114
loc_E15C:
		move.w  D5, ($FFFFFF40).w
		moveq   #-$01, D0
		move.l  D0, (A2)+
		lea     ($FFFFE802).w, A1
		move.w  #$00FE, D3
loc_E16C:
		move.w  D3, D4
		lea     $0006(A1), A2
		move.w  (A1), D0
loc_E174:
		tst.w   (A2)
		beq.s   loc_E186
		cmp.w   (A2), D0
		bls.s   loc_E186
		move.l  (A1), D1
		move.l  (A2), D0
		move.l  D0, (A1)
		move.l  D1, (A2)
		swap.w  D0
loc_E186:
		lea     $0006(A2), A2
		dbra    D4, loc_E174
		lea     $0006(A1), A1
		dbra    D3, loc_E16C
		rts
;===============================================================================
; Rotina para carregar os an is das fases
; [ End ]
;===============================================================================

;===============================================================================
; Mapeamento dos an is
; [ Begin ]
;===============================================================================
Level_Rings_Mappings:                                          ; loc_E198
		dc.w    loc_E1A8-Level_Rings_Mappings
		dc.w    loc_E1B0-Level_Rings_Mappings
		dc.w    loc_E1B8-Level_Rings_Mappings
		dc.w    loc_E1C0-Level_Rings_Mappings
		dc.w    loc_E1C8-Level_Rings_Mappings
		dc.w    loc_E1D0-Level_Rings_Mappings
		dc.w    loc_E1D8-Level_Rings_Mappings
		dc.w    loc_E1E0-Level_Rings_Mappings
loc_E1A8:
		dc.l    $F8050000, $0000FFF8
loc_E1B0:
		dc.l    $F8050004, $0002FFF8
loc_E1B8:
		dc.l    $F8010008, $0004FFFC
loc_E1C0:
		dc.l    $F8050804, $0802FFF8
loc_E1C8:
		dc.l    $F805000A, $0005FFF8
loc_E1D0:
		dc.l    $F805180A, $1805FFF8
loc_E1D8:
		dc.l    $F805080A, $0805FFF8
loc_E1E0:
		dc.l    $F805100A, $1005FFF8
;===============================================================================
; Mapeamento dos an is
; [ End ]
;===============================================================================

;===============================================================================
; Rotina para carregar o posicionamento dos Objects nas fases
; [ Begin ]
;===============================================================================
Load_Object_Pos:                                               ; loc_E1E8
		moveq   #$00, D0
		move.b  ($FFFFF76C).w, D0
		move.w  loc_E1F6(PC, D0), D0
		jmp     loc_E1F6(PC, D0)
;-------------------------------------------------------------------------------
loc_E1F6:
		dc.w    loc_E1FC-loc_E1F6
		dc.w    Load_Object_Pos_1P_Mode-loc_E1F6 ; loc_E2A8
		dc.w    Load_Object_Pos_2P_Mode-loc_E1F6 ; loc_E3F0
;-------------------------------------------------------------------------------
loc_E1FC:
		addq.b  #$02, ($FFFFF76C).w
		move.w  (Level_Id).w, D0                             ; $FFFFFE10
		ror.b   #$01, D0
		lsr.w   #$06, D0
		lea     (Objects_Layout), A0                   ; loc_4C000
		move.l  A0, A1
		adda.w  $00(A0, D0), A0
		move.l  A0, ($FFFFF770).w
		move.l  A0, ($FFFFF774).w
		move.l  A0, ($FFFFF778).w
		move.l  A0, ($FFFFF77C).w
		lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
		move.w  #$0101, (A2)+
		move.w  #$005E, D0
loc_E230:
		clr.l   (A2)+
		dbra    D0, loc_E230
		lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
		moveq   #$00, D2
		move.w  (Camera_X).w, D6                             ; $FFFFEE00
		subi.w  #$0080, D6
		bcc.s   loc_E248
		moveq   #$00, D6
loc_E248:
		andi.w  #$FF80, D6
		move.l  ($FFFFF770).w, A0
loc_E250:
		cmp.w   (A0), D6
		bls.s   loc_E262
		tst.b   $0002(A0)
		bpl.s   loc_E25E
		move.b  (A2), D2
		addq.b  #$01, (A2)
loc_E25E:
		addq.w  #$06, A0
		bra.s   loc_E250
loc_E262:
		move.l  A0, ($FFFFF770).w
		move.l  A0, ($FFFFF778).w
		move.l  ($FFFFF774).w, A0
		subi.w  #$0080, D6
		bcs.s   loc_E286
loc_E274:
		cmp.w   (A0), D6
		bls.s   loc_E286
		tst.b   $0002(A0)
		bpl.s   loc_E282
		addq.b  #$01, $0001(A2)
loc_E282:
		addq.w  #$06, A0
		bra.s   loc_E274
loc_E286:
		move.l  A0, ($FFFFF774).w
		move.l  A0, ($FFFFF77C).w
		move.w  #$FFFF, ($FFFFF76E).w
		move.w  #$FFFF, ($FFFFF78C).w
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   Load_Object_Pos_1P_Mode                ; loc_E2A8
		addq.b  #$02, ($FFFFF76C).w
		bra     Load_Object_Pos_2P_Mode_Init           ; loc_E374
;-------------------------------------------------------------------------------
Load_Object_Pos_1P_Mode:                                       ; loc_E2A8
		move.w  (Camera_X).w, D1                             ; $FFFFEE00
		subi.w  #$0080, D1
		andi.w  #$FF80, D1
		move.w  D1, (Camera_X_pos_coarse).w                  ; $FFFFF7DA
		lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
		moveq   #$00, D2
		move.w  (Camera_X).w, D6                             ; $FFFFEE00
		andi.w  #$FF80, D6
		cmp.w   ($FFFFF76E).w, D6
		beq     loc_E372
		bge.s   loc_E32E
		move.w  D6, ($FFFFF76E).w
		move.l  ($FFFFF774).w, A0
		subi.w  #$0080, D6
		bcs.s   loc_E30A
loc_E2DE:
		cmp.w   $FFFFFFFA(A0), D6
		bge.s   loc_E30A
		subq.w  #$06, A0
		tst.b   $0002(A0)
		bpl.s   loc_E2F4
		subq.b  #$01, $0001(A2)
		move.b  $0001(A2), D2
loc_E2F4:
		bsr     loc_E65A
		bne.s   loc_E2FE
		subq.w  #$06, A0
		bra.s   loc_E2DE
loc_E2FE:
		tst.b   $0002(A0)
		bpl.s   loc_E308
		addq.b  #$01, $0001(A2)
loc_E308:
		addq.w  #$06, A0
loc_E30A:
		move.l  A0, ($FFFFF774).w
		move.l  ($FFFFF770).w, A0
		addi.w  #$0300, D6
loc_E316:
		cmp.w   $FFFFFFFA(A0), D6
		bgt.s   loc_E328
		tst.b   $FFFFFFFC(A0)
		bpl.s   loc_E324
		subq.b  #$01, (A2)
loc_E324:
		subq.w  #$06, A0
		bra.s   loc_E316
loc_E328:
		move.l  A0, ($FFFFF770).w
		rts
loc_E32E:
		move.w  D6, ($FFFFF76E).w
		move.l  ($FFFFF770).w, A0
		addi.w  #$0280, D6
loc_E33A:
		cmp.w   (A0), D6
		bls.s   loc_E34E
		tst.b   $0002(A0)
		bpl.s   loc_E348
		move.b  (A2), D2
		addq.b  #$01, (A2)
loc_E348:
		bsr     loc_E65A
		beq.s   loc_E33A
loc_E34E:
		move.l  A0, ($FFFFF770).w
		move.l  ($FFFFF774).w, A0
		subi.w  #$0300, D6
		bcs.s   loc_E36E
loc_E35C:
		cmp.w   (A0), D6
		bls.s   loc_E36E
		tst.b   $0002(A0)
		bpl.s   loc_E36A
		addq.b  #$01, $0001(A2)
loc_E36A:
		addq.w  #$06, A0
		bra.s   loc_E35C
loc_E36E:
		move.l  A0, ($FFFFF774).w
loc_E372:
		rts
;-------------------------------------------------------------------------------
Load_Object_Pos_2P_Mode_Init:                                  ; loc_E374
		moveq   #-$01, D0
		move.l  D0, ($FFFFF780).w
		move.l  D0, ($FFFFF784).w
		move.l  D0, ($FFFFF788).w
		move.l  D0, ($FFFFF78C).w
		move.w  #$0000, ($FFFFF76E).w
		move.w  #$0000, ($FFFFF78C).w
		lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
		move.w  (A2), ($FFFFF78E).w
		moveq   #$00, D2
		lea     (Obj_respawn_index).w, A5                    ; $FFFFFC00
		lea     ($FFFFF770).w, A4
		lea     ($FFFFF786).w, A1
		lea     ($FFFFF789).w, A6
		moveq   #-$02, D6
		bsr     loc_E508
		lea     ($FFFFF786).w, A1
		moveq   #-$01, D6
		bsr     loc_E508
		lea     ($FFFFF786).w, A1
		moveq   #$00, D6
		bsr     loc_E508
		lea     ($FFFFF78E).w, A5
		lea     ($FFFFF778).w, A4
		lea     ($FFFFF789).w, A1
		lea     ($FFFFF786).w, A6
		moveq   #-$02, D6
		bsr     loc_E508
		lea     ($FFFFF789).w, A1
		moveq   #-$01, D6
		bsr     loc_E508
		lea     ($FFFFF789).w, A1
		moveq   #$00, D6
		bsr     loc_E508
;-------------------------------------------------------------------------------
Load_Object_Pos_2P_Mode:                                       ; loc_E3F0
		move.w  (Camera_X).w, D1                             ; $FFFFEE00
		andi.w  #$FF00, D1
		move.w  D1, (Camera_X_pos_coarse).w                  ; $FFFFF7DA
		move.w  (Camera_X_2).w, D1                           ; $FFFFEE20
		andi.w  #$FF00, D1
		move.w  D1, ($FFFFF7DC).w
		move.b  (Camera_X).w, D6                             ; $FFFFEE00
		andi.w  #$00FF, D6
		move.w  ($FFFFF76E).w, D0
		cmp.w   ($FFFFF76E).w, D6
		beq.s   loc_E430
		move.w  D6, ($FFFFF76E).w
		lea     ($FFFFFC00).w, A5
		lea     ($FFFFF770).w, A4
		lea     ($FFFFF786).w, A1
		lea     ($FFFFF789).w, A6
		bsr.s   loc_E45A
loc_E430:
		move.b  (Camera_X_2).w, D6                           ; $FFFFEE20
		andi.w  #$00FF, D6
		move.w  ($FFFFF78C).w, D0
		cmp.w   ($FFFFF78C).w, D6
		beq.s   loc_E458
		move.w  D6, ($FFFFF78C).w
		lea     ($FFFFF78E).w, A5
		lea     ($FFFFF778).w, A4
		lea     ($FFFFF789).w, A1
		lea     ($FFFFF786).w, A6
		bsr.s   loc_E45A
loc_E458:
		rts
loc_E45A:
		lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
		moveq   #$00, D2
		cmp.w   D0, D6
		beq     loc_E372
		bge     loc_E508
		move.b  $0002(A1), D2
		move.b  $0001(A1), $0002(A1)
		move.b  (A1), $0001(A1)
		move.b  D6, (A1)
		cmp.b   (A6), D2
		beq.s   loc_E490
		cmp.b   $0001(A6), D2
		beq.s   loc_E490
		cmp.b   $0002(A6), D2
		beq.s   loc_E490
		bsr     loc_E5EA
		bra.s   loc_E494
loc_E490:
		bsr     loc_E5AE
loc_E494:
		bsr     loc_E58A
		bne.s   loc_E4B8
		move.l  $0004(A4), A0
loc_E49E:
		cmp.b   $FFFFFFFA(A0), D6
		bne.s   loc_E4B2
		tst.b   $FFFFFFFC(A0)
		bpl.s   loc_E4AE
		subq.b  #$01, $0001(A5)
loc_E4AE:
		subq.w  #$06, A0
		bra.s   loc_E49E
loc_E4B2:
		move.l  A0, $0004(A4)
		bra.s   loc_E4EE
loc_E4B8:
		move.l  $0004(A4), A0
		move.b  D6, (A1)
loc_E4BE:
		cmp.b   $FFFFFFFA(A0), D6
		bne.s   loc_E4EA
		subq.w  #$06, A0
		tst.b   $0002(A0)
		bpl.s   loc_E4D4
		subq.b  #$01, $0001(A5)
		move.b  $0001(A5), D2
loc_E4D4:
		bsr     Load_Object_2P                         ; loc_E6A4
		bne.s   loc_E4DE
		subq.w  #$06, A0
		bra.s   loc_E4BE
loc_E4DE:
		tst.b   $0002(A0)
		bpl.s   loc_E4E8
		addq.b  #$01, $0001(A5)
loc_E4E8:
		addq.w  #$06, A0
loc_E4EA:
		move.l  A0, $0004(A4)
loc_E4EE:
		move.l  (A4), A0
		addq.w  #$03, D6
loc_E4F2:
		cmp.b   $FFFFFFFA(A0), D6
		bne.s   loc_E504
		tst.b   $FFFFFFFC(A0)
		bpl.s   loc_E500
		subq.b  #$01, (A5)
loc_E500:
		subq.w  #$06, A0
		bra.s   loc_E4F2
loc_E504:
		move.l  A0, (A4)
		rts
loc_E508:
		addq.w  #$02, D6
		move.b  (A1), D2
		move.b  $0001(A1), (A1)
		move.b  $0002(A1), $0001(A1)
		move.b  D6, $0002(A1)
		cmp.b   (A6), D2
		beq.s   loc_E530
		cmp.b   $0001(A6), D2
		beq.s   loc_E530
		cmp.b   $0002(A6), D2
		beq.s   loc_E530
		bsr     loc_E5EA
		bra.s   loc_E534
loc_E530:
		bsr     loc_E5AE
loc_E534:
		bsr     loc_E58A
		bne.s   loc_E550
		move.l  (A4), A0
loc_E53C:
		cmp.b   (A0), D6
		bne.s   loc_E54C
		tst.b   $0002(A0)
		bpl.s   loc_E548
		addq.b  #$01, (A5)
loc_E548:
		addq.w  #$06, A0
		bra.s   loc_E53C
loc_E54C:
		move.l  A0, (A4)
		bra.s   loc_E56A
loc_E550:
		move.l  (A4), A0
		move.b  D6, (A1)
loc_E554:
		cmp.b   (A0), D6
		bne.s   loc_E568
		tst.b   $0002(A0)
		bpl.s   loc_E562
		move.b  (A5), D2
		addq.b  #$01, (A5)
loc_E562:
		bsr     Load_Object_2P                         ; loc_E6A4
		beq.s   loc_E554
loc_E568:
		move.l  A0, (A4)
loc_E56A:
		move.l  $0004(A4), A0
		subq.w  #$03, D6
		bcs.s   loc_E584
loc_E572:
		cmp.b   (A0), D6
		bne.s   loc_E584
		tst.b   $0002(A0)
		bpl.s   loc_E580
		addq.b  #$01, $0001(A5)
loc_E580:
		addq.w  #$06, A0
		bra.s   loc_E572
loc_E584:
		move.l  A0, $0004(A4)
		rts
loc_E58A:
		move.l  A1, -(A7)
		lea     ($FFFFF780).w, A1
		cmp.b   (A1)+, D6
		beq.s   loc_E5AA
		cmp.b   (A1)+, D6
		beq.s   loc_E5AA
		cmp.b   (A1)+, D6
		beq.s   loc_E5AA
		cmp.b   (A1)+, D6
		beq.s   loc_E5AA
		cmp.b   (A1)+, D6
		beq.s   loc_E5AA
		cmp.b   (A1)+, D6
		beq.s   loc_E5AA
		moveq   #$01, D0
loc_E5AA:
		move.l  (A7)+, A1
		rts
loc_E5AE:
		lea     ($FFFFF780).w, A1
		lea     (Obj_Start_Addr_2P).w, A3                    ; $FFFFBE00
		tst.b   (A1)+
		bmi.s   loc_E5E6
		lea     (Obj_Page_01_2P_Addr).w, A3                  ; $FFFFC100
		tst.b   (A1)+
		bmi.s   loc_E5E6
		lea     (Obj_Page_02_2P_Addr).w, A3                  ; $FFFFC400
		tst.b   (A1)+
		bmi.s   loc_E5E6
		lea     (Obj_Page_03_2P_Addr).w, A3                  ; $FFFFC700
		tst.b   (A1)+
		bmi.s   loc_E5E6
		lea     (Obj_Page_04_2P_Addr).w, A3                  ; $FFFFCA00
		tst.b   (A1)+
		bmi.s   loc_E5E6
		lea     (Obj_Page_05_2P_Addr).w, A3                  ; $FFFFCD00
		tst.b   (A1)+
		bmi.s   loc_E5E6
		nop
		nop
loc_E5E6:
		subq.w  #$01, A1
		rts
loc_E5EA:
		lea     ($FFFFF780).w, A1
		lea     (Obj_Start_Addr_2P).w, A3                    ; $FFFFBE00
		cmp.b   (A1)+, D2
		beq.s   loc_E622
		lea     (Obj_Page_01_2P_Addr).w, A3                  ; $FFFFC100
		cmp.b   (A1)+, D2
		beq.s   loc_E622
		lea     (Obj_Page_02_2P_Addr).w, A3                  ; $FFFFC400
		cmp.b   (A1)+, D2
		beq.s   loc_E622
		lea     (Obj_Page_03_2P_Addr).w, A3                  ; $FFFFC700
		cmp.b   (A1)+, D2
		beq.s   loc_E622
		lea     (Obj_Page_04_2P_Addr).w, A3                  ; $FFFFCA00
		cmp.b   (A1)+, D2
		beq.s   loc_E622
		lea     (Obj_Page_05_2P_Addr).w, A3                  ; $FFFFCD00
		cmp.b   (A1)+, D2
		beq.s   loc_E622
		nop
		nop
loc_E622:
		move.b  #$FF, -(A1)
		movem.l A1/A3, -(A7)
		moveq   #$00, D1
		moveq   #Obj_Page_Size_2P-$01, D2                          ; $0B
loc_E62E:
		tst.b   (A3)
		beq.s   loc_E64A
		move.l  A3, A1
		moveq   #$00, D0
		move.b  Obj_Respaw_Ref(A1), D0                           ; $0023
		beq.s   DeleteObject_2P                        ; loc_E642
		bclr    #$07, $02(A2, D0)
;-------------------------------------------------------------------------------
;  Rotina para liberar a mem ria utilizada pelo Object em A1 no modo 2 jogadores
; [ Begin ]
;-------------------------------------------------------------------------------
DeleteObject_2P:                                               ; loc_E642
		moveq   #$0F, D0
loc_E644:
		move.l  D1, (A1)+
		dbra    D0, loc_E644
;-------------------------------------------------------------------------------
;  Rotina para liberar a mem ria utilizada pelo Object em A1 no modo 2 jogadores
; [ End ]
;-------------------------------------------------------------------------------
loc_E64A:
		lea     Obj_Size(A3), A3                                 ; $0040
		dbra    D2, loc_E62E
		moveq   #$00, D2
		movem.l (A7)+, A1/A3
		rts
loc_E65A:
		tst.b   $0002(A0)
		bpl.s   loc_E66E
		bset    #$07, $02(A2, D2)
		beq.s   loc_E66E
		addq.w  #$06, A0
		moveq   #$00, D0
		rts
loc_E66E:
		bsr     SingleObjectLoad                       ; loc_E6FE
		bne.s   loc_E6A2
		move.w  (A0)+, Obj_X(A1)                                 ; $0008
		move.w  (A0)+, D0
		bpl.s   loc_E680
		move.b  D2, Obj_Respaw_Ref(A1)                           ; $0023
loc_E680:
		move.w  D0, D1
		andi.w  #$0FFF, D0
		move.w  D0, Obj_Y(A1)                                    ; $000C
		rol.w   #$03, D1
		andi.b  #$03, D1
		move.b  D1, Obj_Flags(A1)                                ; $0001
		move.b  D1, Obj_Status(A1)                               ; $0022
		move.b  (A0)+, Obj_Id(A1)                                ; $0000
		move.b  (A0)+, Obj_Subtype(A1)                           ; $0028
		moveq   #$00, D0
loc_E6A2:
		rts
;-------------------------------------------------------------------------------
Load_Object_2P:                                                ; loc_E6A4
		tst.b   $0002(A0)
		bpl.s   loc_E6B8
		bset    #$07, $02(A2, D2)
		beq.s   loc_E6B8
		addq.w  #$06, A0
		moveq   #$00, D0
		rts
loc_E6B8:
		btst    #$05, $0002(A0)
		beq.s   loc_E6C8
		bsr     SingleObjectLoad                       ; loc_E6FE
		bne.s   loc_E6FC
		bra.s   loc_E6CE
loc_E6C8:
		bsr     Load_Object_List                       ; loc_E730
		bne.s   loc_E6FC
loc_E6CE:
		move.w  (A0)+, Obj_X(A1)                                 ; $0008
		move.w  (A0)+, D0
		bpl.s   loc_E6DA
		move.b  D2, $0023(A1)
loc_E6DA:
		move.w  D0, D1
		andi.w  #$0FFF, D0
		move.w  D0, $000C(A1)
		rol.w   #$03, D1
		andi.b  #$03, D1
		move.b  D1, Obj_Flags(A1)                                ; $0001
		move.b  D1, Obj_Status(A1)                               ; $0022
		move.b  (A0)+, Obj_Id(A1)                                ; $0000
		move.b  (A0)+, Obj_Subtype(A1)                           ; $0028
		moveq   #$00, D0
loc_E6FC:
		rts
;-------------------------------------------------------------------------------
; Rotina para carregar um Object a partir do endereco $FFFFB800
; [ Begin ]
;-------------------------------------------------------------------------------
SingleObjectLoad:                                              ; loc_E6FE
		lea     ($FFFFB800).w, A1
		move.w  #$005F, D0
Loop_Find_Free_Ram:                                            ; loc_E706
		tst.b   (A1)
		beq.s   Exit_SingleObjectLoad                  ; loc_E712
		lea     Obj_Size(A1), A1                                 ; $0040
		dbra    D0, Loop_Find_Free_Ram                 ; loc_E706
Exit_SingleObjectLoad:                                         ; loc_E712
		rts
;-------------------------------------------------------------------------------
; Rotina para carregar um Object a partir do endereco $FFFFB800
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Rotina para carregar um Object a partir do endereco $FFFFD000
; [ Begin ]
;-------------------------------------------------------------------------------
SingleObjectLoad_2:                                            ; loc_E714
		move.l  A0, A1
		move.w  #$D000, D0
		sub.w   A0, D0
		lsr.w   #$06, D0
		subq.w  #$01, D0
		bcs.s   Exit_SingleObjectLoad_2                ; loc_E72E
Loop_Find_Free_Ram_2:                                          ; loc_E722
		tst.b   (A1)
		beq.s   Exit_SingleObjectLoad_2                ; loc_E72E
		lea     Obj_Size(A1), A1                                 ; $0040
		dbra    D0, Loop_Find_Free_Ram_2               ; loc_E722
Exit_SingleObjectLoad_2:                                       ; loc_E72E
		rts
;-------------------------------------------------------------------------------
; Rotina para carregar um Object a partir do endereco $FFFFD000
; [ End ]
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Rotina para carregar a lista de Objects na mem ria
; [ Begin ]
;-------------------------------------------------------------------------------
Load_Object_List:                                              ; loc_E730
		move.l  A3, A1
		move.w  #$000B, D0
Loop_Find_Free_Ram_3:                                          ; loc_E736
		tst.b   (A1)
		beq.s   Exit_Load_Object_List                  ; loc_E742
		lea     Obj_Size(A1), A1                                 ; $0040
		dbra    D0, Loop_Find_Free_Ram_3               ; loc_E736
Exit_Load_Object_List:                                         ; loc_E742
		rts
;-------------------------------------------------------------------------------
; Rotina para carregar a lista de Objects na mem ria
; [ End ]
;-------------------------------------------------------------------------------
Obj41_Springs:                                              ; loc_E744
;===============================================================================
; Object 0x41 - Yellow / Red Springs - Diagonal / Horizontal / Vertical
; [ Begin ]
;===============================================================================    
; loc_E744:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_E774(PC, D0), D1
                jsr     loc_E774(PC, D1)
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                beq.s   loc_E75C
                bra     DisplaySprite                          ; loc_D322
loc_E75C:
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322  
;-------------------------------------------------------------------------------
loc_E774:
                dc.w    loc_E780-loc_E774
                dc.w    loc_E858-loc_E774
                dc.w    loc_E94A-loc_E774
                dc.w    loc_EB5C-loc_E774
                dc.w    loc_EC48-loc_E774
                dc.w    loc_ED7E-loc_E774        
;-------------------------------------------------------------------------------
loc_E780:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Springs_Mappings, Obj_Map(A0)  ; loc_EEFC, $0004
                move.w  #$045C, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                move.w  loc_E7B6(PC, D0), D0
                jmp     loc_E7B6(PC, D0)      
;-------------------------------------------------------------------------------
loc_E7B6:
                dc.w    loc_E82C-loc_E7B6
                dc.w    loc_E7C0-loc_E7B6
                dc.w    loc_E7E0-loc_E7B6
                dc.w    loc_E7F4-loc_E7B6
                dc.w    loc_E80E-loc_E7B6      
;-------------------------------------------------------------------------------
loc_E7C0:
                move.b  #$04, Obj_Routine(A0)                            ; $0024
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$03, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0470, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$08, Obj_Width(A0)                              ; $0019
                bra.s   loc_E82C   
;-------------------------------------------------------------------------------
loc_E7E0:
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                move.b  #$06, Obj_Map_Id(A0)                             ; $001A
                bset    #$01, Obj_Status(A0)                             ; $0022
                bra.s   loc_E82C      
;-------------------------------------------------------------------------------
loc_E7F4:
                move.b  #$08, Obj_Routine(A0)                            ; $0024
                move.b  #$04, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$07, Obj_Map_Id(A0)                             ; $001A
                move.w  #$043C, Obj_Art_VRAM(A0)                         ; $0002
                bra.s   loc_E82C  
;-------------------------------------------------------------------------------
loc_E80E:
                move.b  #$0A, Obj_Routine(A0)                            ; $0024
                move.b  #$04, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$0A, Obj_Map_Id(A0)                             ; $001A
                move.w  #$043C, Obj_Art_VRAM(A0)                         ; $0002
                bset    #$01, Obj_Status(A0)                             ; $0022
;-------------------------------------------------------------------------------
loc_E82C:
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$0002, D0
                move.w  loc_E854(PC, D0), Obj_Control_Var_04(A0)  ; $0030
                btst    #$01, D0
                beq.s   loc_E84E
                bset    #$05, Obj_Art_VRAM(A0)                           ; $0002
                move.l  #Springs_Mappings_01, Obj_Map(A0) ; loc_EF12, $0004
loc_E84E:
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                rts       
;-------------------------------------------------------------------------------  
loc_E854:
                dc.w    $F000, $F600
;-------------------------------------------------------------------------------
loc_E858:
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0010, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     SolidObject_2_A1                       ; loc_F3B4
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_E880
                bsr.s   loc_E8A4
loc_E880:
                movem.l (A7)+, D1-D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                bsr     SolidObject_2_A1                       ; loc_F3B4
                btst    #$04, Obj_Status(A0)                             ; $0022
                beq.s   loc_E898
                bsr.s   loc_E8A4
loc_E898:
                lea     (Springs_Animate_Data), A1             ; loc_EEC2
                bra     AnimateSprite                          ; loc_D372 
;-------------------------------------------------------------------------------
; loc_E8A2:
                rts 
;-------------------------------------------------------------------------------
loc_E8A4:
                move.w  #$0100, Obj_Ani_Number(A0)                       ; $001C
                addq.w  #$08, Obj_Y(A1)                                  ; $000C
                move.w  Obj_Control_Var_04(A0), Obj_Speed_Y(A1)   ; $0012, $0030
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$10, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_E8D8
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
loc_E8D8:
                btst    #$00, D0
                beq.s   loc_E918
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$00, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$04, Obj_Control_Var_01(A1)                     ; $002D
                btst    #$01, D0
                bne.s   loc_E908
                move.b  #$01, Obj_Control_Var_00(A1)                     ; $002C
loc_E908:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_E918
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_E918:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_E92E
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
loc_E92E:
                cmpi.b  #$08, D0
                bne.s   loc_E940
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_E940:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512
;-------------------------------------------------------------------------------                
loc_E94A:
                move.w  #$0013, D1
                move.w  #$000E, D2
                move.w  #$000F, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     (Obj_Memory_Address).w, A1                   ; $FFFFB000
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     SolidObject_2_A1                       ; loc_F3B4
                btst    #$05, Obj_Status(A0)                             ; $0022
                beq.s   loc_E98A
                move.b  Obj_Status(A0), D1                               ; $0022
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcs.s   loc_E982
                eori.b  #$01, D1
loc_E982:
                andi.b  #$01, D1
                bne.s   loc_E98A
                bsr.s   loc_E9CA
loc_E98A:
                movem.l (A7)+, D1-D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                bsr     SolidObject_2_A1                       ; loc_F3B4
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_E9BA
                move.b  Obj_Status(A0), D1                               ; $0022
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcs.s   loc_E9B2
                eori.b  #$01, D1
loc_E9B2:
                andi.b  #$01, D1
                bne.s   loc_E9BA
                bsr.s   loc_E9CA
loc_E9BA:
                bsr     loc_EAA2
                lea     (Springs_Animate_Data), A1             ; loc_EEC2
                bra     AnimateSprite                          ; loc_D372
;-------------------------------------------------------------------------------
; loc_E9C8:
                rts   
;-------------------------------------------------------------------------------
loc_E9CA:
                move.w  #$0300, Obj_Ani_Number(A0)                       ; $001C
                move.w  Obj_Control_Var_04(A0), Obj_Speed(A1)     ; $0010, $0030
                addq.w  #$08, Obj_X(A1)                                  ; $0008
                bset    #$00, Obj_Status(A1)                             ; $0022
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_E9F8
                bclr    #$00, Obj_Status(A1)                             ; $0022
                subi.w  #$0010, Obj_X(A1)                                ; $0008
                neg.w   Obj_Speed(A1)                                    ; $0010
loc_E9F8:
                move.w  #$000F, Obj_Control_Var_02(A1)                   ; $002E
                move.w  Obj_Speed(A1), Obj_Inertia(A1)            ; $0010, $0014
                btst    #$02, Obj_Status(A1)                             ; $0022
                bne.s   loc_EA12
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
loc_EA12:
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_EA1E
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
loc_EA1E:
                btst    #$00, D0
                beq.s   loc_EA5E
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$01, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$08, Obj_Control_Var_01(A1)                     ; $002D
                btst    #$01, D0
                bne.s   loc_EA4E
                move.b  #$03, Obj_Control_Var_00(A1)                     ; $002C
loc_EA4E:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_EA5E
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_EA5E:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_EA74
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
loc_EA74:
                cmpi.b  #$08, D0
                bne.s   loc_EA86
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_EA86:
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$06, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512
loc_EAA2:
                cmpi.b  #$03, Obj_Ani_Number(A0)                         ; $001C
                beq     loc_EB5A
                move.w  Obj_X(A0), D0                                    ; $0008
                move.w  D0, D1
                addi.w  #$0028, D1
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_EAC4
                move.w  D0, D1
                subi.w  #$0028, D0
loc_EAC4:
                move.w  Obj_Y(A0), D2                                    ; $000C
                move.w  D2, D3
                subi.w  #$0018, D2
                addi.w  #$0018, D3
                lea     (Player_One).w, A1                           ; $FFFFB000
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne.s   loc_EB18
                move.w  Obj_Inertia(A1), D4                              ; $0014
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_EAEC
                neg.w   D4
loc_EAEC:
                tst.w   D4
                bmi.s   loc_EB18
                move.w  Obj_X(A1), D4                                    ; $0008
                cmp.w   D0, D4
                bcs     loc_EB18
                cmp.w   D1, D4
                bcc     loc_EB18
                move.w  Obj_Y(A1), D4                                    ; $000C
                cmp.w   D2, D4
                bcs     loc_EB18
                cmp.w   D3, D4
                bcc     loc_EB18
                move.w  D0, -(A7)
                bsr     loc_E9CA
                move.w  (A7)+, D0
loc_EB18:
                lea     (Player_Two).w, A1                           ; $FFFFB040
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne.s   loc_EB5A
                move.w  Obj_Inertia(A1), D4                              ; $0014
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_EB32
                neg.w   D4
loc_EB32:
                tst.w   D4
                bmi.s   loc_EB5A
                move.w  Obj_X(A1), D4                                    ; $0008
                cmp.w   D0, D4
                bcs     loc_EB5A
                cmp.w   D1, D4
                bcc     loc_EB5A
                move.w  Obj_Y(A1), D4                                    ; $000C
                cmp.w   D2, D4
                bcs     loc_EB5A
                cmp.w   D3, D4
                bcc     loc_EB5A
                bsr     loc_E9CA
loc_EB5A:
                rts
;-------------------------------------------------------------------------------                
loc_EB5C:
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0010, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     SolidObject_2_A1                       ; loc_F3B4
                cmpi.w  #$FFFE, D4
                bne.s   loc_EB82
                bsr.s   loc_EBA4
loc_EB82:
                movem.l (A7)+, D1-D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                bsr     SolidObject_2_A1                       ; loc_F3B4
                cmpi.w  #$FFFE, D4
                bne.s   loc_EB98
                bsr.s   loc_EBA4
loc_EB98:
                lea     (Springs_Animate_Data), A1             ; loc_EEC2
                bra     AnimateSprite                          ; loc_D372      
;-------------------------------------------------------------------------------
; loc_EBA2:
                rts    
;-------------------------------------------------------------------------------
loc_EBA4:
                move.w  #$0100, Obj_Ani_Number(A0)                       ; $001C
                subq.w  #$08, Obj_Y(A1)                                  ; $000C
                move.w  Obj_Control_Var_04(A0), Obj_Speed_Y(A1)   ; $0012, $0030
                neg.w   Obj_Speed_Y(A1)                                  ; $0012
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_EBC4
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
loc_EBC4:
                btst    #$00, D0
                beq.s   loc_EC04
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$00, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$04, Obj_Control_Var_01(A1)                     ; $002D
                btst    #$01, D0
                bne.s   loc_EBF4
                move.b  #$01, Obj_Control_Var_00(A1)                     ; $002C
loc_EBF4:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_EC04
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_EC04:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_EC1A
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
loc_EC1A:
                cmpi.b  #$08, D0
                bne.s   loc_EC2C
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_EC2C:
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512
;-------------------------------------------------------------------------------                
loc_EC48:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     loc_EE8A(PC), A2
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     SolidObject_3_A1                       ; loc_F406
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_EC70
                bsr.s   loc_EC94
loc_EC70:
                movem.l (A7)+, D1-D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                bsr     SolidObject_3_A1                       ; loc_F406
                btst    #$04, Obj_Status(A0)                             ; $0022
                beq.s   loc_EC88
                bsr.s   loc_EC94
loc_EC88:
                lea     (Springs_Animate_Data), A1             ; loc_EEC2
                bra     AnimateSprite                          ; loc_D372    
;-------------------------------------------------------------------------------
; loc_EC92:
                rts                      
;-------------------------------------------------------------------------------
loc_EC94:
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_ECAA
                move.w  Obj_X(A0), D0                                    ; $0008
                subq.w  #$04, D0
                cmp.w   Obj_X(A1), D0                                    ; $0008
                bcs.s   loc_ECB8
                rts
loc_ECAA:
                move.w  Obj_X(A0), D0                                    ; $0008
                addq.w  #$04, D0
                cmp.w   Obj_X(A1), D0                                    ; $0008
                bcc.s   loc_ECB8
                rts
loc_ECB8:
                move.w  #$0500, Obj_Ani_Number(A0)                       ; $001C
                move.w  Obj_Control_Var_04(A0), Obj_Speed_Y(A1)   ; $0012, $0030
                move.w  Obj_Control_Var_04(A0), Obj_Speed(A1)     ; $0010, $0030
                addq.w  #$06, Obj_Y(A1)                                  ; $000C
                addq.w  #$06, Obj_X(A1)                                  ; $0008
                bset    #$00, Obj_Status(A1)                             ; $0022
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_ECF0
                bclr    #$00, Obj_Status(A1)                             ; $0022
                subi.w  #$000C, Obj_X(A1)                                ; $0008
                neg.w   Obj_Speed(A1)                                    ; $0010
loc_ECF0:
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$10, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Subtype(A0), D0                              ; $0028
                btst    #$00, D0
                beq.s   loc_ED4C
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$01, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$08, Obj_Control_Var_01(A1)                     ; $002D
                btst    #$01, D0
                bne.s   loc_ED3C
                move.b  #$03, Obj_Control_Var_00(A1)                     ; $002C
loc_ED3C:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_ED4C
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_ED4C:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_ED62
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
loc_ED62:
                cmpi.b  #$08, D0
                bne.s   loc_ED74
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_ED74:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512
;-------------------------------------------------------------------------------
loc_ED7E:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     loc_EEA6(PC), A2
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     SolidObject_3_A1                       ; loc_F406
                cmpi.w  #$FFFE, D4
                bne.s   loc_EDA4
                bsr.s   loc_EDC6
loc_EDA4:
                movem.l (A7)+, D1-D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                bsr     SolidObject_3_A1                       ; loc_F406
                cmpi.w  #$FFFE, D4
                bne.s   loc_EDBA
                bsr.s   loc_EDC6
loc_EDBA:
                lea     (Springs_Animate_Data), A1             ; loc_EEC2
                bra     AnimateSprite                          ; loc_D372   
;-------------------------------------------------------------------------------
; loc_EDC4:
                rts             
;-------------------------------------------------------------------------------
loc_EDC6:
                move.w  #$0500, Obj_Ani_Number(A0)                       ; $001C
                move.w  Obj_Control_Var_04(A0), Obj_Speed_Y(A1)   ; $0012, $0030
                neg.w   Obj_Speed_Y(A1)                                  ; $0012
                move.w  Obj_Control_Var_04(A0), Obj_Speed(A1)     ; $0010, $0030
                subq.w  #$06, Obj_Y(A1)                                  ; $000C
                addq.w  #$06, Obj_X(A1)                                  ; $0008
                bset    #$00, Obj_Status(A1)                             ; $0022
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_EE02
                bclr    #$00, Obj_Status(A1)                             ; $0022
                subi.w  #$000C, Obj_X(A1)                                ; $0008
                neg.w   Obj_Speed(A1)                                    ; $0010
loc_EE02:
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Subtype(A0), D0                              ; $0028
                btst    #$00, D0
                beq.s   loc_EE58
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$01, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$08, Obj_Control_Var_01(A1)                     ; $002D
                btst    #$01, D0
                bne.s   loc_EE48
                move.b  #$03, Obj_Control_Var_00(A1)                     ; $002C
loc_EE48:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_EE58
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_EE58:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_EE6E
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
loc_EE6E:
                cmpi.b  #$08, D0
                bne.s   loc_EE80
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_EE80:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512  
;-------------------------------------------------------------------------------  
loc_EE8A:
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10
                dc.b    $10, $10, $10, $10, $0E, $0C, $0A, $08
                dc.b    $06, $04, $02, $00, $FE, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC           
;-------------------------------------------------------------------------------
loc_EEA6:
                dc.b    $F4, $F0, $F0, $F0, $F0, $F0, $F0, $F0
                dc.b    $F0, $F0, $F0, $F0, $F2, $F4, $F6, $F8
                dc.b    $FA, $FC, $FE, $00, $02, $04, $04, $04
                dc.b    $04, $04, $04, $04                 
;-------------------------------------------------------------------------------
Springs_Animate_Data:                                          ; loc_EEC2
                dc.w    loc_EECE-Springs_Animate_Data
                dc.w    loc_EED1-Springs_Animate_Data
                dc.w    loc_EEDD-Springs_Animate_Data
                dc.w    loc_EEE0-Springs_Animate_Data
                dc.w    loc_EEEC-Springs_Animate_Data
                dc.w    loc_EEEF-Springs_Animate_Data
loc_EECE:
                dc.b    $0F, $00, $FF
loc_EED1:
                dc.b    $00, $01, $00, $00, $02, $02, $02, $02
                dc.b    $02, $02, $FD, $00
loc_EEDD:
                dc.b    $0F, $03, $FF
loc_EEE0:
                dc.b    $00, $04, $03, $03, $05, $05, $05, $05
                dc.b    $05, $05, $FD, $02
loc_EEEC:
                dc.b    $0F, $07, $FF
loc_EEEF:
                dc.b    $00, $08, $07, $07, $09, $09, $09, $09
                dc.b    $09, $09, $FD, $04, $00                                   
;-------------------------------------------------------------------------------
Springs_Mappings:                                              ; loc_EEFC
                dc.w    loc_EF28-Springs_Mappings
                dc.w    loc_EF3A-Springs_Mappings
                dc.w    loc_EF44-Springs_Mappings
                dc.w    loc_EF56-Springs_Mappings
                dc.w    loc_EF68-Springs_Mappings
                dc.w    loc_EF72-Springs_Mappings
                dc.w    loc_EF84-Springs_Mappings
                dc.w    loc_EF96-Springs_Mappings
                dc.w    loc_EFB8-Springs_Mappings
                dc.w    loc_EFD2-Springs_Mappings
                dc.w    loc_EFF4-Springs_Mappings               
Springs_Mappings_01:                                           ; loc_EF12
                dc.w    loc_EF28-Springs_Mappings_01
                dc.w    loc_EF3A-Springs_Mappings_01
                dc.w    loc_EF44-Springs_Mappings_01
                dc.w    loc_EF56-Springs_Mappings_01
                dc.w    loc_EF68-Springs_Mappings_01
                dc.w    loc_EF72-Springs_Mappings_01
                dc.w    loc_EF84-Springs_Mappings_01
                dc.w    loc_F016-Springs_Mappings_01
                dc.w    loc_F038-Springs_Mappings_01
                dc.w    loc_F052-Springs_Mappings_01
                dc.w    loc_F074-Springs_Mappings_01                
loc_EF28:
                dc.w    $0002
                dc.l    $F00D0000, $0000FFF0
                dc.l    $00050008, $0004FFF8
loc_EF3A:
                dc.w    $0001
                dc.l    $F80D0000, $0000FFF0
loc_EF44:
                dc.w    $0002
                dc.l    $E00D0000, $0000FFF0
                dc.l    $F007000C, $0006FFF8
loc_EF56:
                dc.w    $0002
                dc.l    $F0030000, $00000000
                dc.l    $F8010004, $0002FFF8
loc_EF68:
                dc.w    $0001
                dc.l    $F0030000, $0000FFF8
loc_EF72:
                dc.w    $0002
                dc.l    $F0030000, $00000010
                dc.l    $F8090006, $0003FFF8
loc_EF84:
                dc.w    $0002
                dc.l    $000D1000, $1000FFF0
                dc.l    $F0051008, $1004FFF8
loc_EF96:
                dc.w    $0004
                dc.l    $F00D0000, $0000FFF0
                dc.l    $00050008, $00040000
                dc.l    $FB05000C, $0006FFF6
                dc.l    $0005201C, $200EFFF0
loc_EFB8:
                dc.w    $0003
                dc.l    $F60D0000, $0000FFEA
                dc.l    $06050008, $0004FFFA
                dc.l    $0005201C, $200EFFF0
loc_EFD2:
                dc.w    $0004
                dc.l    $E60D0000, $0000FFFB
                dc.l    $F6050008, $0004000B
                dc.l    $F30B0010, $0008FFF6
                dc.l    $0005201C, $200EFFF0
loc_EFF4:
                dc.w    $0004
                dc.l    $000D1000, $1000FFF0
                dc.l    $F0051008, $10040000
                dc.l    $F505100C, $1006FFF6
                dc.l    $F005301C, $300EFFF0
loc_F016:
                dc.w    $0004
                dc.l    $F00D0000, $0000FFF0
                dc.l    $00050008, $00040000
                dc.l    $FB05000C, $0006FFF6
                dc.l    $0005001C, $000EFFF0
loc_F038:
                dc.w    $0003
                dc.l    $F60D0000, $0000FFEA
                dc.l    $06050008, $0004FFFA
                dc.l    $0005001C, $000EFFF0
loc_F052:
                dc.w    $0004
                dc.l    $E60D0000, $0000FFFB
                dc.l    $F6050008, $0004000B
                dc.l    $F30B0010, $0008FFF6
                dc.l    $0005001C, $000EFFF0
loc_F074:
                dc.w    $0004
                dc.l    $000D1000, $1000FFF0
                dc.l    $F0051008, $10040000
                dc.l    $F505100C, $1006FFF6
                dc.l    $F005101C, $100EFFF0                                                           
;===============================================================================
; Object 0x41 - Yellow / Red Springs - Diagonal / Horizontal / Vertical
; [ End ]
;===============================================================================		
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Obj0D_End_Panel:                                            ; loc_F098
;===============================================================================
; Object 0x0D - Painel de fim de fase
; [ Begin ]
;===============================================================================
; loc_F098:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_F0C8(PC, D0), D1
                jsr     loc_F0C8(PC, D1)
                lea     (End_Panel_Animate_Data), A1           ; loc_F288
                bsr     AnimateSprite                          ; loc_D372
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
                cmpi.w  #$0280, D0
                bhi     DeleteObject                           ; loc_D314
                bra     DisplaySprite                          ; loc_D322
;-------------------------------------------------------------------------------
loc_F0C8:
                dc.w    loc_F0D2-loc_F0C8
                dc.w    loc_F0FA-loc_F0C8
                dc.w    loc_F124-loc_F0C8
                dc.w    loc_F1C0-loc_F0C8
                dc.w    loc_F286-loc_F0C8
;-------------------------------------------------------------------------------
loc_F0D2:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #End_Panel_Mappings, Obj_Map(A0) ; loc_F2B2, $0004
                move.w  #$0434, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$18, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
;-------------------------------------------------------------------------------
loc_F0FA:
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                bcs.s   loc_F122
                cmpi.w  #$0020, D0
                bcc.s   loc_F122
                move.w  #$00CF, D0                         ; play signpost sound
                jsr     (Play_Music)                           ; loc_150C
                clr.b   (HUD_Timer_Refresh_Flag).w                   ; $FFFFFE1E
                move.w  (Sonic_Level_Limits_Max_X).w, (Sonic_Level_Limits_Min_X).w ; $FFFFEECA
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_F122:
                rts
;-------------------------------------------------------------------------------
loc_F124:
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bpl.s   loc_F140
                move.w  #$003C, Obj_Control_Var_04(A0)                   ; $0030
                addq.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                cmpi.b  #$03, Obj_Ani_Number(A0)                         ; $001C
                bne.s   loc_F140
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_F140:
                subq.w  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bpl.s   loc_F1AE
                move.w  #$000B, Obj_Control_Var_06(A0)                   ; $0032
                moveq   #$00, D0
                move.b  Obj_Control_Var_08(A0), D0                       ; $0034
                addq.b  #$02, Obj_Control_Var_08(A0)                     ; $0034
                andi.b  #$0E, Obj_Control_Var_08(A0)                     ; $0034
                lea     loc_F1B0(PC, D0), A2
                bsr     SingleObjectLoad                       ; loc_E6FE
                bne.s   loc_F1AE
                move.b  #$25, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.b  (A2)+, D0
                ext.w   D0
                add.w   Obj_X(A0), D0                                    ; $0008
                move.w  D0, Obj_X(A1)                                    ; $0008
                move.b  (A2)+, D0
                ext.w   D0
                add.w   Obj_Y(A0), D0                                    ; $000C
                move.w  D0, Obj_Y(A1)                                    ; $000C
                move.l  #Rings_Mappings, Obj_Map(A1)    ; loc_AEA0, $0004
                move.w  #$27B2, Obj_Art_VRAM(A1)                         ; $0002
                bsr     ModifySpriteAttr_2P_A1                 ; loc_DBDA
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$02, Obj_Priority(A1)                           ; $0018
                move.b  #$08, Obj_Width(A1)                              ; $0019
loc_F1AE:
                rts
;-------------------------------------------------------------------------------
loc_F1B0:
                dc.b    $E8, $F0, $08, $08, $F0, $00, $18, $F8
                dc.b    $00, $F8, $10, $00, $E8, $08, $18, $10
;-------------------------------------------------------------------------------
loc_F1C0:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne     loc_F25A
                btst    #$01, (Player_One+Obj_Status).w              ; $FFFFB022
                bne.s   loc_F1DC
                move.b  #$01, ($FFFFF7CC).w
                move.w  #$0800, ($FFFFF602).w
loc_F1DC:
                tst.b   (Obj_Memory_Address).w                       ; $FFFFB000
                beq.s   loc_F1F2
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                move.w  (Sonic_Level_Limits_Max_X).w, D1             ; $FFFFEECA
                addi.w  #$0128, D1
                cmp.w   D1, D0
                bcs.s   loc_F25A
loc_F1F2:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
;-------------------------------------------------------------------------------
Load_Level_Results:   ; Usado por alguns Objects               ; loc_F1F6
                tst.b   (Level_Results_RAM_Obj_Data).w               ; $FFFFB5C0
                bne.s   loc_F25A
                move.w  (Sonic_Level_Limits_Max_X).w, (Sonic_Level_Limits_Min_X).w ; $FFFFEECA
                clr.b   ($FFFFFE2D).w
                clr.b   (HUD_Timer_Refresh_Flag).w                   ; $FFFFFE1E
                move.b  #$3A, (Level_Results_RAM_Obj_Data).w         ; $FFFFB5C0
                moveq   #$26, D0
                jsr     (LoadPLC2)                             ; loc_17C6
                move.b  #$01, ($FFFFF7D6).w
                moveq   #$00, D0
                move.b  (Time_Count_Minutes).w, D0                   ; $FFFFFE23
                mulu.w  #$003C, D0
                moveq   #$00, D1
                move.b  (Time_Count_Seconds).w, D1                   ; $FFFFFE24
                add.w   D1, D0
                divu.w  #$000F, D0
                moveq   #$14, D1
                cmp.w   D1, D0
                bcs.s   loc_F23C
                move.w  D1, D0
loc_F23C:
                add.w   D0, D0
                move.w  Time_Bonus(PC, D0), ($FFFFF7D2).w      ; loc_F25C
                move.w  (Ring_Count).w, D0                           ; $FFFFFE20
                mulu.w  #$000A, D0
                move.w  D0, ($FFFFF7D4).w
                move.w  #$009A, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_F25A:
                rts
;-------------------------------------------------------------------------------
Time_Bonus:                                                    ; loc_F25C
                dc.w    $1388, $1388, $03E8, $01F4, $0190, $0190, $012C, $012C
                dc.w    $00C8, $00C8, $00C8, $00C8, $0064, $0064, $0064, $0064
                dc.w    $0032, $0032, $0032, $0032, $0000
;-------------------------------------------------------------------------------
loc_F286:
                rts
;-------------------------------------------------------------------------------
End_Panel_Animate_Data:                                        ; loc_F288
                dc.w    loc_F290-End_Panel_Animate_Data
                dc.w    loc_F293-End_Panel_Animate_Data
                dc.w    loc_F2A1-End_Panel_Animate_Data
                dc.w    loc_F2AF-End_Panel_Animate_Data
loc_F290:
                dc.b    $0F, $02, $FF
loc_F293:
                dc.b    $01, $02, $03, $04, $05, $01, $03, $04
                dc.b    $05, $00, $03, $04, $05, $FF
loc_F2A1:
                dc.b    $01, $02, $03, $04, $05, $01, $03, $04
                dc.b    $05, $00, $03, $04, $05, $FF
loc_F2AF:
                dc.b    $0F, $00, $FF
;-------------------------------------------------------------------------------
End_Panel_Mappings:                                            ; loc_F2B2
                   include 'mappings/sprite/obj0D.asm'
;===============================================================================
; Object 0x0D - Painel de fim de fase
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
SolidObject:                                                   ; loc_F344
		lea     (Player_One).w, A1                           ; $FFFFB000
		moveq   #$03, D6
		movem.l D1-D4, -(A7)
		bsr.s   SolidObject_A1                         ; loc_F362
		movem.l (A7)+, D1-D4
		lea     (Player_Two).w, A1                           ; $FFFFB040
		tst.b   Obj_Flags(A1)                                    ; $0001
		bpl     loc_F39C
		addq.b  #$01, D6
SolidObject_A1:                                                ; loc_F362
		btst    D6, Obj_Status(A0)                               ; $0022
		beq     SolidObject_Sub_00                     ; loc_F5F6
		move.w  D1, D2
		add.w   D2, D2
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_F386
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_F386
		cmp.w   D2, D0
		bcs.s   loc_F394
loc_F386:
		bclr    #$03, Obj_Status(A1)                             ; $0022
		bclr    D6, Obj_Status(A0)                               ; $0022
		moveq   #$00, D4
		rts
loc_F394:
		move.w  D4, D2
		bsr     Player_On_Platform                     ; loc_F78C
		moveq   #$00, D4
loc_F39C:
		rts
;-------------------------------------------------------------------------------
SolidObject_2:                                                 ; loc_F39E
		lea     (Player_One).w, A1                           ; $FFFFB000
		moveq   #$03, D6
		movem.l D1-D4, -(A7)
		bsr.s   SolidObject_2_A1                       ; loc_F3B4
		movem.l (A7)+, D1-D4
		lea     (Player_Two).w, A1                           ; $FFFFB040
		addq.b  #$01, D6
SolidObject_2_A1:                                              ; loc_F3B4
		btst    D6, Obj_Status(A0)                               ; $0022
		beq     Solid_Object_Monitors                  ; loc_F5FE
		move.w  D1, D2
		add.w   D2, D2
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_F3D8
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_F3D8
		cmp.w   D2, D0
		bcs.s   loc_F3E6
loc_F3D8:
		bclr    #$03, Obj_Status(A1)                             ; $0022
		bclr    D6, Obj_Status(A0)                               ; $0022
		moveq   #$00, D4
		rts
loc_F3E6:
		move.w  D4, D2
		bsr     Player_On_Platform                     ; loc_F78C
		moveq   #$00, D4
		rts
;-------------------------------------------------------------------------------
SolidObject_3:                                                 ; loc_F3F0
		lea     (Player_One).w, A1                           ; $FFFFB000
		moveq   #$03, D6
		movem.l D1-D4, -(A7)
		bsr.s   SolidObject_3_A1                       ; loc_F406
		movem.l (A7)+, D1-D4
		lea     (Player_Two).w, A1                           ; $FFFFB040
		addq.b  #$01, D6
SolidObject_3_A1:                                              ; loc_F406
		btst    D6, Obj_Status(A0)                               ; $0022
		beq     SolidObject_3_Sub_00                   ; loc_F53C
		move.w  D1, D2
		add.w   D2, D2
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_F42A
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_F42A
		cmp.w   D2, D0
		bcs.s   loc_F438
loc_F42A:
		bclr    #$03, Obj_Status(A1)                             ; $0022
		bclr    D6, Obj_Status(A0)                               ; $0022
		moveq   #$00, D4
		rts
loc_F438:
		move.w  D4, D2
		bsr     loc_F7C6
		moveq   #$00, D4
		rts
;-------------------------------------------------------------------------------
loc_F442:
		lea     (Player_One).w, A1                           ; $FFFFB000
		moveq   #$03, D6
		movem.l D1-D4, -(A7)
		bsr.s   loc_F458
		movem.l (A7)+, D1-D4
		lea     (Player_Two).w, A1                           ; $FFFFB040
		addq.b  #$01, D6
loc_F458:
		btst    D6, Obj_Status(A0)                               ; $0022
		beq     loc_F596
		move.w  D1, D2
		add.w   D2, D2
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_F47C
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_F47C
		cmp.w   D2, D0
		bcs.s   loc_F48A
loc_F47C:
		bclr    #$03, Obj_Status(A1)                             ; $0022
		bclr    D6, Obj_Status(A0)                               ; $0022
		moveq   #$00, D4
		rts
loc_F48A:
		move.w  D4, D2
		bsr     loc_F808
		moveq   #$00, D4
		rts
;-------------------------------------------------------------------------------
loc_F494:
		lea     (Player_One).w, A1                           ; $FFFFB000
		moveq   #$03, D6
		movem.l D1-D4, -(A7)
		bsr.s   loc_F4AA
		movem.l (A7)+, D1-D4
		lea     (Player_Two).w, A1                           ; $FFFFB040
		addq.b  #$01, D6
loc_F4AA:
		btst    D6, Obj_Status(A0)                               ; $0022
		beq     loc_F4FA
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_F4CC
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_F4CC
		add.w   D1, D1
		cmp.w   D1, D0
		bcs.s   loc_F4DA
loc_F4CC:
		bclr    #$03, Obj_Status(A1)                             ; $0022
		bclr    D6, Obj_Status(A0)                               ; $0022
		moveq   #$00, D4
		rts
loc_F4DA:
		move.w  Obj_Y(A0), D0                                    ; $000C
		sub.w   D2, D0
		add.w   D3, D0
		moveq   #$00, D1
		move.b  Obj_Height_2(A1), D1                             ; $0016
		sub.w   D1, D0
		move.w  D0, Obj_Y(A1)                                    ; $000C
		sub.w   Obj_X(A0), D4                                    ; $0008
		sub.w   D4, Obj_X(A1)                                    ; $0008
		moveq   #$00, D4
		rts
loc_F4FA:
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi     loc_F6D2
		move.w  D1, D4
		add.w   D4, D4
		cmp.w   D4, D0
		bhi     loc_F6D2
		move.w  Obj_Y(A0), D5                                    ; $000C
		add.w   D3, D5
		move.b  Obj_Height_2(A1), D3                             ; $0016
		ext.w   D3
		add.w   D3, D2
		move.w  Obj_Y(A1), D3                                    ; $000C
		sub.w   D5, D3
		addq.w  #$04, D3
		add.w   D2, D3
		bmi     loc_F6D2
		move.w  D2, D4
		add.w   D4, D4
		cmp.w   D4, D3
		bcc     loc_F6D2
		bra     SolidObject_3_Sub_01                   ; loc_F63C
;-------------------------------------------------------------------------------
SolidObject_3_Sub_00:                                          ; loc_F53C
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi     loc_F6D2
		move.w  D1, D3
		add.w   D3, D3
		cmp.w   D3, D0
		bhi     loc_F6D2
		move.w  D0, D5
		btst    #$00, Obj_Flags(A0)                              ; $0001
		beq.s   loc_F562
		not.w   D5
		add.w   D3, D5
loc_F562:
		lsr.w   #$01, D5
		move.b  $00(A2, D5), D3
		sub.b   (A2), D3
		ext.w   D3
		move.w  Obj_Y(A0), D5                                    ; $000C
		sub.w   D3, D5
		move.b  Obj_Height_2(A1), D3                             ; $0016
		ext.w   D3
		add.w   D3, D2
		move.w  Obj_Y(A1), D3                                    ; $000C
		sub.w   D5, D3
		addq.w  #$04, D3
		add.w   D2, D3
		bmi     loc_F6D2
		move.w  D2, D4
		add.w   D4, D4
		cmp.w   D4, D3
		bcc     loc_F6D2
		bra     SolidObject_3_Sub_01                   ; loc_F63C
;-------------------------------------------------------------------------------
loc_F596:
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi     loc_F6D2
		move.w  D1, D3
		add.w   D3, D3
		cmp.w   D3, D0
		bhi     loc_F6D2
		move.w  D0, D5
		btst    #$00, Obj_Flags(A0)                              ; $0001
		beq.s   loc_F5BC
		not.w   D5
		add.w   D3, D5
loc_F5BC:
		andi.w  #$FFFFFFFE, D5
		move.b  $00(A2, D5), D3
		move.b  $01(A2, D5), D2
		ext.w   D2
		ext.w   D3
		move.w  Obj_Y(A0), D5                                    ; $000C
		sub.w   D3, D5
		move.w  Obj_Y(A1), D3                                    ; $000C
		sub.w   D5, D3
		move.b  Obj_Height_2(A1), D5                             ; $0016
		ext.w   D5
		add.w   D5, D3
		addq.w  #$04, D3
		bmi     loc_F6D2
		add.w   D5, D2
		move.w  D2, D4
		add.w   D5, D4
		cmp.w   D4, D3
		bcc     loc_F6D2
		bra     SolidObject_3_Sub_01                   ; loc_F63C
;-------------------------------------------------------------------------------
SolidObject_Sub_00:                                            ; loc_F5F6
		tst.b   Obj_Flags(A0)                                    ; $0001
		bpl     loc_F6D2
;-------------------------------------------------------------------------------
Solid_Object_Monitors:                                         ; loc_F5FE
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi     loc_F6D2
		move.w  D1, D3
		add.w   D3, D3
		cmp.w   D3, D0
		bhi     loc_F6D2
		move.b  Obj_Height_2(A1), D3                             ; $0016
		ext.w   D3
		add.w   D3, D2
		move.w  Obj_Y(A1), D3                                    ; $000C
		sub.w   Obj_Y(A0), D3                                    ; $000C
		addq.w  #$04, D3
		add.w   D2, D3
		bmi     loc_F6D2
		andi.w  #$07FF, D3
		move.w  D2, D4
		add.w   D4, D4
		cmp.w   D4, D3
		bcc     loc_F6D2
SolidObject_3_Sub_01:                                          ; loc_F63C
		tst.b   Obj_Timer(A1)                                    ; $002A
		bmi     loc_F6D2
		cmpi.b  #$06, Obj_Routine(A1)                            ; $0024
		bcc     loc_F6F0
		tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
		bne     loc_F6F0
		move.w  D0, D5
		cmp.w   D0, D1
		bcc.s   loc_F664
		add.w   D1, D1
		sub.w   D1, D0
		move.w  D0, D5
		neg.w   D5
loc_F664:
		move.w  D3, D1
		cmp.w   D3, D2
		bcc.s   loc_F672
		subq.w  #$04, D3
		sub.w   D4, D3
		move.w  D3, D1
		neg.w   D1
loc_F672:
		cmp.w   D1, D5
		bhi     loc_F6F4
loc_F678:
		cmpi.w  #$0004, D1
		bls.s   loc_F6C4
		tst.w   D0
		beq.s   loc_F69E
		bmi.s   loc_F68C
		tst.w   Obj_Speed(A1)                                    ; $0010
		bmi.s   loc_F69E
		bra.s   loc_F692
loc_F68C:
		tst.w   Obj_Speed(A1)                                    ; $0010
		bpl.s   loc_F69E
loc_F692:
		move.w  #$0000, Obj_Inertia(A1)                          ; $0014
		move.w  #$0000, Obj_Speed(A1)                            ; $0010
loc_F69E:
		sub.w   D0, Obj_X(A1)                                    ; $0008
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_F6C4
		move.l  D6, D4
		addq.b  #$02, D4
		bset    D4, Obj_Status(A0)                               ; $0022
		bset    #$05, Obj_Status(A1)                             ; $0022
		move.w  D6, D4
		addi.b  #$0D, D4
		bset    D4, D6
		moveq   #$01, D4
		rts
loc_F6C4:
		bsr.s   loc_F6E2
		move.w  D6, D4
		addi.b  #$0D, D4
		bset    D4, D6
		moveq   #$01, D4
		rts
loc_F6D2:
		move.l  D6, D4
		addq.b  #$02, D4
		btst    D4, Obj_Status(A0)                               ; $0022
		beq.s   loc_F6F0
		move.w  #$0001, Obj_Ani_Number(A1)                       ; $001C
loc_F6E2:
		move.l  D6, D4
		addq.b  #$02, D4
		bclr    D4, Obj_Status(A0)                               ; $0022
		bclr    #$05, Obj_Status(A1)                             ; $0022
loc_F6F0:
		moveq   #$00, D4
		rts
loc_F6F4:
		tst.w   D3
		bmi.s   loc_F700
		cmpi.w  #$0010, D3
		bcs.s   loc_F750
		bra.s   loc_F6D2
loc_F700:
		tst.w   Obj_Speed_Y(A1)                                  ; $0012
		beq.s   loc_F722
		bpl.s   loc_F716
		tst.w   D3
		bpl.s   loc_F716
		sub.w   D3, Obj_Y(A1)                                    ; $000C
		move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
loc_F716:
		move.w  D6, D4
		addi.b  #$0F, D4
		bset    D4, D6
		moveq   #-$02, D4
		rts
loc_F722:
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_F716
		move.w  D0, D4
		bpl.s   loc_F730
		neg.w   D4
loc_F730:
		cmpi.w  #$0010, D4
		bcs     loc_F678
		move.l  A0, -(A7)
		move.l  A1, A0
		jsr     (KillCharacter)                        ; loc_2B57C
		move.l  (A7)+, A0
		move.w  D6, D4
		addi.b  #$0F, D4
		bset    D4, D6
		moveq   #-$02, D4
		rts
loc_F750:
		subq.w  #$04, D3
		moveq   #$00, D1
		move.b  Obj_Width(A0), D1                                ; $0019
		move.w  D1, D2
		add.w   D2, D2
		add.w   Obj_X(A1), D1                                    ; $0008
		sub.w   Obj_X(A0), D1                                    ; $0008
		bmi.s   loc_F788
		cmp.w   D2, D1
		bcc.s   loc_F788
		tst.w   Obj_Speed_Y(A1)                                  ; $0012
		bmi.s   loc_F788
		sub.w   D3, Obj_Y(A1)                                    ; $000C
		subq.w  #$01, Obj_Y(A1)                                  ; $000C
		bsr     Player_On_Spiral                       ; loc_F99A
		move.w  D6, D4
		addi.b  #$11, D4
		bset    D4, D6
		moveq   #-$01, D4
		rts
loc_F788:
		moveq   #$00, D4
		rts
;-------------------------------------------------------------------------------
Player_On_Platform:                                            ; loc_F78C
		move.w  Obj_Y(A0), D0                                    ; $000C
		sub.w   D3, D0
		bra.s   loc_F79C
loc_F794:
		move.w  Obj_Y(A0), D0                                    ; $000C
		subi.w  #$0009, D0
loc_F79C:
		tst.b   Obj_Timer(A1)                                    ; $002A
		bmi.s   loc_F7C4
		cmpi.b  #$06, Obj_Routine(A1)                            ; $0024
		bcc.s   loc_F7C4
		tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
		bne.s   loc_F7C4
		moveq   #$00, D1
		move.b  Obj_Height_2(A1), D1                             ; $0016
		sub.w   D1, D0
		move.w  D0, Obj_Y(A1)                                    ; $000C
		sub.w   Obj_X(A0), D2                                    ; $0008
		sub.w   D2, Obj_X(A1)                                    ; $0008
loc_F7C4:
		rts
;-------------------------------------------------------------------------------
loc_F7C6:
		btst    #$03, Obj_Status(A1)                             ; $0022
		beq.s   loc_F806
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		lsr.w   #$01, D0
		btst    #$00, Obj_Flags(A0)                              ; $0001
		beq.s   loc_F7E6
		not.w   D0
		add.w   D1, D0
loc_F7E6:
		move.b  $00(A2, D0), D1
		ext.w   D1
		move.w  Obj_Y(A0), D0                                    ; $000C
		sub.w   D1, D0
		moveq   #$00, D1
		move.b  Obj_Height_2(A1), D1                             ; $0016
		sub.w   D1, D0
		move.w  D0, Obj_Y(A1)                                    ; $000C
		sub.w   Obj_X(A0), D2                                    ; $0008
		sub.w   D2, Obj_X(A1)                                    ; $0008
loc_F806:
		rts
;-------------------------------------------------------------------------------
loc_F808:
		btst    #$03, Obj_Status(A1)                             ; $0022
		beq.s   loc_F806
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		btst    #$00, Obj_Flags(A0)                              ; $0001
		beq.s   loc_F826
		not.w   D0
		add.w   D1, D0
loc_F826:
		andi.w  #$FFFFFFFE, D0
		bra.s   loc_F7E6
;-------------------------------------------------------------------------------
Platform_Object:                                               ; loc_F82C
		lea     (Player_One).w, A1                           ; $FFFFB000
		moveq   #$03, D6
		movem.l D1-D4, -(A7)
		bsr.s   Platform_Object_A1                     ; loc_F842
		movem.l (A7)+, D1-D4
		lea     (Player_Two).w, A1                           ; $FFFFB040
		addq.b  #$01, D6
Platform_Object_A1:                                            ; loc_F842
		btst    D6, Obj_Status(A0)                               ; $0022
		beq     loc_F940
		move.w  D1, D2
		add.w   D2, D2
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_F866
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_F866
		cmp.w   D2, D0
		bcs.s   loc_F874
loc_F866:
		bclr    #$03, Obj_Status(A1)                             ; $0022
		bclr    D6, Obj_Status(A0)                               ; $0022
		moveq   #$00, D4
		rts
loc_F874:
		move.w  D4, D2
		bsr     Player_On_Platform                     ; loc_F78C
		moveq   #$00, D4
		rts
;-------------------------------------------------------------------------------
Platform_Object_2:                                             ; loc_F87E
		lea     (Player_One).w, A1                           ; $FFFFB000
		moveq   #$03, D6
		movem.l D1-D4, -(A7)
		bsr.s   Platform_Object_2_A1                   ; loc_F894
		movem.l (A7)+, D1-D4
		lea     (Player_Two).w, A1                           ; $FFFFB040
		addq.b  #$01, D6
Platform_Object_2_A1:                                          ; loc_F894
		btst    D6, Obj_Status(A0)                               ; $0022
		beq     loc_FA08
		move.w  D1, D2
		add.w   D2, D2
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_F8B8
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_F8B8
		cmp.w   D2, D0
		bcs.s   loc_F8C6
loc_F8B8:
		bclr    #$03, Obj_Status(A1)                             ; $0022
		bclr    D6, Obj_Status(A0)                               ; $0022
		moveq   #$00, D4
		rts
loc_F8C6:
		move.w  D4, D2
		bsr     loc_F7C6
		moveq   #$00, D4
		rts
;-------------------------------------------------------------------------------
Platform_Object_3:                                             ; loc_F8D0
		lea     (Player_One).w, A1                           ; $FFFFB000
		moveq   #$03, D6
		movem.l D1-D4, -(A7)
		bsr.s   Platform_Object_3_A1                   ; loc_F8E6
		movem.l (A7)+, D1-D4
		lea     (Player_Two).w, A1                           ; $FFFFB040
		addq.b  #$01, D6
Platform_Object_3_A1:                                          ; loc_F8E6
		btst    D6, Obj_Status(A0)                               ; $0022
		beq     loc_FA40
		move.w  D1, D2
		add.w   D2, D2
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_F90A
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_F90A
		cmp.w   D2, D0
		bcs.s   loc_F918
loc_F90A:
		bclr    #$03, Obj_Status(A1)                             ; $0022
		bclr    D6, Obj_Status(A0)                               ; $0022
		moveq   #$00, D4
		rts
loc_F918:
		move.w  D4, D2
		bsr     Player_On_Platform                     ; loc_F78C
		moveq   #$00, D4
		rts
;-------------------------------------------------------------------------------
loc_F922:
		tst.w   Obj_Speed_Y(A1)                                  ; $0012
		bmi     loc_FA06
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi     loc_FA06
		cmp.w   D2, D0
		bcc     loc_FA06
		bra.s   loc_F95E
;-------------------------------------------------------------------------------
loc_F940:
		tst.w   Obj_Speed_Y(A1)                                  ; $0012
		bmi     loc_FA06
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi     loc_FA06
		add.w   D1, D1
		cmp.w   D1, D0
		bcc     loc_FA06
loc_F95E:
		move.w  Obj_Y(A0), D0                                    ; $000C
		sub.w   D3, D0
loc_F964:
		move.w  Obj_Y(A1), D2                                    ; $000C
		move.b  Obj_Height_2(A1), D1                             ; $0016
		ext.w   D1
		add.w   D2, D1
		addq.w  #$04, D1
		sub.w   D1, D0
		bhi     loc_FA06
		cmpi.w  #$FFF0, D0
		bcs     loc_FA06
		tst.b   Obj_Timer(A1)                                    ; $002A
		bmi     loc_FA06
		cmpi.b  #$06, Obj_Routine(A1)                            ; $0024
		bcc     loc_FA06
		add.w   D0, D2
		addq.w  #$03, D2
		move.w  D2, Obj_Y(A1)                                    ; $000C
;-------------------------------------------------------------------------------
Player_On_Spiral:                                              ; loc_F99A
		btst    #$03, Obj_Status(A1)                             ; $0022
		beq.s   loc_F9B6
		moveq   #$00, D0
		move.b  Obj_Player_Last(A1), D0                          ; $003D
		lsl.w   #$06, D0
		addi.l  #Player_One, D0                              ; $FFFFB000
		move.l  D0, A3
		bclr    D6, Obj_Status(A3)                               ; $0022
loc_F9B6:
		move.w  A0, D0
		subi.w  #Obj_Memory_Address, D0                          ; $B000
		lsr.w   #$06, D0
		andi.w  #$007F, D0
		move.b  D0, Obj_Control_Var_11(A1)                       ; $003D
		move.b  #$00, Obj_Angle(A1)                              ; $0026
		move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
		move.w  Obj_Speed(A1), Obj_Inertia(A1)            ; $0010, $0014
		btst    #$01, Obj_Status(A1)                             ; $0022
		beq.s   loc_F9FC
		move.l  A0, -(A7)
		move.l  A1, A0
		move.w  A0, D1
		subi.w  #Obj_Memory_Address, D1                          ; $B000
		bne.s   loc_F9F4
		jsr     (Sonic_ResetOnFloor)                   ; loc_10A46
		bra.s   loc_F9FA
loc_F9F4:
		jsr     (Tails_ResetOnFloor)                   ; loc_11EC6
loc_F9FA:
		move.l  (A7)+, A0
loc_F9FC:
		bset    #$03, Obj_Status(A1)                             ; $0022
		bset    D6, Obj_Status(A0)                               ; $0022
loc_FA06:
		rts
;-------------------------------------------------------------------------------
loc_FA08:
		tst.w   Obj_Speed_Y(A1)                                  ; $0012
		bmi     loc_FA06
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_FA06
		add.w   D1, D1
		cmp.w   D1, D0
		bcc.s   loc_FA06
		btst    #$00, Obj_Flags(A0)                              ; $0001
		beq.s   loc_FA2E
		not.w   D0
		add.w   D1, D0
loc_FA2E:
		lsr.w   #$01, D0
		move.b  $00(A2, D0), D3
		ext.w   D3
		move.w  Obj_Y(A0), D0                                    ; $000C
		sub.w   D3, D0
		bra     loc_F964
;-------------------------------------------------------------------------------
loc_FA40:
		tst.w   Obj_Speed_Y(A1)                                  ; $0012
		bmi     loc_FA06
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi     loc_FA06
		add.w   D1, D1
		cmp.w   D1, D0
		bcc     loc_FA06
		move.w  Obj_Y(A0), D0                                    ; $000C
		sub.w   D3, D0
		bra     loc_F964
;-------------------------------------------------------------------------------
Exit_Plaform:                                                  ; loc_FA68
		move.w  D1, D2
		add.w   D2, D2
		lea     (Player_One).w, A1                           ; $FFFFB000
		btst    #$01, Obj_Status(A1)                             ; $0022
		bne.s   loc_FA88
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   Obj_X(A0), D0                                    ; $0008
		add.w   D1, D0
		bmi.s   loc_FA88
		cmp.w   D2, D0
		bcs.s   loc_FA9A
loc_FA88:
		bclr    #$03, Obj_Status(A1)                             ; $0022
		move.b  #$02, Obj_Routine(A0)                            ; $0024
		bclr    #$03, Obj_Status(A0)                             ; $0022
loc_FA9A:
		rts
;-------------------------------------------------------------------------------
loc_FA9C: ; Usado pelo Object 0x30 - Terremoto na Hill Top
		lea     (Player_One).w, A1                           ; $FFFFB000
		btst    #$03, Obj_Status(A0)                             ; $0022
		beq.s   loc_FAC4
		jsr     (Player_HitFloor_A1)                   ; loc_141B2
		tst.w   D1
		beq.s   loc_FAB4
		bpl.s   loc_FAC4
loc_FAB4:
		lea     (Player_One).w, A1                           ; $FFFFB000
		bclr    #$03, Obj_Status(A1)                             ; $0022
		bclr    #$03, Obj_Status(A0)                             ; $0022
loc_FAC4:
		lea     (Player_Two).w, A1                           ; $FFFFB040
		btst    #$04, Obj_Status(A0)                             ; $0022
		beq.s   loc_FAEC
		jsr     (Player_HitFloor_A1)                   ; loc_141B2
		tst.w   D1
		beq.s   loc_FADC
		bpl.s   loc_FAEC
loc_FADC:
		lea     (Player_Two).w, A1                           ; $FFFFB040
		bclr    #$03, Obj_Status(A1)                             ; $0022
		bclr    #$04, Obj_Status(A0)                             ; $0022
loc_FAEC:
		moveq   #$00, D4
		rts
;-------------------------------------------------------------------------------
;===============================================================================
; Object 0x01 - Sonic
; [ Begin ]
;===============================================================================
; loc_FAF0:
Obj01_Sonic:
		tst.w   (Debug_Mode_Flag_Index).w
		beq.s   Obj_Sonic
		jmp     (Debug_Mode)
;-------------------------------------------------------------------------------
Obj_Sonic                                                      ; loc_FAFC
		moveq   #$00, D0
		move.b  Obj_Routine(A0), D0                              ; $0024
		move.w  Sonic_Index(PC, D0), D1                ; loc_FB0A
		jmp     Sonic_Index(PC, D1)                    ; loc_FB0A
;-------------------------------------------------------------------------------
Sonic_Index:                                                   ; loc_FB0A
		dc.w    Sonic_Main-Sonic_Index                 ; loc_FB14
		dc.w    Sonic_Control-Sonic_Index              ; loc_FB96
		dc.w    Sonic_Hurt-Sonic_Index                 ; loc_10AAA
		dc.w    Sonic_Death-Sonic_Index                ; loc_10B3E
		dc.w    Sonic_ResetLevel-Sonic_Index           ; loc_10BDE
;-------------------------------------------------------------------------------
Sonic_Main:                                                    ; loc_FB14
		addq.b  #$02, Obj_Routine(A0)                            ; $0024
		move.b  #$13, Obj_Height_2(A0)                           ; $0016
		move.b  #$09, Obj_Width_2(A0)                            ; $0017
		move.l  #Sonic_Mappings, Obj_Map(A0)    ; loc_6FBE0, $0004
		move.w  #$0780, Obj_Art_VRAM(A0)                         ; $0002
		bsr     ModifySpriteAttr_2P                    ; loc_DBBE
		move.b  #$02, Obj_Priority(A0)                           ; $0018
		move.b  #$18, Obj_Width(A0)                              ; $0019
		move.b  #$04, Obj_Flags(A0)                              ; $0001
		move.w  #$0600, (Sonic_Max_Speed).w                  ; $FFFFF760
		move.w  #$000C, (Sonic_Acceleration).w               ; $FFFFF762
		move.w  #$0080, (Sonic_Deceleration).w               ; $FFFFF764
		move.b  #$0C, Obj_Player_Top_Solid(A0)                   ; $003E
		move.b  #$0D, Obj_Player_LRB_Solid(A0)                   ; $003F
		move.b  #$00, Obj_P_Flips_Remaining(A0)                  ; $002C
		move.b  #$04, Obj_Player_Flip_Speed(A0)                  ; $002D
		move.b  #$00, (Super_Sonic_Flag).w                   ; $FFFFFE19
		move.b  #$1E, Obj_Subtype(A0)                            ; $0028
		move.w  #$0000, ($FFFFEED2).w
		move.w  #$003F, D2
loc_FB88:
		bsr     CopySonicMovesForTails                 ; loc_FCD4
		move.w  #$0000, $00(A1, D0)
		dbra    D2, loc_FB88
;-------------------------------------------------------------------------------
Sonic_Control:                                                 ; loc_FB96
                tst.w   (Debug_Mode_Active_Flag).w                   ; $FFFFFFFA
                beq.s   loc_FBB0
                btst    #$04, (Control_Ports_Buffer_Data+$0001).w    ; $FFFFF605
                beq.s   loc_FBB0
                move.w  #$0001, (Debug_Mode_Flag_Index).w            ; $FFFFFE08
                clr.b   ($FFFFF7CC).w
                rts
loc_FBB0:
                tst.b   ($FFFFF7CC).w
                bne.s   loc_FBBC
                move.w  (Control_Ports_Buffer_Data).w, ($FFFFF602).w ; $FFFFF604
loc_FBBC:
                btst    #$00, Obj_Timer(A0)                              ; $002A
                bne.s   loc_FBD6
                moveq   #$00, D0
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.w  #$0006, D0
                move.w  Sonic_Modes(PC, D0), D1               ; $loc_FC20
                jsr     Sonic_Modes(PC, D1)                   ; $loc_FC20
loc_FBD6:
                cmpi.w  #$FF00, (Sonic_Level_Limits_Min_Y).w         ; $FFFFEECC
                bne.s   loc_FBE4
                andi.w  #$07FF, Obj_Y(A0)                                ; $000C
loc_FBE4:
                bsr.s   Sonic_Display                          ; loc_FC38
                bsr     CopySonicMovesForTails                 ; loc_FCD4
                bsr     Sonic_Water                            ; loc_FCF8
                move.b  ($FFFFF768).w, Obj_Player_Next_Tilt(A0)          ; $0036
                move.b  ($FFFFF76A).w, Obj_Player_Tilt(A0)               ; $0037
                tst.b   ($FFFFF7C7).w
                beq.s   loc_FC0C
                tst.b   Obj_Ani_Number(A0)                               ; $001C
                bne.s   loc_FC0C
                move.b  Obj_Ani_Flag(A0), Obj_Ani_Number(A0)      ; $001C, $001D
loc_FC0C:
                bsr     Sonic_Animate                          ; loc_10BF2
                tst.b   Obj_Timer(A0)                                    ; $002A
                bmi.s   loc_FC1C
                jsr     (TouchResponse)                        ; loc_2B1EC
loc_FC1C:
                bra     Load_Sonic_Dynamic_PLC                 ; loc_110D4
;-------------------------------------------------------------------------------
Sonic_Modes:                                                   ; loc_FC20
                dc.w    Sonic_MdNormal-Sonic_Modes             ; loc_FDE0
                dc.w    Sonic_MdJump-Sonic_Modes               ; loc_FE52
                dc.w    Sonic_MdRoll-Sonic_Modes               ; loc_FE7C
                dc.w    Sonic_MdJump2-Sonic_Modes              ; loc_FE9C
;-------------------------------------------------------------------------------
Sonic_MusicList:                                               ; loc_FC28
                dc.b    $82	; GHZ
                dc.b    $82	; Zone 01
                dc.b    $85	; WZ
                dc.b    $84	; Zone 03
                dc.b    $85	; MTZ
                dc.b    $85	; MTZ Act 3
                dc.b    $8C	; Zone 06
                dc.b    $86	; HTZ
                dc.b    $83	; HPZ
                dc.b    $8D	; Zone 09
                dc.b    $88	; OOZ
                dc.b    $8B	; DHZ
                dc.b    $89	; CNZ
                dc.b    $8E	; CPZ
                dc.b    $8E	; GCZ
                dc.b    $87	; NGHZ
;-------------------------------------------------------------------------------
Sonic_Display:                                                 ; loc_FC38
                move.w  Obj_P_Invunerblt_Time(A0), D0                    ; $0030
                beq.s   loc_FC46
                subq.w  #$01, Obj_P_Invunerblt_Time(A0)                  ; $0030
                lsr.w   #$03, D0
                bcc.s   loc_FC4C
loc_FC46:
                jsr     (DisplaySprite)                        ; loc_D322
loc_FC4C:
                tst.b   (Invincibility_Flag).w                       ; $FFFFFE2D
                beq.s   loc_FC86
                tst.w   Obj_P_Invcbility_Time(A0)                        ; $0032
                beq.s   loc_FC86
                subq.w  #$01, Obj_P_Invcbility_Time(A0)                  ; $0032
                bne.s   loc_FC86
                tst.b   (Boss_Flag).w                                ; $FFFFF7AA
                bne.s   loc_FC80
                cmpi.b  #$0C, Obj_Subtype(A0)                            ; $0028
                bcs.s   loc_FC80
                moveq   #$00, D0
                move.b  (Level_Id).w, D0                             ; $FFFFFE10
                lea     Sonic_MusicList(PC), A1                ; loc_FC28
                move.b  $00(A1, D0), D0
                jsr     (Play_Music)                           ; loc_150C
loc_FC80:
                move.b  #$00, (Invincibility_Flag).w                 ; $FFFFFE2D
loc_FC86:
                tst.b   (Hi_Speed_Flag).w                            ; $FFFFFE2E
                beq.s   loc_FCD2
                tst.w   Obj_P_Spd_Shoes_Time(A0)                         ; $0034
                beq.s   loc_FCD2
                subq.w  #$01, Obj_P_Spd_Shoes_Time(A0)                   ; $0034
                bne.s   loc_FCD2
                move.w  #$0600, (Sonic_Max_Speed).w                  ; $FFFFF760
                move.w  #$000C, (Sonic_Acceleration).w               ; $FFFFF762
                move.w  #$0080, (Sonic_Deceleration).w               ; $FFFFF764
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                beq.s   loc_FCC2
                move.w  #$0A00, (Sonic_Max_Speed).w                  ; $FFFFF760
                move.w  #$0030, (Sonic_Acceleration).w               ; $FFFFF762
                move.w  #$0100, (Sonic_Deceleration).w               ; $FFFFF764
loc_FCC2:
                move.b  #$00, (Hi_Speed_Flag).w                      ; $FFFFFE2E
                move.w  #$00FC, D0
                jmp     (Play_Music)                           ; loc_150C
loc_FCD2:
                rts
;-------------------------------------------------------------------------------
CopySonicMovesForTails:                                        ; loc_FCD4
                move.w  ($FFFFEED2).w, D0
                lea     ($FFFFE500).w, A1
                lea     $00(A1, D0), A1
                move.w  Obj_X(A0), (A1)+                                 ; $0008
                move.w  Obj_Y(A0), (A1)+                                 ; $000C
                addq.b  #$04, ($FFFFEED3).w
                lea     ($FFFFE400).w, A1
                move.w  (Control_Ports_Buffer_Data).w, $00(A1, D0)   ; $FFFFF604
                rts
;-------------------------------------------------------------------------------
Sonic_Water:                                                   ; loc_FCF8
                tst.b   (Water_Level_Flag).w                         ; $FFFFF730
                bne.s   Sonic_InLevelWithWater                 ; loc_FD00
loc_FCFE:
                rts
;-------------------------------------------------------------------------------
Sonic_InLevelWithWater:                                        ; loc_FD00
                move.w  (Water_Level).w, D0                          ; $FFFFF646
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bge.s   Sonic_NotInWater                       ; loc_FD70
                bset    #$06, Obj_Status(A0)                             ; $0022
                bne.s   loc_FCFE
                move.l  A0, A1
                bsr     Resume_Music                           ; loc_12A30
                move.b  #$0A, ($FFFFB340).w
                move.b  #$81, ($FFFFB368).w
                move.l  A0, ($FFFFB37C).w
                move.w  #$0300, (Sonic_Max_Speed).w                  ; $FFFFF760
                move.w  #$0006, (Sonic_Acceleration).w               ; $FFFFF762
                move.w  #$0040, (Sonic_Deceleration).w               ; $FFFFF764
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                beq.s   loc_FD52
                move.w  #$0500, (Sonic_Max_Speed).w                  ; $FFFFF760
                move.w  #$0018, (Sonic_Acceleration).w               ; $FFFFF762
                move.w  #$0080, (Sonic_Deceleration).w               ; $FFFFF764
loc_FD52:
                asr.w   Obj_Speed(A0)                                    ; $0010
                asr.w   Obj_Speed_Y(A0)                                  ; $0012
                asr.w   Obj_Speed_Y(A0)                                  ; $0012
                beq.s   loc_FCFE
                move.w  #$0100, ($FFFFB41C).w
                move.w  #$00AA, D0
                jmp     (Play_Sfx)                             ; loc_1512
;-------------------------------------------------------------------------------
Sonic_NotInWater:                                              ; loc_FD70
                bclr    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_FCFE
                move.l  A0, A1
                bsr     Resume_Music                           ; loc_12A30
                move.w  #$0600, (Sonic_Max_Speed).w                  ; $FFFFF760
                move.w  #$000C, (Sonic_Acceleration).w               ; $FFFFF762
                move.w  #$0080, (Sonic_Deceleration).w               ; $FFFFF764
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                beq.s   loc_FDA8
                move.w  #$0A00, (Sonic_Max_Speed).w                  ; $FFFFF760
                move.w  #$0030, (Sonic_Acceleration).w               ; $FFFFF762
                move.w  #$0100, (Sonic_Deceleration).w               ; $FFFFF764
loc_FDA8:
                cmpi.b  #$04, Obj_Routine(A0)                            ; $0024
                beq.s   loc_FDB4
                asl.w   Obj_Speed_Y(A0)                                  ; $0012
loc_FDB4:
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                beq     loc_FCFE
                move.w  #$0100, ($FFFFB41C).w
                move.l  A0, A1
                bsr     Resume_Music                           ; loc_12A30
                cmpi.w  #$F000, Obj_Speed_Y(A0)                          ; $0012
                bgt.s   loc_FDD6
                move.w  #$F000, Obj_Speed_Y(A0)                          ; $0012
loc_FDD6:
                move.w  #$00AA, D0
                jmp     (Play_Sfx)                             ; loc_1512
;-------------------------------------------------------------------------------
Sonic_MdNormal:                                                ; loc_FDE0
                move.b  (Control_Ports_Buffer_Data+$0001).w, D0      ; $FFFFF605
                andi.b  #$70, D0
                bne.s   loc_FE2A
                cmpi.b  #$0A, Obj_Ani_Number(A0)                         ; $001C
                beq.s   loc_FE50
                cmpi.b  #$0B, Obj_Ani_Number(A0)                         ; $001C
                beq.s   loc_FE50
                cmpi.b  #$05, Obj_Ani_Number(A0)                         ; $001C
                bne.s   loc_FE2A
                cmpi.b  #$1E, Obj_Ani_Frame(A0)                          ; $001B
                bcs.s   loc_FE2A
                move.b  (Control_Ports_Buffer_Data).w, D0            ; $FFFFF604
                andi.b  #$7F, D0
                beq.s   loc_FE50
                move.b  #$0A, Obj_Ani_Number(A0)                         ; $001C
                cmpi.b  #$AC, Obj_Ani_Frame(A0)                          ; $001B
                bcs.s   loc_FE50
                move.b  #$0B, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_FE50
loc_FE2A:
                bsr     Sonic_Spindash                         ; loc_1060E
                bsr     Sonic_Jump                             ; loc_1051A
                bsr     Sonic_SlopeResist                      ; loc_10726
                bsr     Sonic_Move                             ; loc_FEC6
                bsr     Sonic_Roll                             ; loc_104B4
                bsr     Sonic_LevelBoundaries                  ; loc_10456
                jsr     (SpeedToPos)                           ; loc_D1DA
                bsr     Player_AnglePos                        ; loc_13694
                bsr     Sonic_SlopeRepel                       ; loc_10798
loc_FE50:
                rts
;-------------------------------------------------------------------------------
Sonic_MdJump:                                                  ; loc_FE52
                bsr     Sonic_JumpHeight                       ; loc_105D2
                bsr     Sonic_ChgJumpDir                       ; loc_103CA
                bsr     Sonic_LevelBoundaries                  ; loc_10456
                jsr     (ObjectFall)                           ; loc_D1AE
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_FE72
                subi.w  #$0028, Obj_Speed_Y(A0)                          ; $0012
loc_FE72:
                bsr     Sonic_JumpAngle                        ; loc_107DA
                bsr     Sonic_Floor                            ; loc_1083A
                rts
;-------------------------------------------------------------------------------
Sonic_MdRoll:                                                  ; loc_FE7C
                bsr     Sonic_Jump                             ; loc_1051A
                bsr     Sonic_RollRepel                        ; loc_1075C
                bsr     Sonic_RollSpeed                        ; loc_102D4
                bsr     Sonic_LevelBoundaries                  ; loc_10456
                jsr     (SpeedToPos)                           ; loc_D1DA
                bsr     Player_AnglePos                        ; loc_13694
                bsr     Sonic_SlopeRepel                       ; loc_10798
                rts
;-------------------------------------------------------------------------------
Sonic_MdJump2:                                                 ; loc_FE9C
                bsr     Sonic_JumpHeight                       ; loc_105D2
                bsr     Sonic_ChgJumpDir                       ; loc_103CA
                bsr     Sonic_LevelBoundaries                  ; loc_10456
                jsr     (ObjectFall)                           ; loc_D1AE
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_FEBC
                subi.w  #$0028, Obj_Speed_Y(A0)                          ; $0012
loc_FEBC:
                bsr     Sonic_JumpAngle                        ; loc_107DA
                bsr     Sonic_Floor                            ; loc_1083A
                rts
;-------------------------------------------------------------------------------
Sonic_Move:                                                    ; loc_FEC6
                move.w  (Sonic_Max_Speed).w, D6                      ; $FFFFF760
                move.w  (Sonic_Acceleration).w, D5                   ; $FFFFF762
                move.w  (Sonic_Deceleration).w, D4                   ; $FFFFF764
                tst.b   (Player_Status_Flag).w                       ; $FFFFF7CA
                bne     loc_1013E
                tst.w   Obj_Player_Control(A0)                           ; $002E
                bne     loc_10106
                btst    #$02, ($FFFFF602).w
                beq.s   loc_FEEE
                bsr     loc_101CE
loc_FEEE:
                btst    #$03, ($FFFFF602).w
                beq.s   loc_FEFA
                bsr     loc_10254
loc_FEFA:
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne     loc_10106
                tst.w   Obj_Inertia(A0)                                  ; $0014
                bne     loc_10106
                bclr    #$05, Obj_Status(A0)                             ; $0022
                move.b  #$05, Obj_Ani_Number(A0)                         ; $001C
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq     loc_FFF8
                moveq   #$00, D0
                move.b  Obj_Player_Last(A0), D0                          ; $003D
                lsl.w   #$06, D0
                lea     (Player_One).w, A1                           ; $FFFFB000
                lea     $00(A1, D0), A1
                tst.b   Obj_Status(A1)                                   ; $0022
                bmi     loc_100E8
                moveq   #$00, D1
                move.b  Obj_Width(A1), D1                                ; $0019
                move.w  D1, D2
                add.w   D2, D2
                subq.w  #$02, D2
                add.w   Obj_X(A0), D1                                    ; $0008
                sub.w   Obj_X(A1), D1                                    ; $0008
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                bne     loc_FF6A
                cmpi.w  #$0002, D1
                blt.s   loc_FFBA
                cmp.w   D2, D1
                bge.s   loc_FF7C
                bra     loc_100E8
loc_FF6A:
                cmpi.w  #$0002, D1
                blt     loc_100DA
                cmp.w   D2, D1
                bge     loc_100CA
                bra     loc_100E8
loc_FF7C:
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_FF9C
                move.b  #$06, Obj_Ani_Number(A0)                         ; $001C
                addq.w  #$06, D2
                cmp.w   D2, D1
                blt     loc_10106
                move.b  #$0C, Obj_Ani_Number(A0)                         ; $001C
                bra     loc_10106
loc_FF9C:
                move.b  #$1D, Obj_Ani_Number(A0)                         ; $001C
                addq.w  #$06, D2
                cmp.w   D2, D1
                blt     loc_10106
                move.b  #$1E, Obj_Ani_Number(A0)                         ; $001C
                bclr    #$00, Obj_Status(A0)                             ; $0022
                bra     loc_10106
loc_FFBA:
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_FFDA
                move.b  #$06, Obj_Ani_Number(A0)                         ; $001C
                cmpi.w  #$FFFC, D1
                bge     loc_10106
                move.b  #$0C, Obj_Ani_Number(A0)                         ; $001C
                bra     loc_10106
loc_FFDA:
                move.b  #$1D, Obj_Ani_Number(A0)                         ; $001C
                cmpi.w  #$FFFC, D1
                bge     loc_10106
                move.b  #$1E, Obj_Ani_Number(A0)                         ; $001C
                bset    #$00, Obj_Status(A0)                             ; $0022
                bra     loc_10106
loc_FFF8:
                jsr     (Player_HitFloor)                      ; loc_14160
                cmpi.w  #$000C, D1
                blt     loc_100E8
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                bne     loc_100C2
                cmpi.b  #$03, Obj_Player_Next_Tilt(A0)                   ; $0036
                bne.s   loc_1006C
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_10042
                move.b  #$06, Obj_Ani_Number(A0)                         ; $001C
                move.w  Obj_X(A0), D3                                    ; $0008
                subq.w  #$06, D3
                jsr     (Player_HitFloor_D3)                   ; loc_14164
                cmpi.w  #$000C, D1
                blt     loc_10106
                move.b  #$0C, Obj_Ani_Number(A0)                         ; $001C
                bra     loc_10106
loc_10042:
                move.b  #$1D, Obj_Ani_Number(A0)                         ; $001C
                move.w  Obj_X(A0), D3                                    ; $0008
                subq.w  #$06, D3
                jsr     (Player_HitFloor_D3)                   ; loc_14164
                cmpi.w  #$000C, D1
                blt     loc_10106
                move.b  #$1E, Obj_Ani_Number(A0)                         ; $001C
                bclr    #$00, Obj_Status(A0)                             ; $0022
                bra     loc_10106
loc_1006C:
                cmpi.b  #$03, Obj_Player_Tilt(A0)                        ; $0037
                bne.s   loc_100E8
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1009C
                move.b  #$06, Obj_Ani_Number(A0)                         ; $001C
                move.w  Obj_X(A0), D3                                    ; $0008
                addq.w  #$06, D3
                jsr     (Player_HitFloor_D3)                   ; loc_14164
                cmpi.w  #$000C, D1
                blt.s   loc_10106
                move.b  #$0C, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_10106
loc_1009C:
                move.b  #$1D, Obj_Ani_Number(A0)                         ; $001C
                move.w  Obj_X(A0), D3                                    ; $0008
                addq.w  #$06, D3
                jsr     (Player_HitFloor_D3)                   ; loc_14164
                cmpi.w  #$000C, D1
                blt.s   loc_10106
                move.b  #$1E, Obj_Ani_Number(A0)                         ; $001C
                bset    #$00, Obj_Status(A0)                             ; $0022
                bra.s   loc_10106
loc_100C2:
                cmpi.b  #$03, Obj_Player_Next_Tilt(A0)                   ; $0036
                bne.s   loc_100D2
loc_100CA:
                bclr    #$00, Obj_Status(A0)                             ; $0022
                bra.s   loc_100E0
loc_100D2:
                cmpi.b  #$03, Obj_Player_Tilt(A0)                        ; $0037
                bne.s   loc_100E8
loc_100DA:
                bset    #$00, Obj_Status(A0)                             ; $0022
loc_100E0:
                move.b  #$06, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_10106
loc_100E8:
                btst    #$00, ($FFFFF602).w
                beq.s   loc_100F8
                move.b  #$07, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_10106
loc_100F8:
                btst    #$01, ($FFFFF602).w
                beq.s   loc_10106
                move.b  #$08, Obj_Ani_Number(A0)                         ; $001C
loc_10106:
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                beq     loc_10112
                move.w  #$000C, D5
loc_10112:
                move.b  ($FFFFF602).w, D0
                andi.b  #$0C, D0
                bne.s   loc_1013E
                move.w  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_1013E
                bmi.s   loc_10132
                sub.w   D5, D0
                bcc.s   loc_1012C
                move.w  #$0000, D0
loc_1012C:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                bra.s   loc_1013E
loc_10132:
                add.w   D5, D0
                bcc.s   loc_1013A
                move.w  #$0000, D0
loc_1013A:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
loc_1013E:
                move.b  Obj_Angle(A0), D0                                ; $0026
                jsr     (CalcSine)                             ; loc_3282
                muls.w  Obj_Inertia(A0), D1                              ; $0014
                asr.l   #$08, D1
                move.w  D1, Obj_Speed(A0)                                ; $0010
                muls.w  Obj_Inertia(A0), D0                              ; $0014
                asr.l   #$08, D0
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
loc_1015C:
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$40, D0
                bmi.s   loc_101CC
                move.b  #$40, D1
                tst.w   Obj_Inertia(A0)                                  ; $0014
                beq.s   loc_101CC
                bmi.s   loc_10174
                neg.w   D1
loc_10174:
                move.b  Obj_Angle(A0), D0                                ; $0026
                add.b   D1, D0
                move.w  D0, -(A7)
                bsr     Player_WalkSpeed                       ; loc_13FD8
                move.w  (A7)+, D0
                tst.w   D1
                bpl.s   loc_101CC
                asl.w   #$08, D1
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   loc_101C8
                cmpi.b  #$40, D0
                beq.s   loc_101B6
                cmpi.b  #$80, D0
                beq.s   loc_101B0
                add.w   D1, Obj_Speed(A0)                                ; $0010
                bset    #$05, Obj_Status(A0)                             ; $0022
                move.w  #$0000, Obj_Inertia(A0)                          ; $0014
                rts
loc_101B0:
                sub.w   D1, Obj_Speed_Y(A0)                              ; $0012
                rts
loc_101B6:
                sub.w   D1, Obj_Speed(A0)                                ; $0010
                bset    #$05, Obj_Status(A0)                             ; $0022
                move.w  #$0000, Obj_Inertia(A0)                          ; $0014
                rts
loc_101C8:
                add.w   D1, Obj_Speed_Y(A0)                              ; $0012
loc_101CC:
                rts
loc_101CE:
                move.w  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_101D6
                bpl.s   loc_10208
loc_101D6:
                bset    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_101EA
                bclr    #$05, Obj_Status(A0)                             ; $0022
                move.b  #$01, Obj_Ani_Flag(A0)                           ; $001D
loc_101EA:
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   loc_101FC
                add.w   D5, D0
                cmp.w   D1, D0
                ble.s   loc_101FC
                move.w  D1, D0
loc_101FC:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_10208:
                sub.w   D4, D0
                bcc.s   loc_10210
                move.w  #$FF80, D0
loc_10210:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   loc_10252
                cmpi.w  #$0400, D0
                blt.s   loc_10252
                move.b  #$0D, Obj_Ani_Number(A0)                         ; $001C
                bclr    #$00, Obj_Status(A0)                             ; $0022
                move.w  #$00A4, D0
                jsr     (Play_Sfx)                             ; loc_1512
                cmpi.b  #$0C, Obj_Subtype(A0)                            ; $0028
                bcs.s   loc_10252
                move.b  #$06, ($FFFFB424).w
                move.b  #$15, ($FFFFB41A).w
loc_10252:
                rts
loc_10254:
                move.w  Obj_Inertia(A0), D0                              ; $0014
                bmi.s   loc_10288
                bclr    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1026E
                bclr    #$05, Obj_Status(A0)                             ; $0022
                move.b  #$01, Obj_Ani_Flag(A0)                           ; $001D
loc_1026E:
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   loc_1027C
                sub.w   D5, D0
                cmp.w   D6, D0
                bge.s   loc_1027C
                move.w  D6, D0
loc_1027C:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_10288:
                add.w   D4, D0
                bcc.s   loc_10290
                move.w  #$0080, D0
loc_10290:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   loc_102D2
                cmpi.w  #$FC00, D0
                bgt.s   loc_102D2
                move.b  #$0D, Obj_Ani_Number(A0)                         ; $001C
                bset    #$00, Obj_Status(A0)                             ; $0022
                move.w  #$00A4, D0
                jsr     (Play_Sfx)                             ; loc_1512
                cmpi.b  #$0C, Obj_Subtype(A0)                            ; $0028
                bcs.s   loc_102D2
                move.b  #$06, ($FFFFB424).w
                move.b  #$15, ($FFFFB41A).w
loc_102D2:
                rts
;-------------------------------------------------------------------------------
Sonic_RollSpeed:                                               ; loc_102D4
                move.w  (Sonic_Max_Speed).w, D6                      ; $FFFFF760
                asl.w   #$01, D6
                move.w  (Sonic_Acceleration).w, D5                   ; $FFFFF762
                asr.w   #$01, D5
                move.w  #$0020, D4
                tst.b   (Player_Status_Flag).w                       ; $FFFFF7CA
                bne     loc_1034E
                tst.w   Obj_Player_Control(A0)                           ; $002E
                bne.s   loc_1030A
                btst    #$02, ($FFFFF602).w
                beq.s   loc_102FE
                bsr     loc_10384
loc_102FE:
                btst    #$03, ($FFFFF602).w
                beq.s   loc_1030A
                bsr     loc_103A8
loc_1030A:
                move.w  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_1032C
                bmi.s   loc_10320
                sub.w   D5, D0
                bcc.s   loc_1031A
                move.w  #$0000, D0
loc_1031A:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                bra.s   loc_1032C
loc_10320:
                add.w   D5, D0
                bcc.s   loc_10328
                move.w  #$0000, D0
loc_10328:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
loc_1032C:
                tst.w   Obj_Inertia(A0)                                  ; $0014
                bne.s   loc_1034E
                bclr    #$02, Obj_Status(A0)                             ; $0022
                move.b  #$13, Obj_Height_2(A0)                           ; $0016
                move.b  #$09, Obj_Width_2(A0)                            ; $0017
                move.b  #$05, Obj_Ani_Number(A0)                         ; $001C
                subq.w  #$05, Obj_Y(A0)                                  ; $000C
loc_1034E:
                move.b  Obj_Angle(A0), D0                                ; $0026
                jsr     (CalcSine)                             ; loc_3282
                muls.w  Obj_Inertia(A0), D0                              ; $0014
                asr.l   #$08, D0
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
                muls.w  Obj_Inertia(A0), D1                              ; $0014
                asr.l   #$08, D1
                cmpi.w  #$1000, D1
                ble.s   loc_10372
                move.w  #$1000, D1
loc_10372:
                cmpi.w  #$F000, D1
                bge.s   loc_1037C
                move.w  #$F000, D1
loc_1037C:
                move.w  D1, Obj_Speed(A0)                                ; $0010
                bra     loc_1015C
loc_10384:
                move.w  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_1038C
                bpl.s   loc_1039A
loc_1038C:
                bset    #$00, Obj_Status(A0)                             ; $0022
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_1039A:
                sub.w   D4, D0
                bcc.s   loc_103A2
                move.w  #$FF80, D0
loc_103A2:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                rts
loc_103A8:
                move.w  Obj_Inertia(A0), D0                              ; $0014
                bmi.s   loc_103BC
                bclr    #$00, Obj_Status(A0)                             ; $0022
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_103BC:
                add.w   D4, D0
                bcc.s   loc_103C4
                move.w  #$0080, D0
loc_103C4:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                rts
;-------------------------------------------------------------------------------
Sonic_ChgJumpDir:                                              ; loc_103CA
                move.w  (Sonic_Max_Speed).w, D6                      ; $FFFFF760
                move.w  (Sonic_Acceleration).w, D5                   ; $FFFFF762
                asl.w   #$01, D5
                btst    #$04, Obj_Status(A0)                             ; $0022
                bne.s   loc_10414
                move.w  Obj_Speed(A0), D0                                ; $0010
                btst    #$02, ($FFFFF602).w
                beq.s   loc_103FA
                bset    #$00, Obj_Status(A0)                             ; $0022
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   loc_103FA
                move.w  D1, D0
loc_103FA:
                btst    #$03, ($FFFFF602).w
                beq.s   loc_10410
                bclr    #$00, Obj_Status(A0)                             ; $0022
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   loc_10410
                move.w  D6, D0
loc_10410:
                move.w  D0, Obj_Speed(A0)                                ; $0010
loc_10414:
                cmpi.w  #$0060, ($FFFFEED8).w
                beq.s   loc_10426
                bcc.s   loc_10422
                addq.w  #$04, ($FFFFEED8).w
loc_10422:
                subq.w  #$02, ($FFFFEED8).w
loc_10426:
                cmpi.w  #$FC00, Obj_Speed_Y(A0)                          ; $0012
                bcs.s   loc_10454
                move.w  Obj_Speed(A0), D0                                ; $0010
                move.w  D0, D1
                asr.w   #$05, D1
                beq.s   loc_10454
                bmi.s   loc_10448
                sub.w   D1, D0
                bcc.s   loc_10442
                move.w  #$0000, D0
loc_10442:
                move.w  D0, Obj_Speed(A0)                                ; $0010
                rts
loc_10448:
                sub.w   D1, D0
                bcs.s   loc_10450
                move.w  #$0000, D0
loc_10450:
                move.w  D0, Obj_Speed(A0)                                ; $0010
loc_10454:
                rts
;-------------------------------------------------------------------------------
Sonic_LevelBoundaries:                                         ; loc_10456
                move.l  Obj_X(A0), D1                                    ; $0008
                move.w  Obj_Speed(A0), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D1
                swap.w  D1
                move.w  (Sonic_Level_Limits_Min_X).w, D0             ; $FFFFEEC8
                addi.w  #$0010, D0
                cmp.w   D1, D0
                bhi.s   loc_1049C
                move.w  (Sonic_Level_Limits_Max_X).w, D0             ; $FFFFEECA
                addi.w  #$0128, D0
                tst.b   (Boss_Flag).w                                ; $FFFFF7AA
                bne.s   loc_10484
                addi.w  #$0040, D0
loc_10484:
                cmp.w   D1, D0
                bls.s   loc_1049C
loc_10488:
                move.w  (Sonic_Level_Limits_Max_Y).w, D0             ; $FFFFEECE
                addi.w  #$00E0, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                blt.s   loc_10498
                rts
loc_10498:
                bra     Kill_Sonic                             ; loc_11128
loc_1049C:
                move.w  D0, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Sub_Y(A0)                            ; $000A
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.w  #$0000, Obj_Inertia(A0)                          ; $0014
                bra.s   loc_10488
;-------------------------------------------------------------------------------
Sonic_Roll:                                                    ; loc_104B4
                tst.b   (Player_Status_Flag).w                       ; $FFFFF7CA
                bne.s   loc_104DA
                move.w  Obj_Inertia(A0), D0                              ; $0014
                bpl.s   loc_104C2
                neg.w   D0
loc_104C2:
                cmpi.w  #$0080, D0
                bcs.s   loc_104DA
                move.b  ($FFFFF602).w, D0
                andi.b  #$0C, D0
                bne.s   loc_104DA
                btst    #$01, ($FFFFF602).w
                bne.s   loc_104DC
loc_104DA:
                rts
loc_104DC:
                btst    #$02, Obj_Status(A0)                             ; $0022
                beq.s   loc_104E6
                rts
loc_104E6:
                bset    #$02, Obj_Status(A0)                             ; $0022
                move.b  #$0E, Obj_Height_2(A0)                           ; $0016
                move.b  #$07, Obj_Width_2(A0)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                addq.w  #$05, Obj_Y(A0)                                  ; $000C
                move.w  #$00BE, D0
                jsr     (Play_Sfx)                             ; loc_1512
                tst.w   Obj_Inertia(A0)                                  ; $0014
                bne.s   loc_10518
                move.w  #$0200, Obj_Inertia(A0)                          ; $0014
loc_10518:
                rts
;-------------------------------------------------------------------------------
Sonic_Jump:                                                    ; loc_1051A:
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq     loc_105C8
                moveq   #$00, D0
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$80, D0
                bsr     CalcRoomOverHead                       ; loc_1405E
                cmpi.w  #$0006, D1
                blt     loc_105C8
                move.w  #$0680, D2
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                beq.s   loc_1054A
                move.w  #$0800, D2
loc_1054A:
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_10556
                move.w  #$0380, D2
loc_10556:
                moveq   #$00, D0
                move.b  Obj_Angle(A0), D0                                ; $0026
                subi.b  #$40, D0
                jsr     (CalcSine)                             ; loc_3282
                muls.w  D2, D1
                asr.l   #$08, D1
                add.w   D1, Obj_Speed(A0)                                ; $0010
                muls.w  D2, D0
                asr.l   #$08, D0
                add.w   D0, Obj_Speed_Y(A0)                              ; $0012
                bset    #$01, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A0)                             ; $0022
                addq.l  #$04, A7
                move.b  #$01, Obj_Player_Jump(A0)                        ; $003C
                clr.b   Obj_Player_St_Convex(A0)                         ; $0038
                move.w  #$00A0, D0
                jsr     (Play_Sfx)                             ; loc_1512
                move.b  #$13, Obj_Height_2(A0)                           ; $0016
                move.b  #$09, Obj_Width_2(A0)                            ; $0017
                btst    #$02, Obj_Status(A0)                             ; $0022
                bne.s   loc_105CA
                move.b  #$0E, Obj_Height_2(A0)                           ; $0016
                move.b  #$07, Obj_Width_2(A0)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                bset    #$02, Obj_Status(A0)                             ; $0022
                addq.w  #$05, Obj_Y(A0)                                  ; $000C
loc_105C8:
                rts
loc_105CA:
                bset    #$04, Obj_Status(A0)                             ; $0022
                rts
;-------------------------------------------------------------------------------
Sonic_JumpHeight:                                              ; loc_105D2
                tst.b   Obj_Player_Jump(A0)                              ; $003C
                beq.s   loc_105FE
                move.w  #$FC00, D1
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_105E8
                move.w  #$FE00, D1
loc_105E8:
                cmp.w   Obj_Speed_Y(A0), D1                              ; $0012
                ble.s   loc_105FC
                move.b  ($FFFFF602).w, D0
                andi.b  #$70, D0
                bne.s   loc_105FC
                move.w  D1, Obj_Speed_Y(A0)                              ; $0012
loc_105FC:
                rts
loc_105FE:
                cmpi.w  #$F040, Obj_Speed_Y(A0)                          ; $0012
                bge.s   loc_1060C
                move.w  #$F040, Obj_Speed_Y(A0)                          ; $0012
loc_1060C:
                rts
;-------------------------------------------------------------------------------
Sonic_Spindash:                                                ; loc_1060E
                tst.b   Obj_Player_Spdsh_Flag(A0)                        ; $0039
                bne.s   loc_10656
                cmpi.b  #$08, Obj_Ani_Number(A0)                         ; $001C
                bne.s   loc_10654
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq     loc_10654
                move.b  #$09, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$00E0, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addq.l  #$04, A7
                move.b  #$01, Obj_Player_Spdsh_Flag(A0)                  ; $0039
                move.w  #$0000, Obj_Player_Spdsh_Cnt(A0)                 ; $003A
                cmpi.b  #$0C, Obj_Subtype(A0)                            ; $0028
                bcs.s   loc_10654
                move.b  #$02, ($FFFFB41C).w
loc_10654:
                rts
loc_10656:
                move.b  ($FFFFF602).w, D0
                btst    #$01, D0
                bne.s   loc_106DA
                move.b  #$0E, Obj_Height_2(A0)                           ; $0016
                move.b  #$07, Obj_Width_2(A0)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                addq.w  #$05, Obj_Y(A0)                                  ; $000C
                move.b  #$00, Obj_Player_Spdsh_Flag(A0)                  ; $0039
                move.w  #$2000, ($FFFFEED0).w
                moveq   #$00, D0
                move.b  Obj_Player_Spdsh_Cnt(A0), D0                     ; $003A
                add.w   D0, D0
                move.w  Sonic_Spindash_Speed(PC, D0), Obj_Inertia(A0) ; loc_106B6, $0014
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                beq.s   loc_1069C
                move.w  Super_Sonic_Spindash_Speed(PC, D0), Obj_Inertia(A0) ; loc_106C8, $0014
loc_1069C:
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_106A8
                neg.w   Obj_Inertia(A0)                                  ; $0014
loc_106A8:
                bset    #$02, Obj_Status(A0)                             ; $0022
                move.b  #$00, ($FFFFB41C).w
                bra.s   loc_10722
;-------------------------------------------------------------------------------
Sonic_Spindash_Speed:                                          ; loc_106B6
                dc.w    $0800, $0880, $0900, $0980, $0A00, $0A80, $0B00, $0B80
                dc.w    $0C00
;-------------------------------------------------------------------------------
Super_Sonic_Spindash_Speed:                                    ; loc_106C8
                dc.w    $0B00, $0B80, $0C00, $0C80, $0D00, $0D80, $0E00, $0E80
                dc.w    $0F00
;-------------------------------------------------------------------------------
loc_106DA:
                tst.w   Obj_Player_Spdsh_Cnt(A0)                         ; $003A
                beq.s   loc_106F2
                move.w  Obj_Player_Spdsh_Cnt(A0), D0                     ; $003A
                lsr.w   #$05, D0
                sub.w   D0, Obj_Player_Spdsh_Cnt(A0)                     ; $003A
                bcc.s   loc_106F2
                move.w  #$0000, Obj_Player_Spdsh_Cnt(A0)                 ; $003A
loc_106F2:
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq     loc_10722
                move.w  #$0900, Obj_Ani_Number(A0)                       ; $001C
                move.w  #$00E0, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addi.w  #$0200, Obj_Player_Spdsh_Cnt(A0)                 ; $003A
                cmpi.w  #$0800, Obj_Player_Spdsh_Cnt(A0)                 ; $003A
                bcs.s   loc_10722
                move.w  #$0800, Obj_Player_Spdsh_Cnt(A0)                 ; $003A
loc_10722:
                addq.l  #$04, A7
                rts
;-------------------------------------------------------------------------------
Sonic_SlopeResist:                                             ; loc_10726
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   loc_1075A
                move.b  Obj_Angle(A0), D0                                ; $0026
                jsr     (CalcSine)                             ; loc_3282
                muls.w  #$0020, D0
                asr.l   #$08, D0
                tst.w   Obj_Inertia(A0)                                  ; $0014
                beq.s   loc_1075A
                bmi.s   loc_10756
                tst.w   D0
                beq.s   loc_10754
                add.w   D0, Obj_Inertia(A0)                              ; $0014
loc_10754:
                rts
loc_10756:
                add.w   D0, Obj_Inertia(A0)                              ; $0014
loc_1075A:
                rts
;-------------------------------------------------------------------------------
Sonic_RollRepel:                                               ; loc_1075C
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   loc_10796
                move.b  Obj_Angle(A0), D0                                ; $0026
                jsr     (CalcSine)                             ; loc_3282
                muls.w  #$0050, D0
                asr.l   #$08, D0
                tst.w   Obj_Inertia(A0)                                  ; $0014
                bmi.s   loc_1078C
                tst.w   D0
                bpl.s   loc_10786
                asr.l   #$02, D0
loc_10786:
                add.w   D0, Obj_Inertia(A0)                              ; $0014
                rts
loc_1078C:
                tst.w   D0
                bmi.s   loc_10792
                asr.l   #$02, D0
loc_10792:
                add.w   D0, Obj_Inertia(A0)                              ; $0014
loc_10796:
                rts
;-------------------------------------------------------------------------------
Sonic_SlopeRepel:                                              ; loc_10798
                nop
                tst.b   Obj_Player_St_Convex(A0)                         ; $0038
                bne.s   loc_107D2
                tst.w   Obj_Player_Control(A0)                           ; $002E
                bne.s   loc_107D4
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   loc_107D2
                move.w  Obj_Inertia(A0), D0                              ; $0014
                bpl.s   loc_107BC
                neg.w   D0
loc_107BC:
                cmpi.w  #$0280, D0
                bcc.s   loc_107D2
                clr.w   Obj_Inertia(A0)                                  ; $0014
                bset    #$01, Obj_Status(A0)                             ; $0022
                move.w  #$001E, Obj_Player_Control(A0)                   ; $002E
loc_107D2:
                rts
loc_107D4:
                subq.w  #$01, Obj_Player_Control(A0)                     ; $002E
                rts
;-------------------------------------------------------------------------------
Sonic_JumpAngle:                                               ; loc_107DA
                move.b  Obj_Angle(A0), D0                                ; $0026
                beq.s   loc_107F4
                bpl.s   loc_107EA
                addq.b  #$02, D0
                bcc.s   loc_107E8
                moveq   #$00, D0
loc_107E8:
                bra.s   loc_107F0
loc_107EA:
                subq.b  #$02, D0
                bcc.s   loc_107F0
                moveq   #$00, D0
loc_107F0:
                move.b  D0, Obj_Angle(A0)                                ; $0026
loc_107F4:
                move.b  Obj_Flip_Angle(A0), D0                           ; $0027
                beq.s   loc_10838
                tst.w   Obj_Inertia(A0)                                  ; $0014
                bmi.s   loc_10818
loc_10800:
                move.b  Obj_Player_Flip_Speed(A0), D1                    ; $002D
                add.b   D1, D0
                bcc.s   loc_10816
                subq.b  #$01, Obj_P_Flips_Remaining(A0)                  ; $002C
                bcc.s   loc_10816
                move.b  #$00, Obj_P_Flips_Remaining(A0)                  ; $002C
                moveq   #$00, D0
loc_10816:
                bra.s   loc_10834
loc_10818:
                tst.b   Obj_Player_Flip_Flag(A0)                         ; $0029
                bne.s   loc_10800
                move.b  Obj_Player_Flip_Speed(A0), D1                    ; $002D
                sub.b   D1, D0
                bcc.s   loc_10834
                subq.b  #$01, Obj_P_Flips_Remaining(A0)                  ; $002C
                bcc.s   loc_10834
                move.b  #$00, Obj_P_Flips_Remaining(A0)                  ; $002C
                moveq   #$00, D0
loc_10834:
                move.b  D0, Obj_Flip_Angle(A0)                           ; $0027
loc_10838:
                rts
;-------------------------------------------------------------------------------
Sonic_Floor:                                                   ; loc_1083A
                move.l  #Primary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD000, $FFFFF796
                cmpi.b  #$0C, Obj_Player_Top_Solid(A0)                   ; $003E
                beq.s   loc_10852
                move.l  #Secundary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD600, $FFFFF796
loc_10852:
                move.b  Obj_Player_LRB_Solid(A0), D5                     ; $003F
                move.w  Obj_Speed(A0), D1                                ; $0010
                move.w  Obj_Speed_Y(A0), D2                              ; $0012
                jsr     (CalcAngle)                            ; loc_351A
                move.b  D0, Obj_Player_Status(A0)                        ; $002B
                subi.b  #$20, D0
                andi.b  #$C0, D0
                cmpi.b  #$40, D0
                beq     loc_10926
                cmpi.b  #$80, D0
                beq     loc_10988
                cmpi.b  #$C0, D0
                beq     loc_109E4
                bsr     Player_HitWall                         ; loc_14468
                tst.w   D1
                bpl.s   loc_1089A
                sub.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
loc_1089A:
                bsr     loc_142E6
                tst.w   D1
                bpl.s   loc_108AC
                add.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
loc_108AC:
                bsr     loc_140A2
                tst.w   D1
                bpl.s   loc_10924
                move.b  Obj_Speed_Y(A0), D2                              ; $0012
                addq.b  #$08, D2
                neg.b   D2
                cmp.b   D2, D1
                bge.s   loc_108C4
                cmp.b   D2, D0
                blt.s   loc_10924
loc_108C4:
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  D3, Obj_Angle(A0)                                ; $0026
                bsr     Sonic_ResetOnFloor                     ; loc_10A46
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   loc_10902
                move.b  D3, D0
                addi.b  #$10, D0
                andi.b  #$20, D0
                beq.s   loc_108F4
                asr.w   Obj_Speed_Y(A0)                                  ; $0012
                bra.s   loc_10916
loc_108F4:
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.w  Obj_Speed(A0), Obj_Inertia(A0)            ; $0010, $0014
                rts
loc_10902:
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                cmpi.w  #$0FC0, Obj_Speed_Y(A0)                          ; $0012
                ble.s   loc_10916
                move.w  #$0FC0, Obj_Speed_Y(A0)                          ; $0012
loc_10916:
                move.w  Obj_Speed_Y(A0), Obj_Inertia(A0)          ; $0012, $0014
                tst.b   D3
                bpl.s   loc_10924
                neg.w   Obj_Inertia(A0)                                  ; $0014
loc_10924:
                rts
loc_10926:
                bsr     Player_HitWall                         ; loc_14468
                tst.w   D1
                bpl.s   loc_10940
                sub.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.w  Obj_Speed_Y(A0), Obj_Inertia(A0)          ; $0012, $0014
                rts
loc_10940:
                bsr     Player_DontRunOnWalls                  ; loc_14338
                tst.w   D1
                bpl.s   loc_1095A
                sub.w   D1, Obj_Y(A0)                                    ; $000C
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bpl.s   loc_10958
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
loc_10958:
                rts
loc_1095A:
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_10986
                bsr     loc_140A2
                tst.w   D1
                bpl.s   loc_10986
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  D3, Obj_Angle(A0)                                ; $0026
                bsr     Sonic_ResetOnFloor                     ; loc_10A46
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.w  Obj_Speed(A0), Obj_Inertia(A0)            ; $0010, $0014
loc_10986:
                rts
loc_10988:
                bsr     Player_HitWall                         ; loc_14468
                tst.w   D1
                bpl.s   loc_1099A
                sub.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
loc_1099A:
                bsr     loc_142E6
                tst.w   D1
                bpl.s   loc_109AC
                add.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
loc_109AC:
                bsr     Player_DontRunOnWalls                  ; loc_14338
                tst.w   D1
                bpl.s   loc_109E2
                sub.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   loc_109CC
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                rts
loc_109CC:
                move.b  D3, Obj_Angle(A0)                                ; $0026
                bsr     Sonic_ResetOnFloor                     ; loc_10A46
                move.w  Obj_Speed_Y(A0), Obj_Inertia(A0)          ; $0012, $0014
                tst.b   D3
                bpl.s   loc_109E2
                neg.w   Obj_Inertia(A0)                                  ; $0014
loc_109E2:
                rts
loc_109E4:
                bsr     loc_142E6
                tst.w   D1
                bpl.s   loc_109FE
                add.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.w  Obj_Speed_Y(A0), Obj_Inertia(A0)          ; $0012, $0014
                rts
loc_109FE:
                bsr     Player_DontRunOnWalls                  ; loc_14338
                tst.w   D1
                bpl.s   loc_10A18
                sub.w   D1, Obj_Y(A0)                                    ; $000C
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bpl.s   loc_10A16
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
loc_10A16:
                rts
loc_10A18:
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_10A44
                bsr     loc_140A2
                tst.w   D1
                bpl.s   loc_10A44
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  D3, Obj_Angle(A0)                                ; $0026
                bsr     Sonic_ResetOnFloor                     ; loc_10A46
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.w  Obj_Speed(A0), Obj_Inertia(A0)            ; $0010, $0014
loc_10A44:
                rts
;-------------------------------------------------------------------------------
Sonic_ResetOnFloor:                                            ; loc_10A46
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$01, Obj_Status(A0)                             ; $0022
                bclr    #$04, Obj_Status(A0)                             ; $0022
                btst    #$02, Obj_Status(A0)                             ; $0022
                beq.s   loc_10A7C
                bclr    #$02, Obj_Status(A0)                             ; $0022
                move.b  #$13, Obj_Height_2(A0)                           ; $0016
                move.b  #$09, Obj_Width_2(A0)                            ; $0017
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                subq.w  #$05, Obj_Y(A0)                                  ; $000C
loc_10A7C:
                move.b  #$00, Obj_Player_Jump(A0)                        ; $003C
                move.w  #$0000, ($FFFFF7D0).w
                move.b  #$00, Obj_Flip_Angle(A0)                         ; $0027
                move.b  #$00, Obj_Player_Flip_Flag(A0)                   ; $0029
                move.b  #$00, Obj_P_Flips_Remaining(A0)                  ; $002C
                cmpi.b  #$14, Obj_Ani_Number(A0)                         ; $001C
                bne.s   loc_10AA8
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
loc_10AA8:
                rts
;-------------------------------------------------------------------------------
Sonic_Hurt:
		tst.b   Obj_Routine_2(A0)
		bmi     loc_10B22
		jsr     (SpeedToPos)
		addi.w  #$30, Obj_Speed_Y(A0)
		btst    #6, Obj_Status(A0)			; Is Sonic underwater?
		beq.s   loc_10ACC				; If not, branch
		subi.w  #$20, Obj_Speed_Y(A0)			; Set underwater gravity

loc_10ACC:
		bsr     Sonic_HurtStop
		bsr     Sonic_LevelBoundaries
		bsr     CopySonicMovesForTails
		bsr     Sonic_Animate
		bsr     Load_Sonic_Dynamic_PLC
		jmp     (DisplaySprite)
;-------------------------------------------------------------------------------
Sonic_HurtStop:
		move.w  (Sonic_Level_Limits_Max_Y).w, D0	; Has Sonic gone past the bottom level boundary?
		addi.w  #224, D0
		cmp.w   Obj_Y(A0), D0
		bcs     Kill_Sonic				; If yes, branch

		bsr     Sonic_Floor
		btst    #$1, Obj_Status(A0)			; Is Sonic still in the air?
		bne.s   loc_10B20				; If yes, branch
		moveq   #0, D0
		move.w  D0, Obj_Speed_Y(A0)
		move.w  D0, Obj_Speed(A0)
		move.w  D0, Obj_Inertia(A0)
		move.b  #0, Obj_Ani_Number(A0)			; Set animation to walking animation
		subq.b  #2, Obj_Routine(A0)			; Subtract to the main routine (0)
		move.w  #120, Obj_P_Invunerblt_Time(A0)		; Set hurt time
loc_10B20:
		rts
;-------------------------------------------------------------------------------
loc_10B22:
		subq.b  #2, Obj_Routine(A0)
		move.b  #0, Obj_Routine_2(A0)
		bsr     CopySonicMovesForTails
		bsr     Sonic_Animate
		bsr     Load_Sonic_Dynamic_PLC
		jmp     (DisplaySprite)
;-------------------------------------------------------------------------------
Sonic_Death:
                bsr     Sonic_GameOver
                jsr     (ObjectFall)
                bsr     CopySonicMovesForTails
                bsr     Sonic_Animate
                bsr     Load_Sonic_Dynamic_PLC
                jmp     (DisplaySprite)
;-------------------------------------------------------------------------------
Sonic_GameOver:
		move.w  (Sonic_Level_Limits_Max_Y).w, D0	; Has Sonic gone past the bottom level boundary?
		addi.w  #256, D0
		cmp.w   Obj_Y(A0), D0
		bcc     loc_10BDC				; If not, branch

		move.w  #$FFC8, Obj_Speed_Y(A0)
		addq.b  #$2, Obj_Routine(A0)
		clr.b   (HUD_Timer_Refresh_Flag).w		; Stop the level timer
		addq.b  #$1, (HUD_Life_Refresh_Flag).w		; Lose 1 life
		subq.b  #$1, (Life_Count).w
		bne.s   loc_10BB0				; Branch if it's not a Game Over
		move.w  #$0000, Obj_Player_Spdsh_Cnt(A0)
		move.b  #$39, ($FFFFB080).w			; Load Obj39 (Game Over text)
		move.b  #$39, ($FFFFB0C0).w			; Load Obj39 (Game Over text)
		move.b  #$01, ($FFFFB0DA).w
		clr.b   (Time_Over_Flag).w
loc_10B9E:
                move.w  #$9B, D0				; Play Game Over music
                jsr     (Play_Music)
                moveq   #$3, D0					; Load Game Over PLCs
                jmp     (LoadPLC)
loc_10BB0:
                move.w  #$003C, Obj_Player_Spdsh_Cnt(A0)
                tst.b   (Time_Over_Flag).w			; Is it a Time Over?
                beq.s   loc_10BDC				; If not, branch
                move.w  #$0000, Obj_Player_Spdsh_Cnt(A0)
                move.b  #$39, ($FFFFB080).w			; Load Obj39 (Time Over text)
                move.b  #$39, ($FFFFB0C0).w			; Load Obj39 (Time Over text)
                move.b  #$02, ($FFFFB09A).w
                move.b  #$03, ($FFFFB0DA).w
                bra.s   loc_10B9E
loc_10BDC:
                rts
;-------------------------------------------------------------------------------
Sonic_ResetLevel:                                              ; loc_10BDE
                tst.w   Obj_Player_Spdsh_Cnt(A0)                         ; $003A
                beq.s   loc_10BF0
                subq.w  #$01, Obj_Player_Spdsh_Cnt(A0)                   ; $003A
                bne.s   loc_10BF0
                move.w  #$0001, ($FFFFFE02).w
loc_10BF0:
                rts
;-------------------------------------------------------------------------------
Sonic_Animate:                                                 ; loc_10BF2
                lea     (SonicAniData), A1
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                beq.s   loc_10C04
                lea     (SuperSonicAniData), A1
loc_10C04:
                moveq   #$00, D0
                move.b  Obj_Ani_Number(A0), D0                           ; $001C
                cmp.b   Obj_Ani_Flag(A0), D0                             ; $001D
                beq.s   loc_10C26
                move.b  D0, Obj_Ani_Flag(A0)                             ; $001D
                move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
                move.b  #$00, Obj_Ani_Time(A0)                           ; $001E
                bclr    #$05, Obj_Status(A0)                             ; $0022
loc_10C26:
                add.w   D0, D0
                adda.w  $00(A1, D0), A1
                move.b  (A1), D0
                bmi.s   loc_10C96
                move.b  Obj_Status(A0), D1                               ; $0022
                andi.b  #$01, D1
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                or.b    D1, Obj_Flags(A0)                                ; $0001
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_10C64
                move.b  D0, Obj_Ani_Time(A0)                             ; $001E
loc_10C4C:
                moveq   #$00, D1
                move.b  Obj_Ani_Frame(A0), D1                            ; $001B
                move.b  $01(A1, D1), D0
                cmpi.b  #$F0, D0
                bcc.s   loc_10C66
loc_10C5C:
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                addq.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
loc_10C64:
                rts
loc_10C66:
                addq.b  #$01, D0
                bne.s   loc_10C76
                move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
                move.b  Obj_Flags(A1), D0                                ; $0001
                bra.s   loc_10C5C
loc_10C76:
                addq.b  #$01, D0
                bne.s   loc_10C8A
                move.b  $02(A1, D1), D0
                sub.b   D0, Obj_Ani_Frame(A0)                            ; $001B
                sub.b   D0, D1
                move.b  $01(A1, D1), D0
                bra.s   loc_10C5C
loc_10C8A:
                addq.b  #$01, D0
                bne.s   loc_10C94
                move.b  $02(A1, D1), Obj_Ani_Number(A0)                  ; $001C
loc_10C94:
                rts
loc_10C96:
                addq.b  #$01, D0
                bne     loc_10E1E
                moveq   #$00, D0
                move.b  Obj_Flip_Angle(A0), D0                           ; $0027
                bne     loc_10DB8
                moveq   #$00, D1
                move.b  Obj_Angle(A0), D0                                ; $0026
                bmi.s   loc_10CB2
                beq.s   loc_10CB2
                subq.b  #$01, D0
loc_10CB2:
                move.b  Obj_Status(A0), D2                               ; $0022
                andi.b  #$01, D2
                bne.s   loc_10CBE
                not.b   D0
loc_10CBE:
                addi.b  #$10, D0
                bpl.s   loc_10CC6
                moveq   #$03, D1
loc_10CC6:
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                eor.b   D1, D2
                or.b    D2, Obj_Flags(A0)                                ; $0001
                btst    #$05, Obj_Status(A0)                             ; $0022
                bne     loc_10E6A
                lsr.b   #$04, D0
                andi.b  #$06, D0
                move.w  Obj_Inertia(A0), D2                              ; $0014
                bpl.s   loc_10CEA
                neg.w   D2
loc_10CEA:
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                bne.s   loc_10D46
                lea     (SonAni_Run), A1
                cmpi.w  #$0600, D2
                bcc.s   loc_10D04
                lea     (SonAni_Walk), A1
                add.b   D0, D0
loc_10D04:
                add.b   D0, D0
                move.b  D0, D3
                moveq   #$00, D1
                move.b  Obj_Ani_Frame(A0), D1                            ; $001B
                move.b  $01(A1, D1), D0
                cmpi.b  #$FF, D0
                bne.s   loc_10D22
                move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
                move.b  Obj_Flags(A1), D0                                ; $0001
loc_10D22:
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                add.b   D3, Obj_Map_Id(A0)                               ; $001A
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_10D44
                neg.w   D2
                addi.w  #$0800, D2
                bpl.s   loc_10D3A
                moveq   #$00, D2
loc_10D3A:
                lsr.w   #$08, D2
                move.b  D2, Obj_Ani_Time(A0)                             ; $001E
                addq.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
loc_10D44:
                rts
loc_10D46:
                lea     (SupSonAni_Run), A1
                cmpi.w  #$0800, D2
                bcc.s   loc_10D5E
                lea     (SupSonAni_Walk), A1
                add.b   D0, D0
                add.b   D0, D0
                bra.s   loc_10D60
loc_10D5E:
                lsr.b   #$01, D0
loc_10D60:
                move.b  D0, D3
                moveq   #$00, D1
                move.b  Obj_Ani_Frame(A0), D1                            ; $001B
                move.b  $01(A1, D1), D0
                cmpi.b  #$FF, D0
                bne.s   loc_10D7C
                move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
                move.b  Obj_Flags(A1), D0                                ; $0001
loc_10D7C:
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                add.b   D3, Obj_Map_Id(A0)                               ; $001A
                move.b  ($FFFFFE05).w, D1
                andi.b  #$03, D1
                bne.s   loc_10D9C
                cmpi.b  #$B5, Obj_Map_Id(A0)                             ; $001A
                bcc.s   loc_10D9C
                addi.b  #$20, Obj_Map_Id(A0)                             ; $001A
loc_10D9C:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_10DB6
                neg.w   D2
                addi.w  #$0800, D2
                bpl.s   loc_10DAC
                moveq   #$00, D2
loc_10DAC:
                lsr.w   #$08, D2
                move.b  D2, Obj_Ani_Time(A0)                             ; $001E
                addq.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
loc_10DB6:
                rts
loc_10DB8:
                move.b  Obj_Flip_Angle(A0), D0                           ; $0027
                moveq   #$00, D1
                move.b  Obj_Status(A0), D2                               ; $0022
                andi.b  #$01, D2
                bne.s   loc_10DE6
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                addi.b  #$0B, D0
                divu.w  #$0016, D0
                addi.b  #$5F, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.b  #$00, Obj_Ani_Time(A0)                           ; $001E
                rts
loc_10DE6:
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                tst.b   Obj_Player_Flip_Flag(A0)                         ; $0029
                beq.s   loc_10DFE
                ori.b   #$01, Obj_Flags(A0)                              ; $0001
                addi.b  #$0B, D0
                bra.s   loc_10E0A
loc_10DFE:
                ori.b   #$03, Obj_Flags(A0)                              ; $0001
                neg.b   D0
                addi.b  #$8F, D0
loc_10E0A:
                divu.w  #$0016, D0
                addi.b  #$5F, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.b  #$00, Obj_Ani_Time(A0)                           ; $001E
                rts
loc_10E1E:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl     loc_10C64
                addq.b  #$01, D0
                bne.s   loc_10E6A
                move.w  Obj_Inertia(A0), D2                              ; $0014
                bpl.s   loc_10E32
                neg.w   D2
loc_10E32:
                lea     (SonAni_Roll2), A1
                cmpi.w  #$0600, D2
                bcc.s   loc_10E44
                lea     (SonAni_Roll), A1
loc_10E44:
                neg.w   D2
                addi.w  #$0400, D2
                bpl.s   loc_10E4E
                moveq   #$00, D2
loc_10E4E:
                lsr.w   #$08, D2
                move.b  D2, Obj_Ani_Time(A0)                             ; $001E
                move.b  Obj_Status(A0), D1                               ; $0022
                andi.b  #$01, D1
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                or.b    D1, Obj_Flags(A0)                                ; $0001
                bra     loc_10C4C
loc_10E6A:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl     loc_10C64
                move.w  Obj_Inertia(A0), D2                              ; $0014
                bmi.s   loc_10E7A
                neg.w   D2
loc_10E7A:
                addi.w  #$0800, D2
                bpl.s   loc_10E82
                moveq   #$00, D2
loc_10E82:
                lsr.w   #$06, D2
                move.b  D2, Obj_Ani_Time(A0)                             ; $001E
                lea     (SonAni_Push), A1
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                beq.s   loc_10E9A
                lea     (SupSonAni_Push), A1
loc_10E9A:
                move.b  Obj_Status(A0), D1                               ; $0022
                andi.b  #$01, D1
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                or.b    D1, Obj_Flags(A0)                                ; $0001
                bra     loc_10C4C
;-------------------------------------------------------------------------------
;loc_10EB0
SonicAniData:
                dc.w    SonAni_Walk-SonicAniData		;0
                dc.w    SonAni_Run-SonicAniData			;1
                dc.w    SonAni_Roll-SonicAniData		;2
                dc.w    SonAni_Roll2-SonicAniData		;3
                dc.w    SonAni_Push-SonicAniData		;4
                dc.w    SonAni_Wait-SonicAniData		;5
                dc.w    SonAni_Balance-SonicAniData		;6
                dc.w    SonAni_LookUp-SonicAniData		;7
                dc.w    SonAni_Duck-SonicAniData		;8
                dc.w    SonAni_Spindash-SonicAniData		;9
                dc.w    SonAni_Blink-SonicAniData		;$A
                dc.w    SonAni_GetUp-SonicAniData		;$B
                dc.w    SonAni_Balance2-SonicAniData		;$C
                dc.w    SonAni_Stop-SonicAniData		;$D
                dc.w    SonAni_Float-SonicAniData		;$E
                dc.w    SonAni_Float2-SonicAniData		;$F
                dc.w    SonAni_Spring-SonicAniData		;$10
                dc.w    SonAni_Hang-SonicAniData		;$11
                dc.w    SonAni_Dash2-SonicAniData		;$12
                dc.w    SonAni_Dash3-SonicAniData		;$13
                dc.w    SonAni_Hang2-SonicAniData		;$14
                dc.w    SonAni_Bubble-SonicAniData		;$15
                dc.w    SonAni_DeathBW-SonicAniData		;$16
                dc.w    SonAni_Drown-SonicAniData		;$17
                dc.w    SonAni_Death-SonicAniData		;$18
                dc.w    SonAni_Hurt-SonicAniData		;$19
                dc.w    SonAni_Hurt-SonicAniData		;$1A
                dc.w    SonAni_Slide-SonicAniData		;$1B
                dc.w    SonAni_Blank-SonicAniData		;$1C
                dc.w    SonAni_Balance3-SonicAniData		;$1D
                dc.w    SonAni_Balance4-SonicAniData		;$1E
                dc.w    SupSonAni_Transform-SonicAniData	;$1F
SonAni_Walk:
                dc.b    $FF, $0F, $10, $11, $12, $13, $14, $0D
                dc.b    $0E, $FF
SonAni_Run:
                dc.b    $FF, $2D, $2E, $2F, $30, $FF, $FF, $FF
                dc.b    $FF, $FF
SonAni_Roll:
                dc.b    $FE, $3D, $41, $3E, $41, $3F, $41, $40
                dc.b    $41, $FF
SonAni_Roll2:
                dc.b    $FE, $3D, $41, $3E, $41, $3F, $41, $40
                dc.b    $41, $FF
SonAni_Push:
                dc.b    $FD, $48, $49, $4A, $4B, $FF, $FF, $FF
                dc.b    $FF, $FF
SonAni_Wait:
                dc.b    $05, $01, $01, $01, $01, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $01, $01, $02
                dc.b    $03, $03, $03, $03, $03, $04, $04, $04
                dc.b    $05, $05, $05, $04, $04, $04, $05, $05
                dc.b    $05, $04, $04, $04, $05, $05, $05, $04
                dc.b    $04, $04, $05, $05, $05, $06, $06, $06
                dc.b    $06, $06, $06, $06, $06, $06, $06, $04
                dc.b    $04, $04, $05, $05, $05, $04, $04, $04
                dc.b    $05, $05, $05, $04, $04, $04, $05, $05
                dc.b    $05, $04, $04, $04, $05, $05, $05, $06
                dc.b    $06, $06, $06, $06, $06, $06, $06, $06
                dc.b    $06, $04, $04, $04, $05, $05, $05, $04
                dc.b    $04, $04, $05, $05, $05, $04, $04, $04
                dc.b    $05, $05, $05, $04, $04, $04, $05, $05
                dc.b    $05, $06, $06, $06, $06, $06, $06, $06
                dc.b    $06, $06, $06, $04, $04, $04, $05, $05
                dc.b    $05, $04, $04, $04, $05, $05, $05, $04
                dc.b    $04, $04, $05, $05, $05, $04, $04, $04
                dc.b    $05, $05, $05, $06, $06, $06, $06, $06
                dc.b    $06, $06, $06, $06, $06, $07, $08, $08
                dc.b    $08, $09, $09, $09, $FE, $06
SonAni_Balance:
                dc.b    $09, $CC, $CD, $CE, $CD, $FF
SonAni_LookUp:
                dc.b    $05, $0B, $0C, $FE, $01
SonAni_Duck:
                dc.b    $05, $4C, $4D, $FE, $01
SonAni_Spindash:
                dc.b    $00, $42, $43, $42, $44, $42, $45, $42
                dc.b    $46, $42, $47, $FF
SonAni_Blink:
                dc.b    $01, $02, $FD, $00
SonAni_GetUp:
                dc.b    $03, $0A, $FD, $00
SonAni_Balance2:
                dc.b    $03, $C8, $C9, $CA, $CB, $FF
SonAni_Stop:
                dc.b    $05, $D2, $D3, $D4, $D5, $FD, $00
SonAni_Float:
                dc.b    $07, $54, $59, $FF
SonAni_Float2:
                dc.b    $07, $54, $55, $56, $57, $58, $FF
SonAni_Spring:
                dc.b    $2F, $5B, $FD, $00
SonAni_Hang:
                dc.b    $01, $50, $51, $FF
SonAni_Dash2:
                dc.b    $0F, $43, $43, $43, $FE, $01
SonAni_Dash3:
                dc.b    $0F, $43, $44, $FE, $01
SonAni_Hang2:
                dc.b    $13, $6B, $6C, $FF
SonAni_Bubble:
                dc.b    $0B, $5A, $5A, $11, $12, $FD, $00
SonAni_DeathBW:
                dc.b    $20, $5E, $FF
SonAni_Drown:
                dc.b    $20, $5D, $FF
SonAni_Death:
                dc.b    $20, $5C, $FF
SonAni_Hurt:
                dc.b    $40, $4E, $FF
SonAni_Slide:
                dc.b    $09, $4E, $4F, $FF
SonAni_Blank:
                dc.b    $77, $00, $FD, $00
SonAni_Balance3:
                dc.b    $13, $D0, $D1, $FF
SonAni_Balance4:
                dc.b    $03, $CF, $C8, $C9, $CA, $CB, $FE, $04
;-------------------------------------------------------------------------------
SuperSonicAniData:
                dc.w    SupSonAni_Walk-SuperSonicAniData	;0
                dc.w    SupSonAni_Run-SuperSonicAniData		;1
                dc.w    SonAni_Roll-SuperSonicAniData		;3
                dc.w    SonAni_Roll2-SuperSonicAniData		;4
                dc.w    SupSonAni_Push-SuperSonicAniData	;5
                dc.w    SupSonAni_Stand-SuperSonicAniData	;6
                dc.w    SupSonAni_Balance-SuperSonicAniData	;7
                dc.w    SonAni_LookUp-SuperSonicAniData		;8
                dc.w    SupSonAni_Duck-SuperSonicAniData	;9
                dc.w    SonAni_Spindash-SuperSonicAniData	;$A
                dc.w    SonAni_Blink-SuperSonicAniData		;$B
                dc.w    SonAni_GetUp-SuperSonicAniData		;$C
                dc.w    SonAni_Balance2-SuperSonicAniData	;$D
                dc.w    SonAni_Stop-SuperSonicAniData		;$E
                dc.w    SonAni_Float-SuperSonicAniData		;$F
                dc.w    SonAni_Float2-SuperSonicAniData		;$10
                dc.w    SonAni_Spring-SuperSonicAniData		;$11
                dc.w    SonAni_Hang-SuperSonicAniData		;$12
                dc.w    SonAni_Dash2-SuperSonicAniData		;$13
                dc.w    SonAni_Dash3-SuperSonicAniData		;$14
                dc.w    SonAni_Hang2-SuperSonicAniData		;$15
                dc.w    SonAni_Bubble-SuperSonicAniData		;$16
                dc.w    SonAni_DeathBW-SuperSonicAniData	;$17
                dc.w    SonAni_Drown-SuperSonicAniData		;$18
                dc.w    SonAni_Death-SuperSonicAniData		;$19
                dc.w    SonAni_Hurt-SuperSonicAniData		;$1A
                dc.w    SonAni_Hurt-SuperSonicAniData		;$1B
                dc.w    SonAni_Slide-SuperSonicAniData		;$1C
                dc.w    SonAni_Blank-SuperSonicAniData		;$1D
                dc.w    SonAni_Balance3-SuperSonicAniData	;$1E
                dc.w    SonAni_Balance4-SuperSonicAniData	;$1F
                dc.w    SupSonAni_Transform-SuperSonicAniData	;$20
SupSonAni_Walk:
                dc.b    $FF, $77, $78, $79, $7A, $7B, $7C, $75
                dc.b    $76, $FF
SupSonAni_Run:
                dc.b    $FF, $B5, $B9, $FF, $FF, $FF, $FF, $FF
                dc.b    $FF, $FF
SupSonAni_Push:
                dc.b    $FD, $BD, $BE, $BF, $C0, $FF, $FF, $FF
                dc.b    $FF, $FF
SupSonAni_Stand:
                dc.b    $07, $72, $73, $74, $73, $FF
SupSonAni_Balance:
                dc.b    $09, $C2, $C3, $C4, $C3, $C5, $C6, $C7
                dc.b    $C6, $FF
SupSonAni_Duck:
                dc.b    $05, $C1, $FF
SupSonAni_Transform:
                dc.b    $02, $6D, $6D, $6E, $6E, $6F, $70, $71
                dc.b    $70, $71, $70, $71, $70, $71, $FD, $00
                dc.b    $00
;-------------------------------------------------------------------------------
Load_Sonic_Dynamic_PLC:                                        ; loc_110D4
                moveq   #$00, D0
                move.b  Obj_Map_Id(A0), D0                               ; $001A
; Load_Sonic_Dynamic_PLC_D0:
                cmp.b   ($FFFFF766).w, D0
                beq.s   loc_11126
                move.b  D0, ($FFFFF766).w
                lea     (Sonic_Dyn_Script), A2                 ; loc_714E0
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D5
                subq.w  #$01, D5
                bmi.s   loc_11126
                move.w  #$F000, D4
Loop_Load_Sonic_Sprites:                                       ; loc_110FA
                moveq   #$00, D1
                move.w  (A2)+, D1
                move.w  D1, D3
                lsr.w   #$08, D3
                andi.w  #$00F0, D3
                addi.w  #$0010, D3
                andi.w  #$0FFF, D1
                lsl.l   #$05, D1
                addi.l  #Art_Sonic, D1                         ; loc_50000
                move.w  D4, D2
                add.w   D3, D4
                add.w   D3, D4
                jsr     (DMA_68KtoVRAM)                        ; loc_15C4
                dbra    D5, Loop_Load_Sonic_Sprites            ; loc_110FA
loc_11126:
                rts
;===============================================================================
; Object 0x01 - Sonic
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Kill_Sonic:                                                    ; loc_11128
		jmp     (KillCharacter)                        ; loc_2B57C
;-------------------------------------------------------------------------------
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj02_Tails:                                                ; loc_11130
;===============================================================================
; Object 0x02 - Tails
; [ Begin ]
;===============================================================================
; loc_11130:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  Tails_Index(PC, D0), D1                ; loc_1113E
                jmp     Tails_Index(PC, D1)                    ; loc_1113E
;-------------------------------------------------------------------------------
Tails_Index:                                                   ; loc_1113E
                dc.w    Tails_Main-Tails_Index                 ; loc_11148
                dc.w    Tails_Control-Tails_Index              ; loc_111B2
                dc.w    Tails_Hurt-Tails_Index                 ; loc_11F2A
                dc.w    Tails_Death-Tails_Index                ; loc_11F9C
                dc.w    Tails_ResetLevel-Tails_Index           ; loc_11FFC
;-------------------------------------------------------------------------------
Tails_Main:                                                    ; loc_11148
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$0F, Obj_Height_2(A0)                           ; $0016
                move.b  #$09, Obj_Width_2(A0)                            ; $0017
                move.l  #Tails_Mappings, Obj_Map(A0)    ; loc_739E2, $0004                  ; $0004
                move.w  #$07A0, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$02, Obj_Priority(A0)                           ; $0018
                move.b  #$18, Obj_Width(A0)                              ; $0019
                move.b  #$84, Obj_Flags(A0)                              ; $0001
                move.w  #$0600, (Tails_Max_Speed).w                  ; $FFFFFEC0
                move.w  #$000C, (Tails_Acceleration).w               ; $FFFFFEC2
                move.w  #$0080, (Tails_Deceleration).w               ; $FFFFFEC4
                move.b  #$0C, Obj_Player_Top_Solid(A0)                   ; $003E
                move.b  #$0D, Obj_Player_LRB_Solid(A0)                   ; $003F
                move.b  #$00, Obj_P_Flips_Remaining(A0)                  ; $002C
                move.b  #$04, Obj_Player_Flip_Speed(A0)                  ; $002D
                move.b  #$1E, Obj_Subtype(A0)                            ; $0028
                move.b  #$05, ($FFFFB1C0).w
;-------------------------------------------------------------------------------
Tails_Control:                                                 ; loc_111B2
                bsr     Tails_CPU_Control                      ; loc_112B6
                btst    #$00, Obj_Timer(A0)                              ; $002A
                bne.s   Tails_ControlsLock                     ; loc_111D0
                moveq   #$00, D0
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.w  #$0006, D0
                move.w  Tails_Modes(PC, D0), D1                ; loc_1121A
                jsr     Tails_Modes(PC, D1)                    ; loc_1121A
Tails_ControlsLock:                                            ; loc_111D0
                cmpi.w  #$FF00, (Sonic_Level_Limits_Min_Y).w         ; $FFFFEECC
                bne.s   loc_111DE
                andi.w  #$07FF, Obj_Y(A0)                                ; $000C
loc_111DE:
                bsr.s   Tails_Display                          ; loc_11232
                bsr     Tails_RecordMoves                      ; loc_11376
                bsr     Tails_Water                            ; loc_11390
                move.b  ($FFFFF768).w, Obj_Player_Next_Tilt(A0)          ; $0036
                move.b  ($FFFFF76A).w, Obj_Player_Tilt(A0)               ; $0037
                tst.b   ($FFFFF7C7).w
                beq.s   loc_11206
                tst.b   Obj_Ani_Number(A0)                               ; $001C
                bne.s   loc_11206
                move.b  Obj_Ani_Flag(A0), Obj_Ani_Number(A0)      ; $001C, $001D
loc_11206:
                bsr     Tails_Animate                          ; loc_12010
                tst.b   Obj_Timer(A0)                                    ; $002A
                bmi.s   loc_11216
                jsr     (TouchResponse)                        ; loc_2B1EC
loc_11216:
                bra     Load_Tails_Dynamic_PLC                 ; loc_123EE
;-------------------------------------------------------------------------------
Tails_Modes:                                                   ; loc_1121A
                dc.w    Tails_MdNormal-Tails_Modes             ; loc_11448
                dc.w    Tails_MdJump-Tails_Modes               ; loc_11470
                dc.w    Tails_MdRoll-Tails_Modes               ; loc_1149A
                dc.w    Tails_MdJump2-Tails_Modes              ; loc_114BA
;-------------------------------------------------------------------------------
Tails_MusicList:                                               ; loc_11222
                dc.b    $82	; GHZ
                dc.b    $82	; Zone 01
                dc.b    $85	; WZ
                dc.b    $84	; Zone 03
                dc.b    $85	; MTZ
                dc.b    $85	; MTZ Act 3
                dc.b    $8C	; Zone 06
                dc.b    $86	; HTZ
                dc.b    $83	; HPZ
                dc.b    $8D	; Zone 09
                dc.b    $88	; OOZ
                dc.b    $8B	; DHZ
                dc.b    $89	; CNZ
                dc.b    $8E	; CPZ
                dc.b    $8E	; GCZ
                dc.b    $87	; NGHZ
;-------------------------------------------------------------------------------
Tails_Display:                                                 ; loc_11232
                move.w  Obj_P_Invunerblt_Time(A0), D0                    ; $0030
                beq.s   loc_11240
                subq.w  #$01, Obj_P_Invunerblt_Time(A0)                  ; $0030
                lsr.w   #$03, D0
                bcc.s   loc_11246
loc_11240:
                jsr     (DisplaySprite)                        ; loc_D322
loc_11246:
                tst.b   (Invincibility_Flag).w                       ; $FFFFFE2D
                beq.s   loc_11280
                tst.w   Obj_P_Invcbility_Time(A0)                        ; $0032
                beq.s   loc_11280
                subq.w  #$01, Obj_P_Invcbility_Time(A0)                  ; $0032
                bne.s   loc_11280
                tst.b   (Boss_Flag).w                                ; $FFFFF7AA
                bne.s   loc_1127A
                cmpi.b  #$0C, Obj_Subtype(A0)                            ; $0028
                bcs.s   loc_1127A
                moveq   #$00, D0
                move.b  (Level_Id).w, D0                             ; $FFFFFE10
                lea     Tails_MusicList(PC), A1                ; loc_11222
                move.b  $00(A1, D0), D0
                jsr     (Play_Music)                           ; loc_150C
loc_1127A:
                move.b  #$00, (Invincibility_Flag).w                 ; $FFFFFE2D
loc_11280:
                tst.b   (Hi_Speed_Flag).w                            ; $FFFFFE2E
                beq.s   loc_112B4
                tst.w   Obj_P_Spd_Shoes_Time(A0)                         ; $0034
                beq.s   loc_112B4
                subq.w  #$01, Obj_P_Spd_Shoes_Time(A0)                   ; $0034
                bne.s   loc_112B4
                move.w  #$0600, (Tails_Max_Speed).w                  ; $FFFFFEC0
                move.w  #$000C, (Tails_Acceleration).w               ; $FFFFFEC2
                move.w  #$0080, (Tails_Deceleration).w               ; $FFFFFEC4
                move.b  #$00, (Hi_Speed_Flag).w                      ; $FFFFFE2E
                move.w  #$00FC, D0
                jmp     (Play_Music)                           ; loc_150C
loc_112B4:
                rts
;-------------------------------------------------------------------------------
Tails_CPU_Control:                                             ; loc_112B6
                move.b  ($FFFFF606).w, D0
                andi.b  #$7F, D0
                beq.s   loc_112CE
                move.w  #$0000, ($FFFFF700).w
                move.w  #$012C, ($FFFFF702).w
                rts
loc_112CE:
                tst.w   ($FFFFF702).w
                beq.s   loc_112DA
                subq.w  #$01, ($FFFFF702).w
                rts
loc_112DA:
                move.w  ($FFFFF708).w, D0
                move.w  Tails_CPU_States(PC, D0), D0           ; loc_112E6
                jmp     Tails_CPU_States(PC, D0)               ; loc_112E6
;-------------------------------------------------------------------------------
Tails_CPU_States:                                              ; loc_112E6
                dc.w    Tails_CPU_Init-Tails_CPU_States        ; loc_112EE
                dc.w    Tails_CPU_Spawning-Tails_CPU_States    ; loc_112F6
                dc.w    Tails_CPU_Normal-Tails_CPU_States      ; loc_1130A
                dc.w    Tails_Copy_Sonic_Moves-Tails_CPU_States  ; loc_11344
;-------------------------------------------------------------------------------
Tails_CPU_Init:                                                ; loc_112EE
                move.w  #$0006, ($FFFFF708).w
                rts
;-------------------------------------------------------------------------------
Tails_CPU_Spawning:                                            ; loc_112F6
                move.w  #$0006, ($FFFFF708).w
                rts
;-------------------------------------------------------------------------------
; loc_112FE:
                move.w  #$0040, ($FFFFF706).w
                move.w  #$0004, ($FFFFF708).w
;-------------------------------------------------------------------------------
Tails_CPU_Normal:                                              ; loc_1130A
                move.w  #$0006, ($FFFFF708).w
                rts
;-------------------------------------------------------------------------------
; loc_11312:
                move.w  ($FFFFF706).w, D1
                subq.w  #$01, D1
                cmpi.w  #$0010, D1
                bne.s   loc_11324
                move.w  #$0006, ($FFFFF708).w
loc_11324:
                move.w  D1, ($FFFFF706).w
                lea     ($FFFFE600).w, A1
                lsl.b   #$02, D1
                addq.b  #$04, D1
                move.w  ($FFFFEEE0).w, D0
                sub.b   D1, D0
                move.w  $00(A1, D0), Obj_X(A0)                           ; $0008
                move.w  $02(A1, D0), Obj_Y(A0)                           ; $000C
                rts
;-------------------------------------------------------------------------------
Tails_Copy_Sonic_Moves:                                        ; loc_11344
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                bpl.s   loc_11350
                neg.w   D0
loc_11350:
                cmpi.w  #$00C0, D0
                bcs.s   loc_11358
                nop
loc_11358:
                lea     ($FFFFE500).w, A1
                move.w  #$0010, D1
                lsl.b   #$02, D1
                addq.b  #$04, D1
                move.w  ($FFFFEED2).w, D0
                sub.b   D1, D0
                lea     ($FFFFE400).w, A1
                move.w  $00(A1, D0), ($FFFFF606).w
                rts
;-------------------------------------------------------------------------------
Tails_RecordMoves:                                             ; loc_11376
                move.w  ($FFFFEED6).w, D0
                lea     ($FFFFE700).w, A1
                lea     $00(A1, D0), A1
                move.w  Obj_X(A0), (A1)+                                 ; $0008
                move.w  Obj_Y(A0), (A1)+                                 ; $000C
                addq.b  #$04, ($FFFFEED7).w
                rts
;-------------------------------------------------------------------------------
Tails_Water:                                                   ; loc_11390
                tst.b   (Water_Level_Flag).w                         ; $FFFFF730
                bne.s   Tails_InLevelWithWater                 ; loc_11398
loc_11396:
                rts
;-------------------------------------------------------------------------------
Tails_InLevelWithWater:                                        ; loc_11398
                move.w  (Water_Level).w, D0                          ; $FFFFF646
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bge.s   Tails_NotInWater                       ; loc_113F0
                bset    #$06, Obj_Status(A0)                             ; $0022
                bne.s   loc_11396
                move.l  A0, A1
                bsr     Resume_Music                           ; loc_12A30
                move.b  #$0A, ($FFFFB300).w
                move.b  #$81, ($FFFFB328).w
                move.l  A0, ($FFFFB33C).w
                move.w  #$0300, (Tails_Max_Speed).w                  ; $FFFFFEC0
                move.w  #$0006, (Tails_Acceleration).w               ; $FFFFFEC2
                move.w  #$0040, (Tails_Deceleration).w               ; $FFFFFEC4
                asr.w   Obj_Speed(A0)                                    ; $0010
                asr.w   Obj_Speed_Y(A0)                                  ; $0012
                asr.w   Obj_Speed_Y(A0)                                  ; $0012
                beq.s   loc_11396
                move.w  #$0100, ($FFFFB45C).w
                move.w  #$00AA, D0
                jmp     (Play_Sfx)                             ; loc_1512
;-------------------------------------------------------------------------------
Tails_NotInWater:                                              ; loc_113F0
                bclr    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_11396
                move.l  A0, A1
                bsr     Resume_Music                           ; loc_12A30
                move.w  #$0600, (Tails_Max_Speed).w                  ; $FFFFFEC0
                move.w  #$000C, (Tails_Acceleration).w               ; $FFFFFEC2
                move.w  #$0080, (Tails_Deceleration).w               ; $FFFFFEC4
                cmpi.b  #$04, Obj_Routine(A0)                            ; $0024
                beq.s   loc_1141C
                asl.w   Obj_Speed_Y(A0)                                  ; $0012
loc_1141C:
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                beq     loc_11396
                move.w  #$0100, ($FFFFB45C).w
                move.l  A0, A1
                bsr     Resume_Music                           ; loc_12A30
                cmpi.w  #$F000, Obj_Speed_Y(A0)                          ; $0012
                bgt.s   loc_1143E
                move.w  #$F000, Obj_Speed_Y(A0)                          ; $0012
loc_1143E:
                move.w  #$00AA, D0
                jmp     (Play_Sfx)                             ; loc_1512
;-------------------------------------------------------------------------------
Tails_MdNormal:                                                ; loc_11448
                bsr     Tails_Spindash                         ; loc_11AAC
                bsr     Tails_Jump                             ; loc_119C2
                bsr     Tails_SlopeResist                      ; loc_11BA6
                bsr     Tails_Move                             ; loc_114E4
                bsr     Tails_Roll                             ; loc_1195C
                bsr     Tails_LevelBoundaries                  ; loc_118FE
                jsr     (SpeedToPos)                           ; loc_D1DA
                bsr     Player_AnglePos                        ; loc_13694
                bsr     Tails_SlopeRepel                       ; loc_11C18
                rts
;-------------------------------------------------------------------------------
Tails_MdJump:                                                  ; loc_11470
                bsr     Tails_JumpHeight                       ; loc_11A70
                bsr     Tails_ChgJumpDir                       ; loc_11884
                bsr     Tails_LevelBoundaries                  ; loc_118FE
                jsr     (ObjectFall)                           ; loc_D1AE
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_11490
                subi.w  #$0028, Obj_Speed_Y(A0)                          ; $0012
loc_11490:
                bsr     Tails_JumpAngle                        ; loc_11C5A
                bsr     Tails_Floor                            ; loc_11CBA
                rts
;-------------------------------------------------------------------------------
Tails_MdRoll:                                                  ; loc_1149A
                bsr     Tails_Jump                             ; loc_119C2
                bsr     Tails_RollRepel                        ; loc_11BDC
                bsr     Tails_RollSpeed                        ; loc_1178C
                bsr     Tails_LevelBoundaries                  ; loc_118FE
                jsr     (SpeedToPos)                           ; loc_D1DA
                bsr     Player_AnglePos                        ; loc_13694
                bsr     Tails_SlopeRepel                       ; loc_11C18
                rts
;-------------------------------------------------------------------------------
Tails_MdJump2:                                                 ; loc_114BA
                bsr     Tails_JumpHeight                       ; loc_11A70
                bsr     Tails_ChgJumpDir                       ; loc_11884
                bsr     Tails_LevelBoundaries                  ; loc_118FE
                jsr     (ObjectFall)                           ; loc_D1AE
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_114DA
                subi.w  #$0028, Obj_Speed_Y(A0)                          ; $0012
loc_114DA:
                bsr     Tails_JumpAngle                        ; loc_11C5A
                bsr     Tails_Floor                            ; loc_11CBA
                rts
;-------------------------------------------------------------------------------
Tails_Move:                                                    ; loc_114E4
                move.w  (Tails_Max_Speed).w, D6                      ; $FFFFFEC0
                move.w  (Tails_Acceleration).w, D5                   ; $FFFFFEC2
                move.w  (Tails_Deceleration).w, D4                   ; $FFFFFEC4
                tst.b   (Player_Status_Flag).w                       ; $FFFFF7CA
                bne     loc_115F6
                tst.w   Obj_Player_Control(A0)                           ; $002E
                bne     loc_115CA
                btst    #$02, ($FFFFF606).w
                beq.s   loc_1150C
                bsr     loc_11686
loc_1150C:
                btst    #$03, ($FFFFF606).w
                beq.s   loc_11518
                bsr     loc_1170C
loc_11518:
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne     loc_115CA
                tst.w   Obj_Inertia(A0)                                  ; $0014
                bne     loc_115CA
                bclr    #$05, Obj_Status(A0)                             ; $0022
                move.b  #$05, Obj_Ani_Number(A0)                         ; $001C
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_1157A
                moveq   #$00, D0
                move.b  Obj_Player_Last(A0), D0                          ; $003D
                lsl.w   #$06, D0
                lea     (Player_One).w, A1                           ; $FFFFB000
                lea     $00(A1, D0), A1
                tst.b   Obj_Status(A1)                                   ; $0022
                bmi.s   loc_115AC
                moveq   #$00, D1
                move.b  Obj_Width(A1), D1                                ; $0019
                move.w  D1, D2
                add.w   D2, D2
                subq.w  #$04, D2
                add.w   Obj_X(A0), D1                                    ; $0008
                sub.w   Obj_X(A1), D1                                    ; $0008
                cmpi.w  #$0004, D1
                blt.s   loc_1159E
                cmp.w   D2, D1
                bge.s   loc_1158E
                bra.s   loc_115AC
loc_1157A:
                jsr     (Player_HitFloor)                      ; loc_14160
                cmpi.w  #$000C, D1
                blt.s   loc_115AC
                cmpi.b  #$03, Obj_Player_Next_Tilt(A0)                   ; $0036
                bne.s   loc_11596
loc_1158E:
                bclr    #$00, Obj_Status(A0)                             ; $0022
                bra.s   loc_115A4
loc_11596:
                cmpi.b  #$03, Obj_Player_Tilt(A0)                        ; $0037
                bne.s   loc_115AC
loc_1159E:
                bset    #$00, Obj_Status(A0)                             ; $0022
loc_115A4:
                move.b  #$06, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_115CA
loc_115AC:
                btst    #$00, ($FFFFF606).w
                beq.s   loc_115BC
                move.b  #$07, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_115CA
loc_115BC:
                btst    #$01, ($FFFFF606).w
                beq.s   loc_115CA
                move.b  #$08, Obj_Ani_Number(A0)                         ; $001C
loc_115CA:
                move.b  ($FFFFF606).w, D0
                andi.b  #$0C, D0
                bne.s   loc_115F6
                move.w  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_115F6
                bmi.s   loc_115EA
                sub.w   D5, D0
                bcc.s   loc_115E4
                move.w  #$0000, D0
loc_115E4:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                bra.s   loc_115F6
loc_115EA:
                add.w   D5, D0
                bcc.s   loc_115F2
                move.w  #$0000, D0
loc_115F2:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
loc_115F6:
                move.b  Obj_Angle(A0), D0                                ; $0026
                jsr     (CalcSine)                             ; loc_3282
                muls.w  Obj_Inertia(A0), D1                              ; $0014
                asr.l   #$08, D1
                move.w  D1, Obj_Speed(A0)                                ; $0010
                muls.w  Obj_Inertia(A0), D0                              ; $0014
                asr.l   #$08, D0
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
loc_11614:
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$40, D0
                bmi.s   loc_11684
                move.b  #$40, D1
                tst.w   Obj_Inertia(A0)                                  ; $0014
                beq.s   loc_11684
                bmi.s   loc_1162C
                neg.w   D1
loc_1162C:
                move.b  Obj_Angle(A0), D0                                ; $0026
                add.b   D1, D0
                move.w  D0, -(A7)
                bsr     Player_WalkSpeed                       ; loc_13FD8
                move.w  (A7)+, D0
                tst.w   D1
                bpl.s   loc_11684
                asl.w   #$08, D1
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   loc_11680
                cmpi.b  #$40, D0
                beq.s   loc_1166E
                cmpi.b  #$80, D0
                beq.s   loc_11668
                add.w   D1, Obj_Speed(A0)                                ; $0010
                bset    #$05, Obj_Status(A0)                             ; $0022
                move.w  #$0000, Obj_Inertia(A0)                          ; $0014
                rts
loc_11668:
                sub.w   D1, Obj_Speed_Y(A0)                              ; $0012
                rts
loc_1166E:
                sub.w   D1, Obj_Speed(A0)                                ; $0010
                bset    #$05, Obj_Status(A0)                             ; $0022
                move.w  #$0000, Obj_Inertia(A0)                          ; $0014
                rts
loc_11680:
                add.w   D1, Obj_Speed_Y(A0)                              ; $0012
loc_11684:
                rts
loc_11686:
                move.w  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_1168E
                bpl.s   loc_116C0
loc_1168E:
                bset    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_116A2
                bclr    #$05, Obj_Status(A0)                             ; $0022
                move.b  #$01, Obj_Ani_Flag(A0)                           ; $001D
loc_116A2:
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   loc_116B4
                add.w   D5, D0
                cmp.w   D1, D0
                ble.s   loc_116B4
                move.w  D1, D0
loc_116B4:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_116C0:
                sub.w   D4, D0
                bcc.s   loc_116C8
                move.w  #$FF80, D0
loc_116C8:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   loc_1170A
                cmpi.w  #$0400, D0
                blt.s   loc_1170A
                move.b  #$0D, Obj_Ani_Number(A0)                         ; $001C
                bclr    #$00, Obj_Status(A0)                             ; $0022
                move.w  #$00A4, D0
                jsr     (Play_Sfx)                             ; loc_1512
                cmpi.b  #$0C, Obj_Subtype(A0)                            ; $0028
                bcs.s   loc_1170A
                move.b  #$06, ($FFFFB464).w
                move.b  #$15, ($FFFFB45A).w
loc_1170A:
                rts
loc_1170C:
                move.w  Obj_Inertia(A0), D0                              ; $0014
                bmi.s   loc_11740
                bclr    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_11726
                bclr    #$05, Obj_Status(A0)                             ; $0022
                move.b  #$01, Obj_Ani_Flag(A0)                           ; $001D
loc_11726:
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   loc_11734
                sub.w   D5, D0
                cmp.w   D6, D0
                bge.s   loc_11734
                move.w  D6, D0
loc_11734:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_11740:
                add.w   D4, D0
                bcc.s   loc_11748
                move.w  #$0080, D0
loc_11748:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$20, D0
                andi.b  #$C0, D0
                bne.s   loc_1178A
                cmpi.w  #$FC00, D0
                bgt.s   loc_1178A
                move.b  #$0D, Obj_Ani_Number(A0)                         ; $001C
                bset    #$00, Obj_Status(A0)                             ; $0022
                move.w  #$00A4, D0
                jsr     (Play_Sfx)                             ; loc_1512
                cmpi.b  #$0C, Obj_Subtype(A0)                            ; $0028
                bcs.s   loc_1178A
                move.b  #$06, ($FFFFB464).w
                move.b  #$15, ($FFFFB45A).w
loc_1178A:
                rts
;-------------------------------------------------------------------------------
Tails_RollSpeed:                                               ; loc_1178C
                move.w  (Tails_Max_Speed).w, D6                      ; $FFFFFEC0
                asl.w   #$01, D6
                move.w  (Tails_Acceleration).w, D5                   ; $FFFFFEC2
                asr.w   #$01, D5
                move.w  (Tails_Deceleration).w, D4                   ; $FFFFFEC4
                asr.w   #$02, D4
                tst.b   (Player_Status_Flag).w                       ; $FFFFF7CA
                bne     loc_11808
                tst.w   Obj_Player_Control(A0)                           ; $002E
                bne.s   loc_117C4
                btst    #$02, ($FFFFF606).w
                beq.s   loc_117B8
                bsr     loc_1183E
loc_117B8:
                btst    #$03, ($FFFFF606).w
                beq.s   loc_117C4
                bsr     loc_11862
loc_117C4:
                move.w  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_117E6
                bmi.s   loc_117DA
                sub.w   D5, D0
                bcc.s   loc_117D4
                move.w  #$0000, D0
loc_117D4:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                bra.s   loc_117E6
loc_117DA:
                add.w   D5, D0
                bcc.s   loc_117E2
                move.w  #$0000, D0
loc_117E2:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
loc_117E6:
                tst.w   Obj_Inertia(A0)                                  ; $0014
                bne.s   loc_11808
                bclr    #$02, Obj_Status(A0)                             ; $0022
                move.b  #$0F, Obj_Height_2(A0)                           ; $0016
                move.b  #$09, Obj_Width_2(A0)                            ; $0017
                move.b  #$05, Obj_Ani_Number(A0)                         ; $001C
                subq.w  #$05, Obj_Y(A0)                                  ; $000C
loc_11808:
                move.b  Obj_Angle(A0), D0                                ; $0026
                jsr     (CalcSine)                             ; loc_3282
                muls.w  Obj_Inertia(A0), D0                              ; $0014
                asr.l   #$08, D0
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
                muls.w  Obj_Inertia(A0), D1                              ; $0014
                asr.l   #$08, D1
                cmpi.w  #$1000, D1
                ble.s   loc_1182C
                move.w  #$1000, D1
loc_1182C:
                cmpi.w  #$F000, D1
                bge.s   loc_11836
                move.w  #$F000, D1
loc_11836:
                move.w  D1, Obj_Speed(A0)                                ; $0010
                bra     loc_11614
loc_1183E:
                move.w  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_11846
                bpl.s   loc_11854
loc_11846:
                bset    #$00, Obj_Status(A0)                             ; $0022
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_11854:
                sub.w   D4, D0
                bcc.s   loc_1185C
                move.w  #$FF80, D0
loc_1185C:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                rts
loc_11862:
                move.w  Obj_Inertia(A0), D0                              ; $0014
                bmi.s   loc_11876
                bclr    #$00, Obj_Status(A0)                             ; $0022
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_11876:
                add.w   D4, D0
                bcc.s   loc_1187E
                move.w  #$0080, D0
loc_1187E:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                rts
;-------------------------------------------------------------------------------
Tails_ChgJumpDir:                                              ; loc_11884
                move.w  (Tails_Max_Speed).w, D6                      ; $FFFFFEC0
                move.w  (Tails_Acceleration).w, D5                   ; $FFFFFEC2
                asl.w   #$01, D5
                btst    #$04, Obj_Status(A0)                             ; $0022
                bne.s   loc_118CE
                move.w  Obj_Speed(A0), D0                                ; $0010
                btst    #$02, ($FFFFF606).w
                beq.s   loc_118B4
                bset    #$00, Obj_Status(A0)                             ; $0022
                sub.w   D5, D0
                move.w  D6, D1
                neg.w   D1
                cmp.w   D1, D0
                bgt.s   loc_118B4
                move.w  D1, D0
loc_118B4:
                btst    #$03, ($FFFFF606).w
                beq.s   loc_118CA
                bclr    #$00, Obj_Status(A0)                             ; $0022
                add.w   D5, D0
                cmp.w   D6, D0
                blt.s   loc_118CA
                move.w  D6, D0
loc_118CA:
                move.w  D0, Obj_Speed(A0)                                ; $0010
loc_118CE:
                cmpi.w  #$FC00, Obj_Speed_Y(A0)                          ; $0012
                bcs.s   loc_118FC
                move.w  Obj_Speed(A0), D0                                ; $0010
                move.w  D0, D1
                asr.w   #$05, D1
                beq.s   loc_118FC
                bmi.s   loc_118F0
                sub.w   D1, D0
                bcc.s   loc_118EA
                move.w  #$0000, D0
loc_118EA:
                move.w  D0, Obj_Speed(A0)                                ; $0010
                rts
loc_118F0:
                sub.w   D1, D0
                bcs.s   loc_118F8
                move.w  #$0000, D0
loc_118F8:
                move.w  D0, Obj_Speed(A0)                                ; $0010
loc_118FC:
                rts
;-------------------------------------------------------------------------------
Tails_LevelBoundaries:                                         ; loc_118FE
                move.l  Obj_X(A0), D1                                    ; $0008
                move.w  Obj_Speed(A0), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D1
                swap.w  D1
                move.w  (Tails_Level_Limits_Min_X).w, D0             ; $FFFFEEF8
                addi.w  #$0010, D0
                cmp.w   D1, D0
                bhi.s   loc_11944
                move.w  (Tails_Level_Limits_Max_X).w, D0             ; $FFFFEEFA
                addi.w  #$0128, D0
                tst.b   (Boss_Flag).w                                ; $FFFFF7AA
                bne.s   loc_1192C
                addi.w  #$0040, D0
loc_1192C:
                cmp.w   D1, D0
                bls.s   loc_11944
loc_11930:
                move.w  (Tails_Level_Limits_Max_Y).w, D0             ; $FFFFEEFE
                addi.w  #$00E0, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                blt.s   loc_11940
                rts
loc_11940:
                bra     Kill_Tails                             ; loc_12544
loc_11944:
                move.w  D0, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Sub_Y(A0)                            ; $000A
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.w  #$0000, Obj_Inertia(A0)                          ; $0014
                bra.s   loc_11930
;-------------------------------------------------------------------------------
Tails_Roll:                                                    ; loc_1195C
                tst.b   (Player_Status_Flag).w                       ; $FFFFF7CA
                bne.s   loc_11982
                move.w  Obj_Inertia(A0), D0                              ; $0014
                bpl.s   loc_1196A
                neg.w   D0
loc_1196A:
                cmpi.w  #$0080, D0
                bcs.s   loc_11982
                move.b  ($FFFFF606).w, D0
                andi.b  #$0C, D0
                bne.s   loc_11982
                btst    #$01, ($FFFFF606).w
                bne.s   loc_11984
loc_11982:
                rts
loc_11984:
                btst    #$02, Obj_Status(A0)                             ; $0022
                beq.s   loc_1198E
                rts
loc_1198E:
                bset    #$02, Obj_Status(A0)                             ; $0022
                move.b  #$0E, Obj_Height_2(A0)                           ; $0016
                move.b  #$07, Obj_Width_2(A0)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                addq.w  #$05, Obj_Y(A0)                                  ; $000C
                move.w  #$00BE, D0
                jsr     (Play_Sfx)                             ; loc_1512
                tst.w   Obj_Inertia(A0)                                  ; $0014
                bne.s   loc_119C0
                move.w  #$0200, Obj_Inertia(A0)                          ; $0014
loc_119C0:
                rts
;-------------------------------------------------------------------------------
Tails_Jump:                                                    ; loc_119C2
                move.b  ($FFFFF607).w, D0
                andi.b  #$70, D0
                beq     loc_11A66
                moveq   #$00, D0
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$80, D0
                bsr     CalcRoomOverHead                       ; loc_1405E
                cmpi.w  #$0006, D1
                blt     loc_11A66
                move.w  #$0680, D2
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_119F4
                move.w  #$0380, D2
loc_119F4:
                moveq   #$00, D0
                move.b  Obj_Angle(A0), D0                                ; $0026
                subi.b  #$40, D0
                jsr     (CalcSine)                             ; loc_3282
                muls.w  D2, D1
                asr.l   #$08, D1
                add.w   D1, Obj_Speed(A0)                                ; $0010
                muls.w  D2, D0
                asr.l   #$08, D0
                add.w   D0, Obj_Speed_Y(A0)                              ; $0012
                bset    #$01, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A0)                             ; $0022
                addq.l  #$04, A7
                move.b  #$01, Obj_Player_Jump(A0)                        ; $003C
                clr.b   Obj_Player_St_Convex(A0)                         ; $0038
                move.w  #$00A0, D0
                jsr     (Play_Sfx)                             ; loc_1512
                move.b  #$0F, Obj_Height_2(A0)                           ; $0016
                move.b  #$09, Obj_Width_2(A0)                            ; $0017
                btst    #$02, Obj_Status(A0)                             ; $0022
                bne.s   loc_11A68
                move.b  #$0E, Obj_Height_2(A0)                           ; $0016
                move.b  #$07, Obj_Width_2(A0)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                bset    #$02, Obj_Status(A0)                             ; $0022
                addq.w  #$05, Obj_Y(A0)                                  ; $000C
loc_11A66:
                rts
loc_11A68:
                bset    #$04, Obj_Status(A0)                             ; $0022
                rts
;-------------------------------------------------------------------------------
Tails_JumpHeight:                                              ; loc_11A70
                tst.b   Obj_Player_Jump(A0)                              ; $003C
                beq.s   loc_11A9C
                move.w  #$FC00, D1
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_11A86
                move.w  #$FE00, D1
loc_11A86:
                cmp.w   Obj_Speed_Y(A0), D1                              ; $0012
                ble.s   loc_11A9A
                move.b  ($FFFFF606).w, D0
                andi.b  #$70, D0
                bne.s   loc_11A9A
                move.w  D1, Obj_Speed_Y(A0)                              ; $0012
loc_11A9A:
                rts
loc_11A9C:
                cmpi.w  #$F040, Obj_Speed_Y(A0)                          ; $0012
                bge.s   loc_11AAA
                move.w  #$F040, Obj_Speed_Y(A0)                          ; $0012
loc_11AAA:
                rts
;-------------------------------------------------------------------------------
Tails_Spindash:                                                ; loc_11AAC
                tst.b   Obj_Player_Spdsh_Flag(A0)                        ; $0039
                bne.s   loc_11AF4
                cmpi.b  #$08, Obj_Ani_Number(A0)                         ; $001C
                bne.s   loc_11AF2
                move.b  ($FFFFF607).w, D0
                andi.b  #$70, D0
                beq     loc_11AF2
                move.b  #$09, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$00E0, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addq.l  #$04, A7
                move.b  #$01, Obj_Player_Spdsh_Flag(A0)                  ; $0039
                move.w  #$0000, Obj_Player_Spdsh_Cnt(A0)                 ; $003A
                cmpi.b  #$0C, Obj_Subtype(A0)                            ; $0028
                bcs.s   loc_11AF2
                move.b  #$02, ($FFFFB45C).w
loc_11AF2:
                rts
loc_11AF4:
                move.b  ($FFFFF606).w, D0
                btst    #$01, D0
                bne.s   loc_11B5A
                move.b  #$0E, Obj_Height_2(A0)                           ; $0016
                move.b  #$07, Obj_Width_2(A0)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                addq.w  #$05, Obj_Y(A0)                                  ; $000C
                move.b  #$00, Obj_Player_Spdsh_Flag(A0)                  ; $0039
                move.w  #$2000, ($FFFFEED4).w
                moveq   #$00, D0
                move.b  Obj_Player_Spdsh_Cnt(A0), D0                     ; $003A
                add.w   D0, D0
                move.w  Tails_Spindash_Speed(PC, D0), Obj_Inertia(A0) ; loc_11B48, $0014
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_11B3A
                neg.w   Obj_Inertia(A0)                                  ; $0014
loc_11B3A:
                bset    #$02, Obj_Status(A0)                             ; $0022
                move.b  #$00, ($FFFFB45C).w
                bra.s   loc_11BA2
;-------------------------------------------------------------------------------
Tails_Spindash_Speed:                                          ; loc_11B48
                dc.w    $0800, $0880, $0900, $0980, $0A00, $0A80, $0B00, $0B80
                dc.w    $0C00
;-------------------------------------------------------------------------------
loc_11B5A:
                tst.w   Obj_Player_Spdsh_Cnt(A0)                         ; $003A
                beq.s   loc_11B72
                move.w  Obj_Player_Spdsh_Cnt(A0), D0                     ; $003A
                lsr.w   #$05, D0
                sub.w   D0, Obj_Player_Spdsh_Cnt(A0)                     ; $003A
                bcc.s   loc_11B72
                move.w  #$0000, Obj_Player_Spdsh_Cnt(A0)                 ; $003A
loc_11B72:
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq     loc_11BA2
                move.w  #$0900, Obj_Ani_Number(A0)                       ; $001C
                move.w  #$00E0, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addi.w  #$0200, Obj_Player_Spdsh_Cnt(A0)                 ; $003A
                cmpi.w  #$0800, Obj_Player_Spdsh_Cnt(A0)                 ; $003A
                bcs.s   loc_11BA2
                move.w  #$0800, Obj_Player_Spdsh_Cnt(A0)                 ; $003A
loc_11BA2:
                addq.l  #$04, A7
                rts
;-------------------------------------------------------------------------------
Tails_SlopeResist:                                             ; loc_11BA6
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   loc_11BDA
                move.b  Obj_Angle(A0), D0                                ; $0026
                jsr     (CalcSine)                             ; loc_3282
                muls.w  #$0020, D0
                asr.l   #$08, D0
                tst.w   Obj_Inertia(A0)                                  ; $0014
                beq.s   loc_11BDA
                bmi.s   loc_11BD6
                tst.w   D0
                beq.s   loc_11BD4
                add.w   D0, Obj_Inertia(A0)                              ; $0014
loc_11BD4:
                rts
loc_11BD6:
                add.w   D0, Obj_Inertia(A0)                              ; $0014
loc_11BDA:
                rts
;-------------------------------------------------------------------------------
Tails_RollRepel:                                               ; loc_11BDC
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$60, D0
                cmpi.b  #$C0, D0
                bcc.s   loc_11C16
                move.b  Obj_Angle(A0), D0                                ; $0026
                jsr     (CalcSine)                             ; loc_3282
                muls.w  #$0050, D0
                asr.l   #$08, D0
                tst.w   Obj_Inertia(A0)                                  ; $0014
                bmi.s   loc_11C0C
                tst.w   D0
                bpl.s   loc_11C06
                asr.l   #$02, D0
loc_11C06:
                add.w   D0, Obj_Inertia(A0)                              ; $0014
                rts
loc_11C0C:
                tst.w   D0
                bmi.s   loc_11C12
                asr.l   #$02, D0
loc_11C12:
                add.w   D0, Obj_Inertia(A0)                              ; $0014
loc_11C16:
                rts
;-------------------------------------------------------------------------------
Tails_SlopeRepel:                                              ; loc_11C18
                nop
                tst.b   Obj_Player_St_Convex(A0)                         ; $0038
                bne.s   loc_11C52
                tst.w   Obj_Player_Control(A0)                           ; $002E
                bne.s   loc_11C54
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$20, D0
                andi.b  #$C0, D0
                beq.s   loc_11C52
                move.w  Obj_Inertia(A0), D0                              ; $0014
                bpl.s   loc_11C3C
                neg.w   D0
loc_11C3C:
                cmpi.w  #$0280, D0
                bcc.s   loc_11C52
                clr.w   Obj_Inertia(A0)                                  ; $0014
                bset    #$01, Obj_Status(A0)                             ; $0022
                move.w  #$001E, Obj_Player_Control(A0)                   ; $002E
loc_11C52:
                rts
loc_11C54:
                subq.w  #$01, Obj_Player_Control(A0)                     ; $002E
                rts
;-------------------------------------------------------------------------------
Tails_JumpAngle:                                               ; loc_11C5A
                move.b  Obj_Angle(A0), D0                                ; $0026
                beq.s   loc_11C74
                bpl.s   loc_11C6A
                addq.b  #$02, D0
                bcc.s   loc_11C68
                moveq   #$00, D0
loc_11C68:
                bra.s   loc_11C70
loc_11C6A:
                subq.b  #$02, D0
                bcc.s   loc_11C70
                moveq   #$00, D0
loc_11C70:
                move.b  D0, Obj_Angle(A0)                                ; $0026
loc_11C74:
                move.b  Obj_Flip_Angle(A0), D0                           ; $0027
                beq.s   loc_11CB8
                tst.w   Obj_Inertia(A0)                                  ; $0014
                bmi.s   loc_11C98
loc_11C80:
                move.b  Obj_Player_Flip_Speed(A0), D1                    ; $002D
                add.b   D1, D0
                bcc.s   loc_11C96
                subq.b  #$01, Obj_P_Flips_Remaining(A0)                  ; $002C
                bcc.s   loc_11C96
                move.b  #$00, Obj_P_Flips_Remaining(A0)                  ; $002C
                moveq   #$00, D0
loc_11C96:
                bra.s   loc_11CB4
loc_11C98:
                tst.b   Obj_Player_Flip_Flag(A0)                         ; $0029
                bne.s   loc_11C80
                move.b  Obj_Player_Flip_Speed(A0), D1                    ; $002D
                sub.b   D1, D0
                bcc.s   loc_11CB4
                subq.b  #$01, Obj_P_Flips_Remaining(A0)                  ; $002C
                bcc.s   loc_11CB4
                move.b  #$00, Obj_P_Flips_Remaining(A0)                  ; $002C
                moveq   #$00, D0
loc_11CB4:
                move.b  D0, Obj_Flip_Angle(A0)                           ; $0027
loc_11CB8:
                rts
;-------------------------------------------------------------------------------
Tails_Floor:                                                   ; loc_11CBA
                move.l  #Primary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD000, $FFFFF796
                cmpi.b  #$0C, Obj_Player_Top_Solid(A0)                   ; $003E
                beq.s   loc_11CD2
                move.l  #Secundary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD600, $FFFFF796
loc_11CD2:
                move.b  Obj_Player_LRB_Solid(A0), D5                     ; $003F
                move.w  Obj_Speed(A0), D1                                ; $0010
                move.w  Obj_Speed_Y(A0), D2                              ; $0012
                jsr     (CalcAngle)                            ; loc_351A
                move.b  D0, Obj_Player_Status(A0)                        ; $002B
                subi.b  #$20, D0
                andi.b  #$C0, D0
                cmpi.b  #$40, D0
                beq     loc_11DA6
                cmpi.b  #$80, D0
                beq     loc_11E08
                cmpi.b  #$C0, D0
                beq     loc_11E64
                bsr     Player_HitWall                         ; loc_14468
                tst.w   D1
                bpl.s   loc_11D1A
                sub.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
loc_11D1A:
                bsr     loc_142E6
                tst.w   D1
                bpl.s   loc_11D2C
                add.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
loc_11D2C:
                bsr     loc_140A2
                tst.w   D1
                bpl.s   loc_11DA4
                move.b  Obj_Speed_Y(A0), D2                              ; $0012
                addq.b  #$08, D2
                neg.b   D2
                cmp.b   D2, D1
                bge.s   loc_11D44
                cmp.b   D2, D0
                blt.s   loc_11DA4
loc_11D44:
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  D3, Obj_Angle(A0)                                ; $0026
                bsr     Tails_ResetOnFloor                     ; loc_11EC6
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   loc_11D82
                move.b  D3, D0
                addi.b  #$10, D0
                andi.b  #$20, D0
                beq.s   loc_11D74
                asr.w   Obj_Speed_Y(A0)                                  ; $0012
                bra.s   loc_11D96
loc_11D74:
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.w  Obj_Speed(A0), Obj_Inertia(A0)            ; $0010, $0014
                rts
loc_11D82:
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                cmpi.w  #$0FC0, Obj_Speed_Y(A0)                          ; $0012
                ble.s   loc_11D96
                move.w  #$0FC0, Obj_Speed_Y(A0)                          ; $0012
loc_11D96:
                move.w  Obj_Speed_Y(A0), Obj_Inertia(A0)          ; $0012, $0014
                tst.b   D3
                bpl.s   loc_11DA4
                neg.w   Obj_Inertia(A0)                                  ; $0014
loc_11DA4:
                rts
loc_11DA6:
                bsr     Player_HitWall                         ; loc_14468
                tst.w   D1
                bpl.s   loc_11DC0
                sub.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.w  Obj_Speed_Y(A0), Obj_Inertia(A0)          ; $0012, $0014
                rts
loc_11DC0:
                bsr     Player_DontRunOnWalls                  ; loc_14338
                tst.w   D1
                bpl.s   loc_11DDA
                sub.w   D1, Obj_Y(A0)                                    ; $000C
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bpl.s   loc_11DD8
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
loc_11DD8:
                rts
loc_11DDA:
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_11E06
                bsr     loc_140A2
                tst.w   D1
                bpl.s   loc_11E06
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  D3, Obj_Angle(A0)                                ; $0026
                bsr     Tails_ResetOnFloor                     ; loc_11EC6
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.w  Obj_Speed(A0), Obj_Inertia(A0)            ; $0010, $0014
loc_11E06:
                rts
loc_11E08:
                bsr     Player_HitWall                         ; loc_14468
                tst.w   D1
                bpl.s   loc_11E1A
                sub.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
loc_11E1A:
                bsr     loc_142E6
                tst.w   D1
                bpl.s   loc_11E2C
                add.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
loc_11E2C:
                bsr     Player_DontRunOnWalls                  ; loc_14338
                tst.w   D1
                bpl.s   loc_11E62
                sub.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  D3, D0
                addi.b  #$20, D0
                andi.b  #$40, D0
                bne.s   loc_11E4C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                rts
loc_11E4C:
                move.b  D3, Obj_Angle(A0)                                ; $0026
                bsr     Tails_ResetOnFloor                     ; loc_11EC6
                move.w  Obj_Speed_Y(A0), Obj_Inertia(A0)          ; $0012, $0014
                tst.b   D3
                bpl.s   loc_11E62
                neg.w   Obj_Inertia(A0)                                  ; $0014
loc_11E62:
                rts
loc_11E64:
                bsr     loc_142E6
                tst.w   D1
                bpl.s   loc_11E7E
                add.w   D1, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.w  Obj_Speed_Y(A0), Obj_Inertia(A0)          ; $0012, $0014
                rts
loc_11E7E:
                bsr     Player_DontRunOnWalls                  ; loc_14338
                tst.w   D1
                bpl.s   loc_11E98
                sub.w   D1, Obj_Y(A0)                                    ; $000C
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bpl.s   loc_11E96
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
loc_11E96:
                rts
loc_11E98:
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_11EC4
                bsr     loc_140A2
                tst.w   D1
                bpl.s   loc_11EC4
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  D3, Obj_Angle(A0)                                ; $0026
                bsr     Tails_ResetOnFloor                     ; loc_11EC6
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.w  Obj_Speed(A0), Obj_Inertia(A0)            ; $0010, $0014
loc_11EC4:
                rts
;-------------------------------------------------------------------------------
Tails_ResetOnFloor:                                            ; loc_11EC6
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$01, Obj_Status(A0)                             ; $0022
                bclr    #$04, Obj_Status(A0)                             ; $0022
                btst    #$02, Obj_Status(A0)                             ; $0022
                beq.s   loc_11EFC
                bclr    #$02, Obj_Status(A0)                             ; $0022
                move.b  #$0F, Obj_Height_2(A0)                           ; $0016
                move.b  #$09, Obj_Width_2(A0)                            ; $0017
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                subq.w  #$01, Obj_Y(A0)                                  ; $000C
loc_11EFC:
                move.b  #$00, Obj_Player_Jump(A0)                        ; $003C
                move.w  #$0000, ($FFFFF7D0).w
                move.b  #$00, Obj_Flip_Angle(A0)                         ; $0027
                move.b  #$00, Obj_Player_Flip_Flag(A0)                   ; $0029
                move.b  #$00, Obj_P_Flips_Remaining(A0)                  ; $002C
                cmpi.b  #$14, Obj_Ani_Number(A0)                         ; $001C
                bne.s   loc_11F28
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
loc_11F28:
                rts
;-------------------------------------------------------------------------------
Tails_Hurt:                                                    ; loc_11F2A
                jsr     (SpeedToPos)                           ; loc_D1DA
                addi.w  #$0030, Obj_Speed_Y(A0)                          ; $0012
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_11F44
                subi.w  #$0020, Obj_Speed_Y(A0)                          ; $0012
loc_11F44:
                bsr     Tails_HurtStop                         ; loc_11F5E
                bsr     Tails_LevelBoundaries                  ; loc_118FE
                bsr     Tails_RecordMoves                      ; loc_11376
                bsr     Tails_Animate                          ; loc_12010
                bsr     Load_Tails_Dynamic_PLC                 ; loc_123EE
                jmp     (DisplaySprite)                        ; loc_D322
;-------------------------------------------------------------------------------
Tails_HurtStop:                                                ; loc_11F5E
                move.w  (Tails_Level_Limits_Max_Y).w, D0             ; $FFFFEEFE
                addi.w  #$00E0, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcs     Kill_Tails                             ; loc_12544
                bsr     Tails_Floor                            ; loc_11CBA
                btst    #$01, Obj_Status(A0)                             ; $0022
                bne.s   loc_11F9A
                moveq   #$00, D0
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
                move.w  D0, Obj_Speed(A0)                                ; $0010
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0078, Obj_P_Invunerblt_Time(A0)                ; $0030
loc_11F9A:
                rts
;-------------------------------------------------------------------------------
Tails_Death:                                                   ; loc_11F9C
                bsr     Tails_GameOver                         ; loc_11FB8
                jsr     (ObjectFall)                           ; loc_D1AE
                bsr     Tails_RecordMoves                      ; loc_11376
                bsr     Tails_Animate                          ; loc_12010
                bsr     Load_Tails_Dynamic_PLC                 ; loc_123EE
                jmp     (DisplaySprite)                        ; loc_D322
;-------------------------------------------------------------------------------
Tails_GameOver:                                                ; loc_11FB8
                move.w  (Tails_Level_Limits_Max_Y).w, D0             ; $FFFFEEFE
                addi.w  #$0100, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcc     loc_11FFA
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                subi.w  #$0040, D0
                move.w  D0, Obj_X(A0)                                    ; $0008
                move.w  (Player_One_Position_Y).w, D0                ; $FFFFB00C
                subi.w  #$0080, D0
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.b  #$02, Obj_Routine(A0)                            ; $0024
                andi.w  #$7FFF, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$0C, Obj_Player_Top_Solid(A0)                   ; $003E
                move.b  #$0D, Obj_Player_LRB_Solid(A0)                   ; $003F
                nop
loc_11FFA:
                rts
;-------------------------------------------------------------------------------
Tails_ResetLevel:                                              ; loc_11FFC
                tst.w   Obj_Player_Spdsh_Cnt(A0)                         ; $003A
                beq.s   loc_1200E
                subq.w  #$01, Obj_Player_Spdsh_Cnt(A0)                   ; $003A
                bne.s   loc_1200E
                move.w  #$0001, ($FFFFFE02).w
loc_1200E:
                rts
;-------------------------------------------------------------------------------
Tails_Animate:                                                 ; loc_12010
                lea     (TailsAniData), A1
Tails_Animate_A1:                                              ; loc_12016
                moveq   #$00, D0
                move.b  Obj_Ani_Number(A0), D0                           ; $001C
                cmp.b   Obj_Ani_Flag(A0), D0                             ; $001D
                beq.s   loc_12038
                move.b  D0, Obj_Ani_Flag(A0)                             ; $001D
                move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
                move.b  #$00, Obj_Ani_Time(A0)                           ; $001E
                bclr    #$05, Obj_Status(A0)                             ; $0022
loc_12038:
                add.w   D0, D0
                adda.w  $00(A1, D0), A1
                move.b  (A1), D0
                bmi.s   loc_120A8
                move.b  Obj_Status(A0), D1                               ; $0022
                andi.b  #$01, D1
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                or.b    D1, Obj_Flags(A0)                                ; $0001
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_12076
                move.b  D0, Obj_Ani_Time(A0)                             ; $001E
loc_1205E:
                moveq   #$00, D1
                move.b  Obj_Ani_Frame(A0), D1                            ; $001B
                move.b  $01(A1, D1), D0
                cmpi.b  #$F0, D0
                bcc.s   loc_12078
loc_1206E:
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                addq.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
loc_12076:
                rts
loc_12078:
                addq.b  #$01, D0
                bne.s   loc_12088
                move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
                move.b  Obj_Flags(A1), D0                                ; $0001
                bra.s   loc_1206E
loc_12088:
                addq.b  #$01, D0
                bne.s   loc_1209C
                move.b  $02(A1, D1), D0
                sub.b   D0, Obj_Ani_Frame(A0)                            ; $001B
                sub.b   D0, D1
                move.b  $01(A1, D1), D0
                bra.s   loc_1206E
loc_1209C:
                addq.b  #$01, D0
                bne.s   loc_120A6
                move.b  $02(A1, D1), Obj_Ani_Number(A0)                  ; $001C
loc_120A6:
                rts
loc_120A8:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_12076
                addq.b  #$01, D0
                bne     loc_121B0
                moveq   #$00, D0
                move.b  Obj_Flip_Angle(A0), D0                           ; $0027
                bne     loc_1214A
                moveq   #$00, D1
                move.b  Obj_Angle(A0), D0                                ; $0026
                bmi.s   loc_120CA
                beq.s   loc_120CA
                subq.b  #$01, D0
loc_120CA:
                move.b  Obj_Status(A0), D2                               ; $0022
                andi.b  #$01, D2
                bne.s   loc_120D6
                not.b   D0
loc_120D6:
                addi.b  #$10, D0
                bpl.s   loc_120DE
                moveq   #$03, D1
loc_120DE:
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                eor.b   D1, D2
                or.b    D2, Obj_Flags(A0)                                ; $0001
                btst    #$05, Obj_Status(A0)                             ; $0022
                bne     loc_121F4
                lsr.b   #$04, D0
                andi.b  #$06, D0
                move.w  Obj_Inertia(A0), D2                              ; $0014
                bpl.s   loc_12102
                neg.w   D2
loc_12102:
                move.b  D0, D3
                add.b   D3, D3
                add.b   D3, D3
                lea     (TailsAni_Walk), A1
                cmpi.w  #$0600, D2
                bcs.s   loc_12130
                lea     (TailsAni_Run), A1
                move.b  D0, D1
                lsr.b   #$01, D1
                add.b   D1, D0
                add.b   D0, D0
                move.b  D0, D3
                cmpi.w  #$0700, D2
                bcs.s   loc_12130
                lea     (TailsAni_HaulAss), A1
loc_12130:
                neg.w   D2
                addi.w  #$0800, D2
                bpl.s   loc_1213A
                moveq   #$00, D2
loc_1213A:
                lsr.w   #$08, D2
                move.b  D2, Obj_Ani_Time(A0)                             ; $001E
                bsr     loc_1205E
                add.b   D3, Obj_Map_Id(A0)                               ; $001A
                rts
loc_1214A:
                move.b  Obj_Flip_Angle(A0), D0                           ; $0027
                moveq   #$00, D1
                move.b  Obj_Status(A0), D2                               ; $0022
                andi.b  #$01, D2
                bne.s   loc_12178
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                addi.b  #$0B, D0
                divu.w  #$0016, D0
                addi.b  #$75, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.b  #$00, Obj_Ani_Time(A0)                           ; $001E
                rts
loc_12178:
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                tst.b   Obj_Player_Flip_Flag(A0)                         ; $0029
                beq.s   loc_12190
                ori.b   #$01, Obj_Flags(A0)                              ; $0001
                addi.b  #$0B, D0
                bra.s   loc_1219C
loc_12190:
                ori.b   #$03, Obj_Flags(A0)                              ; $0001
                neg.b   D0
                addi.b  #$8F, D0
loc_1219C:
                divu.w  #$0016, D0
                addi.b  #$75, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.b  #$00, Obj_Ani_Time(A0)                           ; $001E
                rts
loc_121B0:
                addq.b  #$01, D0
                bne.s   loc_12226
                move.w  Obj_Inertia(A0), D2                              ; $0014
                bpl.s   loc_121BC
                neg.w   D2
loc_121BC:
                lea     (TailsAni_Roll2), A1
                cmpi.w  #$0600, D2
                bcc.s   loc_121CE
                lea     (TailsAni_Roll), A1
loc_121CE:
                neg.w   D2
                addi.w  #$0400, D2
                bpl.s   loc_121D8
                moveq   #$00, D2
loc_121D8:
                lsr.w   #$08, D2
                move.b  D2, Obj_Ani_Time(A0)                             ; $001E
                move.b  Obj_Status(A0), D1                               ; $0022
                andi.b  #$01, D1
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                or.b    D1, Obj_Flags(A0)                                ; $0001
                bra     loc_1205E
loc_121F4:
                move.w  Obj_Inertia(A0), D2                              ; $0014
                bmi.s   loc_121FC
                neg.w   D2
loc_121FC:
                addi.w  #$0800, D2
                bpl.s   loc_12204
                moveq   #$00, D2
loc_12204:
                lsr.w   #$06, D2
                move.b  D2, Obj_Ani_Time(A0)                             ; $001E
                lea     (TailsAni_Push), A1
                move.b  Obj_Status(A0), D1                               ; $0022
                andi.b  #$01, D1
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                or.b    D1, Obj_Flags(A0)                                ; $0001
                bra     loc_1205E
loc_12226:
                move.w  ($FFFFB050).w, D1
                move.w  ($FFFFB052).w, D2
                jsr     (CalcAngle)                            ; loc_351A
                moveq   #$00, D1
                move.b  Obj_Status(A0), D2                               ; $0022
                andi.b  #$01, D2
                bne.s   loc_12244
                not.b   D0
                bra.s   loc_12248
loc_12244:
                addi.b  #$80, D0
loc_12248:
                addi.b  #$10, D0
                bpl.s   loc_12250
                moveq   #$03, D1
loc_12250:
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                eor.b   D1, D2
                or.b    D2, Obj_Flags(A0)                                ; $0001
                lsr.b   #$03, D0
                andi.b  #$0C, D0
                move.b  D0, D3
                lea     (Obj05Ani_Directional), A1
                move.b  #$03, Obj_Ani_Time(A0)                           ; $001E
                bsr     loc_1205E
                add.b   D3, Obj_Map_Id(A0)                               ; $001A
                rts
;-------------------------------------------------------------------------------
;loc_1227A:
TailsAniData:
                dc.w    TailsAni_Walk-TailsAniData	;0
                dc.w    TailsAni_Run-TailsAniData	;1
                dc.w    TailsAni_Roll-TailsAniData	;2
                dc.w    TailsAni_Roll2-TailsAniData	;3
                dc.w    TailsAni_Push-TailsAniData	;4
                dc.w    TailsAni_Wait-TailsAniData	;5
                dc.w    TailsAni_Balance-TailsAniData	;6
                dc.w    TailsAni_LookUp-TailsAniData	;7
                dc.w    TailsAni_Duck-TailsAniData	;8
                dc.w    TailsAni_Spindash-TailsAniData	;9
                dc.w    TailsAni_Dummy1-TailsAniData	;$A
                dc.w    TailsAni_Dummy2-TailsAniData	;$B
                dc.w    TailsAni_Dummy3-TailsAniData	;$C
                dc.w    TailsAni_Stop-TailsAniData	;$D
                dc.w    TailsAni_Float-TailsAniData	;$E
                dc.w    TailsAni_Float2-TailsAniData	;$F
                dc.w    TailsAni_Spring-TailsAniData	;$10
                dc.w    TailsAni_Hang-TailsAniData	;$11
                dc.w    TailsAni_Blink-TailsAniData	;$12
                dc.w    TailsAni_Blink2-TailsAniData	;$13
                dc.w    TailsAni_Hang2-TailsAniData	;$14
                dc.w    TailsAni_Bubble-TailsAniData	;$15
                dc.w    TailsAni_DeathBW-TailsAniData	;$16
                dc.w    TailsAni_Drown-TailsAniData	;$17
                dc.w    TailsAni_Death-TailsAniData	;$18
                dc.w    TailsAni_Hurt-TailsAniData	;$19
                dc.w    TailsAni_Hurt2-TailsAniData	;$1A
                dc.w    TailsAni_Slide-TailsAniData	;$1B
                dc.w    TailsAni_Blank-TailsAniData	;$1C
                dc.w    TailsAni_Dummy4-TailsAniData	;$1D
                dc.w    TailsAni_Dummy5-TailsAniData	;$1E
                dc.w    TailsAni_HaulAss-TailsAniData	;$1F 
                dc.w    TailsAni_Fly-TailsAniData	;$20
TailsAni_Walk:
                dc.b    $FF, $10, $11, $12, $13, $14, $15, $0E
                dc.b    $0F, $FF
TailsAni_Run:
                dc.b    $FF, $2E, $2F, $30, $31, $FF, $FF, $FF
                dc.b    $FF, $FF
TailsAni_Roll:
                dc.b    $01, $48, $47, $46, $FF
TailsAni_Roll2:
                dc.b    $01, $48, $47, $46, $FF
TailsAni_Push:
                dc.b    $FD, $63, $64, $65, $66, $FF, $FF, $FF
                dc.b    $FF, $FF
TailsAni_Wait:
                dc.b    $07, $01, $01, $01, $01, $01, $01, $01
                dc.b    $01, $01, $01, $03, $02, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $03, $02, $01
                dc.b    $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $06, $07, $08, $07, $08, $07, $08, $07
                dc.b    $08, $07, $08, $06, $FE, $1C
TailsAni_Balance:
                dc.b    $09, $69, $69, $6A, $6A, $69, $69, $6A
                dc.b    $6A, $69, $69, $6A, $6A, $69, $69, $6A
                dc.b    $6A, $69, $69, $6A, $6A, $69, $6A, $FF
TailsAni_LookUp:
                dc.b    $3F, $04, $FF
TailsAni_Duck:
                dc.b    $3F, $5B, $FF
TailsAni_Spindash:
                dc.b    $00, $60, $61, $62, $FF
TailsAni_Dummy1:
                dc.b    $3F, $82, $FF
TailsAni_Dummy2:
                dc.b    $07, $08, $08, $09, $FD, $05
TailsAni_Dummy3:
                dc.b    $07, $09, $FD, $05
TailsAni_Stop:
                dc.b    $07, $67, $68, $67, $68, $FD, $00
TailsAni_Float:
                dc.b    $09, $6E, $73, $FF
TailsAni_Float2:
                dc.b    $09, $6E, $6F, $70, $71, $72, $FF
TailsAni_Spring:
                dc.b    $03, $59, $5A, $59, $5A, $59, $5A, $59
                dc.b    $5A, $59, $5A, $59, $5A, $FD, $00
TailsAni_Hang:
                dc.b    $05, $6C, $6D, $FF
TailsAni_Blink:
                dc.b    $0F, $01, $02, $03, $FE, $01
TailsAni_Blink2:
                dc.b    $0F, $01, $02, $FE, $01
TailsAni_Hang2:
                dc.b    $13, $85, $86, $FF
TailsAni_Bubble:
                dc.b    $0B, $74, $74, $12, $13, $FD, $00
TailsAni_DeathBW:
                dc.b    $20, $5D, $FF
TailsAni_Drown:
                dc.b    $2F, $5D, $FF
TailsAni_Death:
                dc.b    $03, $5D, $FF
TailsAni_Hurt:
                dc.b    $03, $5D, $FF
TailsAni_Hurt2:
                dc.b    $03, $5C, $FF
TailsAni_Slide:
                dc.b    $09, $6B, $5C, $FF
TailsAni_Blank:
                dc.b    $77, $00, $FD, $00
TailsAni_Dummy4:
                dc.b    $03, $01, $02, $03, $04, $05, $06, $07
                dc.b    $08, $FF
TailsAni_Dummy5:
                dc.b    $03, $01, $02, $03, $04, $05, $06, $07
                dc.b    $08, $FF
TailsAni_HaulAss:
                dc.b    $FF, $32, $33, $FF, $FF, $FF, $FF, $FF
                dc.b    $FF, $FF
TailsAni_Fly:
                dc.b    $01, $5E, $5F, $FF
;-------------------------------------------------------------------------------
Load_Tails_Tail_Dynamic_PLC:                                   ; loc_123C6
                moveq   #$00, D0
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                cmp.b   ($FFFFF7DF).w, D0
                beq.s   Exit_Load_Tails_Dynamic_PLC            ; loc_12440
                move.b  D0, ($FFFFF7DF).w
                lea     (Tails_Dyn_Script), A2                 ; loc_7446C
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D5
                subq.w  #$01, D5
                bmi.s   Exit_Load_Tails_Dynamic_PLC            ; loc_12440
                move.w  #$F600, D4
                bra.s   Load_Tails_Dynamic_PLC_Loop            ; loc_12414
;-------------------------------------------------------------------------------
Load_Tails_Dynamic_PLC:                                        ; loc_123EE
                moveq   #$00, D0
                move.b  Obj_Map_Id(A0), D0                               ; $001A
Load_Tails_Dynamic_PLC_D0:                                     ;
                cmp.b   ($FFFFF7DE).w, D0
                beq.s   Exit_Load_Tails_Dynamic_PLC            ; loc_12440
                move.b  D0, ($FFFFF7DE).w
                lea     (Tails_Dyn_Script), A2                 ; loc_7446C
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D5
                subq.w  #$01, D5
                bmi.s   Exit_Load_Tails_Dynamic_PLC            ; loc_12440
                move.w  #$F400, D4
Load_Tails_Dynamic_PLC_Loop:                                   ; loc_12414
                moveq   #$00, D1
                move.w  (A2)+, D1
                move.w  D1, D3
                lsr.w   #$08, D3
                andi.w  #$00F0, D3
                addi.w  #$0010, D3
                andi.w  #$0FFF, D1
                lsl.l   #$05, D1
                addi.l  #Art_Tails, D1                         ; loc_64320
                move.w  D4, D2
                add.w   D3, D4
                add.w   D3, D4
                jsr     (DMA_68KtoVRAM)                        ; loc_15C4
                dbra    D5, Load_Tails_Dynamic_PLC_Loop        ; loc_12414
Exit_Load_Tails_Dynamic_PLC:                                   ; loc_12440
                rts
;===============================================================================
; Object 0x02 - Tails
; [ End ]
;===============================================================================
Obj05_Tails_Tail:                                           ; loc_12442
;===============================================================================
; Object 0x05 - Tails' tails
; [ Begin ]
;===============================================================================
; loc_12442:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_12450(PC, D0), D1
                jmp     loc_12450(PC, D1)
;-------------------------------------------------------------------------------
loc_12450:
                dc.w    loc_12454-loc_12450
                dc.w    loc_1247C-loc_12450
;-------------------------------------------------------------------------------
loc_12454:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Tails_Mappings, Obj_Map(A0)    ; loc_739E2, $0004
                move.w  #$07B0, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$02, Obj_Priority(A0)                           ; $0018
                move.b  #$18, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Flags(A0)                              ; $0001
;-------------------------------------------------------------------------------
loc_1247C:
                move.b  ($FFFFB066).w, Obj_Angle(A0)                     ; $0026
                move.b  ($FFFFB062).w, Obj_Status(A0)                    ; $0022
                move.w  (Player_Two_Position_X).w, Obj_X(A0)         ; $FFFFB048; $0008
                move.w  (Player_Two_Position_Y).w, Obj_Y(A0)         ; $FFFFB04C; $000C
                moveq   #$00, D0
                move.b  ($FFFFB05C).w, D0
                btst    #$05, ($FFFFB062).w
                beq.s   loc_124A4
                moveq   #$04, D0
loc_124A4:
                cmp.b   Obj_P_Invunerblt_Time(A0), D0                    ; $0030
                beq.s   loc_124B4
                move.b  D0, Obj_P_Invunerblt_Time(A0)                    ; $0030
                move.b  Obj05AniSelection(PC, D0), Obj_Ani_Number(A0)    ; $001C
loc_124B4:
                lea     (Obj05AniData), A1
                bsr     Tails_Animate_A1                       ; loc_12016
                bsr     Load_Tails_Tail_Dynamic_PLC            ; loc_123C6
                jsr     (DisplaySprite)                        ; loc_D322
                rts
;-------------------------------------------------------------------------------
;loc_124CA:
Obj05AniSelection:
        dc.b	0,0	; TailsAni_Walk,Run
	dc.b	3	; TailsAni_Roll
	dc.b	3	; TailsAni_Roll2
	dc.b	9	; TailsAni_Push
	dc.b	1	; TailsAni_Wait
	dc.b	0	; TailsAni_Balance
	dc.b	2	; TailsAni_LookUp
	dc.b	1	; TailsAni_Duck
	dc.b	7	; TailsAni_Spindash
	dc.b	0,0,0	; TailsAni_Dummy1,2,3
	dc.b	8	; TailsAni_Stop
	dc.b	0,0	; TailsAni_Float,2
	dc.b	0	; TailsAni_Spring
	dc.b	0	; TailsAni_Hang
	dc.b	0,0	; TailsAni_Blink,2
	dc.b	$A	; TailsAni_Hang2
	dc.b	0	; TailsAni_Bubble
	dc.b	0,0,0,0	; TailsAni_Death,2,3,4
	dc.b	0,0	; TailsAni_Hurt,Slide
	dc.b	0	; TailsAni_Blank
	dc.b	0,0	; TailsAni_Dummy4,5
	dc.b	0	; TailsAni_HaulAss
	dc.b	0	; TailsAni_Fly
	even
;-------------------------------------------------------------------------------
;loc_124EC:
Obj05AniData:
                dc.w    Obj05Ani_Blank-Obj05AniData       ;0
                dc.w    Obj05Ani_Swish-Obj05AniData       ;1
                dc.w    Obj05Ani_Flick-Obj05AniData       ;2
                dc.w    Obj05Ani_Directional-Obj05AniData ;3
                dc.w    Obj05Ani_DownLeft-Obj05AniData    ;4
                dc.w    Obj05Ani_Down-Obj05AniData        ;5
                dc.w    Obj05Ani_DownRight-Obj05AniData   ;6
                dc.w    Obj05Ani_Spindash-Obj05AniData    ;7
                dc.w    Obj05Ani_Skidding-Obj05AniData    ;8
                dc.w    Obj05Ani_Pushing-Obj05AniData     ;9
                dc.w    Obj05Ani_Hanging-Obj05AniData     ;$A
Obj05Ani_Blank:
                dc.b    $20, $00, $FF
Obj05Ani_Swish:
                dc.b    $07, $09, $0A, $0B, $0C, $0D, $FF
Obj05Ani_Flick:
                dc.b    $03, $09, $0A, $0B, $0C, $0D, $FD, $01
Obj05Ani_Directional:
                dc.b    $FC, $49, $4A, $4B, $4C, $FF
Obj05Ani_DownLeft:
                dc.b    $03, $4D, $4E, $4F, $50, $FF
Obj05Ani_Down:
                dc.b    $03, $51, $52, $53, $54, $FF
Obj05Ani_DownRight:
                dc.b    $03, $55, $56, $57, $58, $FF
Obj05Ani_Spindash:
                dc.b    $02, $81, $82, $83, $84, $FF
Obj05Ani_Skidding:
                dc.b    $02, $87, $88, $89, $8A, $FF
Obj05Ani_Pushing:
                dc.b    $09, $87, $88, $89, $8A, $FF
Obj05Ani_Hanging:
                dc.b    $09, $81, $82, $83, $84, $FF
;===============================================================================
; Object 0x05 - Tails' tails
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Kill_Tails:                                                    ; loc_12544
		jmp     (KillCharacter)                        ; loc_2B57C
;-------------------------------------------------------------------------------
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj0A_Sonic_Tails_Underwater:                               ; loc_1254C
;===============================================================================
; Object 0x0A - Underwater bubbles
; [ Begin ]
;===============================================================================
; loc_1254C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1255A(PC, D0), D1
                jmp     loc_1255A(PC, D1)
;-------------------------------------------------------------------------------
loc_1255A:
                dc.w    loc_1256C-loc_1255A
                dc.w    loc_125C4-loc_1255A
                dc.w    loc_125D0-loc_1255A
                dc.w    loc_12646-loc_1255A
                dc.w    loc_1265A-loc_1255A
                dc.w    loc_12832-loc_1255A
                dc.w    loc_12660-loc_1255A
                dc.w    loc_1263A-loc_1255A
                dc.w    loc_1265A-loc_1255A
;-------------------------------------------------------------------------------
loc_1256C:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Sonic_Underwater_Mappings, Obj_Map(A0) ; loc_14CFC, $0004
                tst.b   Obj_Control_Var_13(A0)                           ; $003F
                beq.s   loc_12586
                move.l  #Tails_Underwater_Mappings, Obj_Map(A0) ; loc_14D1E, $0004
loc_12586:
                move.w  #$855B, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$84, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_125B4
                addq.b  #$08, Obj_Routine(A0)                            ; $0024
                andi.w  #$007F, D0
                move.b  D0, Obj_Control_Var_07(A0)                       ; $0033
                bra     loc_12832
loc_125B4:
                move.b  D0, Obj_Ani_Number(A0)                           ; $001C
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.w  #$FF78, Obj_Speed_Y(A0)                          ; $0012
;-------------------------------------------------------------------------------
loc_125C4:
                lea     (Bubbles_Animate_Data), A1             ; loc_12A5E
                jsr     (AnimateSprite)                        ; loc_D372
;-------------------------------------------------------------------------------
loc_125D0:
                move.w  (Water_Level).w, D0                          ; $FFFFF646
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcs.s   loc_125F6
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                addq.b  #$07, Obj_Ani_Number(A0)                         ; $001C
                cmpi.b  #$0D, Obj_Ani_Number(A0)                         ; $001C
                beq.s   loc_12646
                bcs.s   loc_12646
                move.b  #$0D, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_12646
loc_125F6:
                tst.b   ($FFFFF7C7).w
                beq.s   loc_12600
                addq.w  #$04, Obj_Control_Var_04(A0)                     ; $0030
loc_12600:
                move.b  Obj_Angle(A0), D0                                ; $0026
                addq.b  #$01, Obj_Angle(A0)                              ; $0026
                andi.w  #$007F, D0
                lea     (loc_126EC), A1
                move.b  $00(A1, D0), D0
                ext.w   D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_X(A0)                                    ; $0008
                bsr.s   loc_126A0
                jsr     (SpeedToPos)                           ; loc_D1DA
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_12634
                jmp     (DisplaySprite)                        ; loc_D322
loc_12634:
                jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
loc_1263A:
                move.l  Obj_Control_Var_10(A0), A2                       ; $003C
                cmpi.b  #$0C, Obj_Subtype(A2)                            ; $0028
                bhi.s   loc_1265A
;-------------------------------------------------------------------------------
loc_12646:
                bsr.s   loc_126A0
                lea     (Bubbles_Animate_Data), A1             ; loc_12A5E
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322
;-------------------------------------------------------------------------------
loc_1265A:
                jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
loc_12660:
                move.l  Obj_Control_Var_10(A0), A2                       ; $003C
                cmpi.b  #$0C, Obj_Subtype(A2)                            ; $0028
                bhi.s   loc_1269A
                subq.w  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bne.s   loc_1267E
                move.b  #$0E, Obj_Routine(A0)                            ; $0024
                addq.b  #$07, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_12646
loc_1267E:
                lea     (Bubbles_Animate_Data), A1             ; loc_12A5E
                jsr     (AnimateSprite)                        ; loc_D372
                bsr     Load_Oxygen_Numbers_Dynamic_PLC        ; loc_127EC
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_1269A
                jmp     (DisplaySprite)                        ; loc_D322
loc_1269A:
                jmp     (DeleteObject)                         ; loc_D314
loc_126A0:
                tst.w   Obj_Control_Var_0C(A0)                           ; $0038
                beq.s   loc_126EA
                subq.w  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bne.s   loc_126EA
                cmpi.b  #$07, Obj_Ani_Number(A0)                         ; $001C
                bcc.s   loc_126EA
                move.w  #$000F, Obj_Control_Var_0C(A0)                   ; $0038
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
                move.b  #$80, Obj_Flags(A0)                              ; $0001
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   ($FFFFEE00).w, D0
                addi.w  #$0080, D0
                move.w  D0, Obj_X(A0)                                    ; $0008
                move.w  Obj_Y(A0), D0                                    ; $000C
                sub.w   ($FFFFEE04).w, D0
                addi.w  #$0080, D0
                move.w  D0, Obj_Sub_Y(A0)                                ; $000A
                move.b  #$0C, Obj_Routine(A0)                            ; $0024
loc_126EA:
                rts
;-------------------------------------------------------------------------------
loc_126EC:
                dc.b    $00, $00, $00, $00, $00, $00, $01, $01
                dc.b    $01, $01, $01, $02, $02, $02, $02, $02
                dc.b    $02, $02, $03, $03, $03, $03, $03, $03
                dc.b    $03, $03, $03, $03, $03, $03, $03, $03
                dc.b    $03, $03, $03, $03, $03, $03, $03, $03
                dc.b    $03, $03, $03, $03, $03, $03, $03, $02
                dc.b    $02, $02, $02, $02, $02, $02, $01, $01
                dc.b    $01, $01, $01, $00, $00, $00, $00, $00
                dc.b    $00, $FF, $FF, $FF, $FF, $FF, $FE, $FE
                dc.b    $FE, $FE, $FE, $FD, $FD, $FD, $FD, $FD
                dc.b    $FD, $FD, $FC, $FC, $FC, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FD
                dc.b    $FD, $FD, $FD, $FD, $FD, $FD, $FE, $FE
                dc.b    $FE, $FE, $FE, $FF, $FF, $FF, $FF, $FF
                dc.b    $00, $00, $00, $00, $00, $00, $01, $01
                dc.b    $01, $01, $01, $02, $02, $02, $02, $02
                dc.b    $02, $02, $03, $03, $03, $03, $03, $03
                dc.b    $03, $03, $03, $03, $03, $03, $03, $03
                dc.b    $03, $03, $03, $03, $03, $03, $03, $03
                dc.b    $03, $03, $03, $03, $03, $03, $03, $02
                dc.b    $02, $02, $02, $02, $02, $02, $01, $01
                dc.b    $01, $01, $01, $00, $00, $00, $00, $00
                dc.b    $00, $FF, $FF, $FF, $FF, $FF, $FE, $FE
                dc.b    $FE, $FE, $FE, $FD, $FD, $FD, $FD, $FD
                dc.b    $FD, $FD, $FC, $FC, $FC, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FC
                dc.b    $FC, $FC, $FC, $FC, $FC, $FC, $FC, $FD
                dc.b    $FD, $FD, $FD, $FD, $FD, $FD, $FE, $FE
                dc.b    $FE, $FE, $FE, $FF, $FF, $FF, $FF, $FF
;-------------------------------------------------------------------------------
Load_Oxygen_Numbers_Dynamic_PLC:                               ; loc_127EC
                moveq   #$00, D1
                move.b  Obj_Map_Id(A0), D1                               ; $001A
                cmpi.b  #$08, D1
                bcs.s   loc_12830
                cmpi.b  #$0E, D1
                bcc.s   loc_12830
                cmp.b   Obj_Control_Var_02(A0), D1                       ; $002E
                beq.s   loc_12830
                move.b  D1, Obj_Control_Var_02(A0)                       ; $002E
                subq.w  #$08, D1
                move.w  D1, D0
                add.w   D1, D1
                add.w   D0, D1
                lsl.w   #$06, D1
                addi.l  #Art_Oxygen_Numbers, D1                ; loc_7ED04
                move.w  #$9380, D2
                tst.b   Obj_Control_Var_13(A0)                           ; $003F
                beq.s   loc_12826
                move.w  #$9180, D2
loc_12826:
                move.w  #$0060, D3
                jsr     (DMA_68KtoVRAM)                        ; loc_15C4
loc_12830:
                rts
;-------------------------------------------------------------------------------
loc_12832:
                move.l  Obj_Control_Var_10(A0), A2                       ; $003C
                tst.w   Obj_Control_Var_00(A0)                           ; $002C
                bne     loc_12922
                cmpi.b  #$06, Obj_Routine(A2)                            ; $0024
                bcc     loc_12A2E
                btst    #$06, Obj_Status(A2)                             ; $0022
                beq     loc_12A2E
                subq.w  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bpl     loc_12946
                move.w  #$003B, Obj_Control_Var_0C(A0)                   ; $0038
                move.w  #$0001, Obj_Control_Var_0A(A0)                   ; $0036
                jsr     (PseudoRandomNumber)                   ; loc_325C
                andi.w  #$0001, D0
                move.b  D0, Obj_Control_Var_08(A0)                       ; $0034
                moveq   #$00, D0
                move.b  Obj_Subtype(A2), D0                              ; $0028
                cmpi.w  #$0019, D0
                beq.s   loc_128B2
                cmpi.w  #$0014, D0
                beq.s   loc_128B2
                cmpi.w  #$000F, D0
                beq.s   loc_128B2
                cmpi.w  #$000C, D0
                bhi.s   loc_128BC
                bne.s   loc_1289E
                move.w  #$008A, D0                   ; play Death Egg Zone music
                jsr     (Play_Music)                           ; loc_150C
loc_1289E:
                subq.b  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bpl.s   loc_128BC
                move.b  Obj_Control_Var_07(A0), Obj_Control_Var_06(A0); $0032, $0033
                bset    #$07, Obj_Control_Var_0A(A0)                     ; $0036
                bra.s   loc_128BC
loc_128B2:
                move.w  #$00C2, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_128BC:
                subq.b  #$01, Obj_Subtype(A2)                            ; $0028
                bcc     loc_12944
                move.b  #$81, Obj_Timer(A2)                              ; $002A
                move.w  #$00B2, D0
                jsr     (Play_Sfx)                             ; loc_1512
                move.b  #$0A, Obj_Control_Var_08(A0)                     ; $0034
                move.w  #$0001, Obj_Control_Var_0A(A0)                   ; $0036
                move.w  #$0078, Obj_Control_Var_00(A0)                   ; $002C
                move.l  A2, A1
                bsr     Resume_Music                           ; loc_12A30
                move.l  A0, -(A7)
                move.l  A2, A0
                bsr     Sonic_ResetOnFloor                     ; loc_10A46
                move.b  #$17, Obj_Ani_Number(A0)                         ; $001C
                bset    #$01, Obj_Status(A0)                             ; $0022
                bset    #$07, Obj_Art_VRAM(A0)                           ; $0002
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.w  #$0000, Obj_Inertia(A0)                          ; $0014
                move.b  #$01, (Level_Scroll_Flag).w                  ; $FFFFEEDC
                move.l  (A7)+, A0
                rts
loc_12922:
                subq.w  #$01, Obj_Control_Var_00(A0)                     ; $002C
                bne.s   loc_12930
                move.b  #$06, Obj_Routine(A2)                            ; $0024
                rts
loc_12930:
                move.l  A0, -(A7)
                move.l  A2, A0
                jsr     (SpeedToPos)                           ; loc_D1DA
                addi.w  #$0010, Obj_Speed_Y(A0)                          ; $0012
                move.l  (A7)+, A0
                bra.s   loc_12946
loc_12944:
                bra.s   loc_12956
loc_12946:
                tst.w   Obj_Control_Var_0A(A0)                           ; $0036
                beq     loc_12A2E
                subq.w  #$01, Obj_Control_Var_0E(A0)                     ; $003A
                bpl     loc_12A2E
loc_12956:
                jsr     (PseudoRandomNumber)                   ; loc_325C
                andi.w  #$000F, D0
                move.w  D0, Obj_Control_Var_0E(A0)                       ; $003A
                jsr     (SingleObjectLoad)                     ; loc_E6FE
                bne     loc_12A2E
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.w  Obj_X(A2), Obj_X(A1)                      ; $0008, $0008
                moveq   #$06, D0
                btst    #$00, Obj_Status(A2)                             ; $0022
                beq.s   loc_1298C
                neg.w   D0
                move.b  #$40, Obj_Angle(A1)                              ; $0026
loc_1298C:
                add.w   D0, Obj_X(A1)                                    ; $0008
                move.w  Obj_Y(A2), Obj_Y(A1)                      ; $000C, $000C
                move.l  Obj_Control_Var_10(A0), Obj_Control_Var_10(A1); $003C, $003C
                move.b  #$06, Obj_Subtype(A1)                            ; $0028
                tst.w   Obj_Control_Var_00(A0)                           ; $002C
                beq     loc_129DE
                andi.w  #$0007, Obj_Control_Var_0E(A0)                   ; $003A
                addi.w  #$0000, Obj_Control_Var_0E(A0)                   ; $003A
                move.w  Obj_Y(A2), D0                                    ; $000C
                subi.w  #$000C, D0
                move.w  D0, Obj_Y(A1)                                    ; $000C
                jsr     (PseudoRandomNumber)                   ; loc_325C
                move.b  D0, Obj_Angle(A1)                                ; $0026
                move.w  ($FFFFFE04).w, D0
                andi.b  #$03, D0
                bne.s   loc_12A24
                move.b  #$0E, Obj_Subtype(A1)                            ; $0028
                bra.s   loc_12A24
loc_129DE:
                btst    #$07, Obj_Control_Var_0A(A0)                     ; $0036
                beq.s   loc_12A24
                moveq   #$00, D2
                move.b  Obj_Subtype(A2), D2                              ; $0028
                lsr.w   #$01, D2
                jsr     (PseudoRandomNumber)                   ; loc_325C
                andi.w  #$0003, D0
                bne.s   loc_12A0C
                bset    #$06, Obj_Control_Var_0A(A0)                     ; $0036
                bne.s   loc_12A24
                move.b  D2, Obj_Subtype(A1)                              ; $0028
                move.w  #$001C, Obj_Control_Var_0C(A1)                   ; $0038
loc_12A0C:
                tst.b   Obj_Control_Var_08(A0)                           ; $0034
                bne.s   loc_12A24
                bset    #$06, Obj_Control_Var_0A(A0)                     ; $0036
                bne.s   loc_12A24
                move.b  D2, Obj_Subtype(A1)                              ; $0028
                move.w  #$001C, Obj_Control_Var_0C(A1)                   ; $0038
loc_12A24:
                subq.b  #$01, Obj_Control_Var_08(A0)                     ; $0034
                bpl.s   loc_12A2E
                clr.w   Obj_Control_Var_0A(A0)                           ; $0036
loc_12A2E:
                rts
;-------------------------------------------------------------------------------
; Rotina para restaurar a m sica da fase
; [ Begin ]
;-------------------------------------------------------------------------------
Resume_Music:                                                  ; loc_12A30
                cmpi.b  #$0C, Obj_Subtype(A1)                            ; $0028
                bhi.s   Reset_Water_Counter                    ; loc_12A56
                move.w  #$0082, D0
                tst.b   (Invincibility_Flag).w                       ; $FFFFFE2D
                beq.s   Try_Resume_Boss                        ; loc_12A46
                move.w  #$0087, D0
Try_Resume_Boss:                                               ; loc_12A46
                tst.b   (Boss_Flag).w                                ; $FFFFF7AA
                beq.s   Resume_Play_Music                      ; loc_12A50
                move.w  #$008C, D0       ; play Emerald Hill Zone 2 player music
Resume_Play_Music:                                             ; loc_12A50
                jsr     (Play_Music)                           ; loc_150C
Reset_Water_Counter:                                           ; loc_12A56
                move.b  #$1E, Obj_Subtype(A1)                            ; $0028
                rts
;-------------------------------------------------------------------------------
; Rotina para restaurar a m sica da fase
; [ End ]
;-------------------------------------------------------------------------------
Bubbles_Animate_Data:                                          ; loc_12A5E
                dc.w    loc_12A7C-Bubbles_Animate_Data
                dc.w    loc_12A85-Bubbles_Animate_Data
                dc.w    loc_12A8E-Bubbles_Animate_Data
                dc.w    loc_12A97-Bubbles_Animate_Data
                dc.w    loc_12AA0-Bubbles_Animate_Data
                dc.w    loc_12AA9-Bubbles_Animate_Data
                dc.w    loc_12AB2-Bubbles_Animate_Data
                dc.w    loc_12AB7-Bubbles_Animate_Data
                dc.w    loc_12ABF-Bubbles_Animate_Data
                dc.w    loc_12AC7-Bubbles_Animate_Data
                dc.w    loc_12ACF-Bubbles_Animate_Data
                dc.w    loc_12AD7-Bubbles_Animate_Data
                dc.w    loc_12ADF-Bubbles_Animate_Data
                dc.w    loc_12AE7-Bubbles_Animate_Data
                dc.w    loc_12AE9-Bubbles_Animate_Data
loc_12A7C:
                dc.b    $05, $00, $01, $02, $03, $04, $08, $08
                dc.b    $FC
loc_12A85:
                dc.b    $05, $00, $01, $02, $03, $04, $09, $09
                dc.b    $FC
loc_12A8E:
                dc.b    $05, $00, $01, $02, $03, $04, $0A, $0A
                dc.b    $FC
loc_12A97:
                dc.b    $05, $00, $01, $02, $03, $04, $0B, $0B
                dc.b    $FC
loc_12AA0:
                dc.b    $05, $00, $01, $02, $03, $04, $0C, $0C
                dc.b    $FC
loc_12AA9:
                dc.b    $05, $00, $01, $02, $03, $04, $0D, $0D
                dc.b    $FC
loc_12AB2:
                dc.b    $0E, $00, $01, $02, $FC
loc_12AB7:
                dc.b    $07, $10, $08, $10, $08, $10, $08, $FC
loc_12ABF:
                dc.b    $07, $10, $09, $10, $09, $10, $09, $FC
loc_12AC7:
                dc.b    $07, $10, $0A, $10, $0A, $10, $0A, $FC
loc_12ACF:
                dc.b    $07, $10, $0B, $10, $0B, $10, $0B, $FC
loc_12AD7:
                dc.b    $07, $10, $0C, $10, $0C, $10, $0C, $FC
loc_12ADF:
                dc.b    $07, $10, $0D, $10, $0D, $10, $0D, $FC
loc_12AE7:
                dc.b    $0E, $FC
loc_12AE9:
                dc.b    $0E, $01, $02, $03, $04, $FC, $00
;===============================================================================
; Object 0x0A - Underwater bubbles
; [ End ]
;===============================================================================
Obj38_Shield:                                               ; loc_12AF0
;===============================================================================
; Object 0x38 - Sonic/Tails shield
; [ Begin ]
;===============================================================================
; loc_12AF0:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_12AFE(PC, D0), D1
                jmp     loc_12AFE(PC, D1)
;-------------------------------------------------------------------------------
loc_12AFE:
                dc.w    loc_12B02-loc_12AFE
                dc.w    loc_12B3A-loc_12AFE
;-------------------------------------------------------------------------------
loc_12B02:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Shield_Mappings, Obj_Map(A0)   ; loc_13074, $0004
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  #$18, Obj_Width(A0)                              ; $0019
                move.w  #$04BE, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                lea     (Obj_Memory_Address).w, A2                   ; $FFFFB000
                tst.w   Obj_Art_VRAM(A2)                                 ; $0002
                beq.s   loc_12B3A
                ori.w   #$8000, Obj_Art_VRAM(A0)                         ; $0002
;-------------------------------------------------------------------------------
loc_12B3A:
                tst.b   (Invincibility_Flag).w                       ; $FFFFFE2D
                bne.s   loc_12B6A
                tst.b   (Shield_Flag).w                              ; $FFFFFE2C
                beq.s   loc_12B6C
                move.w  (Player_One_Position_X).w, Obj_X(A0)         ; $FFFFB008; $0008
                move.w  (Player_One_Position_Y).w, Obj_Y(A0)         ; $FFFFB00C; $000C
                move.b  ($FFFFB022).w, Obj_Status(A0)                    ; $0022
                lea     (Shield_AnimateData), A1               ; loc_13066
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322
loc_12B6A:
                rts
loc_12B6C:
                jmp     (DeleteObject)                         ; loc_D314
;===============================================================================
; Object 0x38 - Sonic/Tails shield
; [ End ]
;===============================================================================
Obj35_Invincibility:                                        ; loc_12B72
;===============================================================================
; Object 0x35 - Sonic/Tails invincibility stars
; [ Begin ]
;===============================================================================
; loc_12B72:
                moveq   #$00, D0
                move.b  Obj_Sub_Y(A0), D0                                ; $000A
                move.w  loc_12B80(PC, D0), D1
                jmp     loc_12B80(PC, D1)
;-------------------------------------------------------------------------------
loc_12B80:
                dc.w    loc_12B84-loc_12B80
                dc.w    loc_12BB2-loc_12B80
;-------------------------------------------------------------------------------
loc_12B84:
                addq.b  #$02, Obj_Sub_Y(A0)                              ; $000A
                move.l  #Invicibility_Stars_Mappings, Obj_Map(A0) ; loc_1314C, $0004
                move.w  #$04DE, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                bset    #$06, Obj_Flags(A0)                              ; $0001
                move.b  #$10, $000E(A0)
                move.b  #$08, Obj_Ani_Boss_Cnt(A0)                       ; $000F
;-------------------------------------------------------------------------------
loc_12BB2:
                tst.b   (Invincibility_Flag).w                       ; $FFFFFE2D
                beq     DeleteObject                           ; loc_D314
                lea     (Obj_Memory_Address).w, A1                   ; $FFFFB000
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), D6                               ; $0022
                lea     (loc_12CD4), A2
                move.b  Obj_Angle(A1), D1                                ; $0026
                btst    #$01, D6
                beq.s   loc_12BE4
                move.b  Obj_Player_Status(A1), D1                        ; $002B
                moveq   #$00, D6
loc_12BE4:
                andi.b  #$01, D6
                beq.s   loc_12BEC
                neg.w   D1
loc_12BEC:
                addi.b  #$10, D1
                lsr.b   #$03, D1
                andi.w  #$001C, D1
                lea     $00(A2, D1), A2
                subq.w  #$08, D1
                andi.w  #$0010, D1
                bne.s   loc_12C06
                eori.b  #$01, D6
loc_12C06:
                move.b  ($FFFFFE05).w, D0
                andi.b  #$01, D0
                lea     (loc_12CF4), A3
                beq.s   loc_12C1E
                lea     (loc_12E5C), A3
                addq.w  #$02, A2
loc_12C1E:
                move.w  Obj_X(A1), D4                                    ; $0008
                move.b  (A2)+, D1
                ext.w   D1
                andi.b  #$01, D6
                beq.s   loc_12C2E
                neg.w   D1
loc_12C2E:
                add.w   D1, D4
                move.w  Obj_Y(A1), D5                                    ; $000C
                move.b  (A2)+, D1
                ext.w   D1
                add.w   D1, D5
                moveq   #$00, D0
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                addq.b  #$06, D0
                cmpi.b  #$78, D0
                bcs.s   loc_12C4A
                moveq   #$00, D0
loc_12C4A:
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.w  D0, D1
                add.w   D0, D0
                add.w   D1, D0
                lea     $00(A3, D0), A3
                lea     Obj_Speed(A0), A2                                ; $0010
                moveq   #$00, D0
                moveq   #$05, D1
loc_12C60:
                move.b  (A3)+, D0
                move.b  (A3)+, D2
                ext.w   D2
                andi.b  #$01, D6
                beq.s   loc_12C6E
                neg.w   D2
loc_12C6E:
                add.w   D4, D2
                move.b  (A3)+, D3
                ext.w   D3
                add.w   D5, D3
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                addq.w  #$01, A2
                move.b  D0, (A2)+
                dbra    D1, loc_12C60
                move.w  Obj_X(A1), D4                                    ; $0008
                move.w  Obj_Y(A1), D5                                    ; $000C
                moveq   #$00, D0
                move.b  Obj_Map(A0), D0                                  ; $0004
                addq.b  #$06, D0
                cmpi.b  #$A2, D0
                bcs.s   loc_12C9A
                moveq   #$00, D0
loc_12C9A:
                move.b  D0, Obj_Map(A0)                                  ; $0004
                lea     (loc_12FC4), A3
                lea     $00(A3, D0), A3
                moveq   #$01, D1
loc_12CAA:
                move.b  (A3)+, D0
                move.b  (A3)+, D2
                ext.w   D2
                andi.b  #$01, D6
                beq.s   loc_12CB8
                neg.w   D2
loc_12CB8:
                add.w   D4, D2
                move.b  (A3)+, D3
                ext.w   D3
                add.w   D5, D3
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                addq.w  #$01, A2
                move.b  D0, (A2)+
                dbra    D1, loc_12CAA
                move.w  #$0080, D0
                bra     DisplaySprite_Param                    ; loc_D35E
;-------------------------------------------------------------------------------
loc_12CD4:
                dc.w    $0000, $0000, $00F8, $00F0, $04F0, $04E0, $00F8, $00F0
                dc.w    $0000, $0000, $0008, $0010, $0410, $0420, $0008, $0010
;-------------------------------------------------------------------------------
loc_12CF4:
                dc.b    $02, $F8, $F9, $05, $E5, $F9, $04, $E6
                dc.b    $08, $02, $E8, $FD, $00, $00, $00, $00
                dc.b    $00, $00, $03, $F7, $F9, $02, $F8, $07
                dc.b    $06, $E4, $F9, $05, $E5, $08, $03, $E7
                dc.b    $FD, $00, $00, $00, $04, $F6, $F9, $03
                dc.b    $F7, $07, $05, $E3, $FA, $06, $E4, $09
                dc.b    $04, $E6, $FC, $00, $00, $00, $05, $F5
                dc.b    $F9, $04, $F6, $08, $04, $E2, $FB, $05
                dc.b    $E3, $09, $05, $E5, $FC, $00, $00, $00
                dc.b    $06, $F4, $F9, $05, $F5, $08, $02, $F8
                dc.b    $FD, $03, $E1, $FC, $04, $E2, $0A, $06
                dc.b    $E4, $FB, $05, $F3, $FA, $06, $F4, $09
                dc.b    $03, $F7, $FD, $02, $E0, $FD, $03, $E1
                dc.b    $0A, $05, $E3, $FB, $04, $F2, $FB, $05
                dc.b    $F3, $09, $04, $F6, $FC, $01, $DF, $00
                dc.b    $02, $E0, $0B, $04, $E2, $FA, $03, $F1
                dc.b    $FC, $04, $F2, $0A, $05, $F5, $FC, $02
                dc.b    $F8, $02, $01, $DF, $0B, $03, $E1, $FA
                dc.b    $02, $F0, $FD, $03, $F1, $0A, $06, $F4
                dc.b    $FB, $03, $F7, $02, $02, $E0, $FA, $00
                dc.b    $00, $00, $01, $EF, $00, $02, $F0, $0B
                dc.b    $05, $F3, $FB, $04, $F6, $03, $01, $DF
                dc.b    $FA, $00, $00, $00, $01, $EE, $00, $01
                dc.b    $EF, $0B, $04, $F2, $FA, $05, $F5, $03
                dc.b    $02, $F8, $0E, $00, $00, $00, $01, $ED
                dc.b    $01, $01, $EE, $0C, $03, $F1, $FA, $06
                dc.b    $F4, $03, $03, $F7, $0E, $00, $00, $00
                dc.b    $01, $ED, $03, $01, $ED, $0D, $02, $F0
                dc.b    $FA, $05, $F3, $02, $04, $F6, $0D, $00
                dc.b    $00, $00, $01, $EC, $05, $01, $EC, $0D
                dc.b    $01, $EF, $FA, $04, $F2, $02, $05, $F5
                dc.b    $0D, $02, $F8, $F5, $01, $EB, $07, $01
                dc.b    $EB, $0D, $01, $EE, $F9, $03, $F1, $02
                dc.b    $06, $F4, $0C, $03, $F7, $F5, $01, $EA
                dc.b    $08, $01, $EA, $0D, $01, $ED, $F8, $02
                dc.b    $F0, $01, $05, $F3, $0C, $04, $F6, $F5
                dc.b    $01, $E9, $09, $01, $E9, $0D, $01, $EC
                dc.b    $F8, $01, $EF, $01, $04, $F2, $0B, $05
                dc.b    $F5, $F5, $01, $EB, $F7, $01, $EE, $00
                dc.b    $03, $F1, $0A, $05, $F4, $F6, $02, $E8
                dc.b    $F9, $00, $00, $00, $01, $EA, $F7, $01
                dc.b    $ED, $00, $02, $F0, $0A, $04, $F3, $F6
                dc.b    $03, $E7, $F9, $02, $E8, $07, $01, $E9
                dc.b    $F6, $01, $EC, $00, $01, $EF, $09, $03
                dc.b    $F2, $F6, $04, $E6, $F9, $03, $E7, $07
;-------------------------------------------------------------------------------
loc_12E5C:
                dc.b    $01, $E6, $00, $01, $E7, $0B, $04, $EA
                dc.b    $FA, $05, $ED, $03, $02, $F0, $0E, $00
                dc.b    $00, $00, $01, $E5, $01, $01, $E6, $0C
                dc.b    $03, $E9, $FA, $06, $EC, $03, $03, $F1
                dc.b    $0E, $00, $00, $00, $01, $E5, $03, $01
                dc.b    $E5, $03, $02, $E8, $FA, $05, $EB, $02
                dc.b    $04, $EE, $0D, $00, $00, $00, $01, $E4
                dc.b    $05, $01, $E4, $0D, $01, $E7, $FA, $04
                dc.b    $EA, $02, $05, $ED, $0D, $02, $F0, $F5
                dc.b    $01, $E3, $07, $01, $E3, $0D, $01, $E6
                dc.b    $F9, $03, $E9, $02, $06, $EC, $0C, $03
                dc.b    $EF, $F5, $01, $E2, $08, $01, $E2, $0D
                dc.b    $01, $E5, $F8, $02, $E8, $01, $05, $EB
                dc.b    $0C, $04, $EE, $F5, $01, $E1, $09, $01
                dc.b    $E1, $0D, $01, $E4, $F8, $01, $E7, $01
                dc.b    $04, $EA, $0B, $05, $ED, $F5, $01, $E3
                dc.b    $F7, $01, $E6, $00, $03, $E9, $0A, $05
                dc.b    $EC, $F6, $02, $E8, $02, $00, $00, $00
                dc.b    $01, $E2, $F7, $01, $E5, $00, $02, $E8
                dc.b    $0A, $04, $EB, $F6, $03, $E7, $02, $02
                dc.b    $E8, $0E, $01, $E1, $F6, $01, $E4, $00
                dc.b    $01, $E7, $09, $03, $EA, $F6, $04, $E6
                dc.b    $03, $03, $E7, $0E, $02, $F0, $F9, $05
                dc.b    $E5, $03, $04, $E6, $0D, $02, $E8, $F5
                dc.b    $00, $00, $00, $00, $00, $00, $03, $EF
                dc.b    $F9, $02, $F0, $07, $06, $E4, $03, $05
                dc.b    $E5, $0D, $03, $E7, $F5, $00, $00, $00
                dc.b    $04, $EE, $F9, $03, $EF, $07, $05, $E3
                dc.b    $02, $06, $E4, $0C, $04, $E6, $F5, $00
                dc.b    $00, $00, $05, $ED, $F9, $04, $EE, $08
                dc.b    $04, $E2, $02, $05, $E3, $0C, $05, $E5
                dc.b    $F5, $00, $00, $00, $06, $EC, $F9, $05
                dc.b    $ED, $08, $02, $F0, $FD, $03, $E1, $02
                dc.b    $04, $E2, $0B, $06, $E4, $F6, $05, $EB
                dc.b    $FA, $06, $EC, $09, $03, $EF, $FD, $02
                dc.b    $E0, $01, $03, $E1, $0A, $05, $E3, $F6
                dc.b    $04, $EA, $FB, $05, $EB, $09, $04, $EE
                dc.b    $FD, $01, $DF, $01, $02, $E0, $0A, $04
                dc.b    $E2, $F6, $03, $E9, $FC, $04, $EA, $0A
                dc.b    $05, $ED, $FC, $02, $F0, $02, $01, $DF
                dc.b    $09, $03, $E1, $F7, $02, $E8, $FD, $03
                dc.b    $E9, $0A, $06, $EC, $FB, $03, $EF, $02
                dc.b    $02, $E0, $F7, $00, $00, $00, $01, $E7
                dc.b    $00, $02, $E8, $0B, $05, $EB, $FB, $04
                dc.b    $EE, $03, $01, $DF, $F8, $00, $00, $00
;-------------------------------------------------------------------------------
loc_12FC4:
                dc.b    $04, $08, $09, $04, $FC, $01, $05, $08
                dc.b    $09, $05, $FC, $01, $06, $08, $09, $06
                dc.b    $FC, $01, $07, $08, $09, $07, $FC, $01
                dc.b    $08, $08, $09, $08, $FC, $01, $07, $08
                dc.b    $09, $07, $FC, $01, $06, $08, $09, $06
                dc.b    $FC, $01, $05, $08, $09, $05, $FC, $01
                dc.b    $04, $08, $09, $04, $FC, $01, $04, $F9
                dc.b    $F7, $04, $0B, $FC, $05, $F9, $F7, $05
                dc.b    $0B, $FC, $06, $F9, $F7, $06, $0B, $FC
                dc.b    $07, $F9, $F7, $07, $0B, $FC, $08, $F9
                dc.b    $F7, $08, $0B, $FC, $07, $F9, $F7, $07
                dc.b    $0B, $FC, $06, $F9, $F7, $06, $0B, $FC
                dc.b    $05, $F9, $F7, $05, $0B, $FC, $04, $F9
                dc.b    $F7, $04, $0B, $FC, $04, $03, $F1, $04
                dc.b    $F4, $09, $05, $03, $F1, $05, $F4, $09
                dc.b    $06, $03, $F1, $06, $F4, $09, $07, $03
                dc.b    $F1, $07, $F4, $09, $08, $03, $F1, $08
                dc.b    $F4, $09, $07, $03, $F1, $07, $F4, $09
                dc.b    $06, $03, $F1, $06, $F4, $09, $05, $03
                dc.b    $F1, $05, $F4, $09, $04, $03, $F1, $04
                dc.b    $F4, $09
;===============================================================================
; Object 0x35 - Sonic/Tails invincibility stars
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Shield_AnimateData:                                            ; loc_13066
		dc.w    loc_13068-Shield_AnimateData
loc_13068:
		dc.b    $00, $05, $00, $05
		dc.b    $01, $05, $02, $05
		dc.b    $03, $05, $04, $FF
;-------------------------------------------------------------------------------
Shield_Mappings:                                               ; loc_13074
		include 'mappings/sprite/obj38.asm'
;-------------------------------------------------------------------------------
Invicibility_Stars_Mappings:                                   ; loc_1314C
		include 'mappings/sprite/obj35.asm'
;-------------------------------------------------------------------------------
Obj08_Dust_Water_Splash:                                    ; loc_131B0
;===============================================================================
; Object 0x08 - Spindash/Skid dust and water splash
; [ Begin ]
;===============================================================================
; loc_131B0:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_131BE(PC, D0), D1
                jmp     loc_131BE(PC, D1)
;-------------------------------------------------------------------------------
loc_131BE:
                dc.w    loc_131C6-loc_131BE
                dc.w    loc_13212-loc_131BE
                dc.w    loc_132AE-loc_131BE
                dc.w    loc_132B2-loc_131BE
;-------------------------------------------------------------------------------
loc_131C6:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Dust_Water_Splash_Mappings, Obj_Map(A0) ; loc_133C0, $0004
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.w  #$049C, Obj_Art_VRAM(A0)                         ; $0002
                move.w  #$B000, Obj_Control_Var_12(A0)                   ; $003E
                move.w  #$9380, Obj_Control_Var_10(A0)                   ; $003C
                cmpa.w  #$B400, A0
                beq.s   loc_1320E
                move.w  #$048C, Obj_Art_VRAM(A0)                         ; $0002
                move.w  #$B040, Obj_Control_Var_12(A0)                   ; $003E
                move.w  #$9180, Obj_Control_Var_10(A0)                   ; $003C
loc_1320E:
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
;-------------------------------------------------------------------------------
loc_13212:
                move.w  Obj_Control_Var_12(A0), A2                       ; $003E
                moveq   #$00, D0
                move.b  Obj_Ani_Number(A0), D0                           ; $001C
                add.w   D0, D0
                move.w  loc_13226(PC, D0), D1
                jmp     loc_13226(PC, D1)
;-------------------------------------------------------------------------------
loc_13226:
                dc.w    loc_13290-loc_13226
                dc.w    loc_1322E-loc_13226
                dc.w    loc_1324E-loc_13226
                dc.w    loc_13288-loc_13226
;-------------------------------------------------------------------------------
loc_1322E:
                move.w  (Water_Level).w, Obj_Y(A0)                   ; $FFFFF646; $000C
                tst.b   Obj_Ani_Flag(A0)                                 ; $001D
                bne.s   loc_13290
                move.w  Obj_X(A2), Obj_X(A0)                      ; $0008, $0008
                move.b  #$00, Obj_Status(A0)                             ; $0022
                andi.w  #$7FFF, Obj_Art_VRAM(A0)                         ; $0002
                bra.s   loc_13290
;-------------------------------------------------------------------------------
loc_1324E:
                cmpi.b  #$0C, Obj_Subtype(A2)                            ; $0028
                bcs.s   loc_132A6
                tst.b   Obj_Ani_Flag(A0)                                 ; $001D
                bne.s   loc_13290
                move.w  Obj_X(A2), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A2), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A2), Obj_Status(A0)            ; $0022, $0022
                tst.b   Obj_Control_Var_13(A0)                           ; $003F
                beq.s   loc_1327A
                subi.w  #$0004, Obj_Y(A0)                                ; $000C
loc_1327A:
                tst.w   Obj_Art_VRAM(A2)                                 ; $0002
                bpl.s   loc_13290
                ori.w   #$8000, Obj_Art_VRAM(A0)                         ; $0002
                bra.s   loc_13290
;-------------------------------------------------------------------------------
loc_13288:
                cmpi.b  #$0C, Obj_Subtype(A2)                            ; $0028
                bcs.s   loc_132A6
;-------------------------------------------------------------------------------
loc_13290:
                lea     (Dust_Water_Splash_AnimateData), A1    ; loc_1339A
                jsr     (AnimateSprite)                        ; loc_D372
                bsr     Load_Dust_Water_Splash_Dynamic_PLC     ; loc_13346
                jmp     (DisplaySprite)                        ; loc_D322
loc_132A6:
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                rts
;-------------------------------------------------------------------------------
loc_132AE:
                bra     DeleteObject                           ; loc_D314
;-------------------------------------------------------------------------------
loc_132B2:
                move.w  Obj_Control_Var_12(A0), A2                       ; $003E
                cmpi.b  #$0D, Obj_Ani_Number(A2)                         ; $001C
                beq.s   loc_132CC
                move.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Control_Var_06(A0)                     ; $0032
                rts
loc_132CC:
                subq.b  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bpl.s   loc_13342
                move.b  #$03, Obj_Control_Var_06(A0)                     ; $0032
                bsr     SingleObjectLoad                       ; loc_E6FE
                bne.s   loc_13342
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.w  Obj_X(A2), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A2), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0010, Obj_Y(A1)                                ; $000C
                tst.b   Obj_Control_Var_13(A0)                           ; $003F
                beq.s   loc_13302
                subi.w  #$0004, Obj_Y(A1)                                ; $000C
loc_13302:
                move.b  #$00, Obj_Status(A1)                             ; $0022
                move.b  #$03, Obj_Ani_Number(A1)                         ; $001C
                addq.b  #$02, Obj_Routine(A1)                            ; $0024
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  #$01, Obj_Priority(A1)                           ; $0018
                move.b  #$04, Obj_Width(A1)                              ; $0019
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.w  Obj_Control_Var_12(A0), Obj_Control_Var_12(A1); $003E, $003E
                tst.w   Obj_Art_VRAM(A2)                                 ; $0002
                beq.s   loc_13342
                ori.w   #$8000, Obj_Art_VRAM(A1)                         ; $0002
loc_13342:
                bsr.s   Load_Dust_Water_Splash_Dynamic_PLC     ; loc_13346
                rts
;-------------------------------------------------------------------------------
Load_Dust_Water_Splash_Dynamic_PLC:                            ; loc_13346
                moveq   #$00, D0
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                cmp.b   Obj_Control_Var_04(A0), D0                       ; $0030
                beq.s   loc_13398
                move.b  D0, Obj_Control_Var_04(A0)                       ; $0030
                lea     (Dust_Water_Splash_Dyn_Script), A2     ; loc_134D6
                add.w   D0, D0
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D5
                subq.w  #$01, D5
                bmi.s   loc_13398
                move.w  Obj_Control_Var_10(A0), D4                       ; $003C
Loop_Load_Water_Splash_Dust:                                   ; loc_1336C
                moveq   #$00, D1
                move.w  (A2)+, D1
                move.w  D1, D3
                lsr.w   #$08, D3
                andi.w  #$00F0, D3
                addi.w  #$0010, D3
                andi.w  #$0FFF, D1
                lsl.l   #$05, D1
                addi.l  #Art_Water_Splash_Dust, D1             ; loc_71FFC
                move.w  D4, D2
                add.w   D3, D4
                add.w   D3, D4
                jsr     (DMA_68KtoVRAM)                        ; loc_15C4
                dbra    D5, Loop_Load_Water_Splash_Dust        ; loc_1336C
loc_13398:
                rts
;-------------------------------------------------------------------------------
Dust_Water_Splash_AnimateData:                                 ; loc_1339A
                dc.w    loc_133A2-Dust_Water_Splash_AnimateData
                dc.w    loc_133A5-Dust_Water_Splash_AnimateData
                dc.w    loc_133B1-Dust_Water_Splash_AnimateData
                dc.w    loc_133BA-Dust_Water_Splash_AnimateData
loc_133A2:
                dc.b    $1F, $00, $FF
loc_133A5:
                dc.b    $03, $01, $02, $03, $04, $05, $06, $07
                dc.b    $08, $09, $FD, $00
loc_133B1:
                dc.b    $01, $0A, $0B, $0C, $0D, $0E, $0F, $10
                dc.b    $FF
loc_133BA:
                dc.b    $03, $11, $12, $13, $14, $FC
;-------------------------------------------------------------------------------
Dust_Water_Splash_Mappings:                                    ; loc_133C0
                include 'mappings/sprite/obj08.asm'
;-------------------------------------------------------------------------------
Dust_Water_Splash_Dyn_Script:                                  ; loc_134D6
                dc.w    loc_13502-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13504-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13508-Dust_Water_Splash_Dyn_Script
                dc.w    loc_1350C-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13510-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13514-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13518-Dust_Water_Splash_Dyn_Script
                dc.w    loc_1351C-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13520-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13524-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13528-Dust_Water_Splash_Dyn_Script
                dc.w    loc_1352C-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13530-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13534-Dust_Water_Splash_Dyn_Script
                dc.w    loc_1353A-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13540-Dust_Water_Splash_Dyn_Script
                dc.w    loc_13546-Dust_Water_Splash_Dyn_Script
                dc.w    loc_1354C-Dust_Water_Splash_Dyn_Script
                dc.w    loc_1354C-Dust_Water_Splash_Dyn_Script
                dc.w    loc_1354C-Dust_Water_Splash_Dyn_Script
                dc.w    loc_1354C-Dust_Water_Splash_Dyn_Script
                dc.w    loc_1354E-Dust_Water_Splash_Dyn_Script
loc_13502:
                dc.w    $0000
loc_13504:
                dc.w    $0001
                dc.w    $7000
loc_13508:
                dc.w    $0001
                dc.w    $F008
loc_1350C:
                dc.w    $0001
                dc.w    $F018
loc_13510:
                dc.w    $0001
                dc.w    $F028
loc_13514:
                dc.w    $0001
                dc.w    $F038
loc_13518:
                dc.w    $0001
                dc.w    $F048
loc_1351C:
                dc.w    $0001
                dc.w    $7058
loc_13520:
                dc.w    $0001
                dc.w    $7060
loc_13524:
                dc.w    $0001
                dc.w    $7068
loc_13528:
                dc.w    $0001
                dc.w    $7070
loc_1352C:
                dc.w    $0001
                dc.w    $7078
loc_13530:
                dc.w    $0001
                dc.w    $7080
loc_13534:
                dc.w    $0002
                dc.w    $1088
                dc.w    $708A
loc_1353A:
                dc.w    $0002
                dc.w    $3092
                dc.w    $7096
loc_13540:
                dc.w    $0002
                dc.w    $509E
                dc.w    $70A4
loc_13546:
                dc.w    $0002
                dc.w    $50AC
                dc.w    $70B2
loc_1354C:
                dc.w    $0000
loc_1354E:
                dc.w    $0001
                dc.w    $F0BA
;===============================================================================
; Object 0x08 - Spindash/Skid dust and water splash
; [ End ]
;===============================================================================

Obj7E_Super_Sonic_Stars:                                    ; loc_13552
;===============================================================================
; Object 0x7E - Super Sonic stars
; [ Begin ]
;===============================================================================
; loc_13552:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_13560(PC, D0), D1
                jmp     loc_13560(PC, D1)
;-------------------------------------------------------------------------------
loc_13560:
                dc.w    loc_13564-loc_13560
                dc.w    loc_1359A-loc_13560
;-------------------------------------------------------------------------------
loc_13564:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Super_Sonic_Stars_Mappings, Obj_Map(A0) ; loc_13620, $0004
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  #$18, Obj_Width(A0)                              ; $0019
                move.w  #$05F2, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                btst    #$07, ($FFFFB002).w
                beq.s   loc_1359A
                bset    #$07, Obj_Art_VRAM(A0)                           ; $0002
;-------------------------------------------------------------------------------
loc_1359A:
                tst.b   (Super_Sonic_Flag).w                         ; $FFFFFE19
                beq.s   loc_1361A
                tst.b   Obj_Control_Var_04(A0)                           ; $0030
                beq.s   loc_135EA
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_135D2
                move.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$06, Obj_Map_Id(A0)                             ; $001A
                bcs.s   loc_135D2
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.b  #$00, Obj_Control_Var_04(A0)                     ; $0030
                move.b  #$01, Obj_Control_Var_05(A0)                     ; $0031
                rts
loc_135D2:
                tst.b   Obj_Control_Var_05(A0)                           ; $0031
                bne.s   loc_135E4
loc_135D8:
                move.w  (Player_One_Position_X).w, Obj_X(A0)         ; $FFFFB008; $0008
                move.w  (Player_One_Position_Y).w, Obj_Y(A0)         ; $FFFFB00C; $000C
loc_135E4:
                jmp     (DisplaySprite)                        ; loc_D322
loc_135EA:
                tst.b   ($FFFFB02A).w
                bne.s   loc_1360C
                move.w  ($FFFFB014).w, D0
                bpl.s   loc_135F8
                neg.w   D0
loc_135F8:
                cmpi.w  #$0800, D0
                bcs.s   loc_1360C
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.b  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bra.s   loc_135D8
loc_1360C:
                move.b  #$00, Obj_Control_Var_04(A0)                     ; $0030
                move.b  #$00, Obj_Control_Var_05(A0)                     ; $0031
                rts
loc_1361A:
                jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
Super_Sonic_Stars_Mappings:                                    ; loc_13620
                include 'mappings/sprite/obj7E.asm'
;===============================================================================
; Object 0x7E - Super Sonic stars
; [ End ]
;===============================================================================

;===============================================================================
; Routine for calculating the player's angle
; [ Begin ]
;===============================================================================
Player_AnglePos:                                               ; loc_13694
		move.l  #Primary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD000, $FFFFF796
		cmpi.b  #$0C, Obj_Player_Top_Solid(A0)                   ; $003E
		beq.s   loc_136AC
		move.l  #Secundary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD600, $FFFFF796
loc_136AC:
		move.b  Obj_Player_Top_Solid(A0), D5                     ; $003E
		btst    #$03, Obj_Status(A0)                             ; $0022
		beq.s   loc_136C4
		moveq   #$00, D0
		move.b  D0, ($FFFFF768).w
		move.b  D0, ($FFFFF76A).w
		rts
loc_136C4:
		moveq   #$03, D0
		move.b  D0, ($FFFFF768).w
		move.b  D0, ($FFFFF76A).w
		move.b  Obj_Angle(A0), D0                                ; $0026
		addi.b  #$20, D0
		bpl.s   loc_136E6
		move.b  Obj_Angle(A0), D0                                ; $0026
		bpl.s   loc_136E0
		subq.b  #$01, D0
loc_136E0:
		addi.b  #$20, D0
		bra.s   loc_136F2
loc_136E6:
		move.b  Obj_Angle(A0), D0                                ; $0026
		bpl.s   loc_136EE
		addq.b  #$01, D0
loc_136EE:
		addi.b  #$1F, D0
loc_136F2:
		andi.b  #$C0, D0
		cmpi.b  #$40, D0
		beq     Player_WalkVertL                       ; loc_13948
		cmpi.b  #$80, D0
		beq     Player_WalkCeiling                     ; loc_1389A
		cmpi.b  #$C0, D0
		beq     Player_WalkVertR                       ; loc_137F2
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D2
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		add.w   D0, D3
		lea     ($FFFFF768).w, A4
		move.w  #$0010, A3
		move.w  #$0000, D6
		bsr     FindFloor                              ; loc_13C30
		move.w  D1, -(A7)
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D2
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		neg.w   D0
		add.w   D0, D3
		lea     ($FFFFF76A).w, A4
		move.w  #$0010, A3
		move.w  #$0000, D6
		bsr     FindFloor                              ; loc_13C30
		move.w  (A7)+, D0
		bsr     Player_Angle                           ; loc_137B6
		tst.w   D1
		beq.s   loc_1377C
		bpl.s   loc_1377E
		cmpi.w  #$FFF2, D1
		blt.s   loc_1377C
		add.w   D1, Obj_Y(A0)                                    ; $000C
loc_1377C:
		rts
loc_1377E:
		move.b  Obj_Speed(A0), D0                                ; $0010
		bpl.s   loc_13786
		neg.b   D0
loc_13786:
		addq.b  #$04, D0
		cmpi.b  #$0E, D0
		bcs.s   loc_13792
		move.b  #$0E, D0
loc_13792:
		cmp.b   D0, D1
		bgt.s   loc_1379C
loc_13796:
		add.w   D1, Obj_Y(A0)                                    ; $000C
		rts
loc_1379C:
		tst.b   Obj_Player_St_Convex(A0)                         ; $0038
		bne.s   loc_13796
		bset    #$01, Obj_Status(A0)                             ; $0022
		bclr    #$05, Obj_Status(A0)                             ; $0022
		move.b  #$01, Obj_Ani_Flag(A0)                           ; $001D
		rts
;-------------------------------------------------------------------------------
Player_Angle:                                                  ; loc_137B6
		move.b  ($FFFFF76A).w, D2
		cmp.w   D0, D1
		ble.s   loc_137C4
		move.b  ($FFFFF768).w, D2
		move.w  D0, D1
loc_137C4:
		btst    #$00, D2
		bne.s   loc_137E0
		move.b  D2, D0
		sub.b   Obj_Angle(A0), D0                                ; $0026
		bpl.s   loc_137D4
		neg.b   D0
loc_137D4:
		cmpi.b  #$20, D0
		bcc.s   loc_137E0
		move.b  D2, Obj_Angle(A0)                                ; $0026
		rts
loc_137E0:
		move.b  Obj_Angle(A0), D2                                ; $0026
		addi.b  #$20, D2
		andi.b  #$C0, D2
		move.b  D2, Obj_Angle(A0)                                ; $0026
		rts
;===============================================================================
; Routine for calculating the player's angle
; [ End ]
;===============================================================================

;===============================================================================
; Routine for calculating the player's position on ramps
; [ Begin ]
;===============================================================================
Player_WalkVertR:                                              ; loc_137F2
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		neg.w   D0
		add.w   D0, D2
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D3
		lea     ($FFFFF768).w, A4
		move.w  #$0010, A3
		move.w  #$0000, D6
		bsr     FindWall                               ; loc_13E0A
		move.w  D1, -(A7)
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		add.w   D0, D2
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D3
		lea     ($FFFFF76A).w, A4
		move.w  #$0010, A3
		move.w  #$0000, D6
		bsr     FindWall                               ; loc_13E0A
		move.w  (A7)+, D0
		bsr     Player_Angle                           ; loc_137B6
		tst.w   D1
		beq.s   loc_13860
		bpl.s   loc_13862
		cmpi.w  #$FFF2, D1
		blt.s   loc_13860
		add.w   D1, Obj_X(A0)                                    ; $0008
loc_13860:
		rts
loc_13862:
		move.b  Obj_Speed_Y(A0), D0                              ; $0012
		bpl.s   loc_1386A
		neg.b   D0
loc_1386A:
		addq.b  #$04, D0
		cmpi.b  #$0E, D0
		bcs.s   loc_13876
		move.b  #$0E, D0
loc_13876:
		cmp.b   D0, D1
		bgt.s   loc_13880
loc_1387A:
		add.w   D1, Obj_X(A0)                                    ; $0008
		rts
loc_13880:
		tst.b   Obj_Player_St_Convex(A0)                         ; $0038
		bne.s   loc_1387A
		bset    #$01, Obj_Status(A0)                             ; $0022
		bclr    #$05, Obj_Status(A0)                             ; $0022
		move.b  #$01, Obj_Ani_Flag(A0)                           ; $001D
		rts
;===============================================================================
; Routine for calculating the player's position on ramps
; [ End ]
;===============================================================================

;===============================================================================
; Routine to calculate the player's position when walking on the ceiling
; [ Begin ]
;===============================================================================
Player_WalkCeiling:                                            ; loc_1389A
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		sub.w   D0, D2
		eori.w  #$000F, D2
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		add.w   D0, D3
		lea     ($FFFFF768).w, A4
		move.w  #$FFF0, A3
		move.w  #$0800, D6
		bsr     FindFloor                              ; loc_13C30
		move.w  D1, -(A7)
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		sub.w   D0, D2
		eori.w  #$000F, D2
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		sub.w   D0, D3
		lea     ($FFFFF76A).w, A4
		move.w  #$FFF0, A3
		move.w  #$0800, D6
		bsr     FindFloor                              ; loc_13C30
		move.w  (A7)+, D0
		bsr     Player_Angle                           ; loc_137B6
		tst.w   D1
		beq.s   loc_1390E
		bpl.s   loc_13910
		cmpi.w  #$FFF2, D1
		blt.s   loc_1390E
		sub.w   D1, Obj_Y(A0)                                    ; $000C
loc_1390E:
		rts
loc_13910:
		move.b  Obj_Speed(A0), D0                                ; $0010
		bpl.s   loc_13918
		neg.b   D0
loc_13918:
		addq.b  #$04, D0
		cmpi.b  #$0E, D0
		bcs.s   loc_13924
		move.b  #$0E, D0
loc_13924:
		cmp.b   D0, D1
		bgt.s   loc_1392E
loc_13928:
		sub.w   D1, Obj_Y(A0)                                    ; $000C
		rts
loc_1392E:
		tst.b   Obj_Player_St_Convex(A0)                         ; $0038
		bne.s   loc_13928
		bset    #$01, Obj_Status(A0)                             ; $0022
		bclr    #$05, Obj_Status(A0)                             ; $0022
		move.b  #$01, Obj_Ani_Flag(A0)                           ; $001D
		rts
;===============================================================================
; Routine to calculate the player's position when walking on the ceiling
; [ End ]
;===============================================================================

;===============================================================================
; Routine to calculate the player's position on ramps
; [ Begin ]
;===============================================================================
Player_WalkVertL:                                              ; loc_13948
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		sub.w   D0, D2
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		sub.w   D0, D3
		eori.w  #$000F, D3
		lea     ($FFFFF768).w, A4
		move.w  #$FFF0, A3
		move.w  #$0400, D6
		bsr     FindWall                               ; loc_13E0A
		move.w  D1, -(A7)
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		add.w   D0, D2
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		sub.w   D0, D3
		eori.w  #$000F, D3
		lea     ($FFFFF76A).w, A4
		move.w  #$FFF0, A3
		move.w  #$0400, D6
		bsr     FindWall                               ; loc_13E0A
		move.w  (A7)+, D0
		bsr     Player_Angle                           ; loc_137B6
		tst.w   D1
		beq.s   loc_139BC
		bpl.s   loc_139BE
		cmpi.w  #$FFF2, D1
		blt.s   loc_139BC
		sub.w   D1, Obj_X(A0)                                    ; $0008
loc_139BC:
		rts
loc_139BE:
		move.b  Obj_Speed_Y(A0), D0                              ; $0012
		bpl.s   loc_139C6
		neg.b   D0
loc_139C6:
		addq.b  #$04, D0
		cmpi.b  #$0E, D0
		bcs.s   loc_139D2
		move.b  #$0E, D0
loc_139D2:
		cmp.b   D0, D1
		bgt.s   loc_139DC
loc_139D6:
		sub.w   D1, Obj_X(A0)                                    ; $0008
		rts
loc_139DC:
		tst.b   Obj_Player_St_Convex(A0)                         ; $0038
		bne.s   loc_139D6
		bset    #$01, Obj_Status(A0)                             ; $0022
		bclr    #$05, Obj_Status(A0)                             ; $0022
		move.b  #$01, Obj_Ani_Flag(A0)                           ; $001D
		rts
;===============================================================================
; Routine to calculate the player's position on ramps
; [ End ]
;===============================================================================

;===============================================================================
; Routine to test which tile the Object is in
; [ Begin ]
;===============================================================================
Floor_Check_Tile:                                              ; loc_139F6
		move.w  D2, D0
		add.w   D0, D0
		andi.w  #$0F00, D0
		move.w  D3, D1
		lsr.w   #$03, D1
		move.w  D1, D4
		lsr.w   #$04, D1
		andi.w  #$007F, D1
		add.w   D1, D0
		moveq   #-$01, D1
		clr.w   D1
		lea     (Level_Map_Buffer).w, A1                     ; $FFFF8000
		move.b  $00(A1, D0), D1
		add.w   D1, D1
		move.w  Chunk_Mem_Address(PC, D1), D1          ; loc_13A30
		move.w  D2, D0
		andi.w  #$0070, D0
		add.w   D0, D1
		andi.w  #$000E, D4
		add.w   D4, D1
		move.l  D1, A1
		rts
;-------------------------------------------------------------------------------
; Table containing the addresses of the 128x128 tiles -> Ex: Tile 1 = $0080
; [ Begin ]
;-------------------------------------------------------------------------------
Chunk_Mem_Address:                                             ; loc_13A30
		dc.w    $0000, $0080, $0100, $0180, $0200, $0280, $0300, $0380
		dc.w    $0400, $0480, $0500, $0580, $0600, $0680, $0700, $0780
		dc.w    $0800, $0880, $0900, $0980, $0A00, $0A80, $0B00, $0B80
		dc.w    $0C00, $0C80, $0D00, $0D80, $0E00, $0E80, $0F00, $0F80
		dc.w    $1000, $1080, $1100, $1180, $1200, $1280, $1300, $1380
		dc.w    $1400, $1480, $1500, $1580, $1600, $1680, $1700, $1780
		dc.w    $1800, $1880, $1900, $1980, $1A00, $1A80, $1B00, $1B80
		dc.w    $1C00, $1C80, $1D00, $1D80, $1E00, $1E80, $1F00, $1F80
		dc.w    $2000, $2080, $2100, $2180, $2200, $2280, $2300, $2380
		dc.w    $2400, $2480, $2500, $2580, $2600, $2680, $2700, $2780
		dc.w    $2800, $2880, $2900, $2980, $2A00, $2A80, $2B00, $2B80
		dc.w    $2C00, $2C80, $2D00, $2D80, $2E00, $2E80, $2F00, $2F80
		dc.w    $3000, $3080, $3100, $3180, $3200, $3280, $3300, $3380
		dc.w    $3400, $3480, $3500, $3580, $3600, $3680, $3700, $3780
		dc.w    $3800, $3880, $3900, $3980, $3A00, $3A80, $3B00, $3B80
		dc.w    $3C00, $3C80, $3D00, $3D80, $3E00, $3E80, $3F00, $3F80
		dc.w    $4000, $4080, $4100, $4180, $4200, $4280, $4300, $4380
		dc.w    $4400, $4480, $4500, $4580, $4600, $4680, $4700, $4780
		dc.w    $4800, $4880, $4900, $4980, $4A00, $4A80, $4B00, $4B80
		dc.w    $4C00, $4C80, $4D00, $4D80, $4E00, $4E80, $4F00, $4F80
		dc.w    $5000, $5080, $5100, $5180, $5200, $5280, $5300, $5380
		dc.w    $5400, $5480, $5500, $5580, $5600, $5680, $5700, $5780
		dc.w    $5800, $5880, $5900, $5980, $5A00, $5A80, $5B00, $5B80
		dc.w    $5C00, $5C80, $5D00, $5D80, $5E00, $5E80, $5F00, $5F80
		dc.w    $6000, $6080, $6100, $6180, $6200, $6280, $6300, $6380
		dc.w    $6400, $6480, $6500, $6580, $6600, $6680, $6700, $6780
		dc.w    $6800, $6880, $6900, $6980, $6A00, $6A80, $6B00, $6B80
		dc.w    $6C00, $6C80, $6D00, $6D80, $6E00, $6E80, $6F00, $6F80
		dc.w    $7000, $7080, $7100, $7180, $7200, $7280, $7300, $7380
		dc.w    $7400, $7480, $7500, $7580, $7600, $7680, $7700, $7780
		dc.w    $7800, $7880, $7900, $7980, $7A00, $7A80, $7B00, $7B80
		dc.w    $7C00, $7C80, $7D00, $7D80, $7E00, $7E80, $7F00, $7F80
;-------------------------------------------------------------------------------
; Table containing the addresses of the 128x128 tiles -> Ex: Tile 1 = $0080
; [ End ]
;-------------------------------------------------------------------------------

;===============================================================================
; Routine to test which tile the Object is in
; [ End ]
;===============================================================================

;===============================================================================
; Routine to find the floor
; [ Begin ]
;===============================================================================
FindFloor:                                                     ; loc_13C30
		bsr     Floor_Check_Tile                       ; loc_139F6
		move.w  (A1), D0
		move.w  D0, D4
		andi.w  #$03FF, D0
		beq.s   loc_13C42
		btst    D5, D4
		bne.s   loc_13C50
loc_13C42:
		add.w   A3, D2
		bsr     FindFloor_2                            ; loc_13CD6
		sub.w   A3, D2
		addi.w  #$0010, D1
		rts
loc_13C50:
		move.l  (Current_Colision_Pointer).w, A2             ; $FFFFF796
		add.w   D0, D0
		move.w  $00(A2, D0), D0
		beq.s   loc_13C42
		lea     (AngleMap), A2                         ; loc_368EA
		move.b  $00(A2, D0), (A4)
		lsl.w   #$04, D0
		move.w  D3, D1
		btst    #$0A, D4
		beq.s   loc_13C74
		not.w   D1
		neg.b   (A4)
loc_13C74:
		btst    #$0B, D4
		beq.s   loc_13C84
		addi.b  #$40, (A4)
		neg.b   (A4)
		subi.b  #$40, (A4)
loc_13C84:
		andi.w  #$000F, D1
		add.w   D0, D1
		lea     (Colision_Array_1), A2                 ; loc_369EA
		move.b  $00(A2, D1), D0
		ext.w   D0
		eor.w   D6, D4
		btst    #$0B, D4
		beq.s   loc_13CA0
		neg.w   D0
loc_13CA0:
		tst.w   D0
		beq.s   loc_13C42
		bmi.s   loc_13CBC
		cmpi.b  #$10, D0
		beq.s   loc_13CC8
		move.w  D2, D1
		andi.w  #$000F, D1
		add.w   D1, D0
		move.w  #$000F, D1
		sub.w   D0, D1
		rts
loc_13CBC:
		move.w  D2, D1
		andi.w  #$000F, D1
		add.w   D1, D0
		bpl     loc_13C42
loc_13CC8:
		sub.w   A3, D2
		bsr     FindFloor_2                            ; loc_13CD6
		add.w   A3, D2
		subi.w  #$0010, D1
		rts
;-------------------------------------------------------------------------------
FindFloor_2:                                                   ; loc_13CD6
		bsr     Floor_Check_Tile                       ; loc_139F6
		move.w  (A1), D0
		move.w  D0, D4
		andi.w  #$03FF, D0
		beq.s   loc_13CE8
		btst    D5, D4
		bne.s   loc_13CF6
loc_13CE8:
		move.w  #$000F, D1
		move.w  D2, D0
		andi.w  #$000F, D0
		sub.w   D0, D1
		rts
loc_13CF6:
		move.l  (Current_Colision_Pointer).w, A2             ; $FFFFF796
		add.w   D0, D0
		move.w  $00(A2, D0), D0
		beq.s   loc_13CE8
		lea     (AngleMap), A2                         ; loc_368EA
		move.b  $00(A2, D0), (A4)
		lsl.w   #$04, D0
		move.w  D3, D1
		btst    #$0A, D4
		beq.s   loc_13D1A
		not.w   D1
		neg.b   (A4)
loc_13D1A:
		btst    #$0B, D4
		beq.s   loc_13D2A
		addi.b  #$40, (A4)
		neg.b   (A4)
		subi.b  #$40, (A4)
loc_13D2A:
		andi.w  #$000F, D1
		add.w   D0, D1
		lea     (Colision_Array_1), A2                 ; loc_369EA
		move.b  $00(A2, D1), D0
		ext.w   D0
		eor.w   D6, D4
		btst    #$0B, D4
		beq.s   loc_13D46
		neg.w   D0
loc_13D46:
		tst.w   D0
		beq.s   loc_13CE8
		bmi.s   loc_13D5C
		move.w  D2, D1
		andi.w  #$000F, D1
		add.w   D1, D0
		move.w  #$000F, D1
		sub.w   D0, D1
		rts
loc_13D5C:
		move.w  D2, D1
		andi.w  #$000F, D1
		add.w   D1, D0
		bpl     loc_13CE8
		not.w   D1
		rts
;===============================================================================
; Routine to find the floor
; [ End ]
;===============================================================================

;===============================================================================
; Routine for Object to find floor
; [ Begin ]
;===============================================================================
Object_FindFloor:                                              ; loc_13D6C
		bsr     Floor_Check_Tile                       ; loc_139F6
		move.w  (A1), D0
		move.w  D0, D4
		andi.w  #$03FF, D0
		beq.s   loc_13D7E
		btst    D5, D4
		bne.s   loc_13D84
loc_13D7E:
		move.w  #$0010, D1
		rts
loc_13D84:
		move.l  (Current_Colision_Pointer).w, A2             ; $FFFFF796
		add.w   D0, D0
		move.w  $00(A2, D0), D0
		beq.s   loc_13D7E
		lea     (AngleMap), A2                         ; loc_368EA
		move.b  $00(A2, D0), (A4)
		lsl.w   #$04, D0
		move.w  D3, D1
		btst    #$0A, D4
		beq.s   loc_13DA8
		not.w   D1
		neg.b   (A4)
loc_13DA8:
		btst    #$0B, D4
		beq.s   loc_13DB8
		addi.b  #$40, (A4)
		neg.b   (A4)
		subi.b  #$40, (A4)
loc_13DB8:
		andi.w  #$000F, D1
		add.w   D0, D1
		lea     (Colision_Array_1), A2                 ; loc_369EA
		move.b  $00(A2, D1), D0
		ext.w   D0
		eor.w   D6, D4
		btst    #$0B, D4
		beq.s   loc_13DD4
		neg.w   D0
loc_13DD4:
		tst.w   D0
		beq.s   loc_13D7E
		bmi.s   loc_13DF0
		cmpi.b  #$10, D0
		beq.s   loc_13DFC
		move.w  D2, D1
		andi.w  #$000F, D1
		add.w   D1, D0
		move.w  #$000F, D1
		sub.w   D0, D1
		rts
loc_13DF0:
		move.w  D2, D1
		andi.w  #$000F, D1
		add.w   D1, D0
		bpl     loc_13D7E
loc_13DFC:
		sub.w   A3, D2
		bsr     FindFloor_2                            ; loc_13CD6
		add.w   A3, D2
		subi.w  #$0010, D1
		rts
;===============================================================================
; Routine for Object to find floor
; [ End ]
;===============================================================================

;===============================================================================
; Routine to find a wall
; [ Begin ]
;===============================================================================
FindWall:                                                      ; loc_13E0A
		bsr     Floor_Check_Tile                       ; loc_139F6
		move.w  (A1), D0
		move.w  D0, D4
		andi.w  #$03FF, D0
		beq.s   loc_13E1C
		btst    D5, D4
		bne.s   loc_13E2A
loc_13E1C:
		add.w   A3, D3
		bsr     FindWall_2                             ; loc_13EB0
		sub.w   A3, D3
		addi.w  #$0010, D1
		rts
loc_13E2A:
		move.l  (Current_Colision_Pointer).w, A2             ; $FFFFF796
		add.w   D0, D0
		move.w  $00(A2, D0), D0
		beq.s   loc_13E1C
		lea     (AngleMap), A2                         ; loc_368EA
		move.b  $00(A2, D0), (A4)
		lsl.w   #$04, D0
		move.w  D2, D1
		btst    #$0B, D4
		beq.s   loc_13E56
		not.w   D1
		addi.b  #$40, (A4)
		neg.b   (A4)
		subi.b  #$40, (A4)
loc_13E56:
		btst    #$0A, D4
		beq.s   loc_13E5E
		neg.b   (A4)
loc_13E5E:
		andi.w  #$000F, D1
		add.w   D0, D1
		lea     (Colision_Array_2), A2                 ; loc_379EA
		move.b  $00(A2, D1), D0
		ext.w   D0
		eor.w   D6, D4
		btst    #$0A, D4
		beq.s   loc_13E7A
		neg.w   D0
loc_13E7A:
		tst.w   D0
		beq.s   loc_13E1C
		bmi.s   loc_13E96
		cmpi.b  #$10, D0
		beq.s   loc_13EA2
		move.w  D3, D1
		andi.w  #$000F, D1
		add.w   D1, D0
		move.w  #$000F, D1
		sub.w   D0, D1
		rts
loc_13E96:
		move.w  D3, D1
		andi.w  #$000F, D1
		add.w   D1, D0
		bpl     loc_13E1C
loc_13EA2:
		sub.w   A3, D3
		bsr     FindWall_2                             ; loc_13EB0
		add.w   A3, D3
		subi.w  #$0010, D1
		rts
;-------------------------------------------------------------------------------
FindWall_2:                                                    ; loc_13EB0
		bsr     Floor_Check_Tile                       ; loc_139F6
		move.w  (A1), D0
		move.w  D0, D4
		andi.w  #$03FF, D0
		beq.s   loc_13EC2
		btst    D5, D4
		bne.s   loc_13ED0
loc_13EC2:
		move.w  #$000F, D1
		move.w  D3, D0
		andi.w  #$000F, D0
		sub.w   D0, D1
		rts
loc_13ED0:
		move.l  (Current_Colision_Pointer).w, A2             ; $FFFFF796
		add.w   D0, D0
		move.w  $00(A2, D0), D0
		beq.s   loc_13EC2
		lea     (AngleMap), A2                         ; loc_368EA
		move.b  $00(A2, D0), (A4)
		lsl.w   #$04, D0
		move.w  D2, D1
		btst    #$0B, D4
		beq.s   loc_13EFC
		not.w   D1
		addi.b  #$40, (A4)
		neg.b   (A4)
		subi.b  #$40, (A4)
loc_13EFC:
		btst    #$0A, D4
		beq.s   loc_13F04
		neg.b   (A4)
loc_13F04:
		andi.w  #$000F, D1
		add.w   D0, D1
		lea     (Colision_Array_2), A2                 ; loc_379EA
		move.b  $00(A2, D1), D0
		ext.w   D0
		eor.w   D6, D4
		btst    #$0A, D4
		beq.s   loc_13F20
		neg.w   D0
loc_13F20:
		tst.w   D0
		beq.s   loc_13EC2
		bmi.s   loc_13F36
		move.w  D3, D1
		andi.w  #$000F, D1
		add.w   D1, D0
		move.w  #$000F, D1
		sub.w   D0, D1
		rts
loc_13F36:
		move.w  D3, D1
		andi.w  #$000F, D1
		add.w   D1, D0
		bpl     loc_13EC2
		not.w   D1
		rts
;===============================================================================
; Routine to find a wall
; [ End ]
;===============================================================================

;===============================================================================
; Rotina n o usada, algo como executar um log das colis es
; [ Begin ]             (Talvez usada durante o desenvolvimento)
;===============================================================================
FloorLog_Unk:                                                  ; loc_13F46
		rts              ; Com este rts a rotina abaixo ficou desativada
; loc_13F48:
		lea     (Colision_Array_1), A1                 ; loc_369EA
		lea     (Colision_Array_1), A2                 ; loc_369EA
		move.w  #$00FF, D3
loc_13F58:
		moveq   #$10, D5
		move.w  #$000F, D2
loc_13F5E:
		moveq   #$00, D4
		move.w  #$000F, D1
loc_13F64:
		move.w  (A1)+, D0
		lsr.l   D5, D0
		addx.w  D4, D4
		dbra    D1, loc_13F64
		move.w  D4, (A2)+
		suba.w  #$0020, A1
		subq.w  #$01, D5
		dbra    D2, loc_13F5E
		adda.w  #$0020, A1
		dbra    D3, loc_13F58
		lea     (Colision_Array_1), A1                 ; loc_369EA
		lea     (Colision_Array_2), A2                 ; loc_379EA
		bsr.s   loc_13F9C
		lea     (Colision_Array_1), A1                 ; loc_369EA
		lea     (Colision_Array_1), A2                 ; loc_369EA
loc_13F9C:
		move.w  #$0FFF, D3
loc_13FA0:
		moveq   #$00, D2
		move.w  #$000F, D1
		move.w  (A1)+, D0
		beq.s   loc_13FCE
		bmi.s   loc_13FB8
loc_13FAC:
		lsr.w   #$01, D0
		bcc.s   loc_13FB2
		addq.b  #$01, D2
loc_13FB2:
		dbra    D1, loc_13FAC
		bra.s   loc_13FD0
loc_13FB8:
		cmpi.w  #$FFFF, D0
		beq.s   loc_13FCA
loc_13FBE:
		lsl.w   #$01, D0
		bcc.s   loc_13FC4
		subq.b  #$01, D2
loc_13FC4:
		dbra    D1, loc_13FBE
		bra.s   loc_13FD0
loc_13FCA:
		move.w  #$0010, D0
loc_13FCE:
		move.w  D0, D2
loc_13FD0:
		move.b  D2, (A2)+
		dbra    D3, loc_13FA0
		rts
;===============================================================================
; Rotina n o usada, algo como executar um log das  colis es
; [ End ]             (Talvez usada durante o desenvolvimento)
;===============================================================================

;===============================================================================
; Rotina para calcular o quanto de espa o h  na frente do jogador
; [ Begin ]
;===============================================================================
Player_WalkSpeed:                                              ; loc_13FD8
		move.l  #Primary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD000, $FFFFF796
		cmpi.b  #$0C, Obj_Player_Top_Solid(A0)                   ; $003E
		beq.s   loc_13FF0
		move.l  #Secundary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD600, $FFFFF796
loc_13FF0:
		move.b  Obj_Player_LRB_Solid(A0), D5                     ; $003F
		move.l  Obj_X(A0), D3                                    ; $0008
		move.l  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_Speed(A0), D1                                ; $0010
		ext.l   D1
		asl.l   #$08, D1
		add.l   D1, D3
		move.w  Obj_Speed_Y(A0), D1                              ; $0012
		ext.l   D1
		asl.l   #$08, D1
		add.l   D1, D2
		swap.w  D2
		swap.w  D3
		move.b  D0, ($FFFFF768).w
		move.b  D0, ($FFFFF76A).w
		move.b  D0, D1
		addi.b  #$20, D0
		bpl.s   loc_14030
		move.b  D1, D0
		bpl.s   loc_1402A
		subq.b  #$01, D0
loc_1402A:
		addi.b  #$20, D0
		bra.s   loc_1403A
loc_14030:
		move.b  D1, D0
		bpl.s   loc_14036
		addq.b  #$01, D0
loc_14036:
		addi.b  #$1F, D0
loc_1403A:
		andi.b  #$C0, D0
		beq     loc_1413A
		cmpi.b  #$80, D0
		beq     loc_143A8
		andi.b  #$38, D1
		bne.s   loc_14052
		addq.w  #$08, D2
loc_14052:
		cmpi.b  #$40, D0
		beq     Player_HitWall_D3                      ; loc_14470
		bra     loc_142EE
;===============================================================================
; Rotina para calcular o quanto de espa o h  na frente do jogador
; [ End ]
;===============================================================================

;===============================================================================
; Routine to calculate how much space is above the player
; [ Begin ]
;===============================================================================
CalcRoomOverHead:                                              ; loc_1405E
		move.l  #Primary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD000, $FFFFF796
		cmpi.b  #$0C, Obj_Player_Top_Solid(A0)                   ; $003E
		beq.s   loc_14076
		move.l  #Secundary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD600, $FFFFF796
loc_14076:
		move.b  Obj_Player_LRB_Solid(A0), D5                     ; $003F
		move.b  D0, ($FFFFF768).w
		move.b  D0, ($FFFFF76A).w
		addi.b  #$20, D0
		andi.b  #$C0, D0
		cmpi.b  #$40, D0
		beq     Player_DontRunOnWallsL                 ; loc_14400
		cmpi.b  #$80, D0
		beq     Player_DontRunOnWalls                  ; loc_14338
		cmpi.b  #$C0, D0
		beq     Player_DontRunOnWallsR                 ; loc_14286
loc_140A2: ; Referenced by players
		move.l  #Primary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD000, $FFFFF796
		cmpi.b  #$0C, Obj_Player_Top_Solid(A0)                   ; $003E
		beq.s   loc_140BA
		move.l  #Secundary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD600, $FFFFF796
loc_140BA:
		move.b  Obj_Player_Top_Solid(A0), D5                     ; $003E
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D2
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		add.w   D0, D3
		lea     ($FFFFF768).w, A4
		move.w  #$0010, A3
		move.w  #$0000, D6
		bsr     FindFloor                              ; loc_13C30
		move.w  D1, -(A7)
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D2
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		sub.w   D0, D3
		lea     ($FFFFF76A).w, A4
		move.w  #$0010, A3
		move.w  #$0000, D6
		bsr     FindFloor                              ; loc_13C30
		move.w  (A7)+, D0
		move.b  #$00, D2
loc_1411A:
		move.b  ($FFFFF76A).w, D3
		cmp.w   D0, D1
		ble.s   loc_14128
		move.b  ($FFFFF768).w, D3
		exg.l   D0, D1
loc_14128:
		btst    #$00, D3
		beq.s   loc_14130
		move.b  D2, D3
loc_14130:
		rts
;===============================================================================
; Routine to calculate how much space is above the player
; [ End ]
;===============================================================================
; loc_14132:
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
loc_1413A:
		addi.w  #$000A, D2
		lea     ($FFFFF768).w, A4
		move.w  #$0010, A3
		move.w  #$0000, D6
		bsr     FindFloor                              ; loc_13C30
		move.b  #$00, D2
loc_14152:
		move.b  ($FFFFF768).w, D3
		btst    #$00, D3
		beq.s   loc_1415E
		move.b  D2, D3
loc_1415E:
		rts
;===============================================================================
; Routine to detect if the player has touched the floor
; [ Begin ]
;===============================================================================
Player_HitFloor:                                               ; loc_14160
		move.w  Obj_X(A0), D3                                    ; $0008
Player_HitFloor_D3:                                            ; loc_14164
		move.w  Obj_Y(A0), D2                                    ; $000C
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D2
		move.l  #Primary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD000, $FFFFF796
		cmpi.b  #$0C, Obj_Player_Top_Solid(A0)                   ; $003E
		beq.s   loc_1418A
		move.l  #Secundary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD600, $FFFFF796
loc_1418A:
		lea     ($FFFFF768).w, A4
		move.b  #$00, (A4)
		move.w  #$0010, A3
		move.w  #$0000, D6
		move.b  Obj_Player_Top_Solid(A0), D5                     ; $003E
		bsr     FindFloor                              ; loc_13C30
		move.b  ($FFFFF768).w, D3
		btst    #$00, D3
		beq.s   loc_141B0
		move.b  #$00, D3
loc_141B0:
		rts
;-------------------------------------------------------------------------------
Player_HitFloor_A1:                                            ; loc_141B2
		move.w  Obj_X(A1), D3                                    ; $0008
		move.w  Obj_Y(A1), D2                                    ; $000C
		moveq   #$00, D0
		move.b  Obj_Height_2(A1), D0                             ; $0016
		ext.w   D0
		add.w   D0, D2
		move.l  #Primary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD000, $FFFFF796
		cmpi.b  #$0C, Obj_Player_Top_Solid(A1)                   ; $003E
		beq.s   loc_141DC
		move.l  #Secundary_Colision_Data_Buffer, (Current_Colision_Pointer).w ; $FFFFD600, $FFFFF796
loc_141DC:
		lea     ($FFFFF768).w, A4
		move.b  #$00, (A4)
		move.w  #$0010, A3
		move.w  #$0000, D6
		move.b  Obj_Player_Top_Solid(A1), D5                     ; $003E
		bsr     FindFloor                              ; loc_13C30
		move.b  ($FFFFF768).w, D3
		btst    #$00, D3
		beq.s   loc_14202
		move.b  #$00, D3
loc_14202:
		rts
;===============================================================================
; Routine to detect if the player has touched the floor
; [ End ]
;===============================================================================

;===============================================================================
; Routine to detect if an Object has touched the floor
; [ Begin ]
;===============================================================================
;ObjCheckFloorDist:
ObjHitFloor:                                                   ; loc_14204
		move.w  Obj_X(A0), D3                                    ; $0008
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D2
		lea     ($FFFFF768).w, A4
		move.b  #$00, (A4)
		move.w  #$0010, A3
		move.w  #$0000, D6
		moveq   #$0C, D5
		bsr     FindFloor                              ; loc_13C30
		move.b  ($FFFFF768).w, D3
		btst    #$00, D3
		beq.s   loc_14238
		move.b  #$00, D3
loc_14238:
		rts
;===============================================================================
; Routine to detect if an Object has touched the floor
; [ End ]
;===============================================================================

;===============================================================================
; Routine to detect if the Fireball Object has touched the floor
; [ Begin ]
;===============================================================================
Fire_FindFloor:                                                ; loc_1423A
		move.w  Obj_X(A1), D3                                    ; $0008
		move.w  Obj_Y(A1), D2                                    ; $000C
		move.b  Obj_Height_2(A1), D0                             ; $0016
		ext.w   D0
		add.w   D0, D2
		lea     ($FFFFF768).w, A4
		move.b  #$00, (A4)
		move.w  #$0010, A3
		move.w  #$0000, D6
		moveq   #$0C, D5
		bra     FindFloor                              ; loc_13C30
;===============================================================================
; Routine to detect if the Fireball Object has touched the floor
; [ End ]
;===============================================================================

;===============================================================================
; Routine to detect if the ring Object has touched the floor
; [ Begin ]
;===============================================================================
Ring_FindFloor:                                                ; loc_14260
		move.w  Obj_X(A0), D3                                    ; $0008
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D2
		lea     ($FFFFF768).w, A4
		move.b  #$00, (A4)
		move.w  #$0010, A3
		move.w  #$0000, D6
		moveq   #$0C, D5
		bra     Object_FindFloor                       ; loc_13D6C
;===============================================================================
; Routine to detect if the ring Object has touched the floor
; [ End ]
;===============================================================================
Player_DontRunOnWallsR:                                        ; loc_14286
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		sub.w   D0, D2
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D3
		lea     ($FFFFF768).w, A4
		move.w  #$0010, A3
		move.w  #$0000, D6
		bsr     FindWall                               ; loc_13E0A
		move.w  D1, -(A7)
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		add.w   D0, D2
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		add.w   D0, D3
		lea     ($FFFFF76A).w, A4
		move.w  #$0010, A3
		move.w  #$0000, D6
		bsr     FindWall                               ; loc_13E0A
		move.w  (A7)+, D0
		move.b  #$C0, D2
		bra     loc_1411A
;-------------------------------------------------------------------------------
loc_142E6: ; Referenciado pelos jogadores
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
loc_142EE:
		addi.w  #$000A, D3
		lea     ($FFFFF768).w, A4
		move.w  #$0010, A3
		move.w  #$0000, D6
		bsr     FindWall                               ; loc_13E0A
		move.b  #$C0, D2
		bra     loc_14152
;===============================================================================
; Routine to detect if the Object has touched the wall on the right
; [ Begin ]
;===============================================================================
Object_HitWall_Right:                                          ; loc_1430A
		add.w   Obj_X(A0), D3                                    ; $0008
		move.w  Obj_Y(A0), D2                                    ; $000C
		lea     ($FFFFF768).w, A4
		move.b  #$00, (A4)
		move.w  #$0010, A3
		move.w  #$0000, D6
		moveq   #$0D, D5
		bsr     FindWall                               ; loc_13E0A
		move.b  ($FFFFF768).w, D3
		btst    #$00, D3
		beq.s   Exit_Object_HitWall_Right              ; loc_14336
		move.b  #$C0, D3
Exit_Object_HitWall_Right:                                     ; loc_14336
		rts
;===============================================================================
; Routine to detect if the Object has touched the wall on the right
; [ End ]
;===============================================================================
Player_DontRunOnWalls:                                         ; loc_14338
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		sub.w   D0, D2
		eori.w  #$000F, D2
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		add.w   D0, D3
		lea     ($FFFFF768).w, A4
		move.w  #$FFF0, A3
		move.w  #$0800, D6
		bsr     FindFloor                              ; loc_13C30
		move.w  D1, -(A7)
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		sub.w   D0, D2
		eori.w  #$000F, D2
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		sub.w   D0, D3
		lea     ($FFFFF76A).w, A4
		move.w  #$FFF0, A3
		move.w  #$0800, D6
		bsr     FindFloor                              ; loc_13C30
		move.w  (A7)+, D0
		move.b  #$80, D2
		bra     loc_1411A
;-------------------------------------------------------------------------------
; loc_143A0:
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
loc_143A8:
		subi.w  #$000A, D2
		eori.w  #$000F, D2
		lea     ($FFFFF768).w, A4
		move.w  #$FFF0, A3
		move.w  #$0800, D6
		bsr     FindFloor                              ; loc_13C30
		move.b  #$80, D2
		bra     loc_14152
;===============================================================================
; Routine to detect if the Object has touched the ceiling
; [ Begin ]
;===============================================================================
Object_HitCeiling:                                             ; loc_143C8
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		sub.w   D0, D2
		eori.w  #$000F, D2
		lea     ($FFFFF768).w, A4
		move.w  #$FFF0, A3
		move.w  #$0800, D6
		moveq   #$0D, D5
		bsr     FindFloor                              ; loc_13C30
		move.b  ($FFFFF768).w, D3
		btst    #$00, D3
		beq.s   loc_143FE
		move.b  #$80, D3
loc_143FE:
		rts
;===============================================================================
; Routine to detect if the Object has touched the ceiling
; [ End ]
;===============================================================================
Player_DontRunOnWallsL:                                        ; loc_14400
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		sub.w   D0, D2
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		sub.w   D0, D3
		eori.w  #$000F, D3
		lea     ($FFFFF768).w, A4
		move.w  #$FFF0, A3
		move.w  #$0400, D6
		bsr     FindWall                               ; loc_13E0A
		move.w  D1, -(A7)
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
		moveq   #$00, D0
		move.b  Obj_Width_2(A0), D0                              ; $0017
		ext.w   D0
		add.w   D0, D2
		move.b  Obj_Height_2(A0), D0                             ; $0016
		ext.w   D0
		sub.w   D0, D3
		eori.w  #$000F, D3
		lea     ($FFFFF76A).w, A4
		move.w  #$FFF0, A3
		move.w  #$0400, D6
		bsr     FindWall                               ; loc_13E0A
		move.w  (A7)+, D0
		move.b  #$40, D2
		bra     loc_1411A
;===============================================================================
; Routine to detect if the player has touched a wall
; [ Begin ]
;===============================================================================
Player_HitWall:                                                ; loc_14468
		move.w  Obj_Y(A0), D2                                    ; $000C
		move.w  Obj_X(A0), D3                                    ; $0008
Player_HitWall_D3:                                             ; loc_14470
		subi.w  #$000A, D3
		eori.w  #$000F, D3
		lea     ($FFFFF768).w, A4
		move.w  #$FFF0, A3
		move.w  #$0400, D6
		bsr     FindWall                               ; loc_13E0A
		move.b  #$40, D2
		bra     loc_14152
;===============================================================================
; Routine to detect if the player has touched a wall
; [ End ]
;===============================================================================

;===============================================================================
; Routine to detect if the Object has touched the wall on the left
; [ Begin ]
;===============================================================================
Object_HitWall_Left:                                           ; loc_14490
		add.w   Obj_X(A0), D3                                    ; $0008
		move.w  Obj_Y(A0), D2                                    ; $000C
		lea     ($FFFFF768).w, A4
		move.b  #$00, (A4)
		move.w  #$FFF0, A3
		move.w  #$0400, D6
		moveq   #$0D, D5
		bsr     FindWall                               ; loc_13E0A
		move.b  ($FFFFF768).w, D3
		btst    #$00, D3
		beq.s   Exit_Object_HitWall_Left               ; loc_144BC
		move.b  #$40, D3
Exit_Object_HitWall_Left:                                      ; loc_144BC
		rts
;===============================================================================
; Routine to detect if the Object has touched the wall on the left
; [ End ]
;===============================================================================
		nop
;-------------------------------------------------------------------------------
Obj79_Lamp_Post:                                            ; loc_144C0
;===============================================================================
; Object 0x79 - Lamppost Checkpoint
; [ Begin ]          
;===============================================================================
; loc_144C0:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_144D4(PC, D0), D1
                jsr     loc_144D4(PC, D1)
                jmp     (MarkObjGone)                          ; loc_D200
;-------------------------------------------------------------------------------
loc_144D4:
                dc.w    loc_144DA-loc_144D4
                dc.w    loc_1453C-loc_144D4
                dc.w    loc_145C4-loc_144D4
;-------------------------------------------------------------------------------
loc_144DA:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Lamp_Post_Mappings, Obj_Map(A0) ; loc_146FA, $0004
                move.w  #$047C, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.b  #$05, Obj_Priority(A0)                           ; $0018
                lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                bclr    #$07, $02(A2, D0)
                btst    #$00, $02(A2, D0)
                bne.s   loc_1452E
                move.b  (Saved_Level_Flag).w, D1                     ; $FFFFFE30
                andi.b  #$7F, D1
                move.b  Obj_Subtype(A0), D2                              ; $0028
                andi.b  #$7F, D2
                cmp.b   D2, D1
                bcs.s   loc_1453C
loc_1452E:
                bset    #$00, $02(A2, D0)
                move.b  #$04, Obj_Routine(A0)                            ; $0024
                rts
;-------------------------------------------------------------------------------
loc_1453C:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne     loc_145C2
                tst.b   ($FFFFB02A).w
                bmi     loc_145C2
                move.b  (Saved_Level_Flag).w, D1                     ; $FFFFFE30
                andi.b  #$7F, D1
                move.b  Obj_Subtype(A0), D2                              ; $0028
                andi.b  #$7F, D2
                cmp.b   D2, D1
                bcs.s   loc_1457A
                lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                bset    #$00, $02(A2, D0)
                move.b  #$04, Obj_Routine(A0)                            ; $0024
                bra     loc_145C2
loc_1457A:
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                addi.w  #$0008, D0
                cmpi.w  #$0010, D0
                bcc     loc_145C2
                move.w  (Player_One_Position_Y).w, D0                ; $FFFFB00C
                sub.w   Obj_Y(A0), D0                                    ; $000C
                addi.w  #$0040, D0
                cmpi.w  #$0068, D0
                bcc.s   loc_145C2
                move.w  #$00A1, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     Level_Save_Info                        ; loc_145D6
                lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                bset    #$00, $02(A2, D0)
loc_145C2:
                rts
;-------------------------------------------------------------------------------
loc_145C4:
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$02, D0
                lsr.b   #$01, D0
                addq.b  #$01, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                rts
;-------------------------------------------------------------------------------
Level_Save_Info:                                               ; loc_145D6
                move.b  Obj_Subtype(A0), (Saved_Level_Flag).w              ; $FFFFFE30; $0028
                move.b  (Saved_Level_Flag).w, ($FFFFFE31).w          ; $FFFFFE30
                move.w  Obj_X(A0), ($FFFFFE32).w                         ; $0008
                move.w  Obj_Y(A0), ($FFFFFE34).w                         ; $000C
                move.w  (Ring_Count).w, ($FFFFFE36).w                ; $FFFFFE20
                move.b  (Ring_Life_Flag).w, ($FFFFFE54).w            ; $FFFFFE1B
                move.l  (Time_Count).w, ($FFFFFE38).w                ; $FFFFFE22
                move.b  (Dyn_Resize_Routine).w, ($FFFFFE3C).w        ; $FFFFEEDF
                move.w  (Sonic_Level_Limits_Max_Y).w, ($FFFFFE3E).w  ; $FFFFEECE
                move.w  (Camera_X).w, ($FFFFFE40).w                  ; $FFFFEE00
                move.w  (Camera_Y).w, ($FFFFFE42).w                  ; $FFFFEE04
                move.w  (Camera_X_x2).w, ($FFFFFE44).w               ; $FFFFEE08
                move.w  (Camera_Y_x4).w, ($FFFFFE46).w               ; $FFFFEE0C
                move.w  (Camera_X_x8).w, ($FFFFFE48).w               ; $FFFFEE10
                move.w  (Camera_Y_x4_Mod_10).w, ($FFFFFE4A).w        ; $FFFFEE14
                move.w  (Camera_X_x4).w, ($FFFFFE4C).w               ; $FFFFEE18
                move.w  (Camera_Y_x4_Mod_10_2).w, ($FFFFFE4E).w      ; $FFFFEE1C
                move.w  (Water_Level_Change).w, ($FFFFFE50).w        ; $FFFFF648
                move.b  ($FFFFF64D).w, ($FFFFFE52).w
                move.b  ($FFFFF64E).w, ($FFFFFE53).w
                rts
;-------------------------------------------------------------------------------
Level_Restore_Info:                                            ; loc_14650
                move.b  ($FFFFFE31).w, (Saved_Level_Flag).w          ; $FFFFFE30
                move.w  ($FFFFFE32).w, (Player_One_Position_X).w     ; $FFFFB008
                move.w  ($FFFFFE34).w, (Player_One_Position_Y).w     ; $FFFFB00C
                move.w  ($FFFFFE36).w, (Ring_Count).w                ; $FFFFFE20
                move.b  ($FFFFFE54).w, (Ring_Life_Flag).w            ; $FFFFFE1B
                clr.w   (Ring_Count).w                               ; $FFFFFE20
                clr.b   (Ring_Life_Flag).w                           ; $FFFFFE1B
                move.l  ($FFFFFE38).w, (Time_Count).w                ; $FFFFFE22
                move.b  #$3B, (Time_Count_CentiSeconds).w            ; $FFFFFE25
                subq.b  #$01, (Time_Count_Seconds).w                 ; $FFFFFE24
                move.b  ($FFFFFE3C).w, (Dyn_Resize_Routine).w        ; $FFFFEEDF
                move.b  ($FFFFFE52).w, ($FFFFF64D).w
                move.w  ($FFFFFE3E).w, (Sonic_Level_Limits_Max_Y).w  ; $FFFFEECE
                move.w  ($FFFFFE3E).w, ($FFFFEEC6).w
                move.w  ($FFFFFE40).w, (Camera_X).w                  ; $FFFFEE00
                move.w  ($FFFFFE42).w, (Camera_Y).w                  ; $FFFFEE04
                move.w  ($FFFFFE44).w, (Camera_X_x2).w               ; $FFFFEE08
                move.w  ($FFFFFE46).w, (Camera_Y_x4).w               ; $FFFFEE0C
                move.w  ($FFFFFE48).w, (Camera_X_x8).w               ; $FFFFEE10
                move.w  ($FFFFFE4A).w, (Camera_Y_x4_Mod_10).w        ; $FFFFEE14
                move.w  ($FFFFFE4C).w, (Camera_X_x4).w               ; $FFFFEE18
                move.w  ($FFFFFE4E).w, (Camera_Y_x4_Mod_10_2).w      ; $FFFFEE1C
                tst.b   (Water_Level_Flag).w                         ; $FFFFF730
                beq.s   loc_146E6
                move.w  ($FFFFFE50).w, (Water_Level_Change).w        ; $FFFFF648
                move.b  ($FFFFFE52).w, ($FFFFF64D).w
                move.b  ($FFFFFE53).w, ($FFFFF64E).w
loc_146E6:
                tst.b   (Saved_Level_Flag).w                         ; $FFFFFE30
                bpl.s   loc_146F8
                move.w  ($FFFFFE32).w, D0
                subi.w  #$00A0, D0
                move.w  D0, (Sonic_Level_Limits_Min_X).w             ; $FFFFEEC8
loc_146F8:
                rts
;-------------------------------------------------------------------------------
Lamp_Post_Mappings:                                            ; loc_146FA
                   include 'mappings/sprite/obj79.asm'
;===============================================================================
; Object 0x79 - Lamppost Checkpoint
; [ End ]          
;==============================================================================='
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Obj7D_Hidden_Bonus:                                         ; loc_14768
;===============================================================================
; Object 0x7D - Hidden bonus points at the end of levels.
; [ Begin ]          Leftover from Sonic 1, Not used.
;===============================================================================
; loc_14768:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_14776(PC, D0), D1
                jmp     loc_14776(PC, D1)
;-------------------------------------------------------------------------------
loc_14776:
                dc.w    loc_1477A-loc_14776
                dc.w    loc_1481E-loc_14776
;-------------------------------------------------------------------------------
loc_1477A:
                moveq   #$10, D2
                move.w  D2, D3
                add.w   D3, D3
                lea     (Player_One).w, A1                           ; $FFFFB000
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                add.w   D2, D0
                cmp.w   D3, D0
                bcc.s   loc_147FC
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                add.w   D2, D1
                cmp.w   D3, D1
                bcc.s   loc_147FC
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne.s   loc_147FC
                tst.b   ($FFFFF7CD).w
                bne.s   loc_147FC
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Hidden_Bonus_Mappings, Obj_Map(A0) ; loc_14842, $0004
                move.w  #$84B6, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$00, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  Obj_Subtype(A0), Obj_Map_Id(A0)           ; $001A, $0028
                move.w  #$0077, Obj_Control_Var_04(A0)                   ; $0030
                move.w  #$00C9, D0
                jsr     (Play_Sfx)                             ; loc_1512
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                add.w   D0, D0
                move.w  Hidden_Bonus_Points(PC, D0), D0        ; loc_14816
                jsr     (AddPoints)                            ; loc_2D2D4
loc_147FC:
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_14810
                rts
loc_14810:
                jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
Hidden_Bonus_Points:                                           ; loc_14816
                dc.w    $0000
                dc.w    $03E8  ; 10000 points
                dc.w    $0064  ; 1000  points
                dc.w    $0001  ; 10    points (It should be $000A  ; 100 points)
;-------------------------------------------------------------------------------
loc_1481E:
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bmi.s   loc_1483C
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1483C
                jmp     (DisplaySprite)                        ; loc_D322
loc_1483C:
                jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
Hidden_Bonus_Mappings:                                         ; loc_14842
                include 'mappings/sprite/obj7D.asm'
;===============================================================================
; Object 0x7D - Hidden bonus points at the end of levels.
; [ End ]          Leftover from Sonic 1, Not used.
;===============================================================================
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Obj44_Red_Ball_Bumper:                                      ; loc_1486C
;===============================================================================
; Object 0x44 - Round Bumpers from Casino Night
; [ Begin ]
;===============================================================================
; loc_1486C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1487A(PC, D0), D1
                jmp     loc_1487A(PC, D1)
;-------------------------------------------------------------------------------
loc_1487A:
                dc.w    loc_1487E-loc_1487A
                dc.w    loc_148AC-loc_1487A
;-------------------------------------------------------------------------------
loc_1487E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Red_Ball_Bumper_Mappings, Obj_Map(A0) ; loc_14994, $0004
                move.w  #$439A, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  #$D7, Obj_Col_Flags(A0)                          ; $0020
;-------------------------------------------------------------------------------
loc_148AC:
                move.b  Obj_Col_Prop(A0), D0                             ; $0021
                beq     loc_14978
                lea     (Player_One).w, A1                           ; $FFFFB000
                bclr    #$00, Obj_Col_Prop(A0)                           ; $0021
                beq.s   loc_148C2
                bsr.s   loc_148D8
loc_148C2:
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bclr    #$01, Obj_Col_Prop(A0)                           ; $0021
                beq.s   loc_148D0
                bsr.s   loc_148D8
loc_148D0:
                clr.b   Obj_Col_Prop(A0)                                 ; $0021
                bra     loc_14978
loc_148D8:
                move.w  Obj_X(A0), D1                                    ; $0008
                move.w  Obj_Y(A0), D2                                    ; $000C
                sub.w   Obj_X(A1), D1                                    ; $0008
                sub.w   Obj_Y(A1), D2                                    ; $000C
                jsr     (CalcAngle)                            ; loc_351A
                move.b  ($FFFFFE04).w, D1
                andi.w  #$0003, D1
                add.w   D1, D0
                jsr     (CalcSine)                             ; loc_3282
                muls.w  #$F900, D1
                asr.l   #$08, D1
                move.w  D1, Obj_Speed(A1)                                ; $0010
                muls.w  #$F900, D0
                asr.l   #$08, D0
                move.w  D0, Obj_Speed_Y(A1)                              ; $0012
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$04, Obj_Status(A1)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
                clr.b   Obj_Control_Var_10(A1)                           ; $003C
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$00B4, D0
                jsr     (Play_Sfx)                             ; loc_1512
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_14950
                cmpi.b  #$8A, $02(A2, D0)
                bcc.s   loc_14976
                addq.b  #$01, $02(A2, D0)
loc_14950:
                moveq   #$01, D0
                jsr     (AddPoints)                            ; loc_2D2D4
                bsr     SingleObjectLoad                       ; loc_E6FE
                bne.s   loc_14976
                move.b  #$29, Obj_Id(A1)                                 ; $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$04, Obj_Map_Id(A1)                             ; $001A
loc_14976:
                rts
loc_14978:
                lea     (Red_Ball_Bumper_Animate_Data), A1     ; loc_14986
                bsr     AnimateSprite                          ; loc_D372
                bra     MarkObjGone                            ; loc_D200
;-------------------------------------------------------------------------------
Red_Ball_Bumper_Animate_Data:                                  ; loc_14986
                dc.w    loc_1498A-Red_Ball_Bumper_Animate_Data
                dc.w    loc_1498D-Red_Ball_Bumper_Animate_Data
loc_1498A:
                dc.b    $0F, $00, $FF
loc_1498D:
                dc.b    $03, $01, $00, $01, $FD, $00, $00
;-------------------------------------------------------------------------------
Red_Ball_Bumper_Mappings:                                      ; loc_14994
                include 'mappings/sprite/obj44.asm'
;===============================================================================
; Object 0x44 - Round Bumpers from Casino Night
; [ End ]
;===============================================================================
Obj24_Oxygen_Bubbles:                                       ; loc_149CC
;===============================================================================
; Object 0x24 - Oxygen Bubbles from Neo Green Hill
; [ Begin ]
;===============================================================================
; loc_149CC:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_149DA(PC, D0), D1
                jmp     loc_149DA(PC, D1)
;-------------------------------------------------------------------------------
loc_149DA:
                dc.w    loc_149E6-loc_149DA
                dc.w    loc_14A48-loc_149DA
                dc.w    loc_14A62-loc_149DA
                dc.w    loc_14AC2-loc_149DA
                dc.w    loc_14AE0-loc_149DA
                dc.w    loc_14AE4-loc_149DA
;-------------------------------------------------------------------------------
loc_149E6:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Sonic_Underwater_Mappings, Obj_Map(A0) ; loc_14CFC, $0004
                move.w  #$855B, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$84, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_14A2E
                addq.b  #$08, Obj_Routine(A0)                            ; $0024
                andi.w  #$007F, D0
                move.b  D0, Obj_Control_Var_06(A0)                       ; $0032
                move.b  D0, Obj_Control_Var_07(A0)                       ; $0033
                move.b  #$06, Obj_Ani_Number(A0)                         ; $001C
                bra     loc_14AE4
loc_14A2E:
                move.b  D0, Obj_Ani_Number(A0)                           ; $001C
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.w  #$FF78, Obj_Speed_Y(A0)                          ; $0012
                jsr     (PseudoRandomNumber)                   ; loc_325C
                move.b  D0, Obj_Angle(A0)                                ; $0026
;-------------------------------------------------------------------------------
loc_14A48:
                lea     (Oxygen_Bubbles_Animate_Data), A1      ; loc_14CD2
                jsr     (AnimateSprite)                        ; loc_D372
                cmpi.b  #$06, Obj_Map_Id(A0)                             ; $001A
                bne.s   loc_14A62
                move.b  #$01, Obj_Control_Var_02(A0)                     ; $002E
;-------------------------------------------------------------------------------
loc_14A62:
                move.w  (Water_Level).w, D0                          ; $FFFFF646
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcs.s   loc_14A7A
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                addq.b  #$03, Obj_Ani_Number(A0)                         ; $001C
                bra     loc_14AC2
loc_14A7A:
                move.b  Obj_Angle(A0), D0                                ; $0026
                addq.b  #$01, Obj_Angle(A0)                              ; $0026
                andi.w  #$007F, D0
                lea     (loc_126EC), A1
                move.b  $00(A1, D0), D0
                ext.w   D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_X(A0)                                    ; $0008
                tst.b   Obj_Control_Var_02(A0)                           ; $002E
                beq.s   loc_14AAC
                bsr     loc_14C26
                cmpi.b  #$06, Obj_Routine(A0)                            ; $0024
                beq.s   loc_14AC2
loc_14AAC:
                bsr     SpeedToPos                             ; loc_D1DA
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_14ABC
                jmp     (DisplaySprite)                        ; loc_D322
loc_14ABC:
                jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
loc_14AC2:
                lea     (Oxygen_Bubbles_Animate_Data), A1      ; loc_14CD2
                jsr     (AnimateSprite)                        ; loc_D372
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_14ADA
                jmp     (DisplaySprite)                        ; loc_D322
loc_14ADA:
                jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
loc_14AE0:
                bra     DeleteObject                           ; loc_D314
;-------------------------------------------------------------------------------
loc_14AE4:
                tst.w   Obj_Control_Var_0A(A0)                           ; $0036
                bne.s   loc_14B46
                move.w  (Water_Level).w, D0                          ; $FFFFF646
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcc     loc_14BF2
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     loc_14BF2
                subq.w  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bpl     loc_14BE6
                move.w  #$0001, Obj_Control_Var_0A(A0)                   ; $0036
loc_14B0C:
                jsr     (PseudoRandomNumber)                   ; loc_325C
                move.w  D0, D1
                andi.w  #$0007, D0
                cmpi.w  #$0006, D0
                bcc.s   loc_14B0C
                move.b  D0, Obj_Control_Var_08(A0)                       ; $0034
                andi.w  #$000C, D1
                lea     (loc_14C14), A1
                adda.w  D1, A1
                move.l  A1, Obj_Control_Var_10(A0)                       ; $003C
                subq.b  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bpl.s   loc_14B44
                move.b  Obj_Control_Var_07(A0), Obj_Control_Var_06(A0); $0032, $0033
                bset    #$07, Obj_Control_Var_0A(A0)                     ; $0036
loc_14B44:
                bra.s   loc_14B4E
loc_14B46:
                subq.w  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bpl     loc_14BE6
loc_14B4E:
                jsr     (PseudoRandomNumber)                   ; loc_325C
                andi.w  #$001F, D0
                move.w  D0, Obj_Control_Var_0C(A0)                       ; $0038
                bsr     SingleObjectLoad                       ; loc_E6FE
                bne.s   loc_14BCA
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                jsr     (PseudoRandomNumber)                   ; loc_325C
                andi.w  #$000F, D0
                subq.w  #$08, D0
                add.w   D0, Obj_X(A1)                                    ; $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                moveq   #$00, D0
                move.b  Obj_Control_Var_08(A0), D0                       ; $0034
                move.l  Obj_Control_Var_10(A0), A2                       ; $003C
                move.b  $00(A2, D0), Obj_Subtype(A1)                     ; $0028
                btst    #$07, Obj_Control_Var_0A(A0)                     ; $0036
                beq.s   loc_14BCA
                jsr     (PseudoRandomNumber)                   ; loc_325C
                andi.w  #$0003, D0
                bne.s   loc_14BB6
                bset    #$06, Obj_Control_Var_0A(A0)                     ; $0036
                bne.s   loc_14BCA
                move.b  #$02, Obj_Subtype(A1)                            ; $0028
loc_14BB6:
                tst.b   Obj_Control_Var_08(A0)                           ; $0034
                bne.s   loc_14BCA
                bset    #$06, Obj_Control_Var_0A(A0)                     ; $0036
                bne.s   loc_14BCA
                move.b  #$02, Obj_Subtype(A1)                            ; $0028
loc_14BCA:
                subq.b  #$01, Obj_Control_Var_08(A0)                     ; $0034
                bpl.s   loc_14BE6
                jsr     (PseudoRandomNumber)                   ; loc_325C
                andi.w  #$007F, D0
                addi.w  #$0080, D0
                add.w   D0, Obj_Control_Var_0C(A0)                       ; $0038
                clr.w   Obj_Control_Var_0A(A0)                           ; $0036
loc_14BE6:
                lea     (Oxygen_Bubbles_Animate_Data), A1      ; loc_14CD2
                jsr     (AnimateSprite)                        ; loc_D372
loc_14BF2:
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     DeleteObject                           ; loc_D314
                move.w  (Water_Level).w, D0                          ; $FFFFF646
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcs     DisplaySprite                          ; loc_D322
                rts
;-------------------------------------------------------------------------------
loc_14C14:
                dc.w    $0001, $0000, $0000, $0100, $0000, $0001, $0001, $0000
                dc.w    $0100
;-------------------------------------------------------------------------------
loc_14C26:
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_14C30
                lea     (Player_Two).w, A1                           ; $FFFFB040
loc_14C30:
                tst.b   Obj_Timer(A1)                                    ; $002A
                bmi     loc_14CD0
                move.w  Obj_X(A1), D0                                    ; $0008
                move.w  Obj_X(A0), D1                                    ; $0008
                subi.w  #$0010, D1
                cmp.w   D0, D1
                bcc     loc_14CD0
                addi.w  #$0020, D1
                cmp.w   D0, D1
                bcs.s   loc_14CD0
                move.w  Obj_Y(A1), D0                                    ; $000C
                move.w  Obj_Y(A0), D1                                    ; $000C
                cmp.w   D0, D1
                bcc.s   loc_14CD0
                addi.w  #$0010, D1
                cmp.w   D0, D1
                bcs.s   loc_14CD0
                bsr     Resume_Music                           ; loc_12A30
                move.w  #$00AD, D0
                jsr     (Play_Sfx)                             ; loc_1512
                clr.w   Obj_Speed(A1)                                    ; $0010
                clr.w   Obj_Speed_Y(A1)                                  ; $0012
                clr.w   Obj_Inertia(A1)                                  ; $0014
                move.b  #$15, Obj_Ani_Number(A1)                         ; $001C
                move.w  #$0023, Obj_Control_Var_02(A1)                   ; $002E
                move.b  #$00, Obj_Control_Var_10(A1)                     ; $003C
                bclr    #$05, Obj_Status(A1)                             ; $0022
                bclr    #$04, Obj_Status(A1)                             ; $0022
                btst    #$02, Obj_Status(A1)                             ; $0022
                beq     loc_14CBE
                bclr    #$02, Obj_Status(A1)                             ; $0022
                move.b  #$13, Obj_Height_2(A1)                           ; $0016
                move.b  #$09, Obj_Width_2(A1)                            ; $0017
                subq.w  #$05, Obj_Y(A1)                                  ; $000C
loc_14CBE:
                cmpi.b  #$06, Obj_Routine(A0)                            ; $0024
                beq.s   loc_14CD0
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                addq.b  #$03, Obj_Ani_Number(A0)                         ; $001C
loc_14CD0:
                rts
;-------------------------------------------------------------------------------
Oxygen_Bubbles_Animate_Data:                                   ; loc_14CD2
                dc.w    loc_14CE0-Oxygen_Bubbles_Animate_Data
                dc.w    loc_14CE5-Oxygen_Bubbles_Animate_Data
                dc.w    loc_14CEB-Oxygen_Bubbles_Animate_Data
                dc.w    loc_14CF2-Oxygen_Bubbles_Animate_Data
                dc.w    loc_14CF2-Oxygen_Bubbles_Animate_Data
                dc.w    loc_14CF4-Oxygen_Bubbles_Animate_Data
                dc.w    loc_14CF8-Oxygen_Bubbles_Animate_Data
loc_14CE0:
                dc.b    $0E, $00, $01, $02, $FC
loc_14CE5:
                dc.b    $0E, $01, $02, $03, $04, $FC
loc_14CEB:
                dc.b    $0E, $02, $03, $04, $05, $06, $FC
loc_14CF2:
                dc.b    $04, $FC
loc_14CF4:
                dc.b    $04, $06, $07, $FC
loc_14CF8:
                dc.b    $0F, $0E, $0F, $FF
;===============================================================================
; Object 0x24 - Oxygen Bubbles from Neo Green Hill
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Sonic_Underwater_Mappings:                                     ; loc_14CFC
		dc.w    loc_14D40-Sonic_Underwater_Mappings
		dc.w    loc_14D4A-Sonic_Underwater_Mappings
		dc.w    loc_14D4A-Sonic_Underwater_Mappings
		dc.w    loc_14D54-Sonic_Underwater_Mappings
		dc.w    loc_14D5E-Sonic_Underwater_Mappings
		dc.w    loc_14D68-Sonic_Underwater_Mappings
		dc.w    loc_14D72-Sonic_Underwater_Mappings
		dc.w    loc_14D7C-Sonic_Underwater_Mappings
		dc.w    loc_14D9E-Sonic_Underwater_Mappings
		dc.w    loc_14D9E-Sonic_Underwater_Mappings
		dc.w    loc_14D9E-Sonic_Underwater_Mappings
		dc.w    loc_14D9E-Sonic_Underwater_Mappings
		dc.w    loc_14D9E-Sonic_Underwater_Mappings
		dc.w    loc_14D9E-Sonic_Underwater_Mappings
		dc.w    loc_14DA8-Sonic_Underwater_Mappings
		dc.w    loc_14DB2-Sonic_Underwater_Mappings
		dc.w    loc_14DBC-Sonic_Underwater_Mappings
Tails_Underwater_Mappings:                                     ; loc_14D1E
		dc.w    loc_14D40-Tails_Underwater_Mappings
		dc.w    loc_14D4A-Tails_Underwater_Mappings
		dc.w    loc_14D4A-Tails_Underwater_Mappings
		dc.w    loc_14D54-Tails_Underwater_Mappings
		dc.w    loc_14D5E-Tails_Underwater_Mappings
		dc.w    loc_14D68-Tails_Underwater_Mappings
		dc.w    loc_14D72-Tails_Underwater_Mappings
		dc.w    loc_14D7C-Tails_Underwater_Mappings
		dc.w    loc_14DBE-Tails_Underwater_Mappings
		dc.w    loc_14DBE-Tails_Underwater_Mappings
		dc.w    loc_14DBE-Tails_Underwater_Mappings
		dc.w    loc_14DBE-Tails_Underwater_Mappings
		dc.w    loc_14DBE-Tails_Underwater_Mappings
		dc.w    loc_14DBE-Tails_Underwater_Mappings
		dc.w    loc_14DA8-Tails_Underwater_Mappings
		dc.w    loc_14DB2-Tails_Underwater_Mappings
		dc.w    loc_14DBC-Tails_Underwater_Mappings
loc_14D40:
		dc.w    $0001
		dc.l    $FC00008D, $0046FFFC
loc_14D4A:
		dc.w    $0001
		dc.l    $FC00008E, $0048FFFC
loc_14D54:
		dc.w    $0001
		dc.l    $F805008F, $0049FFF8
loc_14D5E:
		dc.w    $0001
		dc.l    $F8050093, $004FFFF8
loc_14D68:
		dc.w    $0001
		dc.l    $F40A001C, $000EFFF4
loc_14D72:
		dc.w    $0001
		dc.l    $F00F0008, $0004FFF0
loc_14D7C:
		dc.w    $0004
		dc.l    $F0050018, $000CFFF0
		dc.l    $F0050818, $080C0000
		dc.l    $00051018, $100CFFF0
		dc.l    $00051818, $180C0000
loc_14D9E:
		dc.w    $0001
		dc.l    $F4061F41, $1BA0FFF8
loc_14DA8:
		dc.w    $0001
		dc.l    $F8050000, $0000FFF8
loc_14DB2:
		dc.w    $0001
		dc.l    $F8050004, $0002FFF8
loc_14DBC:
		dc.w    $0000
loc_14DBE:
		dc.w    $0001
		dc.l    $F4061F31, $1B98FFF8
;-------------------------------------------------------------------------------
Obj03_Layer_Switch:                                         ; loc_14DC8
;===============================================================================
; Object 0x03 - Alternates the plane of the scenery relative to the player
; [ Begin ]
;===============================================================================
; loc_14DC8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_14DE4(PC, D0), D1
                jsr     loc_14DE4(PC, D1)
                tst.w   (Debug_Mode_Active_Flag).w                   ; $FFFFFFFA
                beq     MarkObjGone_3                          ; loc_D26C
                jmp     (MarkObjGone)                          ; loc_D200
;-------------------------------------------------------------------------------
loc_14DE4:
                dc.w    loc_14DEA-loc_14DE4
                dc.w    loc_14E50-loc_14DE4
                dc.w    loc_14F74-loc_14DE4
;-------------------------------------------------------------------------------
loc_14DEA:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Layer_Switch_Mappings, Obj_Map(A0) ; loc_150E8, $0004
                move.w  #$26BC, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$05, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), D0                              ; $0028
                btst    #$02, D0
                beq.s   loc_14E40
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                andi.w  #$0007, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                andi.w  #$0003, D0
                add.w   D0, D0
                move.w  Layer_Switch_Conf(PC, D0), Obj_Control_Var_06(A0) ; loc_14E38 ,$0032
                bra     loc_14F74
;-------------------------------------------------------------------------------
Layer_Switch_Conf:                                             ; loc_14E38
                dc.w    $0020, $0040, $0080, $0100
;-------------------------------------------------------------------------------
loc_14E40:
                andi.w  #$0003, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                add.w   D0, D0
                move.w  Layer_Switch_Conf(PC, D0), Obj_Control_Var_06(A0) ; loc_14E38, $0032
;-------------------------------------------------------------------------------
loc_14E50:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne     loc_14F72
                move.b  #$00, Obj_Control_Var_08(A0)                     ; $0034
                move.w  Obj_Control_Var_04(A0), D5                       ; $0030
                move.w  Obj_X(A0), D0                                    ; $0008
                move.w  D0, D1
                subq.w  #$08, D0
                addq.w  #$08, D1
                move.w  Obj_Y(A0), D2                                    ; $000C
                move.w  D2, D3
                move.w  Obj_Control_Var_06(A0), D4                       ; $0032
                sub.w   D4, D2
                add.w   D4, D3
                lea     (loc_15098), A2
                moveq   #$07, D6
loc_14E82:
                move.l  (A2)+, D4
                beq     loc_14F62
                move.l  D4, A1
                move.w  Obj_X(A1), D4                                    ; $0008
                cmp.w   D0, D4
                bcs     loc_14EB2
                cmp.w   D1, D4
                bcc     loc_14EB2
                move.w  Obj_Y(A1), D4                                    ; $000C
                cmp.w   D2, D4
                bcs     loc_14EB2
                cmp.w   D3, D4
                bcc     loc_14EB2
                ori.w   #$8000, D5
                bra     loc_14F62
loc_14EB2:
                tst.w   D5
                bpl     loc_14F62
                swap.w  D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_14ECA
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne     loc_14F5C
loc_14ECA:
                move.w  Obj_X(A1), D4                                    ; $0008
                cmp.w   Obj_X(A0), D4                                    ; $0008
                bcs.s   loc_14F0E
                btst    #$00, Obj_Flags(A0)                              ; $0001
                bne.s   loc_14EFA
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
                btst    #$03, D0
                beq.s   loc_14EFA
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_14EFA:
                bclr    #$07, Obj_Art_VRAM(A1)                           ; $0002
                btst    #$05, D0
                beq.s   loc_14F46
                bset    #$07, Obj_Art_VRAM(A1)                           ; $0002
                bra.s   loc_14F46
loc_14F0E:
                btst    #$00, Obj_Flags(A0)                              ; $0001
                bne.s   loc_14F34
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
                btst    #$04, D0
                beq.s   loc_14F34
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_14F34:
                bclr    #$07, Obj_Art_VRAM(A1)                           ; $0002
                btst    #$06, D0
                beq.s   loc_14F46
                bset    #$07, Obj_Art_VRAM(A1)                           ; $0002
loc_14F46:
                move.b  #$01, Obj_Control_Var_08(A0)                     ; $0034
                tst.w   (Debug_Mode_Active_Flag).w                   ; $FFFFFFFA
                beq.s   loc_14F5C
                move.w  #$00A1, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_14F5C:
                swap.w  D0
                andi.w  #$7FFF, D5
loc_14F62:
                add.l   D5, D5
                dbra    D6, loc_14E82
                swap.w  D5
                move.b  D5, Obj_Control_Var_04(A0)                       ; $0030
                bsr     loc_150B8
loc_14F72:
                rts
;-------------------------------------------------------------------------------
loc_14F74:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne     loc_15096
                move.b  #$00, Obj_Control_Var_08(A0)                     ; $0034
                move.w  Obj_Control_Var_04(A0), D5                       ; $0030
                move.w  Obj_X(A0), D0                                    ; $0008
                move.w  D0, D1
                move.w  Obj_Control_Var_06(A0), D4                       ; $0032
                sub.w   D4, D0
                add.w   D4, D1
                move.w  Obj_Y(A0), D2                                    ; $000C
                move.w  D2, D3
                subq.w  #$08, D2
                addq.w  #$08, D3
                lea     (loc_15098), A2
                moveq   #$07, D6
loc_14FA6:
                move.l  (A2)+, D4
                beq     loc_15086
                move.l  D4, A1
                move.w  Obj_X(A1), D4                                    ; $0008
                cmp.w   D0, D4
                bcs     loc_14FD6
                cmp.w   D1, D4
                bcc     loc_14FD6
                move.w  Obj_Y(A1), D4                                    ; $000C
                cmp.w   D2, D4
                bcs     loc_14FD6
                cmp.w   D3, D4
                bcc     loc_14FD6
                ori.w   #$8000, D5
                bra     loc_15086
loc_14FD6:
                tst.w   D5
                bpl     loc_15086
                swap.w  D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_14FEE
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne     loc_15080
loc_14FEE:
                move.w  Obj_Y(A1), D4                                    ; $000C
                cmp.w   Obj_Y(A0), D4                                    ; $000C
                bcs.s   loc_15032
                btst    #$00, Obj_Flags(A0)                              ; $0001
                bne.s   loc_1501E
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
                btst    #$03, D0
                beq.s   loc_1501E
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_1501E:
                bclr    #$07, Obj_Art_VRAM(A1)                           ; $0002
                btst    #$05, D0
                beq.s   loc_1506A
                bset    #$07, Obj_Art_VRAM(A1)                           ; $0002
                bra.s   loc_1506A
loc_15032:
                btst    #$00, Obj_Flags(A0)                              ; $0001
                bne.s   loc_15058
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
                btst    #$04, D0
                beq.s   loc_15058
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_15058:
                bclr    #$07, Obj_Art_VRAM(A1)                           ; $0002
                btst    #$06, D0
                beq.s   loc_1506A
                bset    #$07, Obj_Art_VRAM(A1)                           ; $0002
loc_1506A:
                move.b  #$01, Obj_Control_Var_08(A0)                     ; $0034
                tst.w   (Debug_Mode_Active_Flag).w                   ; $FFFFFFFA
                beq.s   loc_15080
                move.w  #$00A1, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_15080:
                swap.w  D0
                andi.w  #$7FFF, D5
loc_15086:
                add.l   D5, D5
                dbra    D6, loc_14FA6
                swap.w  D5
                move.b  D5, Obj_Control_Var_04(A0)                       ; $0030
                bsr     loc_150B8
loc_15096:
                rts
;-------------------------------------------------------------------------------
loc_15098:
                dc.l    Player_One                                   ; $FFFFB000
                dc.l    Player_Two                                   ; $FFFFB040
                dc.l    $00000000
                dc.l    $00000000
                dc.l    $00000000
                dc.l    $00000000
                dc.l    $00000000
                dc.l    $00000000
;-------------------------------------------------------------------------------
loc_150B8:
                tst.b   Obj_Control_Var_08(A0)                           ; $0034
                beq.s   loc_150E6
                tst.w   ($FFFFB002).w
                bpl.s   loc_150CC
                bset    #$07, ($FFFFB182).w
                bra.s   loc_150D2
loc_150CC:
                bclr    #$07, ($FFFFB182).w
loc_150D2:
                tst.w   ($FFFFB042).w
                bpl.s   loc_150E0
                bset    #$07, ($FFFFB1C2).w
                bra.s   loc_150E6
loc_150E0:
                bclr    #$07, ($FFFFB1C2).w
loc_150E6:
                rts
;-------------------------------------------------------------------------------
Layer_Switch_Mappings:                                         ; loc_150E8
                include 'mappings/sprite/obj03.asm'
;===============================================================================
; Object 0x03 - Alternates the plane of the scenery relative to the player
; [ End ]
;===============================================================================
Obj0B_Open_Close_Platform:                                  ; loc_151C4
;===============================================================================
; Object 0x0B - Trap platform from Chemical Plant
; [ Begin ]
;===============================================================================
; loc_151C4:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_151D2(PC, D0), D1
                jmp     loc_151D2(PC, D1)
;-------------------------------------------------------------------------------
loc_151D2:
                dc.w    loc_151D8-loc_151D2
                dc.w    loc_1522C-loc_151D2
                dc.w    loc_1523A-loc_151D2
;-------------------------------------------------------------------------------
loc_151D8:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Open_Close_Platform_Mappings, Obj_Map(A0) ; loc_152AE, $0004
                move.w  #$E3B0, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$00F0, D0
                addi.w  #$0010, D0
                move.w  D0, D1
                subq.w  #$01, D0
                move.w  D0, Obj_Control_Var_04(A0)                       ; $0030
                move.w  D0, Obj_Control_Var_06(A0)                       ; $0032
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                addq.w  #$01, D0
                lsl.w   #$04, D0
                move.b  D0, Obj_Control_Var_0A(A0)                       ; $0036
;-------------------------------------------------------------------------------
loc_1522C:
                move.b  ($FFFFFE0F).w, D0
                add.b   Obj_Control_Var_0A(A0), D0                       ; $0036
                bne.s   loc_15264
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
;-------------------------------------------------------------------------------
loc_1523A:
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bpl.s   loc_15258
                move.w  #$007F, Obj_Control_Var_04(A0)                   ; $0030
                tst.b   Obj_Ani_Number(A0)                               ; $001C
                beq.s   loc_15252
                move.w  Obj_Control_Var_06(A0), Obj_Control_Var_04(A0); $0030, $0032
loc_15252:
                bchg    #00, Obj_Ani_Number(A0)                          ; $001C
loc_15258:
                lea     (Open_Close_Platform_Animate_Data), A1 ; loc_1529A
                jsr     (AnimateSprite)                        ; loc_D372
loc_15264:
                tst.b   Obj_Map_Id(A0)                                   ; $001A
                bne.s   loc_1527E
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                moveq   #$11, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Platform_Object                        ; loc_F82C
                bra     Jmp_00_To_MarkObjGone                  ; loc_15314
loc_1527E:
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_15296
                lea     (Obj_Memory_Address).w, A1                   ; $FFFFB000
                bclr    #$03, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A0)                             ; $0022
loc_15296:
                bra     Jmp_00_To_MarkObjGone                  ; loc_15314
;-------------------------------------------------------------------------------
Open_Close_Platform_Animate_Data:                              ; loc_1529A
                dc.w    loc_1529E-Open_Close_Platform_Animate_Data
                dc.w    loc_152A6-Open_Close_Platform_Animate_Data
loc_1529E:
                dc.b    $07, $00, $01, $02, $03, $04, $FE, $01
loc_152A6:
                dc.b    $07, $04, $03, $02, $01, $00, $FE, $01
;-------------------------------------------------------------------------------
Open_Close_Platform_Mappings:                                  ; loc_152AE
                include 'mappings/sprite/obj0B.asm'
;===============================================================================
; Object 0x0B - Trap platform from Chemical Plant
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Jmp_00_To_MarkObjGone:                                         ; loc_15314
		jmp     (MarkObjGone)                          ; loc_D200
;-------------------------------------------------------------------------------
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj0C_Unk_Platform:                                         ; loc_1531C
;===============================================================================
; Object 0x0C
; [ Begin ]
;===============================================================================
; loc_1531C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1532A(PC, D0), D1
                jmp     loc_1532A(PC, D1)
;-------------------------------------------------------------------------------
loc_1532A:
                dc.w    loc_1532E-loc_1532A
                dc.w    loc_1538E-loc_1532A
;-------------------------------------------------------------------------------
loc_1532E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Unk_Platform_Mappings, Obj_Map(A0) ; loc_15406, $0004
                move.w  #$E418, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.w  Obj_Y(A0), D0                                    ; $000C
                subi.w  #$0010, D0
                move.w  D0, Obj_Control_Var_0E(A0)                       ; $003A
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$00F0, D0
                addi.w  #$0010, D0
                move.w  D0, D1
                subq.w  #$01, D0
                move.w  D0, Obj_Control_Var_04(A0)                       ; $0030
                move.w  D0, Obj_Control_Var_06(A0)                       ; $0032
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                move.b  D0, Obj_Control_Var_12(A0)                       ; $003E
                move.b  D0, Obj_Control_Var_13(A0)                       ; $003F
;-------------------------------------------------------------------------------
loc_1538E:
                move.b  Obj_Control_Var_10(A0), D0                       ; $003C
                beq.s   loc_153CC
                cmpi.b  #$80, D0
                bne.s   loc_153DC
                move.b  Obj_Control_Var_11(A0), D1                       ; $003D
                bne.s   loc_153AE
                subq.b  #$01, Obj_Control_Var_12(A0)                     ; $003E
                bpl.s   loc_153AE
                move.b  Obj_Control_Var_13(A0), Obj_Control_Var_12(A0); $003E, $003F
                bra.s   loc_153DC
loc_153AE:
                addq.b  #$01, Obj_Control_Var_11(A0)                     ; $003D
                move.b  D1, D0
                bsr     Jmp_00_To_CalcSine                     ; loc_1541A
                addi.w  #$0008, D0
                asr.w   #$06, D0
                subi.w  #$0010, D0
                add.w   Obj_Control_Var_0E(A0), D0                       ; $003A
                move.w  D0, Obj_Y(A0)                                    ; $000C
                bra.s   loc_153F2
loc_153CC:
                move.w  ($FFFFFE0E).w, D1
                andi.w  #$03FF, D1
                bne.s   loc_153E0
                move.b  #$01, Obj_Control_Var_11(A0)                     ; $003D
loc_153DC:
                addq.b  #$01, Obj_Control_Var_10(A0)                     ; $003C
loc_153E0:
                bsr     Jmp_00_To_CalcSine                     ; loc_1541A
                addi.w  #$0008, D1
                asr.w   #$04, D1
                add.w   Obj_Control_Var_0E(A0), D1                       ; $003A
                move.w  D1, Obj_Y(A0)                                    ; $000C
loc_153F2:
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                moveq   #$09, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Platform_Object                        ; loc_F82C
                bra     Jmp_01_To_MarkObjGone                  ; loc_15414
;-------------------------------------------------------------------------------
Unk_Platform_Mappings:                                         ; loc_15406
                include 'mappings/sprite/obj0C.asm'
;===============================================================================
; Object 0x0C
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_01_To_MarkObjGone:                                         ; loc_15414
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_00_To_CalcSine:                                            ; loc_1541A
		jmp     (CalcSine)                             ; loc_3282
;-------------------------------------------------------------------------------
Obj12_HPz_Master_Emerald:                                   ; loc_15420
;===============================================================================
; Object 0x12 - Hidden Palace Emerald
; [ Begin ]
;===============================================================================
; loc_15420:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1542E(PC, D0), D1
                jmp     loc_1542E(PC, D1)
;-------------------------------------------------------------------------------
loc_1542E:
                dc.w    loc_15432-loc_1542E
                dc.w    loc_1545A-loc_1542E
;-------------------------------------------------------------------------------
loc_15432:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Master_Emerald_Mappings, Obj_Map(A0) ; loc_15486, $0004
                move.w  #$6392, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
;-------------------------------------------------------------------------------
loc_1545A:
                move.w  #$0020, D1
                move.w  #$0010, D2
                move.w  #$0010, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     SolidObject                            ; loc_F344
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
                cmpi.w  #$0280, D0
                bhi     Jmp_00_To_DeleteObject                 ; loc_154A2
                bra     Jmp_00_To_DisplaySprite                ; loc_1549C
;-------------------------------------------------------------------------------
Master_Emerald_Mappings:                                       ; loc_15486
		include 'mappings/sprite/obj12.asm'
;===============================================================================
; Object 0x12 - Hidden Palace Emerald
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_00_To_DisplaySprite:                                       ; loc_1549C
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_00_To_DeleteObject:                                        ; loc_154A2
		jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
Obj13_HPz_Waterfalls:                                       ; loc_154A8
;===============================================================================
; Object 0x13 - Waterfalls from Hidden Palace
; [ Begin ]
;===============================================================================
; loc_154A8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_154B6(PC, D0), D1
                jmp     loc_154B6(PC, D1)
;-------------------------------------------------------------------------------
loc_154B6:
                dc.w    loc_154BC-loc_154B6
                dc.w    loc_15582-loc_154B6
                dc.w    loc_1560C-loc_154B6
;-------------------------------------------------------------------------------
loc_154BC:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #HPz_Waterfalls_Mappings, Obj_Map(A0) ; loc_15624, $0004
                move.w  #$E315, Obj_Art_VRAM(A0)                         ; $0002
                bsr     ModifySpriteAttr_2P                    ; loc_DBBE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  #$12, Obj_Map_Id(A0)                             ; $001A
                bsr.s   loc_15524
                move.b  #$A0, Obj_Height_2(A1)                           ; $0016
                bset    #$04, Obj_Flags(A1)                              ; $0001
                move.l  A1, Obj_Control_Var_0C(A0)                       ; $0038
                move.w  Obj_Y(A0), Obj_Control_Var_08(A0)         ; $000C, $0034
                move.w  Obj_Y(A0), Obj_Control_Var_0A(A0)         ; $000C, $0036
                cmpi.b  #$10, Obj_Subtype(A0)                            ; $0028
                bcs.s   loc_15568
                bsr.s   loc_15524
                move.l  A1, Obj_Control_Var_10(A0)                       ; $003C
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0098, Obj_Y(A1)                                ; $000C
                bra.s   loc_15568
loc_15524:
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne.s   loc_15566
                move.b  #$13, Obj_Id(A1)                                 ; $0000
                addq.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.l  #HPz_Waterfalls_Mappings, Obj_Map(A1) ; loc_15624, $0004
                move.w  #$E315, Obj_Art_VRAM(A1)                         ; $0002
                bsr     ModifySpriteAttr_2P_A1                 ; loc_DBDA
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  #$01, Obj_Priority(A1)                           ; $0018
loc_15566:
                rts
loc_15568:
                moveq   #$00, D1
                move.b  Obj_Subtype(A0), D1                              ; $0028
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                subi.w  #$0078, D0
                lsl.w   #$04, D1
                add.w   D1, D0
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034
;-------------------------------------------------------------------------------
loc_15582:
                move.l  Obj_Control_Var_0C(A0), A1                       ; $0038
                move.b  #$12, Obj_Map_Id(A0)                             ; $001A
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                move.w  (Water_Level).w, D1                          ; $FFFFF646
                cmp.w   D0, D1
                bcc.s   loc_1559A
                move.w  D1, D0
loc_1559A:
                move.w  D0, Obj_Y(A0)                                    ; $000C
                sub.w   Obj_Control_Var_0A(A0), D0                       ; $0036
                addi.w  #$0080, D0
                bmi.s   loc_155EC
                lsr.w   #$04, D0
                move.w  D0, D1
                cmpi.w  #$000F, D0
                bcs.s   loc_155B4
                moveq   #$0F, D0
loc_155B4:
                move.b  D0, Obj_Map_Id(A1)                               ; $001A
                cmpi.b  #$10, Obj_Subtype(A0)                            ; $0028
                bcs.s   loc_155D4
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                subi.w  #$000F, D1
                bcc.s   loc_155CC
                moveq   #$00, D1
loc_155CC:
                addi.w  #$0013, D1
                move.b  D1, Obj_Map_Id(A1)                               ; $001A
loc_155D4:
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
                cmpi.w  #$0280, D0
                bhi     Jmp_01_To_DeleteObject                 ; loc_159C6
                bra     Jmp_01_To_DisplaySprite                ; loc_159C0
loc_155EC:
                moveq   #$13, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.b  D0, Obj_Map_Id(A1)                               ; $001A
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
                cmpi.w  #$0280, D0
                bhi     Jmp_01_To_DeleteObject                 ; loc_159C6
                rts
;-------------------------------------------------------------------------------
loc_1560C:
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
                cmpi.w  #$0280, D0
                bhi     Jmp_01_To_DeleteObject                 ; loc_159C6
                bra     Jmp_01_To_DisplaySprite                ; loc_159C0
;-------------------------------------------------------------------------------
HPz_Waterfalls_Mappings:                                       ; loc_15624
		include 'mappings/sprite/obj13.asm'
;===============================================================================
; Object 0x13 - Waterfalls from Hidden Palace
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_01_To_DisplaySprite:                                       ; loc_159C0
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_01_To_DeleteObject:                                        ; loc_159C6
		jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
Obj04_Water_Surface:                                        ; loc_159CC
;===============================================================================
; Object 0x04 - Water Surface from Hidden Palace, Chemical Plant and
; [ Begin ]          Neo Green Hill
;===============================================================================
; loc_159CC:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_159DA(PC, D0), D1
                jmp     loc_159DA(PC, D1)
;-------------------------------------------------------------------------------
loc_159DA:
                dc.w    loc_159E0-loc_159DA
                dc.w    loc_15A20-loc_159DA
                dc.w    loc_15AB2-loc_159DA
;-------------------------------------------------------------------------------
loc_159E0:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Water_Surface_Mappings, Obj_Map(A0) ; loc_15AFE, $0004
                move.w  #$8400, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_00_To_ModifySpriteAttr_2P          ; loc_1639C
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$80, Obj_Width(A0)                              ; $0019
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                cmpi.b  #$0F, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_15A20
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #NGHz_Water_Surface_Mappings, Obj_Map(A0) ; loc_15BEE, $0004
                bra     loc_15AB2
;-------------------------------------------------------------------------------
loc_15A20:
                move.w  (Water_Level).w, D1                          ; $FFFFF646
                move.w  D1, Obj_Y(A0)                                    ; $000C
                tst.b   Obj_Control_Var_06(A0)                           ; $0032
                bne.s   loc_15A42
                btst    #$07, (Control_Ports_Buffer_Data+$0001).w    ; $FFFFF605
                beq.s   loc_15A52
                addq.b  #$03, Obj_Map_Id(A0)                             ; $001A
                move.b  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bra.s   loc_15A52
loc_15A42:
                tst.w   (Pause_Status).w                             ; $FFFFF63A
                bne.s   loc_15A52
                move.b  #$00, Obj_Control_Var_06(A0)                     ; $0032
                subq.b  #$03, Obj_Map_Id(A0)                             ; $001A
loc_15A52:
                lea     (Water_Surface_Data), A1               ; loc_15A72
                moveq   #$00, D1
                move.b  Obj_Ani_Frame(A0), D1                            ; $001B
                move.b  $00(A1, D1), Obj_Map_Id(A0)                      ; $001A
                addq.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
                andi.b  #$3F, Obj_Ani_Frame(A0)                          ; $001B
                bra     Jmp_02_To_DisplaySprite                ; loc_16390
;-------------------------------------------------------------------------------
Water_Surface_Data:                                            ; loc_15A72
                dc.b    $00, $01, $00, $01, $00, $01, $00, $01
                dc.b    $00, $01, $00, $01, $00, $01, $00, $01
                dc.b    $01, $02, $01, $02, $01, $02, $01, $02
                dc.b    $01, $02, $01, $02, $01, $02, $01, $02
                dc.b    $02, $01, $02, $01, $02, $01, $02, $01
                dc.b    $02, $01, $02, $01, $02, $01, $02, $01
                dc.b    $01, $00, $01, $00, $01, $00, $01, $00
                dc.b    $01, $00, $01, $00, $01, $00, $01, $00
;-------------------------------------------------------------------------------
loc_15AB2:
                move.w  (Water_Level).w, D1                          ; $FFFFF646
                move.w  D1, Obj_Y(A0)                                    ; $000C
                tst.b   Obj_Control_Var_06(A0)                           ; $0032
                bne.s   loc_15AD4
                btst    #$07, (Control_Ports_Buffer_Data+$0001).w    ; $FFFFF605
                beq.s   loc_15AE4
                addq.b  #$02, Obj_Map_Id(A0)                             ; $001A
                move.b  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bra.s   loc_15AFA
loc_15AD4:
                tst.w   (Pause_Status).w                             ; $FFFFF63A
                bne.s   loc_15AFA
                move.b  #$00, Obj_Control_Var_06(A0)                     ; $0032
                subq.b  #$02, Obj_Map_Id(A0)                             ; $001A
loc_15AE4:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_15AFA
                move.b  #$05, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                andi.b  #$01, Obj_Map_Id(A0)                             ; $001A
loc_15AFA:
                bra     Jmp_02_To_DisplaySprite                ; loc_16390
;-------------------------------------------------------------------------------
Water_Surface_Mappings:                                        ; loc_15AFE
                include 'mappings/sprite/obj04.asm'
;-------------------------------------------------------------------------------
NGHz_Water_Surface_Mappings:                                   ; loc_15BEE
                include 'mappings/sprite/obj04_nghz.asm'
;===============================================================================
; Object 0x04 - Water Surface from Hidden Palace, Chemical Plant and
; [ End ]          Neo Green Hill
;===============================================================================
Obj49_Waterfall:                                            ; loc_15C8E
;===============================================================================
; Object 0x49 - Waterfalls from Green Hill
; [ Begin ]
;===============================================================================
; loc_15C8E:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_15C9C(PC, D0), D1
                jmp     loc_15C9C(PC, D1)
;-------------------------------------------------------------------------------
loc_15C9C:
                dc.w    loc_15CA0-loc_15C9C
                dc.w    loc_15CDA-loc_15C9C
;-------------------------------------------------------------------------------
loc_15CA0:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Waterfall_Mappings, Obj_Map(A0) ; loc_15D40, $0004
                move.w  #$239E, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_00_To_ModifySpriteAttr_2P          ; loc_1639C
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.b  #$00, Obj_Priority(A0)                           ; $0018
                move.b  #$80, Obj_Height_2(A0)                           ; $0016
                bset    #$04, Obj_Flags(A0)                              ; $0001
;-------------------------------------------------------------------------------
loc_15CDA:
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                bne.s   loc_15CF4
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Jmp_02_To_DeleteObject                 ; loc_16396
loc_15CF4:
                move.w  Obj_X(A0), D1                                    ; $0008
                move.w  D1, D2
                subi.w  #$0040, D1
                addi.w  #$0040, D2
                move.b  Obj_Subtype(A0), D3                              ; $0028
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                cmp.w   D1, D0
                bcs.s   loc_15D26
                cmp.w   D2, D0
                bcc.s   loc_15D26
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                add.b   D3, Obj_Map_Id(A0)                               ; $001A
                bra     Jmp_02_To_DisplaySprite                ; loc_16390
loc_15D26:
                move.w  (Player_Two_Position_X).w, D0                ; $FFFFB048
                cmp.w   D1, D0
                bcs.s   loc_15D38
                cmp.w   D2, D0
                bcc.s   loc_15D38
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
loc_15D38:
                add.b   D3, Obj_Map_Id(A0)                               ; $001A
                bra     Jmp_02_To_DisplaySprite                ; loc_16390
;-------------------------------------------------------------------------------
Waterfall_Mappings:                                            ; loc_15D40
                include 'mappings/sprite/obj49.asm'
;===============================================================================
; Object 0x49 - Waterfalls from Green Hill
; [ End ]
;===============================================================================
Obj31_Lava_Attributes:                                      ; loc_15EDC
;===============================================================================
; Object 0x31 - Atributo invis vel das lavas na Hill Top / Metropolis
; [ Begin ]
;===============================================================================
; loc_15EDC:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_15EEA(PC, D0), D1
                jmp     loc_15EEA(PC, D1)
;-------------------------------------------------------------------------------
loc_15EEA:
                dc.w    loc_15EF2-loc_15EEA
                dc.w    loc_15F28-loc_15EEA
;-------------------------------------------------------------------------------
loc_15EEE:
                dc.b    $96, $94, $95, $00
;-------------------------------------------------------------------------------
loc_15EF2:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                move.b  loc_15EEE(PC, D0), Obj_Col_Flags(A0)       ; $0020
                move.l  #Lava_Attributes_Mappings, Obj_Map(A0) ; loc_15F4E, $0004
                move.w  #$8680, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$84, Obj_Flags(A0)                              ; $0001 This causes the object to be visible if the player dies.
                move.b  #$80, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), Obj_Map_Id(A0)           ; $001A, $0028
;-------------------------------------------------------------------------------
loc_15F28:
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                bne.s   loc_15F42
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   (Camera_X_pos_coarse).w, D0
                cmpi.w  #$0280, D0
                bhi     Jmp_02_To_DeleteObject                 ; loc_16396
loc_15F42:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                beq.s   loc_15F4C
                bsr     Jmp_02_To_DisplaySprite                ; loc_16390
loc_15F4C:
                rts
;-------------------------------------------------------------------------------
Lava_Attributes_Mappings:                                      ; loc_15F4E
                include 'mappings/sprite/obj31.asm'
;===============================================================================
; Object 0x31 - Atributo invis vel das lavas na Hill Top / Metropolis
; [ End ]
;===============================================================================
Obj74_Invisible_Block:                                      ; loc_15FBA
;===============================================================================
; Object 0x74 - Invisible Block
; [ Begin ]
;===============================================================================   
; loc_15FBA:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_15FC8(PC, D0), D1
                jmp     loc_15FC8(PC, D1)
;-------------------------------------------------------------------------------
loc_15FC8:
                dc.w    loc_15FCC-loc_15FC8
                dc.w    loc_16008-loc_15FC8        
;-------------------------------------------------------------------------------
loc_15FCC:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Invisible_Block_Mappings, Obj_Map(A0) ; loc_16052, $0004
                move.w  #$8680, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_00_To_ModifySpriteAttr_2P          ; loc_1639C
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  Obj_Subtype(A0), D0                              ; $0028
                move.b  D0, D1
                andi.w  #$00F0, D0
                addi.w  #$0010, D0
                lsr.w   #$01, D0
                move.b  D0, Obj_Width(A0)                                ; $0019
                andi.w  #$000F, D1
                addq.w  #$01, D1
                lsl.w   #$03, D1
                move.b  D1, Obj_Height_2(A0)                             ; $0016    
;-------------------------------------------------------------------------------
loc_16008:
                bsr     Jmp_00_To_Check_Object_On_Screen       ; loc_163A2
                bne.s   loc_1602A
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     SolidObject_2                          ; loc_F39E
loc_1602A:
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                bne.s   loc_16044
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Jmp_02_To_DeleteObject                 ; loc_16396
loc_16044:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                beq.s   loc_16050
                jmp     (DisplaySprite)                        ; loc_D322
loc_16050:
                rts                 
;-------------------------------------------------------------------------------
Invisible_Block_Mappings:                                      ; loc_16052
                include 'mappings/sprite/obj74.asm'
;===============================================================================
; Object 0x74 - Invisible Block
; [ End ]
;===============================================================================		
Obj7C_Metal_Structure:                                      ; loc_160BE
;===============================================================================
; Object 0x7C - Metal Structure at the Bottom of Chemical Plant
; [ Begin ]
;===============================================================================  
; loc_160BE:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_160CC(PC, D0), D1
                jmp     loc_160CC(PC, D1)
;-------------------------------------------------------------------------------   
loc_160CC:
                dc.w    loc_160D0-loc_160CC
                dc.w    loc_160F2-loc_160CC   
;-------------------------------------------------------------------------------  
loc_160D0:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Metal_Structure_Mappings, Obj_Map(A0) ; loc_16128, $0004
                move.w  #$C373, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_00_To_ModifySpriteAttr_2P          ; loc_1639C
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$07, Obj_Priority(A0)                           ; $0018  
;------------------------------------------------------------------------------- 
loc_160F2:
                move.w  (Camera_X).w, D1                             ; $FFFFEE00
                andi.w  #$03FF, D1
                cmpi.w  #$02E0, D1
                bcc.s   loc_16126
                asr.w   #$01, D1
                move.w  D1, D0
                asr.w   #$01, D1
                add.w   D1, D0
                neg.w   D0
                move.w  D0, Obj_X(A0)                                    ; $0008
                move.w  (Camera_Y).w, D1                             ; $FFFFEE04
                asr.w   #$01, D1
                andi.w  #$003F, D1
                neg.w   D1
                addi.w  #$0100, D1
                move.w  D1, Obj_Sub_Y(A0)                                ; $000A
                bra     Jmp_02_To_DisplaySprite                ; loc_16390
loc_16126:
                rts                               
;-------------------------------------------------------------------------------
Metal_Structure_Mappings:                                      ; loc_16128
		include 'mappings/sprite/obj7C.asm'
;===============================================================================
; Object 0x7C - Metal Structure at the Bottom of Chemical Plant
; [ End ]
;===============================================================================
Obj27_Object_Hit:
;===============================================================================
; Object 0x27 - Touch Response Routine on Level Objects
; [ Begin ] 
;===============================================================================
; loc_16174:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_16182(PC, D0), D1
                jmp     loc_16182(PC, D1)
;-------------------------------------------------------------------------------  
loc_16182:
                dc.w    loc_16188-loc_16182
                dc.w    loc_161AA-loc_16182
                dc.w    loc_161EE-loc_16182  
;-------------------------------------------------------------------------------  
loc_16188:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     SingleObjectLoad                       ; loc_E6FE
                bne.s   loc_161AA
                move.b  #$28, Obj_Id(A1)                                 ; $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_Control_Var_12(A0), Obj_Control_Var_12(A1); $003E, $003E 
;-------------------------------------------------------------------------------
loc_161AA:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Object_Hit_Mappings, Obj_Map(A0) ; loc_1620C, $0004
                move.w  #$05A4, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_00_To_ModifySpriteAttr_2P          ; loc_1639C
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$0C, Obj_Width(A0)                              ; $0019
                move.b  #$03, Obj_Ani_Time(A0)                           ; $001E
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.w  #$00C1, D0
                jsr     (Play_Sfx)                             ; loc_1512  
;-------------------------------------------------------------------------------
loc_161EE:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_16208
                move.b  #$07, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$05, Obj_Map_Id(A0)                             ; $001A
                beq     Jmp_02_To_DeleteObject                 ; loc_16396
loc_16208:
                bra     Jmp_02_To_DisplaySprite                ; loc_16390    
;-------------------------------------------------------------------------------            
Object_Hit_Mappings:                                           ; loc_1620C
		include 'mappings/sprite/obj27.asm'       
;===============================================================================
; Object 0x27 - Touch Response Routine on Level Objects
; [ End ] 
;===============================================================================
Obj84_Auto_Spin:                                            ; loc_16248
;===============================================================================
; Object 0x84 - Auto Spin - Hill Top, Hidden Palace, Casino Night
; [ Begin ]
;===============================================================================
; loc_16248:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_16256(PC, D0), D1
                jmp     loc_16256(PC, D1)
;-------------------------------------------------------------------------------
loc_16256:
                dc.w    loc_1625E-loc_16256
                dc.w    loc_16294-loc_16256
;-------------------------------------------------------------------------------
loc_1625A:
                dc.b    $C6, $94, $95, $00      
;-------------------------------------------------------------------------------
loc_1625E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                move.b  loc_1625A(PC, D0), Obj_Col_Flags(A0)       ; $0020
                move.l  #Auto_Spin_Attributes_Mappings, Obj_Map(A0) ; loc_16324, $0004
                move.w  #$8680, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$84, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$07, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), Obj_Map_Id(A0)           ; $001A, $0028
loc_16294:
                move.b  Obj_Col_Prop(A0), D0                             ; $0021
                beq     loc_162FE
                lea     (Player_One).w, A1                           ; $FFFFB000
                bclr    #$00, Obj_Col_Prop(A0)                           ; $0021
                beq.s   loc_162AA
                bsr.s   loc_162C0
loc_162AA:
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bclr    #$01, Obj_Col_Prop(A0)                           ; $0021
                beq.s   loc_162B8
                bsr.s   loc_162C0
loc_162B8:
                clr.b   Obj_Col_Prop(A0)                                 ; $0021
                bra     loc_162FE
loc_162C0:
                btst    #$02, Obj_Status(A1)                             ; $0022
                beq.s   loc_162CA
                rts
loc_162CA:
                bset    #$02, Obj_Status(A1)                             ; $0022
                move.b  #$0E, Obj_Height_2(A1)                           ; $0016
                move.b  #$07, Obj_Width_2(A1)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                addq.w  #$05, Obj_Y(A1)                                  ; $000C
                move.w  #$00BE, D0
                jsr     (Play_Sfx)                             ; loc_1512
                tst.w   Obj_Inertia(A1)                                  ; $0014
                bne.s   loc_162FC
                move.w  #$0200, Obj_Inertia(A1)                          ; $0014
loc_162FC:
                rts
loc_162FE:
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                bne.s   loc_16318
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Jmp_02_To_DeleteObject                 ; loc_16396
loc_16318:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                beq.s   loc_16322
                bsr     Jmp_02_To_DisplaySprite                ; loc_16390
loc_16322:
                rts     
;-------------------------------------------------------------------------------
Auto_Spin_Attributes_Mappings:                                 ; loc_16324
		include 'mappings/sprite/obj84.asm'                    
;===============================================================================
; Object 0x84 - Auto Spin - Hill Top, Hidden Palace, Casino Night
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_02_To_DisplaySprite:                                       ; loc_16390
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_02_To_DeleteObject:                                        ; loc_16396
		jmp     (DeleteObject)                         ; loc_D314
Jmp_00_To_ModifySpriteAttr_2P:                                 ; loc_1639C
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_00_To_Check_Object_On_Screen:                              ; loc_163A2
		jmp     (Check_Object_On_Screen)               ; loc_DD66
;-------------------------------------------------------------------------------
Obj06_Spiral_Attributes:
;===============================================================================
; Object 0x06 - Invisible attribute of the spirals from Emerald Hill / Metropolis
; [ Begin ] 
;===============================================================================   
; loc_163A8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_163D8(PC, D0), D1
                jsr     loc_163D8(PC, D1)
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                beq.s   loc_163BE
                rts
loc_163BE:
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_163D2
                rts
loc_163D2:
                jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
loc_163D8:
                dc.w    loc_163DE-loc_163D8
                dc.w    loc_163F6-loc_163D8
                dc.w    loc_166E6-loc_163D8             
;------------------------------------------------------------------------------- 
loc_163DE:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$D0, Obj_Width(A0)                              ; $0019
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bpl.s   loc_163F6
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bra     loc_166E6      
;------------------------------------------------------------------------------- 
loc_163F6:
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                bsr.s   loc_16404
                lea     (Player_Two).w, A1                           ; $FFFFB040
                addq.b  #$01, D6
loc_16404:
                btst    D6, Obj_Status(A0)                               ; $0022
                bne     loc_1649E
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne     loc_1649C
                btst    #$03, Obj_Status(A1)                             ; $0022
                bne.s   loc_1645E
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                tst.w   Obj_Speed(A1)                                    ; $0010
                bmi.s   loc_1643A
                cmpi.w  #$FF40, D0
                bgt.s   loc_1649C
                cmpi.w  #$FF30, D0
                blt.s   loc_1649C
                bra.s   loc_16446
loc_1643A:
                cmpi.w  #$00C0, D0
                blt.s   loc_1649C
                cmpi.w  #$00D0, D0
                bgt.s   loc_1649C
loc_16446:
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                subi.w  #$0010, D1
                cmpi.w  #$0030, D1
                bcc.s   loc_1649C
                bsr     Player_On_Spiral                       ; loc_F99A
                rts
loc_1645E:
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                tst.w   Obj_Speed(A1)                                    ; $0010
                bmi.s   loc_1647A
                cmpi.w  #$FF50, D0
                bgt.s   loc_1649C
                cmpi.w  #$FF40, D0
                blt.s   loc_1649C
                bra.s   loc_16486
loc_1647A:
                cmpi.w  #$00B0, D0
                blt.s   loc_1649C
                cmpi.w  #$00C0, D0
                bgt.s   loc_1649C
loc_16486:
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                subi.w  #$0010, D1
                cmpi.w  #$0030, D1
                bcc.s   loc_1649C
                bsr     Player_On_Spiral                       ; loc_F99A
loc_1649C:
                rts
loc_1649E:
                move.w  Obj_Inertia(A1), D0                              ; $0014
                bpl.s   loc_164A6
                neg.w   D0
loc_164A6:
                cmpi.w  #$0600, D0
                bcs.s   loc_164C8
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne.s   loc_164C8
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                addi.w  #$00D0, D0
                bmi.s   loc_164C8
                cmpi.w  #$01A0, D0
                bcs.s   loc_164E0
loc_164C8:
                bclr    #$03, Obj_Status(A1)                             ; $0022
                bclr    D6, Obj_Status(A0)                               ; $0022
                move.b  #$00, Obj_P_Flips_Remaining(A1)                  ; $002C
                move.b  #$04, Obj_Player_Flip_Speed(A1)                  ; $002D
                rts
loc_164E0:
                btst    #$03, Obj_Status(A1)                             ; $0022
                beq.s   loc_1649C
                move.b  Spiral_Data_2(PC, D0), D1              ; loc_16546
                ext.w   D1
                move.w  Obj_Y(A0), D2                                    ; $000C
                add.w   D1, D2
                moveq   #$00, D1
                move.b  Obj_Height_2(A1), D1                             ; $0016
                subi.w  #$0013, D1
                sub.w   D1, D2
                move.w  D2, Obj_Y(A1)                                    ; $000C
                lsr.w   #$03, D0
                andi.w  #$003F, D0
                move.b  Spiral_Data(PC, D0), Obj_Flip_Angle(A1) ; loc_16512, $0027
                rts    
;-------------------------------------------------------------------------------
Spiral_Data:                                                   ; loc_16512
                dc.b    $00, $00, $01, $01, $16, $16, $16, $16
                dc.b    $2C, $2C, $2C, $2C, $42, $42, $42, $42
                dc.b    $58, $58, $58, $58, $6E, $6E, $6E, $6E
                dc.b    $84, $84, $84, $84, $9A, $9A, $9A, $9A
                dc.b    $B0, $B0, $B0, $B0, $C6, $C6, $C6, $C6
                dc.b    $DC, $DC, $DC, $DC, $F2, $F2, $F2, $F2
                dc.b    $01, $01, $00, $00
;-------------------------------------------------------------------------------
Spiral_Data_2:                                                 ; loc_16546
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $1F, $1F
                dc.b    $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F
                dc.b    $1F, $1F, $1F, $1F, $1F, $1E, $1E, $1E
                dc.b    $1E, $1E, $1E, $1E, $1E, $1E, $1D, $1D
                dc.b    $1D, $1D, $1D, $1C, $1C, $1C, $1C, $1B
                dc.b    $1B, $1B, $1B, $1A, $1A, $1A, $19, $19
                dc.b    $19, $18, $18, $18, $17, $17, $16, $16
                dc.b    $15, $15, $14, $14, $13, $12, $12, $11
                dc.b    $10, $10, $0F, $0E, $0E, $0D, $0C, $0C
                dc.b    $0B, $0A, $0A, $09, $08, $08, $07, $06
                dc.b    $06, $05, $04, $04, $03, $02, $02, $01
                dc.b    $00, $FF, $FE, $FE, $FD, $FC, $FC, $FB
                dc.b    $FA, $F9, $F9, $F8, $F7, $F7, $F6, $F6
                dc.b    $F5, $F5, $F4, $F4, $F3, $F2, $F2, $F1
                dc.b    $F1, $F0, $F0, $EF, $EF, $EE, $EE, $ED
                dc.b    $ED, $ED, $EC, $EB, $EB, $EA, $EA, $E9
                dc.b    $E9, $E8, $E8, $E7, $E7, $E6, $E6, $E5
                dc.b    $E5, $E4, $E4, $E4, $E3, $E3, $E2, $E2
                dc.b    $E2, $E1, $E1, $E1, $E0, $E0, $E0, $DF
                dc.b    $DF, $DF, $DF, $DE, $DE, $DE, $DD, $DD
                dc.b    $DD, $DD, $DD, $DD, $DD, $DD, $DC, $DC
                dc.b    $DC, $DC, $DC, $DC, $DC, $DC, $DC, $DB
                dc.b    $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB
                dc.b    $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB
                dc.b    $DB, $DB, $DB, $DB, $DB, $DB, $DB, $DB
                dc.b    $DB, $DB, $DB, $DB, $DC, $DC, $DC, $DC
                dc.b    $DC, $DC, $DC, $DD, $DD, $DD, $DD, $DD
                dc.b    $DD, $DD, $DD, $DE, $DE, $DE, $DF, $DF
                dc.b    $DF, $DF, $E0, $E0, $E0, $E1, $E1, $E1
                dc.b    $E2, $E2, $E2, $E3, $E3, $E4, $E4, $E4
                dc.b    $E5, $E5, $E6, $E6, $E7, $E7, $E8, $E8
                dc.b    $E9, $E9, $EA, $EA, $EB, $EB, $EC, $ED
                dc.b    $ED, $EE, $EE, $EF, $F0, $F0, $F1, $F2
                dc.b    $F2, $F3, $F4, $F5, $F5, $F6, $F7, $F8
                dc.b    $F9, $F9, $FA, $FB, $FC, $FD, $FE, $FF
                dc.b    $00, $01, $02, $03, $04, $05, $06, $07
                dc.b    $08, $08, $09, $0A, $0A, $0B, $0C, $0D
                dc.b    $0D, $0E, $0E, $0F, $0F, $10, $10, $11
                dc.b    $11, $12, $12, $13, $13, $14, $14, $15
                dc.b    $15, $16, $16, $17, $17, $18, $18, $18
                dc.b    $19, $19, $19, $19, $1A, $1A, $1A, $1A
                dc.b    $1B, $1B, $1B, $1B, $1C, $1C, $1C, $1C
                dc.b    $1C, $1C, $1D, $1D, $1D, $1D, $1D, $1D
                dc.b    $1D, $1E, $1E, $1E, $1E, $1E, $1E, $1E
                dc.b    $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F
                dc.b    $1F, $1F, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20
                dc.b    $20, $20, $20, $20, $20, $20, $20, $20
;-------------------------------------------------------------------------------
loc_166E6:
                lea     (Player_One).w, A1                           ; $FFFFB000
                lea     ($FFFFF7B2).w, A2
                moveq   #$03, D6
                bsr.s   loc_166FC
                lea     (Player_Two).w, A1                           ; $FFFFB040
                lea     ($FFFFF7B3).w, A2
                addq.b  #$01, D6
loc_166FC:
                btst    D6, Obj_Status(A0)                               ; $0022
                bne     loc_1676A
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                cmpi.w  #$FF40, D0
                blt.s   loc_16768
                cmpi.w  #$00C0, D0
                bge.s   loc_16768
                move.w  Obj_Y(A0), D0                                    ; $000C
                addi.w  #$003C, D0
                move.w  Obj_Y(A1), D2                                    ; $000C
                move.b  Obj_Height_2(A1), D1                             ; $0016
                ext.w   D1
                add.w   D2, D1
                addq.w  #$04, D1
                sub.w   D1, D0
                bhi.s   loc_16768
                cmpi.w  #$FFF0, D0
                bcs.s   loc_16768
                cmpi.b  #$06, Obj_Routine(A1)                            ; $0024
                bcc.s   loc_16768
                add.w   D0, D2
                addq.w  #$03, D2
                move.w  D2, Obj_Y(A1)                                    ; $000C
                move.b  #$01, Obj_Player_Flip_Flag(A1)                   ; $0029
                bsr     Player_On_Spiral                       ; loc_F99A
                move.w  #$0001, Obj_Ani_Number(A1)                       ; $001C
                move.b  #$00, (A2)
                tst.w   Obj_Inertia(A1)                                  ; $0014
                bne.s   loc_16768
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
loc_16768:
                rts
loc_1676A:
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne.s   loc_167A4
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                addi.w  #$00C0, D0
                bmi.s   loc_16786
                cmpi.w  #$0180, D0
                bcs.s   loc_167BE
loc_16786:
                bclr    #$03, Obj_Status(A1)                             ; $0022
                bclr    D6, Obj_Status(A0)                               ; $0022
                move.b  #$00, Obj_P_Flips_Remaining(A1)                  ; $002C
                move.b  #$04, Obj_Player_Flip_Speed(A1)                  ; $002D
                bset    #$01, Obj_Status(A1)                             ; $0022
                rts
loc_167A4:
                move.b  (A2), D0
                addi.b  #$20, D0
                cmpi.b  #$40, D0
                bcc.s   loc_167B6
                asr.w   Obj_Speed_Y(A1)                                  ; $0012
                bra.s   loc_16786
loc_167B6:
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
                bra.s   loc_16786
loc_167BE:
                btst    #$03, Obj_Status(A1)                             ; $0022
                beq.s   loc_16768
                move.b  (A2), D0
                bsr     Jmp_01_To_CalcSine                     ; loc_16800
                muls.w  #$2800, D1
                swap.w  D1
                move.w  Obj_Y(A0), D2                                    ; $000C
                add.w   D1, D2
                moveq   #$00, D1
                move.b  Obj_Height_2(A1), D1                             ; $0016
                subi.w  #$0013, D1
                sub.w   D1, D2
                move.w  D2, Obj_Y(A1)                                    ; $000C
                move.b  (A2), D0
                move.b  D0, Obj_Flip_Angle(A1)                           ; $0027
                addq.b  #$04, (A2)
                tst.w   Obj_Inertia(A1)                                  ; $0014
                bne.s   loc_167FC
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
loc_167FC:
                rts                                
;===============================================================================
; Object 0x06 - Invisible attribute of the spirals from Emerald Hill / Metropolis
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Jmp_01_To_CalcSine:                                            ; loc_16800
		jmp     (CalcSine)                             ; loc_3282
;-------------------------------------------------------------------------------
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj14_Seesaw:                                               ; loc_16808
;===============================================================================
; Object 0x14 - Hill Top Seesaw
; [ Begin ]
;===============================================================================
; loc_16808:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1681E(PC, D0), D1
                jsr     loc_1681E(PC, D1)
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                bra     Jmp_00_To_MarkObjGone_2                ; loc_16C86
;-------------------------------------------------------------------------------  
loc_1681E:
                dc.w    loc_1682A-loc_1681E
                dc.w    loc_16898-loc_1681E
                dc.w    loc_16954-loc_1681E
                dc.w    loc_16982-loc_1681E
                dc.w    loc_169DC-loc_1681E
                dc.w    loc_16A74-loc_1681E         
;-------------------------------------------------------------------------------    
loc_1682A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Seesaw_Mappings, Obj_Map(A0)   ; loc_16BD0, $0004
                move.w  #$03C6, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_01_To_ModifySpriteAttr_2P          ; loc_16C7A
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$30, Obj_Width(A0)                              ; $0019
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bne.s   loc_16884
                bsr     Jmp_00_To_SingleObjectLoad_2           ; loc_16C74
                bne.s   loc_16884
                move.b  #$14, Obj_Id(A1)                                 ; $0000
                addq.b  #$06, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.l  A0, Obj_Control_Var_10(A1)                       ; $003C
loc_16884:
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_16892
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
loc_16892:
                move.b  Obj_Map_Id(A0), Obj_Control_Var_0E(A0)    ; $001A, $003A  
;------------------------------------------------------------------------------- 
loc_16898:
                move.b  Obj_Control_Var_0E(A0), D1                       ; $003A
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_168F2
                moveq   #$02, D1
                lea     (Player_One).w, A1                           ; $FFFFB000
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcc.s   loc_168B8
                neg.w   D0
                moveq   #$00, D1
loc_168B8:
                cmpi.w  #$0008, D0
                bcc.s   loc_168C0
                moveq   #$01, D1
loc_168C0:
                btst    #$04, Obj_Status(A0)                             ; $0022
                beq.s   loc_1692A
                moveq   #$02, D2
                lea     (Player_Two).w, A1                           ; $FFFFB040
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcc.s   loc_168DC
                neg.w   D0
                moveq   #$00, D2
loc_168DC:
                cmpi.w  #$0008, D0
                bcc.s   loc_168E4
                moveq   #$01, D2
loc_168E4:
                add.w   D2, D1
                cmpi.w  #$0003, D1
                bne.s   loc_168EE
                addq.w  #$01, D1
loc_168EE:
                lsr.w   #$01, D1
                bra.s   loc_1692A
loc_168F2:
                btst    #$04, Obj_Status(A0)                             ; $0022
                beq.s   loc_16918
                moveq   #$02, D1
                lea     (Player_Two).w, A1                           ; $FFFFB040
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcc.s   loc_1690E
                neg.w   D0
                moveq   #$00, D1
loc_1690E:
                cmpi.w  #$0008, D0
                bcc.s   loc_1692A
                moveq   #$01, D1
                bra.s   loc_1692A
loc_16918:
                move.w  ($FFFFB012).w, D0
                move.w  ($FFFFB052).w, D2
                cmp.w   D0, D2
                blt.s   loc_16926
                move.w  D2, D0
loc_16926:
                move.w  D0, Obj_Control_Var_0C(A0)                       ; $0038
loc_1692A:
                bsr     loc_16956
                lea     (loc_16B6E), A2
                btst    #$00, Obj_Map_Id(A0)                             ; $001A
                beq.s   loc_16942
                lea     (loc_16B9F), A2
loc_16942:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                moveq   #$08, D3
                move.w  (A7)+, D4
                bra     Platform_Object_2                      ; loc_F87E
;------------------------------------------------------------------------------- 
loc_16954:
                rts
loc_16956:
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                cmp.b   D1, D0
                beq.s   loc_16980
                bcc.s   loc_16962
                addq.b  #$02, D0
loc_16962:
                subq.b  #$01, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.b  D1, Obj_Control_Var_0E(A0)                       ; $003A
                bclr    #$00, Obj_Flags(A0)                              ; $0001
                btst    #$01, Obj_Map_Id(A0)                             ; $001A
                beq.s   loc_16980
                bset    #$00, Obj_Flags(A0)                              ; $0001
loc_16980:
                rts  
;------------------------------------------------------------------------------- 
loc_16982:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Seesaw_Badnick_Mappings, Obj_Map(A0) ; loc_16C5C, $0004
                move.w  #$03DE, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_01_To_ModifySpriteAttr_2P          ; loc_16C7A
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$8B, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$0C, Obj_Width(A0)                              ; $0019
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                addi.w  #$0028, Obj_X(A0)                                ; $0008
                addi.w  #$0010, Obj_Y(A0)                                ; $000C
                move.w  Obj_Y(A0), Obj_Control_Var_08(A0)         ; $000C, $0034
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_169DC
                subi.w  #$0050, Obj_X(A0)                                ; $0008
                move.b  #$02, Obj_Control_Var_0E(A0)                     ; $003A   
;------------------------------------------------------------------------------- 
loc_169DC:
                bsr     loc_16B46
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                moveq   #$00, D0
                move.b  Obj_Control_Var_0E(A0), D0                       ; $003A
                sub.b   Obj_Control_Var_0E(A1), D0                       ; $003A
                beq.s   loc_16A36
                bcc.s   loc_169F4
                neg.b   D0
loc_169F4:
                move.w  #$F7E8, D1
                move.w  #$FEEC, D2
                cmpi.b  #$01, D0
                beq.s   loc_16A1A
                move.w  #$F510, D1
                move.w  #$FF34, D2
                cmpi.w  #$0A00, Obj_Control_Var_0C(A1)                   ; $0038
                blt.s   loc_16A1A
                move.w  #$F200, D1
                move.w  #$FF60, D2
loc_16A1A:
                move.w  D1, Obj_Speed_Y(A0)                              ; $0012
                move.w  D2, Obj_Speed(A0)                                ; $0010
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_Control_Var_04(A0), D0                       ; $0030
                bcc.s   loc_16A30
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_16A30:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bra.s   loc_16A74
loc_16A36:
                lea     (loc_16B3C), A2
                moveq   #$00, D0
                move.b  Obj_Map_Id(A1), D0                               ; $001A
                move.w  #$0028, D2
                move.w  Obj_X(A0), D1                                    ; $0008
                sub.w   Obj_Control_Var_04(A0), D1                       ; $0030
                bcc.s   loc_16A54
                neg.w   D2
                addq.w  #$02, D0
loc_16A54:
                add.w   D0, D0
                move.w  Obj_Control_Var_08(A0), D1                       ; $0034
                add.w   $00(A2, D0), D1
                move.w  D1, Obj_Y(A0)                                    ; $000C
                add.w   Obj_Control_Var_04(A0), D2                       ; $0030
                move.w  D2, Obj_X(A0)                                    ; $0008
                clr.w   $000E(A0)
                clr.w   Obj_Sub_Y(A0)                                    ; $000A
                rts       
;------------------------------------------------------------------------------- 
loc_16A74:
                bsr     loc_16B46
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bpl.s   loc_16A96
                bsr     Jmp_00_To_ObjectFall                   ; loc_16C80
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                subi.w  #$002F, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bgt.s   loc_16A94
                bsr     Jmp_00_To_ObjectFall                   ; loc_16C80
loc_16A94:
                rts
loc_16A96:
                bsr     Jmp_00_To_ObjectFall                   ; loc_16C80
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                lea     (loc_16B3C), A2
                moveq   #$00, D0
                move.b  Obj_Map_Id(A1), D0                               ; $001A
                move.w  Obj_X(A0), D1                                    ; $0008
                sub.w   Obj_Control_Var_04(A0), D1                       ; $0030
                bcc.s   loc_16AB6
                addq.w  #$02, D0
loc_16AB6:
                add.w   D0, D0
                move.w  Obj_Control_Var_08(A0), D1                       ; $0034
                add.w   $00(A2, D0), D1
                cmp.w   Obj_Y(A0), D1                                    ; $000C
                bgt.s   loc_16B0A
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                moveq   #$02, D1
                tst.w   Obj_Speed(A0)                                    ; $0010
                bmi.s   loc_16AD4
                moveq   #$00, D1
loc_16AD4:
                move.b  D1, Obj_Control_Var_0E(A1)                       ; $003A
                move.b  D1, Obj_Control_Var_0E(A0)                       ; $003A
                cmp.b   Obj_Map_Id(A1), D1                               ; $001A
                beq.s   loc_16AFE
                lea     (Player_One).w, A2                           ; $FFFFB000
                bclr    #$03, Obj_Status(A1)                             ; $0022
                beq.s   loc_16AF0
                bsr.s   loc_16B0C
loc_16AF0:
                lea     (Player_Two).w, A2                           ; $FFFFB040
                bclr    #$04, Obj_Status(A1)                             ; $0022
                beq.s   loc_16AFE
                bsr.s   loc_16B0C
loc_16AFE:
                clr.w   Obj_Speed(A0)                                    ; $0010
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_16B0A:
                rts
loc_16B0C:
                move.w  Obj_Speed_Y(A0), Obj_Speed_Y(A2)          ; $0012, $0012
                neg.w   Obj_Speed_Y(A2)                                  ; $0012
                bset    #$01, Obj_Status(A2)                             ; $0022
                bclr    #$03, Obj_Status(A2)                             ; $0022
                clr.b   Obj_Control_Var_10(A2)                           ; $003C
                move.b  #$10, Obj_Ani_Number(A2)                         ; $001C
                move.b  #$02, Obj_Routine(A2)                            ; $0024
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512   
;-------------------------------------------------------------------------------
loc_16B3C:
                dc.w    $FFF8, $FFE4, $FFD1, $FFE4, $FFF8     
;------------------------------------------------------------------------------- 
loc_16B46:
                move.b  ($FFFFFE05).w, D0
                andi.b  #$03, D0
                bne.s   loc_16B56
                bchg    #05, Obj_Art_VRAM(A0)                            ; $0002
loc_16B56:
                andi.b  #$FE, Obj_Flags(A0)                              ; $0001
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                bcs.s   loc_16B6C
                ori.b   #$01, Obj_Flags(A0)                              ; $0001
loc_16B6C:
                rts 
;------------------------------------------------------------------------------- 
loc_16B6E:  
                dc.b    $14, $14, $16, $18, $1A, $1C, $1A, $18
                dc.b    $16, $14, $13, $12, $11, $10, $0F, $0E
                dc.b    $0D, $0C, $0B, $0A, $09, $08, $07, $06
                dc.b    $05, $04, $03, $02, $01, $00, $FF, $FE
                dc.b    $FD, $FC, $FB, $FA, $F9, $F8, $F7, $F6
                dc.b    $F5, $F4, $F3, $F2, $F2, $F2, $F2, $F2
                dc.b    $F2
;------------------------------------------------------------------------------- 
loc_16B9F:    
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $05, $05, $05, $05, $05, $05, $05
                dc.b    $00
;-------------------------------------------------------------------------------
Seesaw_Mappings:                                               ; loc_16BD0
		include 'mappings/sprite/obj14_a.asm'
;-------------------------------------------------------------------------------  
Seesaw_Badnick_Mappings:                                       ; loc_16C5C
		include 'mappings/sprite/obj14_b.asm'
;===============================================================================
; Object 0x14 - Hill Top Seesaw
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_00_To_SingleObjectLoad_2:                                  ; loc_16C74
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_01_To_ModifySpriteAttr_2P:                                 ; loc_16C7A
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_00_To_ObjectFall:                                          ; loc_16C80
		jmp     (ObjectFall)                           ; loc_D1AE
Jmp_00_To_MarkObjGone_2:                                       ; loc_16C86
		jmp     (MarkObjGone_2)                        ; loc_D238
;-------------------------------------------------------------------------------
Obj16_Teleferics:                                           ; loc_16C8C
;===============================================================================
; Object 0x16 - Cable cars from Hill Top
; [ Begin ] 
;===============================================================================  
; loc_16C8C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_16C9A(PC, D0), D1
                jmp     loc_16C9A(PC, D1) 
;-------------------------------------------------------------------------------  
loc_16C9A:
                dc.w    loc_16C9E-loc_16C9A
                dc.w    loc_16CE4-loc_16C9A             
;-------------------------------------------------------------------------------   
loc_16C9E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Teleferics_Mappings, Obj_Map(A0) ; loc_16DB2, $0004
                move.w  #$43E6, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_02_To_ModifySpriteAttr_2P          ; loc_16EAA
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsl.w   #$03, D0
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034   
;-------------------------------------------------------------------------------  
loc_16CE4:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_16D00
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                move.w  #$FFD8, D3
                move.w  (A7)+, D4
                bsr     Platform_Object                        ; loc_F82C
                bra     Jmp_02_To_MarkObjGone                  ; loc_16E9E
loc_16D00:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_16D0E(PC, D0), D1
                jmp     loc_16D0E(PC, D1)                    
;-------------------------------------------------------------------------------
loc_16D0E:
                dc.w    loc_16D14-loc_16D0E
                dc.w    loc_16D3C-loc_16D0E
                dc.w    loc_16D96-loc_16D0E       
;-------------------------------------------------------------------------------  
loc_16D14:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_16D3A
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$0200, Obj_Speed(A0)                            ; $0010
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_16D34
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_16D34:
                move.w  #$0100, Obj_Speed_Y(A0)                          ; $0012
loc_16D3A:
                rts  
;-------------------------------------------------------------------------------  
loc_16D3C:
                move.w  ($FFFFFE04).w, D0
                andi.w  #$000F, D0
                bne.s   loc_16D50
                move.w  #$00E4, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_16D50:
                bsr     Jmp_00_To_SpeedToPos                   ; loc_16EB0
                subq.w  #$01, Obj_Control_Var_08(A0)                     ; $0034
                bne.s   loc_16D94
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                bsr     Jmp_01_To_SingleObjectLoad_2           ; loc_16EA4
                bne.s   loc_16D94
                move.b  #$1C, Obj_Id(A1)                                 ; $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  #$06, Obj_Subtype(A1)                            ; $0028
loc_16D94:
                rts        
;-------------------------------------------------------------------------------  
loc_16D96:
                bsr     Jmp_00_To_SpeedToPos                   ; loc_16EB0
                addi.w  #$0038, Obj_Speed_Y(A0)                          ; $0012
                move.w  (Sonic_Level_Limits_Max_Y).w, D0             ; $FFFFEECE
                addi.w  #$00E0, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcs     Jmp_03_To_DeleteObject                 ; loc_16E98
                rts               
;-------------------------------------------------------------------------------
Teleferics_Mappings:
		include 'mappings/sprite/obj16.asm'
;===============================================================================
; Object 0x16 - Cable cars from Hill Top
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_03_To_DeleteObject:                                        ; loc_16E98
		jmp     (DeleteObject)                         ; loc_D314
Jmp_02_To_MarkObjGone:                                         ; loc_16E9E
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_01_To_SingleObjectLoad_2:                                  ; loc_16EA4
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_02_To_ModifySpriteAttr_2P:                                 ; loc_16EAA
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_00_To_SpeedToPos:                                          ; loc_16EB0
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj19_Rotating_Platforms:                                   ; loc_16EB8
;===============================================================================
; Object 0x19 - Platformas rotatórias - Oil Ocean...
; [ Begin ] 
;===============================================================================  
; loc_16EB8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_16EC6(PC, D0), D1
                jmp     loc_16EC6(PC, D1)  
;-------------------------------------------------------------------------------
loc_16EC6:
                dc.w    loc_16ED4-loc_16EC6
                dc.w    loc_16F3C-loc_16EC6    
;-------------------------------------------------------------------------------
loc_16ECA:
                dc.b    $20, $00
                dc.b    $18, $01
                dc.b    $40, $02
                dc.b    $40, $03
                dc.b    $30, $04
;------------------------------------------------------------------------------- 
loc_16ED4:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Rotating_Platforms_Mappings, Obj_Map(A0) ; loc_170AE, $0004
                move.w  #$63A0, Obj_Art_VRAM(A0)                         ; $0002
                cmpi.b  #$0A, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_16EF4
                move.w  #$62F4, Obj_Art_VRAM(A0)                         ; $0002
loc_16EF4:
                bsr     Jmp_03_To_ModifySpriteAttr_2P          ; loc_17108
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$03, D0
                andi.w  #$001E, D0
                lea     loc_16ECA(PC, D0), A2
                move.b  (A2)+, Obj_Width(A0)                             ; $0019
                move.b  (A2)+, Obj_Map_Id(A0)                            ; $001A
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                andi.b  #$0F, Obj_Subtype(A0)                            ; $0028
                cmpi.b  #$07, Obj_Subtype(A0)                            ; $0028
                bne.s   loc_16F3C
                subi.w  #$00C0, Obj_Y(A0)                                ; $000C  
;------------------------------------------------------------------------------- 
loc_16F3C:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_16F6C
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                move.w  #$0010, D3
                move.w  (A7)+, D4
                bsr     Platform_Object                        ; loc_F82C
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Jmp_04_To_DeleteObject                 ; loc_17102
                bra     Jmp_03_To_DisplaySprite                ; loc_170FC
loc_16F6C:
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                add.w   D0, D0
                move.w  loc_16F80(PC, D0), D1
                jmp     loc_16F80(PC, D1)           
;-------------------------------------------------------------------------------
loc_16F80:
                dc.w    loc_16FA0-loc_16F80
                dc.w    loc_16FAA-loc_16F80
                dc.w    loc_16FCA-loc_16F80
                dc.w    loc_16FEA-loc_16F80
                dc.w    loc_16FFA-loc_16F80
                dc.w    loc_1701A-loc_16F80
                dc.w    loc_1701C-loc_16F80
                dc.w    loc_1701C-loc_16F80
                dc.w    loc_17038-loc_16F80
                dc.w    loc_17038-loc_16F80
                dc.w    loc_17038-loc_16F80
                dc.w    loc_17038-loc_16F80
                dc.w    loc_17072-loc_16F80
                dc.w    loc_17072-loc_16F80
                dc.w    loc_17072-loc_16F80
                dc.w    loc_17072-loc_16F80  
;-------------------------------------------------------------------------------  
loc_16FA0:
                move.b  ($FFFFFE68).w, D0
                move.w  #$0040, D1
                bra.s   loc_16FB2   
;-------------------------------------------------------------------------------  
loc_16FAA:
                move.b  ($FFFFFE6C).w, D0
                move.w  #$0060, D1
loc_16FB2:
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_16FBE
                neg.w   D0
                add.w   D1, D0
loc_16FBE:
                move.w  Obj_Control_Var_04(A0), D1                       ; $0030
                sub.w   D0, D1
                move.w  D1, Obj_X(A0)                                    ; $0008
                rts           
;-------------------------------------------------------------------------------  
loc_16FCA:
                move.b  ($FFFFFE7C).w, D0
                move.w  #$0080, D1
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_16FDE
                neg.w   D0
                add.w   D1, D0
loc_16FDE:
                move.w  Obj_Control_Var_06(A0), D1                       ; $0032
                sub.w   D0, D1
                move.w  D1, Obj_Y(A0)                                    ; $000C
                rts     
;-------------------------------------------------------------------------------  
loc_16FEA:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_16FF8
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
loc_16FF8:
                rts    
;-------------------------------------------------------------------------------  
loc_16FFA:
                bsr     Jmp_01_To_SpeedToPos                   ; loc_1710E
                moveq   #$08, D1
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                subi.w  #$0060, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcc.s   loc_17010
                neg.w   D1
loc_17010:
                add.w   D1, Obj_Speed_Y(A0)                              ; $0012
                bne.s   loc_1701A
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028 
;-------------------------------------------------------------------------------  
loc_1701A:
                rts       
;-------------------------------------------------------------------------------  
loc_1701C:
                bsr     Jmp_01_To_SpeedToPos                   ; loc_1710E
                moveq   #$08, D1
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                subi.w  #$0060, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcc.s   loc_17032
                neg.w   D1
loc_17032:
                add.w   D1, Obj_Speed_Y(A0)                              ; $0012
                rts          
;-------------------------------------------------------------------------------  
loc_17038:
                move.b  ($FFFFFE98).w, D1
                subi.b  #$40, D1
                ext.w   D1
                move.b  ($FFFFFE9C).w, D2
                subi.b  #$40, D2
                ext.w   D2
                btst    #$02, D0
                beq.s   loc_17056
                neg.w   D1
                neg.w   D2
loc_17056:
                btst    #$01, D0
                beq.s   loc_17060
                neg.w   D1
                exg.l   D1, D2
loc_17060:
                add.w   Obj_Control_Var_04(A0), D1                       ; $0030
                move.w  D1, Obj_X(A0)                                    ; $0008
                add.w   Obj_Control_Var_06(A0), D2                       ; $0032
                move.w  D2, Obj_Y(A0)                                    ; $000C
                rts     
;-------------------------------------------------------------------------------  
loc_17072:
                move.b  ($FFFFFE98).w, D1
                subi.b  #$40, D1
                ext.w   D1
                move.b  ($FFFFFE9C).w, D2
                subi.b  #$40, D2
                ext.w   D2
                btst    #$02, D0
                beq.s   loc_17090
                neg.w   D1
                neg.w   D2
loc_17090:
                btst    #$01, D0
                beq.s   loc_1709A
                neg.w   D1
                exg.l   D1, D2
loc_1709A:
                neg.w   D1
                add.w   Obj_Control_Var_04(A0), D1                       ; $0030
                move.w  D1, Obj_X(A0)                                    ; $0008
                add.w   Obj_Control_Var_06(A0), D2                       ; $0032
                move.w  D2, Obj_Y(A0)                                    ; $000C
                rts             
;-------------------------------------------------------------------------------
Rotating_Platforms_Mappings:                                   ; loc_170AE
                include 'mappings/sprite/obj19.asm'               
;===============================================================================
; Object 0x19 - Platformas rotatórias - Oil Ocean...
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_03_To_DisplaySprite:                                       ; loc_170FC
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_04_To_DeleteObject:                                        ; loc_17102
		jmp     (DeleteObject)                         ; loc_D314
Jmp_03_To_ModifySpriteAttr_2P:                                 ; loc_17108
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_01_To_SpeedToPos:                                          ; loc_1710E
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj1B_Speed_Booster:                                        ; loc_17114
;===============================================================================
; Object 0x1B - Propulsor autom tico na Chemical Plant
; [ Begin ] 
;===============================================================================  
; loc_17114:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_17122(PC, D0), D1
                jmp     loc_17122(PC, D1)  
;-------------------------------------------------------------------------------
loc_17122:
                dc.w    loc_1712A-loc_17122
                dc.w    loc_17160-loc_17122
;-------------------------------------------------------------------------------                
loc_17126:
                dc.w    $1000, $0A00
;-------------------------------------------------------------------------------
loc_1712A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #CPz_Speed_Booster_Mappings, Obj_Map(A0) ; loc_17244, $0004
                move.w  #$E39C, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_04_To_ModifySpriteAttr_2P          ; loc_17266
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$0002, D0
                move.w  loc_17126(PC, D0), Obj_Control_Var_04(A0)  ; $0030 
;-------------------------------------------------------------------------------
loc_17160:
                move.b  ($FFFFFE05).w, D0
                andi.b  #$02, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.w  Obj_X(A0), D0                                    ; $0008
                move.w  D0, D1
                subi.w  #$0010, D0
                addi.w  #$0010, D1
                move.w  Obj_Y(A0), D2                                    ; $000C
                move.w  D2, D3
                subi.w  #$0010, D2
                addi.w  #$0010, D3
                lea     (Player_One).w, A1                           ; $FFFFB000
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne.s   loc_171BC
                move.w  Obj_X(A1), D4                                    ; $0008
                cmp.w   D0, D4
                bcs     loc_171BC
                cmp.w   D1, D4
                bcc     loc_171BC
                move.w  Obj_Y(A1), D4                                    ; $000C
                cmp.w   D2, D4
                bcs     loc_171BC
                cmp.w   D3, D4
                bcc     loc_171BC
                move.w  D0, -(A7)
                bsr     loc_171F0
                move.w  (A7)+, D0
loc_171BC:
                lea     (Player_Two).w, A1                           ; $FFFFB040
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne.s   loc_171EC
                move.w  Obj_X(A1), D4                                    ; $0008
                cmp.w   D0, D4
                bcs     loc_171EC
                cmp.w   D1, D4
                bcc     loc_171EC
                move.w  Obj_Y(A1), D4                                    ; $000C
                cmp.w   D2, D4
                bcs     loc_171EC
                cmp.w   D3, D4
                bcc     loc_171EC
                bsr     loc_171F0
loc_171EC:
                bra     Jmp_03_To_MarkObjGone                  ; loc_17260
loc_171F0:
                move.w  Obj_Speed(A1), D0                                ; $0010
                bpl.s   loc_171F8
                neg.w   D0
loc_171F8:
                cmpi.w  #$1000, D0
                bcc.s   loc_1723A
                move.w  Obj_Control_Var_04(A0), Obj_Speed(A1)     ; $0010, $0030
                bclr    #$00, Obj_Status(A1)                             ; $0022
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1721C
                bset    #$00, Obj_Status(A1)                             ; $0022
                neg.w   Obj_Speed(A1)                                    ; $0010
loc_1721C:
                move.w  #$000F, Obj_Control_Var_02(A1)                   ; $002E
                move.w  Obj_Speed(A1), Obj_Inertia(A1)            ; $0010, $0014
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$06, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
loc_1723A:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512   
;-------------------------------------------------------------------------------
CPz_Speed_Booster_Mappings:                                    ; loc_17244
                include 'mappings/sprite/obj1B.asm'                
;===============================================================================
; Object 0x1B - Propulsor autom tico na Chemical Plant
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
		nop
Jmp_03_To_MarkObjGone:                                         ; loc_17260
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_04_To_ModifySpriteAttr_2P:                                 ; loc_17266
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
;-------------------------------------------------------------------------------
Obj1D_Worms:                                                ; loc_1726C
;===============================================================================
; Object 0x1D - Inimigo Verme na Chemical Plant
; [ Begin ]
;===============================================================================  
; loc_1726C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1727A(PC, D0), D1
                jmp     loc_1727A(PC, D1)
;-------------------------------------------------------------------------------
loc_1727A:
                dc.w    loc_1728C-loc_1727A
                dc.w    loc_1733A-loc_1727A
                dc.w    loc_17358-loc_1727A
                dc.w    loc_1733A-loc_1727A
                dc.w    loc_1738C-loc_1727A     
;-------------------------------------------------------------------------------
loc_17284:
                dc.w    $FB80, $FB00, $FA00, $F900        
;-------------------------------------------------------------------------------
loc_1728C:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$FB80, Obj_Speed_Y(A0)                          ; $0012
                moveq   #$00, D1
                move.b  Obj_Subtype(A0), D1                              ; $0028
                move.b  D1, D0
                andi.b  #$0F, D1
                moveq   #$02, D5
                andi.b  #$F0, D0
                beq.s   loc_172AC
                moveq   #$06, D5
loc_172AC:
                move.b  Obj_Status(A0), D4                               ; $0022
                moveq   #$00, D2
                move.l  A0, A1
                bra.s   loc_172BC    
;-------------------------------------------------------------------------------
loc_172B6:
                bsr     Jmp_02_To_SingleObjectLoad_2           ; loc_173D2
                bne.s   loc_17334  
;-------------------------------------------------------------------------------
loc_172BC:
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.b  D5, Obj_Routine(A1)                              ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.l  #Worms_Mappings, Obj_Map(A1)    ; loc_173BE, $0004
                move.w  #$643C, Obj_Art_VRAM(A1)                         ; $0002
                bsr     Jmp_00_To_ModifySpriteAttr_2P_A1       ; loc_173D8
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$8B, Obj_Col_Flags(A1)                          ; $0020
                move.w  Obj_X(A1), Obj_Control_Var_0C(A1)         ; $0008, $0038
                move.w  Obj_Y(A1), Obj_Control_Var_04(A1)         ; $000C, $0030
                move.w  Obj_Speed_Y(A0), Obj_Speed_Y(A1)          ; $0012, $0012
                move.w  Obj_Speed_Y(A1), Obj_Control_Var_08(A1)   ; $0012, $0034
                move.b  #$08, Obj_Width(A1)                              ; $0019
                move.w  #$0060, Obj_Control_Var_0E(A1)                   ; $003A
                move.w  #$000B, Obj_Control_Var_0A(A1)                   ; $0036
                andi.b  #$01, D4
                beq.s   loc_1732E
                neg.w   Obj_Control_Var_0A(A1)                           ; $0036
                neg.w   Obj_Control_Var_0E(A1)                           ; $003A
loc_1732E:
                move.w  D2, Obj_Control_Var_06(A1)                       ; $0032
                addq.w  #$03, D2
loc_17334:
                dbra    D1, loc_172B6
                rts     
;-------------------------------------------------------------------------------
loc_1733A:
                subq.w  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bpl.s   loc_17354
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$003B, Obj_Control_Var_06(A0)                   ; $0032
                move.w  #$00DA, D0
                jsr     (Play_Sfx_Ex)                          ; loc_151E
loc_17354:
                bra     Jmp_04_To_MarkObjGone                  ; loc_173CC   
;-------------------------------------------------------------------------------
loc_17358:
                bsr     Jmp_02_To_SpeedToPos                   ; loc_173DE
                move.w  Obj_Control_Var_0A(A0), D0                       ; $0036
                add.w   D0, Obj_Speed(A0)                                ; $0010
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                bne.s   loc_17370
                neg.w   Obj_Control_Var_0A(A0)                           ; $0036
loc_17370:
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bhi.s   loc_17388
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
                clr.w   Obj_Speed(A0)                                    ; $0010
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_17388:
                bra     Jmp_04_To_MarkObjGone                  ; loc_173CC     
;-------------------------------------------------------------------------------
loc_1738C:
                bsr     Jmp_02_To_SpeedToPos                   ; loc_173DE
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                bne.s   loc_173A4
                move.w  Obj_Control_Var_0E(A0), D0                       ; $003A
                add.w   Obj_Control_Var_0C(A0), D0                       ; $0038
                move.w  D0, Obj_X(A0)                                    ; $0008
loc_173A4:
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bhi.s   loc_173BA
                move.w  Obj_Control_Var_08(A0), Obj_Speed_Y(A0)   ; $0012, $0034
                move.w  Obj_Control_Var_0C(A0), Obj_X(A0)         ; $0008, $0038
loc_173BA:
                bra     Jmp_04_To_MarkObjGone                  ; loc_173CC          
;-------------------------------------------------------------------------------
Worms_Mappings:                                                ; loc_173BE
		include 'mappings/sprite/obj1D.asm'               
;===============================================================================
; Object 0x1D - Inimigo Verme na Chemical Plant
; [ End ]
;===============================================================================		
;-------------------------------------------------------------------------------
		nop
Jmp_04_To_MarkObjGone:                                         ; loc_173CC
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_02_To_SingleObjectLoad_2:                                  ; loc_173D2
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_00_To_ModifySpriteAttr_2P_A1:                              ; loc_173D8
		jmp     (ModifySpriteAttr_2P_A1)               ; loc_DBDA
Jmp_02_To_SpeedToPos:                                          ; loc_173DE
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj1E_Tube_Attributes:                                      ; loc_173E4
;===============================================================================
; Object 0x1E - Atributo teletransportador dos tubos na Chemical Plant
; [ Begin ] 
;===============================================================================
; loc_173E4:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_17400(PC, D0), D1
                jsr     loc_17400(PC, D1)
                move.b  Obj_Control_Var_00(A0), D0                       ; $002C
                add.b   Obj_Control_Var_0A(A0), D0                       ; $0036
                beq     Jmp_00_To_MarkObjGone_3                ; loc_17E2C
                rts
;------------------------------------------------------------------------------- 
loc_17400:
                dc.w    loc_1740A-loc_17400
                dc.w    loc_1741E-loc_17400                
;------------------------------------------------------------------------------- 
loc_17404:
                dc.w    $00A0, $0100, $0120            
;-------------------------------------------------------------------------------
loc_1740A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  Obj_Subtype(A0), D0                              ; $0028
                add.w   D0, D0
                andi.w  #$0006, D0
                move.w  loc_17404(PC, D0), Obj_Timer(A0)           ; $002A  
;-------------------------------------------------------------------------------
loc_1741E:
                lea     (Player_One).w, A1                           ; $FFFFB000
                lea     Obj_Control_Var_00(A0), A4                       ; $002C
                bsr.s   loc_17430
                lea     (Player_Two).w, A1                           ; $FFFFB040
                lea     Obj_Control_Var_0A(A0), A4                       ; $0036
loc_17430:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  loc_1743C(PC, D0), D0
                jmp     loc_1743C(PC, D0)      
;------------------------------------------------------------------------------- 
loc_1743C:
                dc.w    loc_17444-loc_1743C
                dc.w    loc_17558-loc_1743C
                dc.w    loc_1763C-loc_1743C
                dc.w    loc_176A8-loc_1743C     
;-------------------------------------------------------------------------------  
loc_17444:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne     loc_17556
                move.w  Obj_Timer(A0), D2                                ; $002A
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                cmp.w   D2, D0
                bcc     loc_17556
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                cmpi.w  #$0080, D1
                bcc     loc_17556
                moveq   #$00, D3
                cmpi.w  #$00A0, D2
                beq.s   loc_17486
                moveq   #$08, D3
                cmpi.w  #$0120, D2
                beq.s   loc_17486
                moveq   #$04, D3
                neg.w   D0
                addi.w  #$0100, D0
loc_17486:
                cmpi.w  #$0080, D0
                bcs.s   loc_174BC
                moveq   #$00, D2
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$02, D0
                andi.w  #$000F, D0
                move.b  loc_174AC(PC, D0), D2
                cmpi.b  #$02, D2
                bne.s   loc_174C6
                move.b  (Time_Count_Seconds).w, D2                   ; $FFFFFE24
                andi.b  #$01, D2
                bra.s   loc_174C6
;-------------------------------------------------------------------------------
loc_174AC:
                dc.b    $02, $02, $02, $02, $02, $02, $02, $02
                dc.b    $02, $02, $00, $02, $00, $01, $02, $01    
;-------------------------------------------------------------------------------  
loc_174BC:
                moveq   #$02, D2
                cmpi.w  #$0040, D1
                bcc.s   loc_174C6
                moveq   #$03, D2
loc_174C6:
                move.b  D2, $0001(A4) 
                add.w   D3, D2
                add.w   D2, D2
                andi.w  #$001E, D2
                lea     loc_177BE(PC), A2
                adda.w  $00(A2, D2), A2
                move.w  (A2)+, $0004(A4) 
                subq.w  #$04, $0004(A4) 
                move.w  (A2)+, D4
                add.w   Obj_X(A0), D4                                    ; $0008
                move.w  D4, Obj_X(A1)                                    ; $0008
                move.w  (A2)+, D5
                add.w   Obj_Y(A0), D5                                    ; $000C
                move.w  D5, Obj_Y(A1)                                    ; $000C
                move.l  A2, $0006(A4)
                move.w  (A2)+, D4
                add.w   Obj_X(A0), D4                                    ; $0008
                move.w  (A2)+, D5
                add.w   Obj_Y(A0), D5                                    ; $000C
                addq.b  #$02, (A4)
                move.b  #$81, Obj_Timer(A1)                              ; $002A
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.w  #$0800, Obj_Inertia(A1)                          ; $0014
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
                bset    #$01, Obj_Status(A1)                             ; $0022
                move.b  #$00, Obj_Control_Var_10(A1)                     ; $003C
                bclr    #$07, Obj_Art_VRAM(A1)                           ; $0002
                move.w  #$0800, D2
                bsr     loc_17740
                move.w  #$00BE, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_17556:
                rts        
;------------------------------------------------------------------------------- 
loc_17558:
                subq.b  #$01, $0002(A4) 
                bpl.s   loc_1759C
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                add.w   Obj_X(A0), D4                                    ; $0008
                move.w  D4, Obj_X(A1)                                    ; $0008
                move.w  (A2)+, D5
                add.w   Obj_Y(A0), D5                                    ; $000C
                move.w  D5, Obj_Y(A1)                                    ; $000C
                tst.b   $0001(A4) 
                bpl.s   loc_1757E
                subq.w  #$08, A2
loc_1757E:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4) 
                beq.s   loc_175C2
                move.w  (A2)+, D4
                add.w   Obj_X(A0), D4                                    ; $0008
                move.w  (A2)+, D5
                add.w   Obj_Y(A0), D5                                    ; $000C
                move.w  #$0800, D2
                bra     loc_17740
loc_1759C:
                move.l  Obj_X(A1), D2                                    ; $0008
                move.l  Obj_Y(A1), D3                                    ; $000C
                move.w  Obj_Speed(A1), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  Obj_Speed_Y(A1), D0                              ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, Obj_X(A1)                                    ; $0008
                move.l  D3, Obj_Y(A1)                                    ; $000C
                rts
loc_175C2:
                cmpi.b  #$04, $0001(A4) 
                bcc.s   loc_175E4
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$00FC, D0
                add.b   $0001(A4), D0 
                move.b  #$04, $0001(A4) 
                move.b  loc_175FC(PC, D0), D0
                bne     loc_176D0
loc_175E4:
                andi.w  #$07FF, Obj_Y(A1)                                ; $000C
                move.b  #$06, (A4)
                clr.b   Obj_Timer(A1)                                    ; $002A
                move.w  #$00BC, D0
                jmp     (Play_Sfx)                             ; loc_1512   
;-------------------------------------------------------------------------------
loc_175FC:
                dc.b    $02, $01, $00, $00, $FF, $03, $00, $00
                dc.b    $04, $FE, $00, $00, $FD, $FC, $00, $00
                dc.b    $FB, $FB, $00, $00, $07, $06, $00, $00
                dc.b    $F9, $FA, $00, $00, $08, $09, $00, $00
                dc.b    $F8, $F7, $00, $00, $0B, $0A, $00, $00
                dc.b    $0C, $00, $00, $00, $F5, $F6, $00, $00
                dc.b    $F4, $00, $00, $00, $00, $0D, $00, $00
                dc.b    $F3, $0E, $00, $00, $00, $F2, $00, $00   
;-------------------------------------------------------------------------------   
loc_1763C:
                subq.b  #$01, $0002(A4) 
                bpl.s   loc_17670
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                move.w  D4, Obj_X(A1)                                    ; $0008
                move.w  (A2)+, D5
                move.w  D5, Obj_Y(A1)                                    ; $000C
                tst.b   $0001(A4) 
                bpl.s   loc_1765A
                subq.w  #$08, A2
loc_1765A:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4) 
                beq.s   loc_17696
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$0800, D2
                bra     loc_17740
loc_17670:
                move.l  Obj_X(A1), D2                                    ; $0008
                move.l  Obj_Y(A1), D3                                    ; $000C
                move.w  Obj_Speed(A1), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  Obj_Speed_Y(A1), D0                              ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, Obj_X(A1)                                    ; $0008
                move.l  D3, Obj_Y(A1)                                    ; $000C
                rts
loc_17696:
                andi.w  #$07FF, Obj_Y(A1)                                ; $000C
                clr.b   (A4)
                move.w  #$00BC, D0
                jmp     (Play_Sfx)                             ; loc_1512 
;------------------------------------------------------------------------------- 
loc_176A8:
                move.w  Obj_Timer(A0), D2                                ; $002A
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                cmp.w   D2, D0
                bcc     loc_176CC
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                cmpi.w  #$0080, D1
                bcc     loc_176CC
                rts
loc_176CC:
                clr.b   (A4)
                rts
loc_176D0:
                bpl.s   loc_17702
                neg.b   D0
                move.b  #$FC, $0001(A4) 
                add.w   D0, D0
                lea     (loc_17CC6), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D0
                subq.w  #$04, D0
                move.w  D0, $0004(A4) 
                lea     $00(A2, D0), A2
                move.w  (A2)+, D4
                move.w  D4, Obj_X(A1)                                    ; $0008
                move.w  (A2)+, D5
                move.w  D5, Obj_Y(A1)                                    ; $000C
                subq.w  #$08, A2
                bra.s   loc_17722
loc_17702:
                add.w   D0, D0
                lea     (loc_17CC6), A2
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, $0004(A4) 
                subq.w  #$04, $0004(A4) 
                move.w  (A2)+, D4
                move.w  D4, Obj_X(A1)                                    ; $0008
                move.w  (A2)+, D5
                move.w  D5, Obj_Y(A1)                                    ; $000C
loc_17722:
                move.l  A2, $0006(A4)
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$0800, D2
                bsr     loc_17740
                move.w  #$00BE, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addq.b  #$02, (A4)
                rts
loc_17740:
                moveq   #$00, D0
                move.w  D2, D3
                move.w  D4, D0
                sub.w   Obj_X(A1), D0                                    ; $0008
                bge.s   loc_17750
                neg.w   D0
                neg.w   D2
loc_17750:
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   Obj_Y(A1), D1                                    ; $000C
                bge.s   loc_1775E
                neg.w   D1
                neg.w   D3
loc_1775E:
                cmp.w   D0, D1
                bcs.s   loc_17790
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   Obj_Y(A1), D1                                    ; $000C
                swap.w  D1
                divs.w  D3, D1
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   Obj_X(A1), D0                                    ; $0008
                beq.s   loc_1777C
                swap.w  D0
                divs.w  D1, D0
loc_1777C:
                move.w  D0, Obj_Speed(A1)                                ; $0010
                move.w  D3, Obj_Speed_Y(A1)                              ; $0012
                tst.w   D1
                bpl.s   loc_1778A
                neg.w   D1
loc_1778A:
                move.w  D1, Obj_Art_VRAM(A4)                             ; $0002
                rts
loc_17790:
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   Obj_X(A1), D0                                    ; $0008
                swap.w  D0
                divs.w  D2, D0
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   Obj_Y(A1), D1                                    ; $000C
                beq.s   loc_177AA
                swap.w  D1
                divs.w  D0, D1
loc_177AA:
                move.w  D1, Obj_Speed_Y(A1)                              ; $0012
                move.w  D2, Obj_Speed(A1)                                ; $0010
                tst.w   D0
                bpl.s   loc_177B8
                neg.w   D0
loc_177B8:
                move.w  D0, $0002(A4) 
                rts  
;-------------------------------------------------------------------------------
loc_177BE:
                dc.w    loc_177D6-loc_177BE
                dc.w    loc_1784C-loc_177BE
                dc.w    loc_178AA-loc_177BE
                dc.w    loc_17920-loc_177BE
                dc.w    loc_1797E-loc_177BE
                dc.w    loc_179F0-loc_177BE
                dc.w    loc_17A4E-loc_177BE
                dc.w    loc_17AC0-loc_177BE
                dc.w    loc_17B1E-loc_177BE
                dc.w    loc_17B94-loc_177BE
                dc.w    loc_17BF2-loc_177BE
                dc.w    loc_17C68-loc_177BE
loc_177D6:
                dc.w    $0074, $0090, $0010, $0090, $0070, $0040, $0070, $0035
                dc.w    $006F, $0028, $006A, $001E, $0062, $0015, $0058, $0011
                dc.w    $004A, $0010, $0040, $0011, $0035, $0015, $0027, $001E
                dc.w    $001E, $0028, $0015, $0035, $0011, $0040, $0010, $0050
                dc.w    $0010, $005E, $0012, $0068, $0018, $006D, $0024, $0070
                dc.w    $0030, $006D, $003D, $0068, $0048, $005E, $004E, $0050
                dc.w    $0050, $0030, $0050, $0022, $0052, $0017, $005A, $0011
                dc.w    $0063, $0010, $0070
loc_1784C:
                dc.w    $005C, $0090, $0010, $0090, $0070, $0040, $0070, $002E
                dc.w    $006E, $001D, $0062, $0013, $0053, $0010, $0040, $0013
                dc.w    $002D, $001D, $001E, $002E, $0013, $0040, $0010, $0058
                dc.w    $0010, $0064, $0014, $006C, $001A, $0070, $0028, $006C
                dc.w    $0036, $0064, $003C, $0058, $0040, $004B, $003D, $0040
                dc.w    $0038, $0036, $0032, $0028, $0030, $0010, $0030
loc_178AA:
                dc.w    $0074, $0010, $0070, $0011, $0063, $0017, $005A, $0022
                dc.w    $0052, $0030, $0050, $0050, $0050, $005E, $004E, $0068
                dc.w    $0048, $006D, $003D, $0070, $0030, $006D, $0024, $0068
                dc.w    $0018, $005E, $0012, $0050, $0010, $0040, $0010, $0035
                dc.w    $0011, $0028, $0015, $001E, $001E, $0015, $0027, $0011
                dc.w    $0035, $0010, $0040, $0011, $004A, $0015, $0058, $001E
                dc.w    $0062, $0028, $006A, $0035, $006F, $0040, $0070, $0090
                dc.w    $0070, $0090, $0010
loc_17920:
                dc.w    $005C, $0010, $0030, $0028, $0030, $0036, $0032, $0040
                dc.w    $0038, $004B, $003D, $0058, $0040, $0064, $003C, $006C
                dc.w    $0036, $0070, $0028, $006C, $001A, $0064, $0014, $0058
                dc.w    $0010, $0040, $0010, $002E, $0013, $001D, $001E, $0013
                dc.w    $002D, $0010, $0040, $0013, $0053, $001D, $0062, $002E
                dc.w    $006E, $0040, $0070, $0090, $0070, $0090, $0010
loc_1797E:
                dc.w    $0070, $0010, $0010, $0010, $0070, $00C0, $0070, $00CA
                dc.w    $006F, $00D4, $006C, $00DB, $0068, $00E3, $0062, $00E8
                dc.w    $005A, $00ED, $0052, $00EF, $0048, $00F0, $0040, $00EF
                dc.w    $0036, $00ED, $002E, $00E8, $0026, $00E3, $001E, $00DB
                dc.w    $0017, $00D4, $0014, $00CA, $0012, $00C0, $0010, $00B7
                dc.w    $0011, $00AF, $0012, $00A6, $0017, $009E, $001E, $0097
                dc.w    $0026, $0093, $002E, $0091, $0036, $0090, $0040, $0090
                dc.w    $0070
loc_179F0:
                dc.w    $005C, $0010, $0010, $0010, $0070, $00C0, $0070, $00D2
                dc.w    $006E, $00E3, $0062, $00ED, $0053, $00F0, $0040, $00ED
                dc.w    $002D, $00E3, $001E, $00D2, $0013, $00C0, $0010, $00A8
                dc.w    $0010, $009C, $0014, $0094, $001A, $0090, $0028, $0094
                dc.w    $0036, $009C, $003C, $00A8, $0040, $00B5, $003D, $00C0
                dc.w    $0038, $00CA, $0032, $00D8, $0030, $00F0, $0030
loc_17A4E:
                dc.w    $0070, $0090, $0070, $0090, $0040, $0091, $0036, $0093
                dc.w    $002E, $0097, $0026, $009E, $001E, $00A6, $0017, $00AF
                dc.w    $0012, $00B7, $0011, $00C0, $0010, $00CA, $0012, $00D4
                dc.w    $0014, $00DB, $0017, $00E3, $001E, $00E8, $0026, $00ED
                dc.w    $002E, $00EF, $0036, $00F0, $0040, $00EF, $0048, $00ED
                dc.w    $0052, $00E8, $005A, $00E3, $0062, $00DB, $0068, $00D4
                dc.w    $006C, $00CA, $006F, $00C0, $0070, $0010, $0070, $0010
                dc.w    $0010
loc_17AC0:
                dc.w    $005C, $00F0, $0030, $00D8, $0030, $00CA, $0032, $00C0
                dc.w    $0038, $00B5, $003D, $00A8, $0040, $009C, $003C, $0094
                dc.w    $0036, $0090, $0028, $0094, $001A, $009C, $0014, $00A8
                dc.w    $0010, $00C0, $0010, $00D2, $0013, $00E3, $001E, $00ED
                dc.w    $002D, $00F0, $0040, $00ED, $0053, $00E3, $0062, $00D2
                dc.w    $006E, $00C0, $0070, $0010, $0070, $0010, $0010
loc_17B1E:
                dc.w    $0074, $0110, $0010, $0110, $0070, $0040, $0070, $0035
                dc.w    $006F, $0028, $006A, $001E, $0062, $0015, $0058, $0011
                dc.w    $004A, $0010, $0040, $0011, $0035, $0015, $0027, $001E
                dc.w    $001E, $0028, $0015, $0035, $0011, $0040, $0010, $0050
                dc.w    $0010, $005E, $0012, $0068, $0018, $006D, $0024, $0070
                dc.w    $0030, $006D, $003D, $0068, $0048, $005E, $004E, $0050
                dc.w    $0050, $0030, $0050, $0022, $0052, $0017, $005A, $0011
                dc.w    $0063, $0010, $0070
loc_17B94:
                dc.w    $005C, $0110, $0010, $0110, $0070, $0040, $0070, $002E
                dc.w    $006E, $001D, $0062, $0013, $0053, $0010, $0040, $0013
                dc.w    $002D, $001D, $001E, $002E, $0013, $0040, $0010, $0058
                dc.w    $0010, $0064, $0014, $006C, $001A, $0070, $0028, $006C
                dc.w    $0036, $0064, $003C, $0058, $0040, $004B, $003D, $0040
                dc.w    $0038, $0036, $0032, $0028, $0030, $0010, $0030
loc_17BF2:
                dc.w    $0074, $0010, $0070, $0011, $0063, $0017, $005A, $0022
                dc.w    $0052, $0030, $0050, $0050, $0050, $005E, $004E, $0068
                dc.w    $0048, $006D, $003D, $0070, $0030, $006D, $0024, $0068
                dc.w    $0018, $005E, $0012, $0050, $0010, $0040, $0010, $0035
                dc.w    $0011, $0028, $0015, $001E, $001E, $0015, $0027, $0011
                dc.w    $0035, $0010, $0040, $0011, $004A, $0015, $0058, $001E
                dc.w    $0062, $0028, $006A, $0035, $006F, $0040, $0070, $0110
                dc.w    $0070, $0110, $0010
loc_17C68:
                dc.w    $005C, $0010, $0030, $0028, $0030, $0036, $0032, $0040
                dc.w    $0038, $004B, $003D, $0058, $0040, $0064, $003C, $006C
                dc.w    $0036, $0070, $0028, $006C, $001A, $0064, $0014, $0058
                dc.w    $0010, $0040, $0010, $002E, $0013, $001D, $001E, $0013
                dc.w    $002D, $0010, $0040, $0013, $0053, $001D, $0062, $002E
                dc.w    $006E, $0040, $0070, $0110, $0070, $0110, $0010  
;-------------------------------------------------------------------------------
loc_17CC6:
                dc.w    loc_17CE4-loc_17CC6
                dc.w    loc_17CE4-loc_17CC6
                dc.w    loc_17CFA-loc_17CC6
                dc.w    loc_17D24-loc_17CC6
                dc.w    loc_17D3A-loc_17CC6
                dc.w    loc_17D50-loc_17CC6
                dc.w    loc_17D66-loc_17CC6
                dc.w    loc_17D78-loc_17CC6
                dc.w    loc_17D92-loc_17CC6
                dc.w    loc_17DAC-loc_17CC6
                dc.w    loc_17DBE-loc_17CC6
                dc.w    loc_17DD0-loc_17CC6
                dc.w    loc_17DEA-loc_17CC6
                dc.w    loc_17E00-loc_17CC6
                dc.w    loc_17E0E-loc_17CC6
loc_17CE4:
                dc.w    $0014, $0790, $03B0, $0710, $03B0, $0710, $06B0, $0A90
                dc.w    $06B0, $0A90, $0670
loc_17CFA:
                dc.w    $0028, $0790, $03F0, $0790, $04B0, $0A00, $04B0, $0C10
                dc.w    $04B0, $0C10, $0330, $0D90, $0330, $0D90, $01B0, $0F10
                dc.w    $01B0, $0F10, $02B0, $0F90, $02B0
loc_17D24:
                dc.w    $0014, $0AF0, $0630, $0E90, $0630, $0E90, $06B0, $0F90
                dc.w    $06B0, $0F90, $0670
loc_17D3A:
                dc.w    $0014, $0F90, $02F0, $0F90, $04B0, $0F10, $04B0, $0F10
                dc.w    $0630, $0F90, $0630
loc_17D50:
                dc.w    $0014, $1410, $0530, $1190, $0530, $1190, $06B0, $1410
                dc.w    $06B0, $1410, $0570
loc_17D66:
                dc.w    $0010, $1AF0, $0530, $1B90, $0530, $1B90, $0330, $1E10
                dc.w    $0330
loc_17D78:
                dc.w    $0018, $1A90, $0570, $1A90, $05B0, $1C10, $05B0, $1C10
                dc.w    $0430, $1E10, $0430, $1E10, $0370
loc_17D92:
                dc.w    $0018, $2490, $0370, $2490, $03D0, $2390, $03D0, $2390
                dc.w    $05D0, $2510, $05D0, $2510, $0570
loc_17DAC:
                dc.w    $0010, $24F0, $0330, $2590, $0330, $2590, $0530, $2570
                dc.w    $0530
loc_17DBE:
                dc.w    $0010, $0310, $0330, $0290, $0330, $0290, $0230, $0490
                dc.w    $0230
loc_17DD0:
                dc.w    $0018, $0310, $0370, $0310, $03B0, $0410, $03B0, $0410
                dc.w    $02B0, $0490, $02B0, $0490, $0270
loc_17DEA:
                dc.w    $0014, $0490, $06F0, $0490, $0730, $0690, $0730, $0890
                dc.w    $0730, $0890, $06F0
loc_17E00:
                dc.w    $000C, $0BF0, $0330, $0D90, $0330, $0D90, $02F0
loc_17E0E:
                dc.w    $001C, $0D90, $02B0, $0C90, $02B0, $0C90, $00B0, $0E80
                dc.w    $00B0, $1110, $00B0, $1110, $0230, $10F0, $0230                              
;===============================================================================
; Object 0x1E - Atributo teletransportador dos tubos na Chemical Plant
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
Jmp_00_To_MarkObjGone_3:                                       ; loc_17E2C
		jmp     (MarkObjGone_3)                        ; loc_D26C
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj20_HTz_Boss_FireBall:                                    ; loc_17E34
;===============================================================================
; Object 0x20 - Fireballs used by Robotnik from Hill Top
; [ Begin ] 
;===============================================================================   
; loc_17E34:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_17E42(PC, D0), D1
                jmp     loc_17E42(PC, D1)
;-------------------------------------------------------------------------------
loc_17E42:
                dc.w    loc_17E50-loc_17E42
                dc.w    loc_17EB2-loc_17E42
                dc.w    loc_17EC0-loc_17E42
                dc.w    loc_17F5A-loc_17E42
                dc.w    loc_17F80-loc_17E42
                dc.w    loc_1800E-loc_17E42
                dc.w    loc_1806E-loc_17E42     
;------------------------------------------------------------------------------- 
loc_17E50:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$08, Obj_Height_2(A0)                           ; $0016
                move.b  #$08, Obj_Width_2(A0)                            ; $0017
                move.l  #Lava_Bubble_Mappings, Obj_Map(A0) ; loc_18090, $0004
                move.w  #$8416, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_05_To_ModifySpriteAttr_2P          ; loc_18130
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsl.w   #$03, D0
                andi.w  #$0780, D0
                neg.w   D0
                move.w  D0, Obj_Speed(A0)                                ; $0010
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                lsl.w   #$04, D0
                move.w  D0, Obj_Control_Var_06(A0)                       ; $0032
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034    
;-------------------------------------------------------------------------------
loc_17EB2:
                lea     (Fireball_Animate_Data), A1            ; loc_18072
                bsr     Jmp_00_To_AnimateSprite                ; loc_1812A
                bra     Jmp_05_To_MarkObjGone                  ; loc_1811E     
;-------------------------------------------------------------------------------
loc_17EC0:
                cmpi.b  #$05, Obj_Ani_Time(A0)                           ; $001E
                bne.s   loc_17EF0
                bsr     Jmp_03_To_SingleObjectLoad_2           ; loc_18124
                bne.s   loc_17EE2
                bsr.s   loc_17EFE
                bsr     Jmp_03_To_SingleObjectLoad_2           ; loc_18124
                bne.s   loc_17EE2
                bsr.s   loc_17EFE
                neg.w   Obj_Speed(A1)                                    ; $0010
                bset    #$00, Obj_Flags(A1)                              ; $0001
loc_17EE2:
                move.w  #$00AE, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_17EF0:
                lea     (Fireball_Animate_Data), A1            ; loc_18072
                bsr     Jmp_00_To_AnimateSprite                ; loc_1812A
                bra     Jmp_05_To_MarkObjGone                  ; loc_1811E
loc_17EFE:
                move.b  #$20, Obj_Id(A1)                                 ; $0000
                move.b  #$08, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_Speed(A0), Obj_Speed(A1)              ; $0010, $0010
                move.w  Obj_Speed_Y(A0), Obj_Speed_Y(A1)          ; $0012, $0012
                move.b  #$08, Obj_Height_2(A1)                           ; $0016
                move.b  #$08, Obj_Width_2(A1)                            ; $0017
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$08, Obj_Width(A1)                              ; $0019
                move.b  #$8B, Obj_Col_Flags(A1)                          ; $0020
                move.w  Obj_Y(A1), Obj_Control_Var_04(A1)         ; $000C, $0030
                rts      
;-------------------------------------------------------------------------------
loc_17F5A:
                subq.w  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bpl.s   loc_17F72
                move.w  Obj_Control_Var_08(A0), Obj_Control_Var_06(A0); $0032, $0034
                move.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0001, Obj_Ani_Number(A0)                       ; $001C
loc_17F72:
                lea     (Fireball_Animate_Data), A1            ; loc_18072
                bsr     Jmp_00_To_AnimateSprite                ; loc_1812A
                bra     Jmp_05_To_MarkObjGone                  ; loc_1811E   
;-------------------------------------------------------------------------------
loc_17F80:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_17F96
                move.b  #$07, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                andi.b  #$01, Obj_Map_Id(A0)                             ; $001A
loc_17F96:
                bsr     Jmp_03_To_SpeedToPos                   ; loc_18136
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                move.w  (Sonic_Level_Limits_Max_Y).w, D0             ; $FFFFEECE
                addi.w  #$00E0, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcc.s   loc_17FB2
                bra     Jmp_05_To_DeleteObject                 ; loc_18118
loc_17FB2:
                bclr    #$01, Obj_Flags(A0)                              ; $0001
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_1800A
                bset    #$01, Obj_Flags(A0)                              ; $0001
                bsr     ObjHitFloor                            ; loc_14204
                tst.w   D1
                bpl.s   loc_1800A
                add.w   D1, Obj_Y(A0)                                    ; $000C
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$04, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.l  #Fireball_Mappings, Obj_Map(A0) ; loc_180D0, $0004
                move.w  #$839E, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_05_To_ModifySpriteAttr_2P          ; loc_18130
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0009, Obj_Control_Var_06(A0)                   ; $0032
                move.b  #$03, Obj_Control_Var_0A(A0)                     ; $0036
loc_1800A:
                bra     Jmp_05_To_MarkObjGone                  ; loc_1811E   
;-------------------------------------------------------------------------------
loc_1800E:
                subq.w  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bpl.s   loc_18060
                move.w  #$007F, Obj_Control_Var_06(A0)                   ; $0032
                subq.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                bmi.s   loc_18060
                bsr     Jmp_03_To_SingleObjectLoad_2           ; loc_18124
                bne.s   loc_18060
                moveq   #$00, D0
                move.w  #$000F, D1
loc_1802C:
                move.l  $00(A0, D0), $00(A1, D0)
                addq.w  #$04, D0
                dbra    D1, loc_1802C
                move.w  #$0009, Obj_Control_Var_06(A1)                   ; $0032
                move.w  #$0200, Obj_Ani_Number(A1)                       ; $001C
                move.w  #$000E, D0
                tst.w   Obj_Speed(A1)                                    ; $0010
                bpl.s   loc_18050
                neg.w   D0
loc_18050:
                add.w   D0, Obj_X(A1)                                    ; $0008
                move.l  A1, -(A7)
                bsr     Fire_FindFloor                         ; loc_1423A
                move.l  (A7)+, A1
                add.w   D1, Obj_Y(A1)                                    ; $000C
loc_18060:
                lea     (Fireball_Animate_Data), A1            ; loc_18072
                bsr     Jmp_00_To_AnimateSprite                ; loc_1812A
                bra     Jmp_05_To_MarkObjGone                  ; loc_1811E   
;-------------------------------------------------------------------------------
loc_1806E:
                bra     Jmp_05_To_DeleteObject                 ; loc_18118     
;-------------------------------------------------------------------------------
Fireball_Animate_Data:                                         ; loc_18072
                dc.w    loc_18078-Fireball_Animate_Data
                dc.w    loc_1807F-Fireball_Animate_Data
                dc.w    loc_18082-Fireball_Animate_Data
loc_18078:
                dc.b    $0B, $02, $03, $FC, $04, $FD, $01
loc_1807F:
                dc.b    $7F, $05, $FF
loc_18082:
                dc.b    $05, $04, $05, $02, $03, $00, $01, $00
                dc.b    $01, $02, $03, $04, $05, $FC       
;-------------------------------------------------------------------------------
Lava_Bubble_Mappings:                                          ; loc_18090
                dc.w    loc_1809C-Lava_Bubble_Mappings
                dc.w    loc_180A6-Lava_Bubble_Mappings
                dc.w    loc_180B0-Lava_Bubble_Mappings
                dc.w    loc_180BA-Lava_Bubble_Mappings
                dc.w    loc_180C4-Lava_Bubble_Mappings
                dc.w    loc_180CE-Lava_Bubble_Mappings
loc_1809C:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
loc_180A6:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
loc_180B0:
                dc.w    $0001
                dc.l    $F9050008, $0004FFF8
loc_180BA:
                dc.w    $0001
                dc.l    $F6050008, $0004FFF8
loc_180C4:
                dc.w    $0001
                dc.l    $F605000C, $0006FFF8
loc_180CE:
                dc.w    $0000                 
;-------------------------------------------------------------------------------
Fireball_Mappings:                                             ; loc_180D0
                dc.w    loc_180DC-Fireball_Mappings
                dc.w    loc_180E6-Fireball_Mappings
                dc.w    loc_180F0-Fireball_Mappings
                dc.w    loc_180FA-Fireball_Mappings
                dc.w    loc_18104-Fireball_Mappings
                dc.w    loc_1810E-Fireball_Mappings
loc_180DC:
                dc.w    $0001
                dc.l    $F0070000, $0000FFF8
loc_180E6:
                dc.w    $0001
                dc.l    $F0070800, $0800FFF8
loc_180F0:
                dc.w    $0001
                dc.l    $F0070008, $0004FFF8
loc_180FA:
                dc.w    $0001
                dc.l    $F0070808, $0804FFF8
loc_18104:
                dc.w    $0001
                dc.l    $00050010, $0008FFF8
loc_1810E:
                dc.w    $0001
                dc.l    $00050810, $0808FFF8
;===============================================================================
; Object 0x20 - Fireballs used by Robotnik from Hill Top
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
Jmp_05_To_DeleteObject:                                        ; loc_18118
		jmp     (DeleteObject)                         ; loc_D314
Jmp_05_To_MarkObjGone:                                         ; loc_1811E
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_03_To_SingleObjectLoad_2:                                  ; loc_18124
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_00_To_AnimateSprite:                                       ; loc_1812A
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_05_To_ModifySpriteAttr_2P:                                 ; loc_18130
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_03_To_SpeedToPos:                                          ; loc_18136
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj2F_Breakable_Floor:                                      ; loc_1813C
;===============================================================================
; Object 0x2F - Breakable floor from Hill Top
; [ Begin ] 
;===============================================================================
; loc_1813C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1814A(PC, D0), D1
                jmp     loc_1814A(PC, D1)
;-------------------------------------------------------------------------------
loc_1814A:
                dc.w    loc_1815A-loc_1814A
                dc.w    loc_18198-loc_1814A
                dc.w    loc_1830C-loc_1814A  
;-------------------------------------------------------------------------------
loc_18150:
                dc.b    $24, $00, $20, $02, $18, $04, $10, $06
                dc.b    $08, $08  
;-------------------------------------------------------------------------------  
loc_1815A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Breakable_Floor_Mappings, Obj_Map(A0) ; loc_1852A, $0004
                move.w  #$C000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_06_To_ModifySpriteAttr_2P          ; loc_186F4
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$001E, D0
                lea     loc_18150(PC, D0), A2
                move.b  (A2)+, Obj_Height_2(A0)                          ; $0016
                move.b  (A2)+, Obj_Map_Id(A0)                            ; $001A  
;-------------------------------------------------------------------------------
loc_18198:
                move.w  ($FFFFF7D0).w, Obj_Control_Var_0C(A0)            ; $0038
                move.b  ($FFFFB01C).w, Obj_Control_Var_06(A0)            ; $0032
                move.b  ($FFFFB05C).w, Obj_Control_Var_07(A0)            ; $0033
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_00_To_SolidObject                  ; loc_18700
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne.s   loc_181D4
loc_181D0:
                bra     Jmp_06_To_MarkObjGone                  ; loc_186EE
loc_181D4:
                cmpi.b  #$18, D0
                bne.s   loc_18238
                cmpi.b  #$02, Obj_Control_Var_06(A0)                     ; $0032
                bne.s   loc_181F0
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bmi.s   loc_18220
                cmpi.b  #$0E, ($FFFFB03E).w
                beq.s   loc_18220
loc_181F0:
                move.b  #$0C, ($FFFFB03E).w
                move.b  #$0D, ($FFFFB03F).w
                cmpi.b  #$02, Obj_Control_Var_07(A0)                     ; $0033
                bne.s   loc_18212
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bmi.s   loc_18220
                cmpi.b  #$0E, ($FFFFB07E).w
                beq.s   loc_18220
loc_18212:
                move.b  #$0C, ($FFFFB07E).w
                move.b  #$0D, ($FFFFB07F).w
                bra.s   loc_181D0
loc_18220:
                lea     (Player_One).w, A1                           ; $FFFFB000
                move.b  Obj_Control_Var_06(A0), D0                       ; $0032
                bsr.s   loc_1826E
                lea     (Player_Two).w, A1                           ; $FFFFB040
                move.b  Obj_Control_Var_07(A0), D0                       ; $0033
                bsr.s   loc_1826E
                bra     loc_182D4
loc_18238:
                move.b  D0, D1
                andi.b  #$08, D1
                beq.s   loc_182A0
                cmpi.b  #$02, Obj_Control_Var_06(A0)                     ; $0032
                bne.s   loc_18256
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bmi.s   loc_18266
                cmpi.b  #$0E, ($FFFFB03E).w
                beq.s   loc_18266
loc_18256:
                move.b  #$0C, ($FFFFB03E).w
                move.b  #$0D, ($FFFFB03F).w
                bra     loc_181D0
loc_18266:
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_18274
                bra.s   loc_182D4
loc_1826E:
                cmpi.b  #$02, D0
                bne.s   loc_1828C
loc_18274:
                bset    #$02, Obj_Status(A1)                             ; $0022
                move.b  #$0E, Obj_Height_2(A1)                           ; $0016
                move.b  #$07, Obj_Width_2(A1)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
loc_1828C:
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                rts
loc_182A0:
                andi.b  #$10, D0
                beq     loc_181D0
                cmpi.b  #$02, Obj_Control_Var_07(A0)                     ; $0033
                bne.s   loc_182BE
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bmi.s   loc_182CE
                cmpi.b  #$0E, ($FFFFB07E).w
                beq.s   loc_182CE
loc_182BE:
                move.b  #$0C, ($FFFFB07E).w
                move.b  #$0D, ($FFFFB07F).w
                bra     loc_181D0
loc_182CE:
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr.s   loc_18274
loc_182D4:
                move.w  Obj_Control_Var_0C(A0), ($FFFFF7D0).w            ; $0038
                andi.b  #$E7, Obj_Status(A0)                             ; $0022
                lea     (loc_18322), A4
                moveq   #$00, D0
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                move.l  D0, D1
                add.w   D0, D0
                add.w   D0, D0
                lea     $00(A4, D0), A4
                neg.w   D1
                addi.w  #$0009, D1
                move.w  #$0018, D2
                bsr     Jmp_00_To_Smash_Object                 ; loc_186FA
                bsr     loc_184D8   
;-------------------------------------------------------------------------------
loc_1830C:
                bsr     Jmp_04_To_SpeedToPos                   ; loc_18706
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     Jmp_06_To_DeleteObject                 ; loc_186E2
                bra     Jmp_04_To_DisplaySprite                ; loc_186DC        
;-------------------------------------------------------------------------------  
loc_18322:
                dc.w    $FF00, $F800, $0100, $F800, $FF20, $F900, $00E0, $F900
                dc.w    $FF40, $FA00, $00C0, $FA00, $FF60, $FB00, $00A0, $FB00
                dc.w    $FF80, $FC00, $0080, $FC00
;===============================================================================
; Object 0x2F - Breakable floor from Hill Top
; [ End ] 
;===============================================================================
Obj32_Breakable_Obstacle:                                   ; loc_1834A
;===============================================================================
; Object 0x32 - Hill Top rock / Obstacle from the Chemical Plant Tunnels
; [ Begin ]
;===============================================================================
; loc_1834A:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_18358(PC, D0), D1
                jmp     loc_18358(PC, D1)
;-------------------------------------------------------------------------------
loc_18358:
                dc.w    loc_1835E-loc_18358
                dc.w    loc_183B2-loc_18358
                dc.w    loc_1849A-loc_18358      
;-------------------------------------------------------------------------------
loc_1835E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #HTz_Rock_Mappings, Obj_Map(A0) ; loc_18682, $0004
                move.w  #$43B2, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$18, Obj_Width(A0)                              ; $0019
                move.l  #HTz_Rock_Break_Data, Obj_Control_Var_10(A0) ; loc_184B0, $003C
                cmpi.b  #$0D, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_183A2
                move.l  #CPz_Tunel_Obstacle_Mappings, Obj_Map(A0) ; loc_186B6, $0004
                move.w  #$6430, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.l  #CPz_Tunel_Obstacle_Break_Data, Obj_Control_Var_10(A0) ; loc_184C8, $003C
loc_183A2:
                bsr     Jmp_06_To_ModifySpriteAttr_2P          ; loc_186F4
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018 
;-------------------------------------------------------------------------------
loc_183B2:
                move.w  ($FFFFF7D0).w, Obj_Control_Var_0C(A0)            ; $0038
                move.b  ($FFFFB01C).w, Obj_Control_Var_06(A0)            ; $0032
                move.b  ($FFFFB05C).w, Obj_Control_Var_07(A0)            ; $0033
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_00_To_SolidObject                  ; loc_18700
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne.s   loc_183EC
loc_183E8:
                bra     Jmp_06_To_MarkObjGone                  ; loc_186EE
loc_183EC:
                cmpi.b  #$18, D0
                bne.s   loc_1841A
                cmpi.b  #$02, Obj_Control_Var_06(A0)                     ; $0032
                beq.s   loc_18402
                cmpi.b  #$02, Obj_Control_Var_07(A0)                     ; $0033
                bne.s   loc_183E8
loc_18402:
                lea     (Player_One).w, A1                           ; $FFFFB000
                move.b  Obj_Control_Var_06(A0), D0                       ; $0032
                bsr.s   loc_18432
                lea     (Player_Two).w, A1                           ; $FFFFB040
                move.b  Obj_Control_Var_07(A0), D0                       ; $0033
                bsr.s   loc_18432
                bra     loc_18482
loc_1841A:
                move.b  D0, D1
                andi.b  #$08, D1
                beq.s   loc_1846A
                cmpi.b  #$02, Obj_Control_Var_06(A0)                     ; $0032
                bne.s   loc_183E8
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_18438
                bra.s   loc_18482
loc_18432:
                cmpi.b  #$02, D0
                bne.s   loc_18456
loc_18438:
                bset    #$02, Obj_Status(A1)                             ; $0022
                move.b  #$0E, Obj_Height_2(A1)                           ; $0016
                move.b  #$07, Obj_Width_2(A1)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.w  #$FD00, Obj_Speed_Y(A1)                          ; $0012
loc_18456:
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                rts
loc_1846A:
                andi.b  #$10, D0
                beq     loc_183E8
                cmpi.b  #$02, Obj_Control_Var_07(A0)                     ; $0033
                bne     loc_183E8
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr.s   loc_18438
loc_18482:
                move.w  Obj_Control_Var_0C(A0), ($FFFFF7D0).w            ; $0038
                andi.b  #$E7, Obj_Status(A0)                             ; $0022
                move.l  Obj_Control_Var_10(A0), A4                       ; $003C
                bsr     Jmp_00_To_Smash_Object                 ; loc_186FA
                bsr     loc_184D8  
;-------------------------------------------------------------------------------
loc_1849A:
                bsr     Jmp_04_To_SpeedToPos                   ; loc_18706
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     Jmp_06_To_DeleteObject                 ; loc_186E2
                bra     Jmp_04_To_DisplaySprite                ; loc_186DC 
;-------------------------------------------------------------------------------
HTz_Rock_Break_Data:                                           ; loc_184B0
                dc.w    $FE00, $FE00, $0000, $FD80, $0200, $FE00, $FE40, $FE40
                dc.w    $0000, $FE00, $01C0, $FE40          
;-------------------------------------------------------------------------------
CPz_Tunel_Obstacle_Break_Data:                                 ; loc_184C8
                dc.w    $FF00, $FE00, $0100, $FE00, $FF40, $FE40, $00C0, $FE40                                                  
;-------------------------------------------------------------------------------
loc_184D8:
                bsr     Jmp_00_To_SingleObjectLoad             ; loc_186E8
                bne.s   loc_18520
                move.b  #$29, Obj_Id(A1)                                 ; $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  ($FFFFF7D0).w, D2
                addq.w  #$02, ($FFFFF7D0).w
                cmpi.w  #$0006, D2
                bcs.s   loc_18500
                moveq   #$06, D2
loc_18500:
                moveq   #$00, D0
                move.w  Break_Obstacle_Points(PC, D2), D0      ; loc_18522
                cmpi.w  #$0020, ($FFFFF7D0).w
                bcs.s   loc_18514
                move.w  #$03E8, D0
                moveq   #$0A, D2
loc_18514:
                jsr     (AddPoints)                            ; loc_2D2D4
                lsr.w   #$01, D2
                move.b  D2, Obj_Map_Id(A1)                               ; $001A
loc_18520:
                rts                      
;-------------------------------------------------------------------------------
Break_Obstacle_Points:                                         ; loc_18522
                dc.w    $000A   ;  100
                dc.w    $0014   ;  200
                dc.w    $0032   ;  500
                dc.w    $0064   ; 1000      
;===============================================================================
; Object 0x32 - Hill Top rock / Obstacle from the Chemical Plant Tunnels
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Breakable_Floor_Mappings:                                      ; loc_1852A
		include 'mappings/sprite/obj2F.asm'
;-------------------------------------------------------------------------------
HTz_Rock_Mappings:                                             ; loc_18682
		include 'mappings/sprite/obj32_htz.asm'
;-------------------------------------------------------------------------------
CPz_Tunel_Obstacle_Mappings:                                   ; loc_186B6
		include 'mappings/sprite/obj32_cpz.asm'
;-------------------------------------------------------------------------------
		nop
Jmp_04_To_DisplaySprite:                                       ; loc_186DC
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_06_To_DeleteObject:                                        ; loc_186E2
		jmp     (DeleteObject)                         ; loc_D314
Jmp_00_To_SingleObjectLoad:                                    ; loc_186E8
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_06_To_MarkObjGone:                                         ; loc_186EE
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_06_To_ModifySpriteAttr_2P:                                 ; loc_186F4
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_00_To_Smash_Object:                                        ; loc_186FA
		jmp     (Smash_Object)                         ; loc_CD24
Jmp_00_To_SolidObject:                                         ; loc_18700
		jmp     (SolidObject)                          ; loc_F344
Jmp_04_To_SpeedToPos:                                          ; loc_18706
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj30_Earthquake_Tiles_Attributes:                          ; loc_1870C
;===============================================================================
; Object 0x30 - Atributos dos tiles usados durante os terremotos na Hill Top
; [ Begin ] 
;===============================================================================   
; loc_1870C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1871A(PC, D0), D1
                jmp     loc_1871A(PC, D1)
;-------------------------------------------------------------------------------
loc_1871A:
                dc.w    loc_18728-loc_1871A
                dc.w    loc_18774-loc_1871A     
;-------------------------------------------------------------------------------
loc_1871E:
                dc.b    $C0, $00, $C0, $00, $C0, $00, $E0, $00
                dc.b    $C0, $00                              
;-------------------------------------------------------------------------------
loc_18728:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                move.b  loc_1871E(PC, D0), Obj_Width(A0)           ; $0019
                cmpi.b  #$06, D0
                bcs.s   loc_18774
                bne.s   loc_18756
                cmpi.w  #$0380, (Camera_Y).w                         ; $FFFFEE04
                bcc.s   loc_18774
                bra.s   loc_1875E
loc_18756:
                cmpi.w  #$0380, (Camera_Y).w                         ; $FFFFEE04
                bcs.s   loc_18774
loc_1875E:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_18770
                bclr    #$07, $02(A2, D0)
loc_18770:
                bra     Jmp_07_To_DeleteObject                 ; loc_18900    
;-------------------------------------------------------------------------------
loc_18774:
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                add.w   ($FFFFEEE4).w, D0
                move.w  D0, Obj_Y(A0)                                    ; $000C
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                move.w  loc_18798(PC, D0), D1
                jsr     loc_18798(PC, D1)
                tst.b   ($FFFFEEBC).w
                beq     Jmp_01_To_MarkObjGone_3                ; loc_1890C
                rts       
;-------------------------------------------------------------------------------
loc_18798:
                dc.w    loc_187A2-loc_18798
                dc.w    loc_187A2-loc_18798
                dc.w    loc_187BA-loc_18798
                dc.w    loc_18800-loc_18798
                dc.w    loc_1881A-loc_18798  
;-------------------------------------------------------------------------------
loc_187A2:
                move.w  #$00CB, D1
                move.w  #$0080, D2
                move.w  #$0081, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_00_To_SolidObject_2                ; loc_18918
                bra     loc_18912    
;-------------------------------------------------------------------------------
loc_187BA:
                move.w  #$00CB, D1
                move.w  #$0078, D2
                move.w  #$0079, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_00_To_SolidObject_2                ; loc_18918
                bsr     loc_18912
loc_187D2:
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_187E8
                move.l  A0, -(A7)
                move.l  A0, A1
                lea     (Player_One).w, A0                           ; $FFFFB000
                bsr     loc_18906
                move.l  (A7)+, A0
loc_187E8:
                btst    #$04, Obj_Status(A0)                             ; $0022
                beq.s   loc_187FE
                move.l  A0, -(A7)
                move.l  A0, A1
                lea     (Player_Two).w, A0                           ; $FFFFB040
                bsr     loc_18906
                move.l  (A7)+, A0
loc_187FE:
                rts    
;-------------------------------------------------------------------------------
loc_18800:
                move.w  #$00EB, D1
                move.w  #$0078, D2
                move.w  #$0079, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_00_To_SolidObject_2                ; loc_18918
                bsr     loc_18912
                bra.s   loc_187D2  
;-------------------------------------------------------------------------------
loc_1881A:
                move.w  #$00CB, D1
                move.w  #$002E, D2
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     (loc_18834), A2
                bsr     Jmp_00_To_SolidObject_3                ; loc_1891E
                bra     loc_18912          
;------------------------------------------------------------------------------- 
loc_18834:
                dc.b    $30, $30, $30, $30, $30, $30, $30, $30
                dc.b    $2F, $2F, $2E, $2E, $2D, $2D, $2C, $2C
                dc.b    $2B, $2B, $2A, $2A, $29, $29, $28, $28
                dc.b    $27, $27, $26, $26, $25, $25, $24, $24
                dc.b    $23, $23, $22, $22, $21, $21, $20, $20
                dc.b    $1F, $1F, $1E, $1E, $1D, $1D, $1C, $1C
                dc.b    $1B, $1B, $1A, $1A, $19, $19, $18, $18
                dc.b    $17, $17, $16, $16, $15, $15, $14, $14
                dc.b    $13, $13, $12, $12, $11, $11, $10, $10
                dc.b    $0F, $0F, $0E, $0E, $0D, $0D, $0C, $0C
                dc.b    $0B, $0B, $0A, $0A, $09, $09, $08, $08
                dc.b    $07, $07, $06, $06, $05, $05, $04, $04
                dc.b    $03, $03, $02, $02, $01, $01, $00, $00
                dc.b    $FF, $FF, $FE, $FE, $FD, $FD, $FC, $FC
                dc.b    $FB, $FB, $FA, $FA, $F9, $F9, $F8, $F8
                dc.b    $F7, $F7, $F6, $F6, $F5, $F5, $F4, $F4
                dc.b    $F3, $F3, $F2, $F2, $F1, $F1, $F0, $F0
                dc.b    $EF, $EF, $EE, $EE, $ED, $ED, $EC, $EC
                dc.b    $EB, $EB, $EA, $EA, $E9, $E9, $E8, $E8
                dc.b    $E7, $E7, $E6, $E6, $E5, $E5, $E4, $E4
                dc.b    $E3, $E3, $E2, $E2, $E1, $E1, $E0, $E0
                dc.b    $DF, $DF, $DE, $DE, $DD, $DD, $DC, $DC
                dc.b    $DB, $DB, $DA, $DA, $D9, $D9, $D8, $D8
                dc.b    $D7, $D7, $D6, $D6, $D5, $D5, $D4, $D4
                dc.b    $D3, $D3, $D2, $D2, $D1, $D1, $D0, $D0
                dc.b    $D0, $D0, $D0, $D0
;===============================================================================
; Object 0x30 - Atributos dos tiles usados durante os terremotos na Hill Top
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_07_To_DeleteObject:                                        ; loc_18900
		jmp     (DeleteObject)                         ; loc_D314
loc_18906:
		jmp     (loc_2B4CA)
Jmp_01_To_MarkObjGone_3:                                       ; loc_1890C
		jmp     (MarkObjGone_3)                        ; loc_D26C
loc_18912:
		jmp     (loc_FA9C)
Jmp_00_To_SolidObject_2:                                       ; loc_18918
		jmp     (SolidObject_2)                        ; loc_F39E
Jmp_00_To_SolidObject_3:                                       ; loc_1891E
		jmp     (SolidObject_3)                        ; loc_F3F0
;-------------------------------------------------------------------------------
Obj33_Touch_Booster:                                        ; loc_18924
;===============================================================================
; Object 0x33 - Aceleradores (Toque para ganhar impulso) na Oil Ocean
; [ Begin ]
;===============================================================================
; loc_18924:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_18932(PC, D0), D1
                jmp     loc_18932(PC, D1)
;-------------------------------------------------------------------------------
loc_18932:
                dc.w    loc_18938-loc_18932
                dc.w    loc_189C0-loc_18932
                dc.w    loc_18BCA-loc_18932     
;-------------------------------------------------------------------------------
loc_18938:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Touch_Booster_Mappings, Obj_Map(A0) ; loc_18C0C, $0004
                move.w  #$632C, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.b  #$18, Obj_Width(A0)                              ; $0019
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$0078, Obj_Control_Var_0A(A0)                   ; $0036
                tst.b   Obj_Subtype(A0)                                  ; $0028
                beq.s   loc_18978
                move.b  #$04, Obj_Routine_2(A0)                          ; $0025
loc_18978:
                bsr     Jmp_04_To_SingleObjectLoad_2           ; loc_18C62
                bne.s   loc_189C0
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                subi.w  #$0010, Obj_Y(A1)                                ; $000C
                move.l  #Touch_Booster_Mappings_01, Obj_Map(A1) ; loc_18C20, $0004
                move.w  #$62E2, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.l  A0, Obj_Control_Var_10(A1)                       ; $003C     
;-------------------------------------------------------------------------------
loc_189C0:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_189EC(PC, D0), D1
                jsr     loc_189EC(PC, D1)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$08, D2
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     Jmp_01_To_SolidObject                  ; loc_18C68
                bra     Jmp_07_To_MarkObjGone                  ; loc_18C5C             
;-------------------------------------------------------------------------------  
loc_189EC:
                dc.w    loc_189F6-loc_189EC
                dc.w    loc_18A1A-loc_189EC
                dc.w    loc_18A56-loc_189EC
                dc.w    loc_18B50-loc_189EC
                dc.w    loc_18BC8-loc_189EC     
;-------------------------------------------------------------------------------  
loc_189F6:
                subq.w  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                bpl.s   loc_18A18
                move.w  #$0078, Obj_Control_Var_0A(A0)                   ; $0036
                move.l  #$FFF69800, Obj_Control_Var_06(A0)               ; $0032
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$00D4, D0
                jsr     (Play_Sfx_Ex)                          ; loc_151E
loc_18A18:
                rts  
;------------------------------------------------------------------------------- 
loc_18A1A:
                move.l  Obj_Y(A0), D1                                    ; $000C
                add.l   Obj_Control_Var_06(A0), D1                       ; $0032
                move.l  D1, Obj_Y(A0)                                    ; $000C
                addi.l  #$00003800, Obj_Control_Var_06(A0)               ; $0032
                swap.w  D1
                cmp.w   Obj_Control_Var_04(A0), D1                       ; $0030
                bcs.s   loc_18A54
                move.l  Obj_Control_Var_06(A0), D0                       ; $0032
                cmpi.l  #$00010000, D0
                bcc.s   loc_18A46
                subq.b  #$02, Obj_Routine_2(A0)                          ; $0025
loc_18A46:
                lsr.l   #$02, D0
                neg.l   D0
                move.l  D0, Obj_Control_Var_06(A0)                       ; $0032
                move.w  Obj_Control_Var_04(A0), Obj_Y(A0)         ; $000C, $0030
loc_18A54:
                rts   
;------------------------------------------------------------------------------- 
loc_18A56:
                move.w  Obj_X(A0), D2                                    ; $0008
                move.w  D2, D3
                subi.w  #$0010, D2
                addi.w  #$0010, D3
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_18ACE
                cmpi.b  #$18, D0
                beq.s   loc_18AD0
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                bsr.s   loc_18A82
                lea     (Player_Two).w, A1                           ; $FFFFB040
                addq.b  #$01, D6
loc_18A82:
                btst    D6, Obj_Status(A0)                               ; $0022
                beq.s   loc_18ACE
                move.w  Obj_X(A1), D0                                    ; $0008
                cmp.w   D2, D0
                bcs.s   loc_18ACE
                cmp.w   D3, D0
                bcc.s   loc_18ACE
                move.b  #$01, Obj_Timer(A1)                              ; $002A
                move.w  #$0000, Obj_Inertia(A1)                          ; $0014
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
                bclr    #$05, Obj_Status(A1)                             ; $0022
                bclr    #$07, Obj_Art_VRAM(A1)                           ; $0002
                move.l  #$FFF69800, Obj_Control_Var_06(A0)               ; $0032
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$00D4, D0
                jsr     (Play_Sfx_Ex)                          ; loc_151E
loc_18ACE:
                rts
loc_18AD0:
                lea     (Player_One).w, A1                           ; $FFFFB000
                move.w  Obj_X(A1), D0                                    ; $0008
                cmp.w   D2, D0
                bcs.s   loc_18B4E
                cmp.w   D3, D0
                bcc.s   loc_18B4E
                lea     (Player_Two).w, A2                           ; $FFFFB040
                move.w  Obj_X(A2), D0                                    ; $0008
                cmp.w   D2, D0
                bcs.s   loc_18B4E
                cmp.w   D3, D0
                bcc.s   loc_18B4E
                move.b  #$01, Obj_Timer(A1)                              ; $002A
                move.w  #$0000, Obj_Inertia(A1)                          ; $0014
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
                bclr    #$05, Obj_Status(A1)                             ; $0022
                bclr    #$07, Obj_Art_VRAM(A1)                           ; $0002
                move.b  #$01, Obj_Timer(A2)                              ; $002A
                move.w  #$0000, Obj_Inertia(A2)                          ; $0014
                move.w  #$0000, Obj_Speed(A2)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A2)                          ; $0012
                bclr    #$05, Obj_Status(A2)                             ; $0022
                bclr    #$07, Obj_Art_VRAM(A2)                           ; $0002
                move.l  #$FFF69800, Obj_Control_Var_06(A0)               ; $0032
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$00D4, D0
                jsr     (Play_Sfx_Ex)                          ; loc_151E
loc_18B4E:
                rts 
;------------------------------------------------------------------------------- 
loc_18B50:
                move.l  Obj_Y(A0), D1                                    ; $000C
                add.l   Obj_Control_Var_06(A0), D1                       ; $0032
                move.l  D1, Obj_Y(A0)                                    ; $000C
                addi.l  #$00003800, Obj_Control_Var_06(A0)               ; $0032
                swap.w  D1
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                subi.w  #$007D, D0
                cmp.w   D0, D1
                bne.s   loc_18BC6
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                lea     (Obj_Memory_Address).w, A1                   ; $FFFFB000
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$08, D0
                bsr.s   loc_18B90
                lea     (Player_Two).w, A1                           ; $FFFFB040
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$10, D0
loc_18B90:
                beq.s   loc_18BC6
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.w  #$0800, Obj_Inertia(A1)                          ; $0014
                bset    #$01, Obj_Status(A1)                             ; $0022
                move.w  #$F000, Obj_Speed_Y(A1)                          ; $0012
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$00, Obj_Timer(A1)                              ; $002A
                move.w  #$00CC, D0
                jsr     (Play_Sfx_Ex)                          ; loc_151E
loc_18BC6:
                rts      
;------------------------------------------------------------------------------- 
loc_18BC8:
                rts    
;------------------------------------------------------------------------------- 
loc_18BCA:
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.w  Obj_Y(A0), D0                                    ; $000C
                sub.w   Obj_Y(A1), D0                                    ; $000C
                cmpi.w  #$0014, D0
                blt.s   loc_18BF2
                move.b  #$9B, Obj_Col_Flags(A0)                          ; $0020
                lea     (Touch_Booster_Animate_Data), A1       ; loc_18C00
                jsr     (AnimateSprite)                        ; loc_D372
                bra     Jmp_07_To_MarkObjGone                  ; loc_18C5C
loc_18BF2:
                move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
                rts
;-------------------------------------------------------------------------------                    
Touch_Booster_Animate_Data:                                    ; loc_18C00
                dc.w    loc_18C02-Touch_Booster_Animate_Data
loc_18C02:
                dc.b    $02, $02, $00, $02, $00, $02, $00, $01
                dc.b    $FF, $00        
;-------------------------------------------------------------------------------
Touch_Booster_Mappings:                                        ; loc_18C0C
                dc.w    loc_18C0E-Touch_Booster_Mappings
loc_18C0E:
                dc.w    $0002
                dc.l    $F8090000, $0000FFE8
                dc.l    $F8090800, $08000000       
;-------------------------------------------------------------------------------
Touch_Booster_Mappings_01:                                     ; loc_18C20
                dc.w    loc_18C26-Touch_Booster_Mappings_01
                dc.w    loc_18C38-Touch_Booster_Mappings_01
                dc.w    loc_18C4A-Touch_Booster_Mappings_01
loc_18C26:
                dc.w    $0002
                dc.l    $F8060000, $0000FFF0
                dc.l    $F8060800, $08000000
loc_18C38:
                dc.w    $0002
                dc.l    $F0070006, $0003FFF0
                dc.l    $F0070806, $08030000
loc_18C4A:
                dc.w    $0002
                dc.l    $0005000E, $0007FFF0
                dc.l    $0005080E, $08070000 
;===============================================================================
; Object 0x33 - Aceleradores (Toque para ganhar impulso) na Oil Ocean
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_07_To_MarkObjGone:                                         ; loc_18C5C
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_04_To_SingleObjectLoad_2:                                  ; loc_18C62
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_01_To_SolidObject:                                         ; loc_18C68
		jmp     (SolidObject)                          ; loc_F344
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj43_Giant_Spikeball:                                      ; loc_18C70
;===============================================================================
; Object 0x43 - Bola gigante com espinhos na Oil Ocean
; [ Begin ] 
;===============================================================================  
; loc_18C70:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_18C7E(PC, D0), D1
                jmp     loc_18C7E(PC, D1)
;-------------------------------------------------------------------------------  
loc_18C7E:
                dc.w    loc_18C96-loc_18C7E
                dc.w    loc_18D3A-loc_18C7E
                dc.w    loc_18D8C-loc_18C7E     
;-------------------------------------------------------------------------------  
loc_18C84:
                dc.b    $00, $68
                dc.w    $0000, $0000
                dc.b    $01, $E8
                dc.w    $FFE8, $0018
                dc.b    $01, $A8
                dc.w    $FFA8, $FFD8   
;-------------------------------------------------------------------------------
loc_18C96:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$C30C, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_07_To_ModifySpriteAttr_2P          ; loc_18E4A
                moveq   #$00, D1
                move.b  Obj_Subtype(A0), D1                              ; $0028
                lea     loc_18C84(PC, D1), A2
                move.b  (A2)+, D1
                move.l  A0, A1
                bra.s   loc_18CD8       
;-------------------------------------------------------------------------------
loc_18CB4:
                bsr     Jmp_05_To_SingleObjectLoad_2           ; loc_18E44
                bne.s   loc_18D04
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$01, Obj_Control_Var_0A(A1)                     ; $0036   
;-------------------------------------------------------------------------------
loc_18CD8:
                move.l  #Giant_Spikeball_Mappings, Obj_Map(A1) ; loc_18E10, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$18, Obj_Width(A1)                              ; $0019
                move.b  #$A5, Obj_Col_Flags(A1)                          ; $0020
                move.w  Obj_X(A1), Obj_Control_Var_04(A1)         ; $0008, $0030
loc_18D04:
                dbra    D1, loc_18CB4
                move.l  A0, Obj_Control_Var_10(A1)                       ; $003C
                move.l  A1, Obj_Control_Var_10(A0)                       ; $003C
                moveq   #$00, D1
                move.b  (A2)+, D1
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                sub.w   D1, D0
                move.w  D0, Obj_Control_Var_06(A0)                       ; $0032
                move.w  D0, Obj_Control_Var_06(A1)                       ; $0032
                add.w   D1, D0
                add.w   D1, D0
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034
                move.w  D0, Obj_Control_Var_08(A1)                       ; $0034
                move.w  (A2)+, D0
                add.w   D0, Obj_X(A0)                                    ; $0008
                move.w  (A2)+, D0
                add.w   D0, Obj_X(A1)                                    ; $0008   
;-------------------------------------------------------------------------------
loc_18D3A:
                bsr.s   loc_18D96
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bls.s   loc_18D60
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_18D66
loc_18D60:
                jmp     (DisplaySprite)                        ; loc_D322
loc_18D66:
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                cmpa.l  A0, A1
                beq.s   loc_18D74
                jsr     (DeleteObject_A1)                      ; loc_D316
loc_18D74:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_18D86
                bclr    #$07, $02(A2, D0)
loc_18D86:
                jmp     (DeleteObject)                         ; loc_D314    
;-------------------------------------------------------------------------------
loc_18D8C:
                bsr.s   loc_18D96
                bsr.s   loc_18DE0
                jmp     (DisplaySprite)                        ; loc_D322
loc_18D96:
                tst.b   Obj_Control_Var_0A(A0)                           ; $0036
                bne.s   loc_18DBE
                move.w  Obj_X(A0), D1                                    ; $0008
                subq.w  #$01, D1
                cmp.w   Obj_Control_Var_06(A0), D1                       ; $0032
                bne.s   loc_18DB8
                move.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                move.w  #$00D5, D0
                jsr     (Play_Sfx_Ex)                          ; loc_151E
loc_18DB8:
                move.w  D1, Obj_X(A0)                                    ; $0008
                rts
loc_18DBE:
                move.w  Obj_X(A0), D1                                    ; $0008
                addq.w  #$01, D1
                cmp.w   Obj_Control_Var_08(A0), D1                       ; $0034
                bne.s   loc_18DDA
                move.b  #$00, Obj_Control_Var_0A(A0)                     ; $0036
                move.w  #$00D5, D0
                jsr     (Play_Sfx_Ex)                          ; loc_151E
loc_18DDA:
                move.w  D1, Obj_X(A0)                                    ; $0008
                rts
loc_18DE0:
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.w  Obj_X(A0), D0                                    ; $0008
                subi.w  #$0018, D0
                move.w  Obj_X(A1), D2                                    ; $0008
                addi.w  #$0018, D2
                cmp.w   D0, D2
                bne.s   loc_18E0E
                eori.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                eori.b  #$01, Obj_Control_Var_0A(A1)                     ; $0036
                move.w  #$00D5, D0
                jsr     (Play_Sfx_Ex)                          ; loc_151E
loc_18E0E:
                rts          
;-------------------------------------------------------------------------------
Giant_Spikeball_Mappings:                                      ; loc_18E10
                dc.w    loc_18E12-Giant_Spikeball_Mappings
loc_18E12:
                dc.w    $0006
                dc.l    $E0050000, $0000FFE8
                dc.l    $D80F0004, $0002FFF8
                dc.l    $F8090014, $000AFFE8
                dc.l    $F809001A, $000D0000
                dc.l    $10051000, $1000FFE8
                dc.l    $080F1004, $1002FFF8
;===============================================================================
; Object 0x43 - Bola gigante com espinhos na Oil Ocean
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_05_To_SingleObjectLoad_2:                                  ; loc_18E44
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_07_To_ModifySpriteAttr_2P:                                 ; loc_18E4A
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
;-------------------------------------------------------------------------------
Obj07_0il_Attributes:                                       ; loc_18E50
;===============================================================================
; Object 0x07 - Oil from Oil Ocean
; [ Begin ] 
;===============================================================================
; loc_18E50:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_18E5E(PC, D0), D1
                jmp     loc_18E5E(PC, D1)
;-------------------------------------------------------------------------------    
loc_18E5E:
                dc.w    loc_18E62-loc_18E5E
                dc.w    loc_18E84-loc_18E5E         
;-------------------------------------------------------------------------------
loc_18E62:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0758, Obj_Y(A0)                                ; $000C
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                move.b  #$30, Obj_Control_Var_0C(A0)                     ; $0038
                bset    #$07, Obj_Status(A0)                             ; $0022  
;-------------------------------------------------------------------------------
loc_18E84:
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$08, D1
                move.b  Obj_Status(A0), D0                               ; $0022
                and.b   D1, D0
                bne.s   loc_18EA0
                cmpi.b  #$30, Obj_Control_Var_0C(A0)                     ; $0038
                beq.s   loc_18EAA
                addq.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bra.s   loc_18EAA
loc_18EA0:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                beq.s   loc_18EFE
                subq.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
loc_18EAA:
                moveq   #$20, D1
                moveq   #$00, D3
                move.b  Obj_Control_Var_0C(A0), D3                       ; $0038
                moveq   #$03, D6
                move.w  Obj_X(A1), D4                                    ; $0008
                move.w  D4, Obj_X(A0)                                    ; $0008
                bsr     Jmp_00_To_Platform_Object_A1           ; loc_18F1A
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$10, D1
                move.b  Obj_Status(A0), D0                               ; $0022
                and.b   D1, D0
                bne.s   loc_18EDC
                cmpi.b  #$30, Obj_Control_Var_0E(A0)                     ; $003A
                beq.s   loc_18EE6
                addq.b  #$01, Obj_Control_Var_0E(A0)                     ; $003A
                bra.s   loc_18EE6
loc_18EDC:
                tst.b   Obj_Control_Var_0E(A0)                           ; $003A
                beq.s   loc_18EFE
                subq.b  #$01, Obj_Control_Var_0E(A0)                     ; $003A
loc_18EE6:
                moveq   #$20, D1
                moveq   #$00, D3
                move.b  Obj_Control_Var_0E(A0), D3                       ; $003A
                moveq   #$04, D6
                move.w  Obj_X(A1), D4                                    ; $0008
                move.w  D4, Obj_X(A0)                                    ; $0008
                bsr     Jmp_00_To_Platform_Object_A1           ; loc_18F1A
                rts
loc_18EFE:
                not.b   D1
                and.b   D1, Obj_Status(A0)                               ; $0022
                move.l  A0, -(A7)
                move.l  A0, A2
                move.l  A1, A0
                bsr     Oil_KillCharacter                      ; loc_18F14
                move.l  (A7)+, A0
                rts     
;===============================================================================
; Object 0x07 - Oil from Oil Ocean
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
		nop
Oil_KillCharacter:                                             ; loc_18F14
		jmp     (KillCharacter)                        ; loc_2B57C
Jmp_00_To_Platform_Object_A1:                                  ; loc_18F1A
		jmp     (Platform_Object_A1)                   ; loc_F842
;-------------------------------------------------------------------------------
Obj45_Spring_Push_Boost:                                    ; loc_18F20
;===============================================================================
; Object 0x45 - Mola empurre para obter impulso na Oil Ocean
; [ Begin ] 
;===============================================================================   
; loc_18F20:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_18F32(PC, D0), D1
                jsr     loc_18F32(PC, D1)
                bra     Jmp_08_To_MarkObjGone                  ; loc_19AF8
;-------------------------------------------------------------------------------
loc_18F32:
                dc.w    loc_18F38-loc_18F32
                dc.w    loc_18FAE-loc_18F32
                dc.w    loc_190A2-loc_18F32        
;-------------------------------------------------------------------------------
loc_18F38:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Spring_Push_Boost_Mappings, Obj_Map(A0) ; loc_19342, $0004
                move.w  #$43C5, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                move.w  loc_18F6E(PC, D0), D0
                jmp     loc_18F6E(PC, D0)   
;------------------------------------------------------------------------------- 
loc_18F6E:
                dc.w    loc_18F96-loc_18F6E
                dc.w    loc_18F72-loc_18F6E        
;-------------------------------------------------------------------------------
loc_18F72:
                move.b  #$04, Obj_Routine(A0)                            ; $0024
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$0A, Obj_Map_Id(A0)                             ; $001A
                move.w  #$43C5, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$14, Obj_Width(A0)                              ; $0019
                move.w  Obj_X(A0), Obj_Control_Var_08(A0)         ; $0008, $0034  
;-------------------------------------------------------------------------------
loc_18F96:
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$0002, D0
                move.w  loc_18FAA(PC, D0), Obj_Control_Var_04(A0)  ; $0030
                bsr     Jmp_08_To_ModifySpriteAttr_2P          ; loc_19AFE
                rts               
;-------------------------------------------------------------------------------
loc_18FAA:
                dc.w    $F000, $F600   
;-------------------------------------------------------------------------------
loc_18FAE:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne.s   loc_18FC4
                tst.b   Obj_Control_Var_06(A0)                           ; $0032
                beq.s   loc_18FD0
                subq.b  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bra.s   loc_18FD0
loc_18FC4:
                cmpi.b  #$09, Obj_Control_Var_06(A0)                     ; $0032
                beq.s   loc_18FEE
                addq.b  #$01, Obj_Control_Var_06(A0)                     ; $0032
loc_18FD0:
                moveq   #$00, D3
                move.b  Obj_Control_Var_06(A0), D3                       ; $0032
                move.b  D3, Obj_Map_Id(A0)                               ; $001A
                add.w   D3, D3
                move.w  #$001B, D1
                move.w  #$0014, D2
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     loc_19B10
                rts
loc_18FEE:
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                bsr.s   loc_18FFC
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
loc_18FFC:
                bclr    D6, Obj_Status(A0)                               ; $0022
                beq     loc_190A0
                move.w  Obj_Control_Var_04(A0), Obj_Speed_Y(A1)   ; $0012, $0030
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$10, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_1902E
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
loc_1902E:
                btst    #$00, D0
                beq.s   loc_1906E
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$00, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$04, Obj_Control_Var_01(A1)                     ; $002D
                btst    #$01, D0
                bne.s   loc_1905E
                move.b  #$01, Obj_Control_Var_00(A1)                     ; $002C
loc_1905E:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_1906E
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_1906E:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_19084
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
loc_19084:
                cmpi.b  #$08, D0
                bne.s   loc_19096
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_19096:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512
loc_190A0:
                rts       
;-------------------------------------------------------------------------------
loc_190A2:
                move.b  #$00, Obj_Control_Var_0A(A0)                     ; $0036
                move.w  #$001F, D1
                move.w  #$000C, D2
                move.w  #$000D, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Jmp_00_To_SolidObject_2_A1             ; loc_19B0A
                cmpi.w  #$0001, D4
                bne.s   loc_190E8
                move.b  Obj_Status(A0), D1                               ; $0022
                move.w  Obj_X(A0), D2                                    ; $0008
                sub.w   Obj_X(A1), D2                                    ; $0008
                bcs.s   loc_190DE
                eori.b  #$01, D1
loc_190DE:
                andi.b  #$01, D1
                bne.s   loc_190E8
                bsr     loc_19164
loc_190E8:
                movem.l (A7)+, D1-D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                bsr     Jmp_00_To_SolidObject_2_A1             ; loc_19B0A
                cmpi.w  #$0001, D4
                bne.s   loc_19116
                move.b  Obj_Status(A0), D1                               ; $0022
                move.w  Obj_X(A0), D2                                    ; $0008
                sub.w   Obj_X(A1), D2                                    ; $0008
                bcs.s   loc_1910E
                eori.b  #$01, D1
loc_1910E:
                andi.b  #$01, D1
                bne.s   loc_19116
                bsr.s   loc_19164
loc_19116:
                tst.b   Obj_Control_Var_0A(A0)                           ; $0036
                bne.s   loc_19162
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                cmp.w   Obj_X(A0), D0                                    ; $0008
                beq.s   loc_19162
                bcc.s   loc_19144
                subq.b  #$04, Obj_Map_Id(A0)                             ; $001A
                subq.w  #$04, Obj_X(A0)                                  ; $0008
                cmp.w   Obj_X(A0), D0                                    ; $0008
                bcs.s   loc_1915E
                move.b  #$0A, Obj_Map_Id(A0)                             ; $001A
                move.w  Obj_Control_Var_08(A0), Obj_X(A0)         ; $0008, $0034
                bra.s   loc_1915E
loc_19144:
                subq.b  #$04, Obj_Map_Id(A0)                             ; $001A
                addq.w  #$04, Obj_X(A0)                                  ; $0008
                cmp.w   Obj_X(A0), D0                                    ; $0008
                bcc.s   loc_1915E
                move.b  #$0A, Obj_Map_Id(A0)                             ; $001A
                move.w  Obj_Control_Var_08(A0), Obj_X(A0)         ; $0008, $0034
loc_1915E:
                bsr     loc_191F8
loc_19162:
                rts
loc_19164:
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_191A0
                btst    #$00, Obj_Status(A1)                             ; $0022
                bne     loc_191F6
                tst.w   D0
                bne     loc_19186
                tst.w   Obj_Inertia(A1)                                  ; $0014
                beq.s   loc_191F6
                bpl.s   loc_191F0
                bra.s   loc_191F6
loc_19186:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                addi.w  #$0012, D0
                cmp.w   Obj_X(A0), D0                                    ; $0008
                beq.s   loc_191F0
                addq.w  #$01, Obj_X(A0)                                  ; $0008
                moveq   #$01, D0
                move.w  #$0040, D1
                bra.s   loc_191CE
loc_191A0:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_191F6
                tst.w   D0
                bne     loc_191B6
                tst.w   Obj_Inertia(A1)                                  ; $0014
                bmi.s   loc_191F0
                bra.s   loc_191F6
loc_191B6:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                subi.w  #$0012, D0
                cmp.w   Obj_X(A0), D0                                    ; $0008
                beq.s   loc_191F0
                subq.w  #$01, Obj_X(A0)                                  ; $0008
                moveq   #-$01, D0
                move.w  #$FFC0, D1
loc_191CE:
                add.w   D0, Obj_X(A1)                                    ; $0008
                move.w  D1, Obj_Inertia(A1)                              ; $0014
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                sub.w   Obj_X(A0), D0                                    ; $0008
                bcc.s   loc_191E8
                neg.w   D0
loc_191E8:
                addi.w  #$000A, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
loc_191F0:
                move.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
loc_191F6:
                rts
loc_191F8:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$60, D0
                beq     loc_192F8
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$05, D6
                bsr.s   loc_19212
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$06, D6
loc_19212:
                bclr    D6, Obj_Status(A0)                               ; $0022
                beq     loc_192F8
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                sub.w   Obj_X(A0), D0                                    ; $0008
                bcc.s   loc_19226
                neg.w   D0
loc_19226:
                addi.w  #$000A, D0
                lsl.w   #$07, D0
                neg.w   D0
                move.w  D0, Obj_Speed(A1)                                ; $0010
                subq.w  #$04, Obj_X(A1)                                  ; $0008
                bset    #$00, Obj_Status(A1)                             ; $0022
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_19254
                bclr    #$00, Obj_Status(A1)                             ; $0022
                addi.w  #$0008, Obj_X(A1)                                ; $0008
                neg.w   Obj_Speed(A1)                                    ; $0010
loc_19254:
                move.w  #$000F, Obj_Control_Var_02(A1)                   ; $002E
                move.w  Obj_Speed(A1), Obj_Inertia(A1)            ; $0010, $0014
                btst    #$02, Obj_Status(A1)                             ; $0022
                bne.s   loc_1926E
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
loc_1926E:
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_1927A
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
loc_1927A:
                btst    #$00, D0
                beq.s   loc_192BA
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$01, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$08, Obj_Control_Var_01(A1)                     ; $002D
                btst    #$01, D0
                bne.s   loc_192AA
                move.b  #$03, Obj_Control_Var_00(A1)                     ; $002C
loc_192AA:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_192BA
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_192BA:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_192D0
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
loc_192D0:
                cmpi.b  #$08, D0
                bne.s   loc_192E2
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_192E2:
                bclr    #$05, Obj_Status(A1)                             ; $0022
                move.b  #$01, Obj_Ani_Flag(A1)                           ; $001D
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512
loc_192F8:
                rts   
;------------------------------------------------------------------------------- 
Spring_Push_Boost_Animate_Data:; Dados não usados              ; loc_192FA
                dc.w    loc_192FE-Spring_Push_Boost_Animate_Data
                dc.w    loc_19320-Spring_Push_Boost_Animate_Data
loc_192FE:
                dc.b    $00, $00, $01, $02, $03, $04, $05, $06
                dc.b    $07, $08, $09, $09, $09, $09, $09, $09
                dc.b    $09, $09, $08, $07, $06, $05, $04, $03
                dc.b    $02, $01, $00, $00, $00, $00, $00, $00
                dc.b    $00, $FF
loc_19320:
                dc.b    $00, $0A, $0B, $0C, $0D, $0E, $0F, $10
                dc.b    $11, $12, $13, $13, $13, $13, $13, $13
                dc.b    $13, $13, $12, $11, $10, $0F, $0E, $0D
                dc.b    $0C, $0B, $0A, $0A, $0A, $0A, $0A, $0A
                dc.b    $0A, $FF
;------------------------------------------------------------------------------- 
Spring_Push_Boost_Mappings:                                    ; loc_19342:
                dc.w    loc_1937C-Spring_Push_Boost_Mappings
                dc.w    loc_193A6-Spring_Push_Boost_Mappings
                dc.w    loc_193D0-Spring_Push_Boost_Mappings
                dc.w    loc_193FA-Spring_Push_Boost_Mappings
                dc.w    loc_19424-Spring_Push_Boost_Mappings
                dc.w    loc_1944E-Spring_Push_Boost_Mappings
                dc.w    loc_19478-Spring_Push_Boost_Mappings
                dc.w    loc_194A2-Spring_Push_Boost_Mappings
                dc.w    loc_194CC-Spring_Push_Boost_Mappings
                dc.w    loc_194F6-Spring_Push_Boost_Mappings
                dc.w    loc_19520-Spring_Push_Boost_Mappings
                dc.w    loc_1954A-Spring_Push_Boost_Mappings
                dc.w    loc_19574-Spring_Push_Boost_Mappings
                dc.w    loc_1959E-Spring_Push_Boost_Mappings
                dc.w    loc_195C8-Spring_Push_Boost_Mappings
                dc.w    loc_195F2-Spring_Push_Boost_Mappings
                dc.w    loc_1961C-Spring_Push_Boost_Mappings
                dc.w    loc_19646-Spring_Push_Boost_Mappings
                dc.w    loc_19670-Spring_Push_Boost_Mappings
                dc.w    loc_1969A-Spring_Push_Boost_Mappings
                dc.w    loc_196C4-Spring_Push_Boost_Mappings
                dc.w    loc_196EE-Spring_Push_Boost_Mappings
                dc.w    loc_19718-Spring_Push_Boost_Mappings
                dc.w    loc_19742-Spring_Push_Boost_Mappings
                dc.w    loc_1976C-Spring_Push_Boost_Mappings
                dc.w    loc_19796-Spring_Push_Boost_Mappings
                dc.w    loc_197C0-Spring_Push_Boost_Mappings
                dc.w    loc_197EA-Spring_Push_Boost_Mappings
                dc.w    loc_19814-Spring_Push_Boost_Mappings
loc_1937C:
                dc.w    $0005
                dc.l    $EC0C3000, $3000FFF0
                dc.l    $0C083004, $3002FFF4
                dc.l    $04081007, $1003FFF4
                dc.l    $FC08300A, $3005FFF4
                dc.l    $F404100D, $1006FFF8
loc_193A6:
                dc.w    $0005
                dc.l    $EE0C3000, $3000FFF0
                dc.l    $0C083004, $3002FFF4
                dc.l    $04081007, $1003FFF4
                dc.l    $FC08300A, $3005FFF4
                dc.l    $F604100D, $1006FFF8
loc_193D0:
                dc.w    $0005
                dc.l    $F00C3000, $3000FFF0
                dc.l    $0C083004, $3002FFF4
                dc.l    $04081007, $1003FFF4
                dc.l    $FE08300A, $3005FFF4
                dc.l    $F804100D, $1006FFF8
loc_193FA:
                dc.w    $0005
                dc.l    $F20C3000, $3000FFF0
                dc.l    $0C083004, $3002FFF4
                dc.l    $06081007, $1003FFF4
                dc.l    $0008300A, $3005FFF4
                dc.l    $FA04100D, $1006FFF8
loc_19424:
                dc.w    $0005
                dc.l    $F40C3000, $3000FFF0
                dc.l    $0C083004, $3002FFF4
                dc.l    $06081007, $1003FFF4
                dc.l    $0008300A, $3005FFF4
                dc.l    $FC04100D, $1006FFF8
loc_1944E:
                dc.w    $0005
                dc.l    $F60C3000, $3000FFF0
                dc.l    $0C083004, $3002FFF4
                dc.l    $06081007, $1003FFF4
                dc.l    $0208300A, $3005FFF4
                dc.l    $FE04100D, $1006FFF8
loc_19478:
                dc.w    $0005
                dc.l    $F80C3000, $3000FFF0
                dc.l    $0C083004, $3002FFF4
                dc.l    $08081007, $1003FFF4
                dc.l    $0408300A, $3005FFF4
                dc.l    $0004100D, $1006FFF8
loc_194A2:
                dc.w    $0005
                dc.l    $FA0C3000, $3000FFF0
                dc.l    $0C083004, $3002FFF4
                dc.l    $08081007, $1003FFF4
                dc.l    $0408300A, $3005FFF4
                dc.l    $0204100D, $1006FFF8
loc_194CC:
                dc.w    $0005
                dc.l    $FC0C3000, $3000FFF0
                dc.l    $0C083004, $3002FFF4
                dc.l    $08081007, $1003FFF4
                dc.l    $0608300A, $3005FFF4
                dc.l    $0404100D, $1006FFF8
loc_194F6:
                dc.w    $0005
                dc.l    $FE0C3000, $3000FFF0
                dc.l    $0C083004, $3002FFF4
                dc.l    $0A081007, $1003FFF4
                dc.l    $0808300A, $3005FFF4
                dc.l    $0604100D, $1006FFF8
loc_19520:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFEC
                dc.l    $F4020016, $000BFFF4
                dc.l    $F4022019, $200CFFFC
                dc.l    $F801001C, $000E0004
loc_1954A:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFED
                dc.l    $F4020016, $000BFFF5
                dc.l    $F4022019, $200CFFFD
                dc.l    $F801001C, $000E0004
loc_19574:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFEE
                dc.l    $F4020016, $000BFFF6
                dc.l    $F4022019, $200CFFFE
                dc.l    $F801001C, $000E0004
loc_1959E:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFEF
                dc.l    $F4020016, $000BFFF7
                dc.l    $F4022019, $200CFFFF
                dc.l    $F801001C, $000E0004
loc_195C8:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFF0
                dc.l    $F4020016, $000BFFF8
                dc.l    $F4022019, $200CFFFE
                dc.l    $F801001C, $000E0004
loc_195F2:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFF1
                dc.l    $F4020016, $000BFFF9
                dc.l    $F4022019, $200CFFFF
                dc.l    $F801001C, $000E0004
loc_1961C:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFF2
                dc.l    $F4020016, $000BFFF8
                dc.l    $F4022019, $200CFFFE
                dc.l    $F801001C, $000E0004
loc_19646:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFF3
                dc.l    $F4020016, $000BFFF9
                dc.l    $F4022019, $200CFFFF
                dc.l    $F801001C, $000E0004
loc_19670:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFF4
                dc.l    $F4020016, $000BFFFA
                dc.l    $F4022019, $200C0000
                dc.l    $F801001C, $000E0004
loc_1969A:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFF5
                dc.l    $F4020016, $000BFFFB
                dc.l    $F4022019, $200C0001
                dc.l    $F801001C, $000E0004
loc_196C4:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFF6
                dc.l    $F4020016, $000BFFFC
                dc.l    $F4022019, $200C0000
                dc.l    $F801001C, $000E0004
loc_196EE:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFF7
                dc.l    $F4020016, $000BFFFD
                dc.l    $F4022019, $200C0001
                dc.l    $F801001C, $000E0004
loc_19718:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFF8
                dc.l    $F4020016, $000BFFFC
                dc.l    $F4022019, $200C0000
                dc.l    $F801001C, $000E0004
loc_19742:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFF9
                dc.l    $F4020016, $000BFFFD
                dc.l    $F4022019, $200C0001
                dc.l    $F801001C, $000E0004
loc_1976C:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFFA
                dc.l    $F4020016, $000BFFFE
                dc.l    $F4022019, $200C0002
                dc.l    $F801001C, $000E0004
loc_19796:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFFB
                dc.l    $F4020016, $000BFFFF
                dc.l    $F4022019, $200C0003
                dc.l    $F801001C, $000E0004
loc_197C0:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFFC
                dc.l    $F4020016, $000B0000
                dc.l    $F4022019, $200C0002
                dc.l    $F801001C, $000E0004
loc_197EA:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFFD
                dc.l    $F4020016, $000B0001
                dc.l    $F4022019, $200C0003
                dc.l    $F801001C, $000E0004
loc_19814:
                dc.w    $0005
                dc.l    $F003200F, $2007000C
                dc.l    $F4022013, $2009FFFE
                dc.l    $F4020016, $000B0000
                dc.l    $F4022019, $200C0002
                dc.l    $F801001C, $000E0004 
;===============================================================================
; Object 0x45 - Mola empurre para obter impulso na Oil Ocean
; [ End ] 
;===============================================================================
Obj46_Spring_Ball:                                          ; loc_1983E
;===============================================================================
; Object 0x46 - Bola emcima da mola, após pressionar o botão a bola ejeta
; [ Begin ]          podendo ser usada como veículo na Oil Ocean - Object não usado
;===============================================================================   
; loc_1983E:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1984C(PC, D0), D1
                jmp     loc_1984C(PC, D1)
;-------------------------------------------------------------------------------   
loc_1984C:
                dc.w    loc_19854-loc_1984C
                dc.w    loc_19912-loc_1984C
                dc.w    loc_19960-loc_1984C
                dc.w    loc_19A04-loc_1984C      
;------------------------------------------------------------------------------- 
loc_19854:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_19870
                bclr    #$07, $02(A2, D0)
                bset    #$00, $02(A2, D0)
                bne     Jmp_08_To_DeleteObject                 ; loc_19AEC
loc_19870:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$0F, Obj_Height_2(A0)                           ; $0016
                move.b  #$0F, Obj_Width_2(A0)                            ; $0017
                move.l  #Spring_Ball_Mappings, Obj_Map(A0) ; loc_19A7A, $0004
                move.w  #$6354, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_08_To_ModifySpriteAttr_2P          ; loc_19AFE
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.w  Obj_X(A0), Obj_Control_Var_08(A0)         ; $0008, $0034
                move.w  Obj_Y(A0), Obj_Control_Var_0A(A0)         ; $000C, $0036
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0000, Obj_Inertia(A0)                          ; $0014
                move.b  #$01, Obj_Ani_Time_2(A0)                         ; $001F
                bsr     Jmp_01_To_SingleObjectLoad             ; loc_19AF2
                bne.s   loc_1990E
                move.b  #$46, Obj_Id(A1)                                 ; $0000
                addq.b  #$06, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0012, Obj_Y(A1)                                ; $000C
                move.l  #Spring_Push_Boost_Mappings, Obj_Map(A1) ; loc_19342, $0004
                move.w  #$43C5, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$09, Obj_Map_Id(A1)                             ; $001A
                move.l  A0, Obj_Control_Var_10(A1)                       ; $003C
loc_1990E:
                move.l  A1, Obj_Control_Var_10(A0)                       ; $003C
;------------------------------------------------------------------------------- 
loc_19912:
                btst    #$06, ($FFFFF607).w
                bne.s   loc_1992C
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$04, D0
                tst.b   $00(A2, D0)
                beq.s   loc_19958
loc_1992C:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bset    #$01, Obj_Status(A0)                             ; $0022
                move.w  #$FD00, Obj_Speed_Y(A0)                          ; $0012
                move.w  #$0100, Obj_Inertia(A0)                          ; $0014
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.b  #$01, Obj_Control_Var_04(A1)                     ; $0030
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_19958
                neg.w   Obj_Inertia(A0)                                  ; $0014
loc_19958:
                bsr     loc_19A18
                bra     Jmp_08_To_MarkObjGone                  ; loc_19AF8     
;------------------------------------------------------------------------------- 
loc_19960:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     Jmp_05_To_SpeedToPos                   ; loc_19B16
                btst    #$01, Obj_Status(A0)                             ; $0022
                beq.s   loc_199B4
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                bmi.s   loc_199B2
                move.w  (Sonic_Level_Limits_Max_Y).w, D0             ; $FFFFEECE
                addi.w  #$00E0, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcs.s   loc_199EC
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl     loc_199B2
                add.w   D1, Obj_Y(A0)                                    ; $000C
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
                bclr    #$01, Obj_Status(A0)                             ; $0022
                move.w  #$0100, Obj_Speed(A0)                            ; $0010
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_199B2
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_199B2:
                bra.s   loc_199CC
loc_199B4:
                jsr     (ObjHitFloor)                          ; loc_14204
                cmpi.w  #$0008, D1
                blt.s   loc_199C8
                bset    #$01, Obj_Status(A0)                             ; $0022
                bra.s   loc_199CC
loc_199C8:
                add.w   D1, Obj_Y(A0)                                    ; $000C
loc_199CC:
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  (A7)+, D4
                bsr     Jmp_02_To_SolidObject                  ; loc_19B04
                bsr     loc_19A18
                bra     Jmp_08_To_MarkObjGone                  ; loc_19AF8
loc_199EC:
                move.w  (A7)+, D4
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_19A00
                bclr    #$07, $02(A2, D0)
loc_19A00:
                bra     Jmp_08_To_DeleteObject                 ; loc_19AEC   
;------------------------------------------------------------------------------- 
loc_19A04:
                tst.b   Obj_Control_Var_04(A0)                           ; $0030
                beq.s   loc_19A14
                subq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                bne.s   loc_19A14
                clr.b   Obj_Control_Var_04(A0)                           ; $0030
loc_19A14:
                bra     Jmp_08_To_MarkObjGone                  ; loc_19AF8
loc_19A18:
                tst.b   Obj_Map_Id(A0)                                   ; $001A
                beq.s   loc_19A26
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                rts
loc_19A26:
                move.b  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_19A52
                bmi.s   loc_19A5A
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_19A52
                neg.b   D0
                addq.b  #$08, D0
                bcs.s   loc_19A3C
                moveq   #$00, D0
loc_19A3C:
                move.b  D0, Obj_Ani_Time(A0)                             ; $001E
                move.b  Obj_Ani_Time_2(A0), D0                           ; $001F
                addq.b  #$01, D0
                cmpi.b  #$04, D0
                bne.s   loc_19A4E
                moveq   #$01, D0
loc_19A4E:
                move.b  D0, Obj_Ani_Time_2(A0)                           ; $001F
loc_19A52:
                move.b  Obj_Ani_Time_2(A0), Obj_Map_Id(A0)        ; $001A, $001F
                rts
loc_19A5A:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_19A52
                addq.b  #$08, D0
                bcs.s   loc_19A66
                moveq   #$00, D0
loc_19A66:
                move.b  D0, Obj_Ani_Time(A0)                             ; $001E
                move.b  Obj_Ani_Time_2(A0), D0                           ; $001F
                subq.b  #$01, D0
                bne.s   loc_19A74
                moveq   #$03, D0
loc_19A74:
                move.b  D0, Obj_Ani_Time_2(A0)                           ; $001F
                bra.s   loc_19A52            
;-------------------------------------------------------------------------------
Spring_Ball_Mappings:                                          ; loc_19A7A
                dc.w    loc_19A82-Spring_Ball_Mappings
                dc.w    loc_19AA4-Spring_Ball_Mappings
                dc.w    loc_19AC6-Spring_Ball_Mappings
                dc.w    loc_19AD8-Spring_Ball_Mappings
loc_19A82:
                dc.w    $0004
                dc.l    $F0050000, $0000FFF0
                dc.l    $F0050004, $00020000
                dc.l    $00051804, $1802FFF0
                dc.l    $00051004, $10020000
loc_19AA4:
                dc.w    $0004
                dc.l    $F0050008, $0004FFF0
                dc.l    $F0050808, $08040000
                dc.l    $00051008, $1004FFF0
                dc.l    $00051808, $18040000
loc_19AC6:
                dc.w    $0002
                dc.l    $F00D000C, $0006FFF0
                dc.l    $000D180C, $1806FFF0
loc_19AD8:
                dc.w    $0002
                dc.l    $F00D080C, $0806FFF0
                dc.l    $000D100C, $1006FFF0 
;===============================================================================
; Object 0x46 - Bola emcima da mola, após pressionar o botão a bola ejeta
; [ Begin ]          podendo ser usada como veículo na Oil Ocean - Object não usado
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_08_To_DeleteObject:                                        ; loc_19AEC
		jmp     (DeleteObject)                         ; loc_D314
Jmp_01_To_SingleObjectLoad:                                    ; loc_19AF2
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_08_To_MarkObjGone:                                         ; loc_19AF8
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_08_To_ModifySpriteAttr_2P:                                 ; loc_19AFE
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_02_To_SolidObject:                                         ; loc_19B04
		jmp     (SolidObject)                          ; loc_F344
Jmp_00_To_SolidObject_2_A1:                                    ; loc_19B0A
		jmp     (SolidObject_2_A1)                     ; loc_F3B4
loc_19B10:
		jmp     (loc_F494)
Jmp_05_To_SpeedToPos:                                          ; loc_19B16
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj47_Switch:                                               ; loc_19B1C
;===============================================================================
; Object 0x47 - Switch used to open certain doors from zones
; [ Begin ] 
;===============================================================================
; loc_19B1C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_19B2A(PC, D0), D1
                jmp     loc_19B2A(PC, D1)
;-------------------------------------------------------------------------------  
loc_19B2A:
                dc.w    loc_19B2E-loc_19B2A
                dc.w    loc_19B5A-loc_19B2A        
;-------------------------------------------------------------------------------  
loc_19B2E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Switch_Mappings, Obj_Map(A0)   ; loc_19BBE, $0004
                move.w  #$0424, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_09_To_ModifySpriteAttr_2P          ; loc_19BEA
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                addq.w  #$04, Obj_Y(A0)                                  ; $000C  
;-------------------------------------------------------------------------------  
loc_19B5A:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_19BBA
                move.w  #$001B, D1
                move.w  #$0004, D2
                move.w  #$0005, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_03_To_SolidObject                  ; loc_19BF0
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                lea     ($FFFFF7E0).w, A3
                lea     $00(A3, D0), A3
                moveq   #$00, D3
                btst    #$06, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_19B96
                moveq   #$07, D3
loc_19B96:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne.s   loc_19BA4
                bclr    D3, (A3)
                bra.s   loc_19BBA
loc_19BA4:
                tst.b   (A3)
                bne.s   loc_19BB2
                move.w  #$00CD, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_19BB2:
                bset    D3, (A3)
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
loc_19BBA:
                bra     Jmp_09_To_MarkObjGone        
;-------------------------------------------------------------------------------
Switch_Mappings:
                include 'mappings/sprite/obj47.asm'
;===============================================================================
; Object 0x47 - Switch used to open certain doors from zones
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_09_To_MarkObjGone:
		jmp     (MarkObjGone)
Jmp_09_To_ModifySpriteAttr_2P:
		jmp     (ModifySpriteAttr_2P)
Jmp_03_To_SolidObject:
		jmp     (SolidObject)
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj3D_Break_Boost:                                          ; loc_19BF8
;===============================================================================
; Object 0x3D - Obstacle breaks to gain momentum from Oil Ocean
; [ Begin ]
;===============================================================================  
; loc_19BF8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0
                move.w  loc_19C06(PC, D0), D1
                jmp     loc_19C06(PC, D1)
;-------------------------------------------------------------------------------  
loc_19C06:
		dc.w    loc_19C0E-loc_19C06
		dc.w    loc_19C4E-loc_19C06
		dc.w    loc_19D64-loc_19C06
		dc.w    loc_19D7A-loc_19C06         
;-------------------------------------------------------------------------------  
loc_19C0E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Break_Boost_Mappings, Obj_Map(A0) ; loc_19EB4, $0004
                move.w  #$6332, Obj_Art_VRAM(A0)                         ; $0002
                tst.b   Obj_Subtype(A0)                                  ; $0028
                beq.s   loc_19C32
                move.w  #$63FF, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
loc_19C32:
                bsr     Jmp_0A_To_ModifySpriteAttr_2P          ; loc_1A022
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                bset    #$07, Obj_Status(A0)                             ; $0022
                move.b  #$04, Obj_Priority(A0)                           ; $0018  
;-------------------------------------------------------------------------------  
loc_19C4E:
                move.b  ($FFFFB01C).w, Obj_Control_Var_06(A0)            ; $0032
                move.b  ($FFFFB05C).w, Obj_Control_Var_07(A0)            ; $0033
                move.w  ($FFFFB012).w, Obj_Control_Var_08(A0)            ; $0034
                move.w  ($FFFFB052).w, Obj_Control_Var_0A(A0)            ; $0036
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_04_To_SolidObject                  ; loc_1A02E
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne.s   loc_19C88
loc_19C84:
                bra     Jmp_0A_To_MarkObjGone                  ; loc_1A010
loc_19C88:
                cmpi.b  #$18, D0
                bne.s   loc_19CBE
                cmpi.b  #$02, Obj_Control_Var_06(A0)                     ; $0032
                beq.s   loc_19C9E
                cmpi.b  #$02, Obj_Control_Var_07(A0)                     ; $0033
                bne.s   loc_19C84
loc_19C9E:
                lea     (Player_One).w, A1                           ; $FFFFB000
                move.b  Obj_Control_Var_06(A0), D0                       ; $0032
                move.w  Obj_Control_Var_08(A0), D1                       ; $0034
                bsr.s   loc_19CDA
                lea     (Player_Two).w, A1                           ; $FFFFB040
                move.b  Obj_Control_Var_07(A0), D0                       ; $0033
                move.w  Obj_Control_Var_0A(A0), D1                       ; $0036
                bsr.s   loc_19CDA
                bra     loc_19D2C
loc_19CBE:
                move.b  D0, D1
                andi.b  #$08, D1
                beq.s   loc_19D10
                cmpi.b  #$02, Obj_Control_Var_06(A0)                     ; $0032
                bne.s   loc_19C84
                lea     (Obj_Memory_Address).w, A1                   ; $FFFFB000
                move.w  Obj_Control_Var_08(A0), D1                       ; $0034
                bsr.s   loc_19CE0
                bra.s   loc_19D2C
loc_19CDA:
                cmpi.b  #$02, D0
                bne.s   loc_19CFC
loc_19CE0:
                bset    #$02, Obj_Status(A1)                             ; $0022
                move.b  #$0E, Obj_Height_2(A1)                           ; $0016
                move.b  #$07, Obj_Width_2(A1)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.w  D1, Obj_Speed_Y(A1)                              ; $0012
loc_19CFC:
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                rts
loc_19D10:
                andi.b  #$10, D0
                beq     loc_19C84
                cmpi.b  #$02, Obj_Control_Var_07(A0)                     ; $0033
                bne     loc_19C84
                lea     (Player_Two).w, A1                           ; $FFFFB040
                move.w  Obj_Control_Var_0A(A0), D1                       ; $0036
                bsr.s   loc_19CE0
loc_19D2C:
                andi.b  #$E7, Obj_Status(A0)                             ; $0022
                bsr     Jmp_06_To_SingleObjectLoad_2           ; loc_1A016
                bne.s   loc_19D50
                moveq   #$00, D0
                move.w  #$000A, D1
loc_19D3E:
                move.l  $00(A0, D0), $00(A1, D0)
                addq.w  #$04, D0
                dbra    D1, loc_19D3E
                move.b  #$06, Obj_Routine(A1)                            ; $0024
loc_19D50:
                lea     (Break_Boost_Data), A4                 ; loc_19E74
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                moveq   #$0F, D1
                move.w  #$0018, D2
                bsr     Jmp_01_To_Smash_Object                 ; loc_1A028      
;-------------------------------------------------------------------------------  
loc_19D64:
                bsr     Jmp_06_To_SpeedToPos                   ; loc_1A034
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     Jmp_09_To_DeleteObject                 ; loc_1A00A
                bra     Jmp_05_To_DisplaySprite                ; loc_1A004      
;-------------------------------------------------------------------------------  
loc_19D7A:
                lea     (Player_One).w, A1                           ; $FFFFB000
                lea     Obj_Control_Var_00(A0), A4                       ; $002C
                bsr.s   loc_19D9C
                lea     (Player_Two).w, A1                           ; $FFFFB040
                lea     Obj_Control_Var_0A(A0), A4                       ; $0036
                bsr.s   loc_19D9C
                move.b  Obj_Control_Var_00(A0), D0                       ; $002C
                add.b   Obj_Control_Var_0A(A0), D0                       ; $0036
                beq     Jmp_02_To_MarkObjGone_3                ; loc_1A01C
                rts
loc_19D9C:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  loc_19DA8(PC, D0), D0
                jmp     loc_19DA8(PC, D0)
;-------------------------------------------------------------------------------
loc_19DA8:
                dc.w    loc_19DAC-loc_19DA8
                dc.w    loc_19E4E-loc_19DA8    
;-------------------------------------------------------------------------------
loc_19DAC:
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                addi.w  #$0010, D0
                cmpi.w  #$0020, D0
                bcc     loc_19E4C
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                tst.b   Obj_Subtype(A0)                                  ; $0028
                beq.s   loc_19DD2
                addi.w  #$0010, D1
loc_19DD2:
                cmpi.w  #$0010, D1
                bcc     loc_19E4C
                addq.b  #$02, (A4)
                move.b  #$81, Obj_Timer(A1)                              ; $002A
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.w  #$0800, Obj_Inertia(A1)                          ; $0014
                tst.b   Obj_Subtype(A0)                                  ; $0028
                beq.s   loc_19E08
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
                move.w  #$F800, Obj_Speed_Y(A1)                          ; $0012
                bra.s   loc_19E1A
loc_19E08:
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  #$0800, Obj_Speed(A1)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
loc_19E1A:
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
                bset    #$01, Obj_Status(A1)                             ; $0022
                bset    #$03, Obj_Status(A1)                             ; $0022
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.b  D0, Obj_Control_Var_11(A1)                       ; $003D
                move.w  #$00BE, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_19E4C:
                rts  
;-------------------------------------------------------------------------------  
loc_19E4E:
                move.l  Obj_X(A1), D2                                    ; $0008
                move.l  Obj_Y(A1), D3                                    ; $000C
                move.w  Obj_Speed(A1), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  Obj_Speed_Y(A1), D0                              ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, Obj_X(A1)                                    ; $0008
                move.l  D3, Obj_Y(A1)                                    ; $000C
                rts               
;-------------------------------------------------------------------------------
Break_Boost_Data:                                              ; loc_19E74
                dc.w    $FC00, $FC00, $FE00, $FC00, $0200, $FC00, $0400, $FC00
                dc.w    $FC40, $FE00, $FE40, $FE00, $01C0, $FE00, $03C0, $FE00
                dc.w    $FC80, $0200, $FE80, $0200, $0180, $0200, $0380, $0200
                dc.w    $FCC0, $0400, $FEC0, $0400, $0140, $0400, $0340, $0400                
;-------------------------------------------------------------------------------  
Break_Boost_Mappings:                                          ; loc_19EB4
                  include 'mappings/sprite/obj3D.asm'
;===============================================================================
; Object 0x3D - Obstacle breaks to gain momentum from Oil Ocean
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_05_To_DisplaySprite:                                       ; loc_1A004
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_09_To_DeleteObject:                                        ; loc_1A00A
		jmp     (DeleteObject)                         ; loc_D314
Jmp_0A_To_MarkObjGone:                                         ; loc_1A010
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_06_To_SingleObjectLoad_2:                                  ; loc_1A016
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_02_To_MarkObjGone_3:                                       ; loc_1A01C
		jmp     (MarkObjGone_3)                        ; loc_D26C
Jmp_0A_To_ModifySpriteAttr_2P:                                 ; loc_1A022
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_01_To_Smash_Object:                                        ; loc_1A028
		jmp     (Smash_Object)                         ; loc_CD24
Jmp_04_To_SolidObject:                                         ; loc_1A02E
		jmp     (SolidObject)                          ; loc_F344
Jmp_06_To_SpeedToPos:                                          ; loc_1A034
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj48_Cannon:                                               ; loc_1A03C
;===============================================================================
; Object 0x48 - Cannons from Oil Ocean
; [ Begin ] 
;===============================================================================   
; loc_1A03C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1A05A(PC, D0), D1
                jsr     loc_1A05A(PC, D1)
                move.b  Obj_Control_Var_00(A0), D0                       ; $002C
                add.b   Obj_Control_Var_0A(A0), D0                       ; $0036
                beq     Jmp_0B_To_MarkObjGone                  ; loc_1A43E
                bra     Jmp_06_To_DisplaySprite                ; loc_1A438
;-------------------------------------------------------------------------------
loc_1A05A:
                dc.w    loc_1A06E-loc_1A05A
                dc.w    loc_1A0BE-loc_1A05A       
;-------------------------------------------------------------------------------  
loc_1A05E:
                dc.b    $04, $00, $06, $07, $07, $00, $05, $07
                dc.b    $05, $00, $04, $07, $06, $00, $07, $07     
;------------------------------------------------------------------------------- 
loc_1A06E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Cannon_Mappings, Obj_Map(A0)   ; loc_1A2B6, $0004
                move.w  #$6368, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_0B_To_ModifySpriteAttr_2P          ; loc_1A444
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1A096
                addq.w  #$04, D0
loc_1A096:
                add.w   D0, D0
                move.b  loc_1A05E(PC, D0), Obj_Flags(A0)           ; $0001
                move.b  loc_1A05E+$01(PC, D0), Obj_Control_Var_13(A0) ; $003F
                beq.s   loc_1A0AC
                move.b  #$01, Obj_Control_Var_12(A0)                     ; $003E
loc_1A0AC:
                move.b  Obj_Control_Var_13(A0), Obj_Map_Id(A0)    ; $001A, $003F
                move.b  #$28, Obj_Width(A0)                              ; $0019
                move.b  #$01, Obj_Priority(A0)                           ; $0018  
;-------------------------------------------------------------------------------
loc_1A0BE:
                lea     (Player_One).w, A1                           ; $FFFFB000
                lea     Obj_Control_Var_00(A0), A4                       ; $002C
                moveq   #$2C, D2
                bsr.s   loc_1A0D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                lea     Obj_Control_Var_0A(A0), A4                       ; $0036
                moveq   #$36, D2
loc_1A0D4:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  loc_1A0E0(PC, D0), D0
                jmp     loc_1A0E0(PC, D0)   
;-------------------------------------------------------------------------------
loc_1A0E0:
                dc.w    loc_1A0E8-loc_1A0E0
                dc.w    loc_1A19C-loc_1A0E0
                dc.w    loc_1A24A-loc_1A0E0
                dc.w    loc_1A2AA-loc_1A0E0  
;-------------------------------------------------------------------------------   
loc_1A0E8:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne     loc_1A19A
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                addi.w  #$0010, D0
                cmpi.w  #$0020, D0
                bcc     loc_1A19A
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                addi.w  #$0010, D1
                cmpi.w  #$0020, D1
                bcc     loc_1A19A
                btst    #$03, Obj_Status(A1)                             ; $0022
                beq.s   loc_1A136
                moveq   #$00, D0
                move.b  Obj_Control_Var_11(A1), D0                       ; $003D
                lsl.w   #$06, D0
                addi.l  #Obj_Memory_Address, D0                      ; $FFFFB000
                move.l  D0, A3
                move.b  #$00, $00(A3, D2)
loc_1A136:
                move.w  A0, D0
                subi.w  #$B000, D0
                lsr.w   #$06, D0
                andi.w  #$007F, D0
                move.b  D0, Obj_Control_Var_11(A1)                       ; $003D
                addq.b  #$02, (A4)
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$81, Obj_Timer(A1)                              ; $002A
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.w  #$1000, Obj_Inertia(A1)                          ; $0014
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
                bset    #$01, Obj_Status(A1)                             ; $0022
                bset    #$03, Obj_Status(A1)                             ; $0022
                move.b  Obj_Control_Var_13(A0), Obj_Map_Id(A0)    ; $001A, $003F
                move.w  #$00BE, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_1A19A:
                rts  
;-------------------------------------------------------------------------------
loc_1A19C:
                tst.b   Obj_Control_Var_12(A0)                           ; $003E
                bne.s   loc_1A1C4
                cmpi.b  #$07, Obj_Map_Id(A0)                             ; $001A
                beq.s   loc_1A1DE
                subq.w  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_1A1C2
                move.w  #$0007, Obj_Ani_Time(A0)                         ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$07, Obj_Map_Id(A0)                             ; $001A
                beq.s   loc_1A1DE
loc_1A1C2:
                rts
loc_1A1C4:
                tst.b   Obj_Map_Id(A0)                                   ; $001A
                beq.s   loc_1A1DE
                subq.w  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_1A1C2
                move.w  #$0007, Obj_Ani_Time(A0)                         ; $001E
                subq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                beq.s   loc_1A1DE
                rts
loc_1A1DE:
                addq.b  #$02, (A4)
                move.b  Obj_Subtype(A0), D0                              ; $0028
                addq.b  #$01, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1A1F0
                subq.b  #$02, D0
loc_1A1F0:
                andi.w  #$0003, D0
                add.w   D0, D0
                add.w   D0, D0
                move.w  loc_1A23A(PC, D0), Obj_Speed(A1)           ; $0010
                move.w  loc_1A23A+$02(PC, D0), Obj_Speed_Y(A1)     ; $0012
                move.w  #$0003, Obj_Ani_Time(A0)                         ; $001E
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bpl.s   loc_1A238
                move.b  #$00, Obj_Timer(A1)                              ; $002A
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$00, Obj_Control_Var_10(A1)                     ; $003C
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  #$06, (A4)
                move.w  #$0007, Obj_Control_Var_10(A0)                   ; $003C
loc_1A238:
                rts
;-------------------------------------------------------------------------------
loc_1A23A:
                dc.w    $0000, $F000, $1000, $0000, $0000, $1000, $F000, $0000 
;-------------------------------------------------------------------------------
loc_1A24A:
                cmpi.b  #$02, Obj_P_Flips_Remaining(A0)                  ; $002C
                beq.s   loc_1A284
                cmpi.b  #$02, Obj_Player_Next_Tilt(A0)                   ; $0036
                beq.s   loc_1A284
                subq.w  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_1A284
                move.w  #$0001, Obj_Ani_Time(A0)                         ; $001E
                tst.b   Obj_Player_Top_Solid(A0)                         ; $003E
                beq.s   loc_1A27A
                cmpi.b  #$07, Obj_Map_Id(A0)                             ; $001A
                beq.s   loc_1A284
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                bra.s   loc_1A284
loc_1A27A:
                tst.b   Obj_Map_Id(A0)                                   ; $001A
                beq.s   loc_1A284
                subq.b  #$01, Obj_Map_Id(A0)                             ; $001A
loc_1A284:
                move.l  Obj_X(A1), D2                                    ; $0008
                move.l  Obj_Y(A1), D3                                    ; $000C
                move.w  Obj_Speed(A1), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  Obj_Speed_Y(A1), D0                              ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, Obj_X(A1)                                    ; $0008
                move.l  D3, Obj_Y(A1)                                    ; $000C
                rts    
;-------------------------------------------------------------------------------
loc_1A2AA:
                subq.w  #$01, Obj_Player_Jump(A0)                        ; $003C
                bpl.s   loc_1A2B4
                move.b  #$00, (A4)
loc_1A2B4:
                rts      
;-------------------------------------------------------------------------------  
Cannon_Mappings:                                               ; loc_1A2B6
		include 'mappings/sprite/obj48.asm'      
;===============================================================================
; Object 0x48 - Cannons from the Oil Ocean
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_06_To_DisplaySprite:                                       ; loc_1A438
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_0B_To_MarkObjGone:                                         ; loc_1A43E
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_0B_To_ModifySpriteAttr_2P:                                 ; loc_1A444
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj22_Arrow_Shooter:                                        ; loc_1A44C
;===============================================================================
; Object 0x22 - Atirador de setas na Neo Green Hill
; [ Begin ] 
;===============================================================================
; loc_1A44C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1A45A(PC, D0), D1
                jmp     loc_1A45A(PC, D1)
;-------------------------------------------------------------------------------    
loc_1A45A:
                dc.w    loc_1A464-loc_1A45A
                dc.w    loc_1A498-loc_1A45A
                dc.w    loc_1A4E2-loc_1A45A
                dc.w    loc_1A532-loc_1A45A
                dc.w    loc_1A576-loc_1A45A    
;------------------------------------------------------------------------------- 
loc_1A464:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Arrow_Shooter_Mappings, Obj_Map(A0) ; loc_1A5BC, $0004
                move.w  #$0417, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_0C_To_ModifySpriteAttr_2P          ; loc_1A638
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                andi.b  #$0F, Obj_Subtype(A0)                            ; $0028
;------------------------------------------------------------------------------- 
loc_1A498:
                cmpi.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                beq.s   loc_1A4BE
                moveq   #$00, D2
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_1A4CC
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr.s   loc_1A4CC
                tst.b   D2
                bne.s   loc_1A4BA
                tst.b   Obj_Ani_Number(A0)                               ; $001C
                beq.s   loc_1A4BA
                moveq   #$02, D2
loc_1A4BA:
                move.b  D2, Obj_Ani_Number(A0)                           ; $001C
loc_1A4BE:
                lea     (Arrow_Shooter_Animate_Data), A1       ; loc_1A5A6
                bsr     Jmp_01_To_AnimateSprite                ; loc_1A632
                bra     Jmp_0C_To_MarkObjGone                  ; loc_1A62C
loc_1A4CC:
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcc.s   loc_1A4D8
                neg.w   D0
loc_1A4D8:
                cmpi.w  #$0040, D0
                bcc.s   loc_1A4E0
                moveq   #$01, D2
loc_1A4E0:
                rts  
;------------------------------------------------------------------------------- 
loc_1A4E2:
                bsr     Jmp_02_To_SingleObjectLoad             ; loc_1A626
                bne.s   loc_1A520
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                addq.b  #$06, Obj_Routine(A1)                            ; $0024
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.w  #$00DB, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_1A520:
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                lea     (Arrow_Shooter_Animate_Data), A1       ; loc_1A5A6
                bsr     Jmp_01_To_AnimateSprite                ; loc_1A632
                bra     Jmp_0C_To_MarkObjGone                  ; loc_1A62C  
;------------------------------------------------------------------------------- 
loc_1A532:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$08, Obj_Height_2(A0)                           ; $0016
                move.b  #$10, Obj_Width_2(A0)                            ; $0017
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$9B, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0400, Obj_Speed(A0)                            ; $0010
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1A56C
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_1A56C:
                move.w  #$00AE, D0
                jsr     (Play_Sfx)                             ; loc_1512   
;------------------------------------------------------------------------------- 
loc_1A576:
                bsr     Jmp_07_To_SpeedToPos                   ; loc_1A63E
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_1A596
                moveq   #-$08, D3
                bsr     Object_HitWall_Left                    ; loc_14490
                tst.w   D1
                bmi     loc_1A592
                bra     Jmp_0C_To_MarkObjGone                  ; loc_1A62C
loc_1A592:
                bra     Jmp_0A_To_DeleteObject                 ; loc_1A620
loc_1A596:
                moveq   #$08, D3
                bsr     Object_HitWall_Right                   ; loc_1430A
                tst.w   D1
                bmi     loc_1A592
                bra     Jmp_0C_To_MarkObjGone                  ; loc_1A62C              
;-------------------------------------------------------------------------------  
Arrow_Shooter_Animate_Data:                                    ; loc_1A5A6
                dc.w    loc_1A5AC-Arrow_Shooter_Animate_Data
                dc.w    loc_1A5AF-Arrow_Shooter_Animate_Data
                dc.w    loc_1A5B3-Arrow_Shooter_Animate_Data
loc_1A5AC:
                dc.b    $1F, $01, $FF
loc_1A5AF:
                dc.b    $03, $01, $02, $FF
loc_1A5B3:
                dc.b    $07, $03, $04, $FC, $04, $03, $01, $FD
                dc.b    $00  
;-------------------------------------------------------------------------------   
Arrow_Shooter_Mappings:                                        ; loc_1A5BC
                dc.w    loc_1A5C6-Arrow_Shooter_Mappings
                dc.w    loc_1A5D0-Arrow_Shooter_Mappings
                dc.w    loc_1A5E2-Arrow_Shooter_Mappings
                dc.w    loc_1A5FC-Arrow_Shooter_Mappings
                dc.w    loc_1A60E-Arrow_Shooter_Mappings
loc_1A5C6:
                dc.w    $0001
                dc.l    $FC0C2000, $2000FFF0
loc_1A5D0:
                dc.w    $0002
                dc.l    $F8092004, $2002FFF0
                dc.l    $F801200B, $20050008
loc_1A5E2:
                dc.w    $0003
                dc.l    $FC00000A, $0005FFFC
                dc.l    $F8092004, $2002FFF0
                dc.l    $F801200B, $20050008
loc_1A5FC:
                dc.w    $0002
                dc.l    $F8092004, $2002FFF0
                dc.l    $F801200D, $20060008
loc_1A60E:
                dc.w    $0002
                dc.l    $F8092004, $2002FFF0
                dc.l    $F801200F, $20070008    
;===============================================================================
; Object 0x22 - Atirador de setas na Neo Green Hill
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_0A_To_DeleteObject:                                        ; loc_1A620
		jmp     (DeleteObject)                         ; loc_D314
Jmp_02_To_SingleObjectLoad:                                    ; loc_1A626
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_0C_To_MarkObjGone:                                         ; loc_1A62C
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_01_To_AnimateSprite:                                       ; loc_1A632
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_0C_To_ModifySpriteAttr_2P:                                 ; loc_1A638
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_07_To_SpeedToPos:                                          ; loc_1A63E
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj23_Pillar:                                               ; loc_1A644
;===============================================================================
; Object 0x23 - Pilar que solta a parte debaixo na Neo Green Hill
; [ Begin ] 
;===============================================================================
; loc_1A644
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1A652(PC, D0), D1
                jmp     loc_1A652(PC, D1)
;-------------------------------------------------------------------------------
loc_1A652:
                dc.w    loc_1A656-loc_1A652
                dc.w    loc_1A6DA-loc_1A652         
;-------------------------------------------------------------------------------
loc_1A656:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Pillar_Mappings, Obj_Map(A0)   ; loc_1A79E, $0004
                move.w  #$2000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_0D_To_ModifySpriteAttr_2P          ; loc_1AEA4
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$20, Obj_Height_2(A0)                           ; $0016
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                bsr     Jmp_07_To_SingleObjectLoad_2           ; loc_1AE9E
                bne.s   loc_1A6DA
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                addq.b  #$02, Obj_Routine(A1)                            ; $0024
                addq.b  #$02, Obj_Routine_2(A1)                          ; $0025
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_X(A0), Obj_Control_Var_04(A1)         ; $0008, $0030
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0030, Obj_Y(A1)                                ; $000C
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  #$10, Obj_Height_2(A1)                           ; $0016
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$01, Obj_Map_Id(A1)                             ; $001A  
;-------------------------------------------------------------------------------
loc_1A6DA:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_1A700
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     Jmp_05_To_SolidObject                  ; loc_1AEAA
                bra     Jmp_0D_To_MarkObjGone                  ; loc_1AE98
loc_1A700:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_1A70E(PC, D0), D1
                jmp     loc_1A70E(PC, D1)        
;-------------------------------------------------------------------------------
loc_1A70E:
                dc.w    loc_1A744-loc_1A70E
                dc.w    loc_1A716-loc_1A70E
                dc.w    loc_1A746-loc_1A70E
                dc.w    loc_1A770-loc_1A70E      
;-------------------------------------------------------------------------------
loc_1A716:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne.s   loc_1A744
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_1A726
                lea     (Player_Two).w, A1                           ; $FFFFB040
loc_1A726:
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcc.s   loc_1A732
                neg.w   D0
loc_1A732:
                cmpi.w  #$0080, D0
                bcc.s   loc_1A744
                move.b  #$04, Obj_Routine_2(A0)                          ; $0025
                move.w  #$0008, Obj_Control_Var_08(A0)                   ; $0034    
;-------------------------------------------------------------------------------
loc_1A744:
                rts     
;-------------------------------------------------------------------------------
loc_1A746:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                subq.w  #$01, D0
                bcc.s   loc_1A754
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                rts
loc_1A754:
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034
                move.b  loc_1A768(PC, D0), D0
                ext.w   D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_X(A0)                                    ; $0008
                rts     
;-------------------------------------------------------------------------------
loc_1A768:
                dc.b    $00, $01, $FF, $01, $00, $FF, $00, $01    
;-------------------------------------------------------------------------------
loc_1A770:
                bsr     Jmp_08_To_SpeedToPos                   ; loc_1AEB0
                addi.w  #$0038, Obj_Speed_Y(A0)                          ; $0012
                bsr     ObjHitFloor                            ; loc_14204
                tst.w   D1
                bpl     loc_1A79C
                add.w   D1, Obj_Y(A0)                                    ; $000C
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
                clr.b   Obj_Routine_2(A0)                                ; $0025
loc_1A79C:
                rts  
;-------------------------------------------------------------------------------
Pillar_Mappings:                                               ; loc_1A79E
                dc.w    loc_1A7A4-Pillar_Mappings
                dc.w    loc_1A7D6-Pillar_Mappings
                dc.w    loc_1A7F0-Pillar_Mappings
loc_1A7A4:
                dc.w    $0006
                dc.l    $E005005D, $002EFFE0
                dc.l    $E005085D, $082E0010
                dc.l    $E00D0061, $0030FFF0
                dc.l    $F00D0069, $0034FFF0
                dc.l    $000D0069, $0034FFF0
                dc.l    $100D0071, $0038FFF0
loc_1A7D6:
                dc.w    $0003
                dc.l    $F00D0069, $0034FFF0
                dc.l    $000D0079, $003CFFF0
                dc.l    $10040081, $0040FFF0
loc_1A7F0:
                dc.w    $0004
                dc.l    $090D208B, $2045FFF0
                dc.l    $F00D0069, $0034FFF0
                dc.l    $000D0079, $003CFFF0
                dc.l    $10040081, $0040FFF0 
;===============================================================================
; Object 0x23 - Pilar que solta a parte debaixo na Neo Green Hill
; [ End ] 
;===============================================================================		
Obj2B_Raising_Pillar:                                       ; loc_1A812
;===============================================================================
; Object 0x2B - Pilar que sobe quando se aproxima e pode ser destru do na
; [ Begin ]          Neo Green Hill 
;===============================================================================  
; loc_1A812:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1A820(PC, D0), D1
                jmp     loc_1A820(PC, D1)
;-------------------------------------------------------------------------------
loc_1A820:
                dc.w    loc_1A826-loc_1A820
                dc.w    loc_1A854-loc_1A820
                dc.w    loc_1A944-loc_1A820      
;-------------------------------------------------------------------------------
loc_1A826:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Raising_Pillar_Mappings, Obj_Map(A0) ; loc_1AA24, $0004
                move.w  #$2000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_0D_To_ModifySpriteAttr_2P          ; loc_1AEA4
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$18, Obj_Height_2(A0)                           ; $0016
                move.b  #$04, Obj_Priority(A0)                           ; $0018  
;-------------------------------------------------------------------------------
loc_1A854:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_1A8DE
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     Jmp_05_To_SolidObject                  ; loc_1AEAA
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne     loc_1A886
                bra     Jmp_0D_To_MarkObjGone                  ; loc_1AE98
loc_1A886:
                lea     (loc_1A974), A4
                lea     (loc_1A966), A2
                addq.b  #$07, Obj_Map_Id(A0)                             ; $001A
                bsr     loc_1A9AC
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                bsr.s   loc_1A8AC
                lea     (Player_Two).w, A1                           ; $FFFFB040
                addq.b  #$01, D6
                bra     loc_1A944
loc_1A8AC:
                bclr    D6, Obj_Status(A0)                               ; $0022
                beq.s   loc_1A8DC
                bset    #$02, Obj_Status(A1)                             ; $0022
                move.b  #$0E, Obj_Height_2(A1)                           ; $0016
                move.b  #$07, Obj_Width_2(A1)                            ; $0017
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$02, Obj_Routine(A1)                            ; $0024
loc_1A8DC:
                rts
loc_1A8DE:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_1A8EC(PC, D0), D1
                jmp     loc_1A8EC(PC, D1)        
;-------------------------------------------------------------------------------
loc_1A8EC:
                dc.w    loc_1A8F2-loc_1A8EC
                dc.w    loc_1A91C-loc_1A8EC
                dc.w    loc_1A91A-loc_1A8EC    
;-------------------------------------------------------------------------------
loc_1A8F2:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne.s   loc_1A91A
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_1A902
                lea     (Player_Two).w, A1                           ; $FFFFB040
loc_1A902:
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcc.s   loc_1A90E
                neg.w   D0
loc_1A90E:
                cmpi.w  #$0040, D0
                bcc.s   loc_1A91A
                move.b  #$02, Obj_Routine_2(A0)                          ; $0025 
;-------------------------------------------------------------------------------
loc_1A91A:
                rts 
;-------------------------------------------------------------------------------
loc_1A91C:
                subq.w  #$01, Obj_Control_Var_08(A0)                     ; $0034
                bcc.s   loc_1A942
                move.w  #$0003, Obj_Control_Var_08(A0)                   ; $0034
                subq.w  #$04, Obj_Y(A0)                                  ; $000C
                addq.b  #$04, Obj_Height_2(A0)                           ; $0016
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$06, Obj_Map_Id(A0)                             ; $001A
                bne.s   loc_1A942
                move.b  #$04, Obj_Routine_2(A0)                          ; $0025
loc_1A942:
                rts    
;-------------------------------------------------------------------------------
loc_1A944:
                tst.b   Obj_Control_Var_13(A0)                           ; $003F
                beq.s   loc_1A950
                subq.b  #$01, Obj_Control_Var_13(A0)                     ; $003F
                bra.s   loc_1A95A
loc_1A950:
                bsr     Jmp_08_To_SpeedToPos                   ; loc_1AEB0
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
loc_1A95A:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     Jmp_0B_To_DeleteObject                 ; loc_1AE92
                bra     Jmp_07_To_DisplaySprite                ; loc_1AE8C       
;------------------------------------------------------------------------------- 
loc_1A966:
                dc.b    $00, $00, $00, $00, $04, $04, $08, $08
                dc.b    $0C, $0C, $10, $10, $14, $14        
;------------------------------------------------------------------------------- 
loc_1A974:
                dc.w    $FE00, $FE00, $0200, $FE00, $FE40, $FE40, $01C0, $FE40
                dc.w    $FE80, $FE80, $0180, $FE80, $FEC0, $FEC0, $0140, $FEC0
                dc.w    $FF00, $FF00, $0100, $FF00, $FF40, $FF40, $00C0, $FF40
                dc.w    $FF80, $FF80, $0080, $FF80      
;-------------------------------------------------------------------------------
loc_1A9AC:
                moveq   #$00, D0
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                add.w   D0, D0
                move.l  Obj_Map(A0), A3                                  ; $0004
                adda.w  $00(A3, D0), A3
                move.w  (A3)+, D1
                subq.w  #$01, D1
                bset    #$05, Obj_Flags(A0)                              ; $0001
                move.b  Obj_Id(A0), D4                                   ; $0000
                move.b  Obj_Flags(A0), D5                                ; $0001
                move.l  A0, A1
                bra.s   loc_1A9DA          
;-------------------------------------------------------------------------------
loc_1A9D2:
                bsr     Jmp_07_To_SingleObjectLoad_2           ; loc_1AE9E
                bne.s   loc_1AA1A
                addq.w  #$08, A3   
;-------------------------------------------------------------------------------
loc_1A9DA:
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.b  D4, Obj_Id(A1)                                   ; $0000
                move.l  A3, Obj_Map(A1)                                  ; $0004
                move.b  D5, Obj_Flags(A1)                                ; $0001
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  Obj_Priority(A0), Obj_Priority(A1)        ; $0018, $0018
                move.b  Obj_Width(A0), Obj_Width(A1)              ; $0019, $0019
                move.w  (A4)+, Obj_Speed(A1)                             ; $0010
                move.w  (A4)+, Obj_Speed_Y(A1)                           ; $0012
                move.b  (A2)+, Obj_Control_Var_13(A1)                    ; $003F
                dbra    D1, loc_1A9D2
loc_1AA1A:
                move.w  #$00CB, D0
                jmp     (Play_Sfx)                             ; loc_1512     
;-------------------------------------------------------------------------------  
Raising_Pillar_Mappings:                                       ; loc_1AA24
                dc.w    loc_1AA40-Raising_Pillar_Mappings
                dc.w    loc_1AA72-Raising_Pillar_Mappings
                dc.w    loc_1AAAC-Raising_Pillar_Mappings
                dc.w    loc_1AAE6-Raising_Pillar_Mappings
                dc.w    loc_1AB28-Raising_Pillar_Mappings
                dc.w    loc_1AB6A-Raising_Pillar_Mappings
                dc.w    loc_1ABB4-Raising_Pillar_Mappings
                dc.w    loc_1ABFE-Raising_Pillar_Mappings
                dc.w    loc_1AC40-Raising_Pillar_Mappings
                dc.w    loc_1AC92-Raising_Pillar_Mappings
                dc.w    loc_1ACE4-Raising_Pillar_Mappings
                dc.w    loc_1AD46-Raising_Pillar_Mappings
                dc.w    loc_1ADA8-Raising_Pillar_Mappings
                dc.w    loc_1AE1A-Raising_Pillar_Mappings
loc_1AA40:
                dc.w    $0006
                dc.l    $100D208B, $2045FFF0
                dc.l    $E805005D, $002EFFE0
                dc.l    $E805085D, $082E0010
                dc.l    $E80D0061, $0030FFF0
                dc.l    $F80D0069, $0034FFF0
                dc.l    $080D0083, $0041FFF0
loc_1AA72:
                dc.w    $0007
                dc.l    $140D208B, $2045FFF0
                dc.l    $E405005D, $002EFFE0
                dc.l    $E405085D, $082E0010
                dc.l    $E40D0061, $0030FFF0
                dc.l    $F40D0069, $0034FFF0
                dc.l    $FC0D0069, $0034FFF0
                dc.l    $0C0D0083, $0041FFF0
loc_1AAAC:
                dc.w    $0007
                dc.l    $180D208B, $2045FFF0
                dc.l    $E005005D, $002EFFE0
                dc.l    $E005085D, $082E0010
                dc.l    $E00D0061, $0030FFF0
                dc.l    $F00D0069, $0034FFF0
                dc.l    $000D0069, $0034FFF0
                dc.l    $100D0083, $0041FFF0
loc_1AAE6:
                dc.w    $0008
                dc.l    $1C0D208B, $2045FFF0
                dc.l    $DC05005D, $002EFFE0
                dc.l    $DC05085D, $082E0010
                dc.l    $DC0D0061, $0030FFF0
                dc.l    $EC0D0069, $0034FFF0
                dc.l    $FC0D0069, $0034FFF0
                dc.l    $040D0069, $0034FFF0
                dc.l    $140D0083, $0041FFF0
loc_1AB28:
                dc.w    $0008
                dc.l    $200D208B, $2045FFF0
                dc.l    $D805005D, $002EFFE0
                dc.l    $D805085D, $082E0010
                dc.l    $D80D0061, $0030FFF0
                dc.l    $E80D0069, $0034FFF0
                dc.l    $F80D0069, $0034FFF0
                dc.l    $080D0069, $0034FFF0
                dc.l    $180D0083, $0041FFF0
loc_1AB6A:
                dc.w    $0009
                dc.l    $240D208B, $2045FFF0
                dc.l    $D405005D, $002EFFE0
                dc.l    $D405085D, $082E0010
                dc.l    $D40D0061, $0030FFF0
                dc.l    $E40D0069, $0034FFF0
                dc.l    $F40D0069, $0034FFF0
                dc.l    $040D0069, $0034FFF0
                dc.l    $0C0D0069, $0034FFF0
                dc.l    $1C0D0083, $0041FFF0
loc_1ABB4:
                dc.w    $0009
                dc.l    $280D208B, $2045FFF0
                dc.l    $D005005D, $002EFFE0
                dc.l    $D005085D, $082E0010
                dc.l    $D00D0061, $0030FFF0
                dc.l    $E00D0069, $0034FFF0
                dc.l    $F00D0069, $0034FFF0
                dc.l    $000D0069, $0034FFF0
                dc.l    $100D0069, $0034FFF0
                dc.l    $200D0083, $0041FFF0
loc_1ABFE:
                dc.w    $0008
                dc.l    $E805005D, $002EFFE0
                dc.l    $E805085D, $082E0010
                dc.l    $E8050061, $0030FFF0
                dc.l    $E8050065, $00320000
                dc.l    $F8050069, $0034FFF0
                dc.l    $F805006D, $00360000
                dc.l    $08050083, $0041FFF0
                dc.l    $08050087, $00430000
loc_1AC40:
                dc.w    $000A
                dc.l    $E405005D, $002EFFE0
                dc.l    $E405085D, $082E0010
                dc.l    $E4050061, $0030FFF0
                dc.l    $E4050065, $00320000
                dc.l    $F4050069, $0034FFF0
                dc.l    $F405006D, $00360000
                dc.l    $FC050069, $0034FFF0
                dc.l    $FC05006D, $00360000
                dc.l    $0C050083, $0041FFF0
                dc.l    $0C050087, $00430000
loc_1AC92:
                dc.w    $000A
                dc.l    $E005005D, $002EFFE0
                dc.l    $E005085D, $082E0010
                dc.l    $E0050061, $0030FFF0
                dc.l    $E0050065, $00320000
                dc.l    $F0050069, $0034FFF0
                dc.l    $F005006D, $00360000
                dc.l    $00050069, $0034FFF0
                dc.l    $0005006D, $00360000
                dc.l    $10050083, $0041FFF0
                dc.l    $10050087, $00430000
loc_1ACE4:
                dc.w    $000C
                dc.l    $DC05005D, $002EFFE0
                dc.l    $DC05085D, $082E0010
                dc.l    $DC050061, $0030FFF0
                dc.l    $DC050065, $00320000
                dc.l    $EC050069, $0034FFF0
                dc.l    $EC05006D, $00360000
                dc.l    $FC050069, $0034FFF0
                dc.l    $FC05006D, $00360000
                dc.l    $04050069, $0034FFF0
                dc.l    $0405006D, $00360000
                dc.l    $14050083, $0041FFF0
                dc.l    $14050087, $00430000
loc_1AD46:
                dc.w    $000C
                dc.l    $D805005D, $002EFFE0
                dc.l    $D805085D, $082E0010
                dc.l    $D8050061, $0030FFF0
                dc.l    $D8050065, $00320000
                dc.l    $E8050069, $0034FFF0
                dc.l    $E805006D, $00360000
                dc.l    $F8050069, $0034FFF0
                dc.l    $F805006D, $00360000
                dc.l    $08050069, $0034FFF0
                dc.l    $0805006D, $00360000
                dc.l    $18050083, $0041FFF0
                dc.l    $18050087, $00430000
loc_1ADA8:
                dc.w    $000E
                dc.l    $D405005D, $002EFFE0
                dc.l    $D405085D, $082E0010
                dc.l    $D4050061, $0030FFF0
                dc.l    $D4050065, $00320000
                dc.l    $E4050069, $0034FFF0
                dc.l    $E405006D, $00360000
                dc.l    $F4050069, $0034FFF0
                dc.l    $F405006D, $00360000
                dc.l    $04050069, $0034FFF0
                dc.l    $0405006D, $00360000
                dc.l    $0C050069, $0034FFF0
                dc.l    $0C05006D, $00360000
                dc.l    $1C050083, $0041FFF0
                dc.l    $1C050087, $00430000
loc_1AE1A:
                dc.w    $000E
                dc.l    $D005005D, $002EFFE0
                dc.l    $D005085D, $082E0010
                dc.l    $D0050061, $0030FFF0
                dc.l    $D0050065, $00320000
                dc.l    $E0050069, $0034FFF0
                dc.l    $E005006D, $00360000
                dc.l    $F0050069, $0034FFF0
                dc.l    $F005006D, $00360000
                dc.l    $00050069, $0034FFF0
                dc.l    $0005006D, $00360000
                dc.l    $10050069, $0034FFF0
                dc.l    $1005006D, $00360000
                dc.l    $20050083, $0041FFF0
                dc.l    $20050087, $00430000
;===============================================================================
; Object 0x2B - Pilar que sobe quando se aproxima e pode ser destru do na
; [ End ]          Neo Green Hill 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_07_To_DisplaySprite:                                       ; loc_1AE8C
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_0B_To_DeleteObject:                                        ; loc_1AE92
		jmp     (DeleteObject)                         ; loc_D314
Jmp_0D_To_MarkObjGone:                                         ; loc_1AE98
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_07_To_SingleObjectLoad_2:                                  ; loc_1AE9E
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_0D_To_ModifySpriteAttr_2P:                                 ; loc_1AEA4
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_05_To_SolidObject:                                         ; loc_1AEAA
		jmp     (SolidObject)                          ; loc_F344
Jmp_08_To_SpeedToPos:                                          ; loc_1AEB0
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj2C_Leaves:                                               ; loc_1AEB8
;===============================================================================
; Object 0x2C - Folhas soltas na Neo Green Hill
; [ Begin ] 
;===============================================================================   
; loc_1AEB8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1AEC6(PC, D0), D1
                jmp     loc_1AEC6(PC, D1)
;-------------------------------------------------------------------------------
loc_1AEC6:
                dc.w    loc_1AED0-loc_1AEC6
                dc.w    loc_1AF06-loc_1AEC6
                dc.w    loc_1B054-loc_1AEC6      
;-------------------------------------------------------------------------------
loc_1AECC:
                dc.b    $D6, $D4, $D5, $00                             
;-------------------------------------------------------------------------------
loc_1AED0:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                move.b  loc_1AECC(PC, D0), Obj_Col_Flags(A0)       ; $0020
                move.l  #Lava_Attributes_Mappings, Obj_Map(A0) ; loc_15F4E, $0004
                move.w  #$8680, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$84, Obj_Flags(A0)                              ; $0001
                move.b  #$80, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), Obj_Map_Id(A0)           ; $001A, $0028   
;-------------------------------------------------------------------------------
loc_1AF06:
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Jmp_0C_To_DeleteObject                 ; loc_1B112
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                beq.s   loc_1AF24
                bsr     Jmp_08_To_DisplaySprite                ; loc_1B10C
loc_1AF24:
                move.b  Obj_Col_Prop(A0), D0                             ; $0021
                beq.s   loc_1AF80
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                beq.s   loc_1AF3A
                add.b   ($FFFFFE05).w, D0
                andi.w  #$000F, D0
                bne.s   loc_1AF56
loc_1AF3A:
                lea     (Player_One).w, A2                           ; $FFFFB000
                bclr    #$00, Obj_Col_Prop(A0)                           ; $0021
                beq.s   loc_1AF7A
                bsr.s   loc_1AF86
                tst.w   Obj_Control_Var_02(A0)                           ; $002E
                bne.s   loc_1AF7A
                move.w  ($FFFFFE04).w, Obj_Control_Var_02(A0)            ; $002E
                bra.s   loc_1AF7A
loc_1AF56:
                addi.w  #$0008, D0
                andi.w  #$000F, D0
                bne.s   loc_1AF7A
                lea     (Player_Two).w, A2                           ; $FFFFB040
                bclr    #$01, Obj_Col_Prop(A0)                           ; $0021
                beq.s   loc_1AF7A
                bsr.s   loc_1AF86
                tst.w   Obj_Control_Var_02(A0)                           ; $002E
                bne.s   loc_1AF7A
                move.w  ($FFFFFE04).w, Obj_Control_Var_02(A0)            ; $002E
loc_1AF7A:
                clr.b   Obj_Col_Prop(A0)                                 ; $0021
                rts
loc_1AF80:
                clr.w   Obj_Control_Var_02(A0)                           ; $002E
                rts
loc_1AF86:
                move.w  Obj_Speed(A2), D0                                ; $0010
                bpl.s   loc_1AF8E
                neg.w   D0
loc_1AF8E:
                cmpi.w  #$0200, D0
                bcc.s   loc_1AFA2
                move.w  Obj_Speed_Y(A2), D0                              ; $0012
                bpl.s   loc_1AF9C
                neg.w   D0
loc_1AF9C:
                cmpi.w  #$0200, D0
                bcs.s   loc_1AF80
loc_1AFA2:
                lea     (loc_1B044), A3
                moveq   #$03, D6
loc_1AFAA:
                bsr     Jmp_03_To_SingleObjectLoad             ; loc_1B118
                bne     loc_1B036
                move.b  #$2C, Obj_Id(A1)                                 ; $0000
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A2), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A2), Obj_Y(A1)                      ; $000C, $000C
                bsr     Jmp_00_To_PseudoRandomNumber           ; loc_1B11E
                andi.w  #$000F, D0
                subq.w  #$08, D0
                add.w   D0, Obj_X(A1)                                    ; $0008
                swap.w  D0
                andi.w  #$000F, D0
                subq.w  #$08, D0
                add.w   D0, Obj_Y(A1)                                    ; $000C
                move.w  (A3)+, Obj_Speed(A1)                             ; $0010
                move.w  (A3)+, Obj_Speed_Y(A1)                           ; $0012
                btst    #$00, Obj_Status(A2)                             ; $0022
                beq.s   loc_1AFF8
                neg.w   Obj_Speed(A1)                                    ; $0010
loc_1AFF8:
                move.w  Obj_X(A1), Obj_Control_Var_04(A1)         ; $0008, $0030
                move.w  Obj_Y(A1), Obj_Control_Var_08(A1)         ; $000C, $0034
                andi.b  #$01, D0
                move.b  D0, Obj_Map_Id(A1)                               ; $001A
                move.l  #Leaves_Mappings, Obj_Map(A1)   ; loc_1B0DC, $0004
                move.w  #$E410, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$84, Obj_Flags(A1)                              ; $0001
                move.b  #$08, Obj_Width(A1)                              ; $0019
                move.b  #$01, Obj_Priority(A1)                           ; $0018
                move.b  #$04, Obj_Control_Var_0C(A1)                     ; $0038
                move.b  D1, Obj_Angle(A0)                                ; $0026
loc_1B036:
                dbra    D6, loc_1AFAA
                move.w  #$00E5, D0
                jmp     (Play_Sfx)                             ; loc_1512   
;-------------------------------------------------------------------------------
loc_1B044:
                dc.w    $FF80, $FF80, $00C0, $FFC0, $FF40, $0040, $0080, $0080    
;------------------------------------------------------------------------------- 
loc_1B054:
                move.b  Obj_Control_Var_0C(A0), D0                       ; $0038
                add.b   D0, Obj_Angle(A0)                                ; $0026
                add.b   ($FFFFFE0F).w, D0
                andi.w  #$001F, D0
                bne.s   loc_1B072
                add.b   D7, D0
                andi.b  #$01, D0
                beq.s   loc_1B072
                neg.b   Obj_Control_Var_0C(A0)                           ; $0038
loc_1B072:
                move.l  Obj_Control_Var_04(A0), D2                       ; $0030
                move.l  Obj_Control_Var_08(A0), D3                       ; $0034
                move.w  Obj_Speed(A0), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  Obj_Speed_Y(A0), D0                              ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, Obj_Control_Var_04(A0)                       ; $0030
                move.l  D3, Obj_Control_Var_08(A0)                       ; $0034
                swap.w  D2
                andi.w  #$0003, D3
                addq.w  #$04, D3
                add.w   D3, Obj_Speed_Y(A0)                              ; $0012
                move.b  Obj_Angle(A0), D0                                ; $0026
                bsr     Jmp_02_To_CalcSine                     ; loc_1B124
                asr.w   #$06, D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_X(A0)                                    ; $0008
                asr.w   #$06, D1
                add.w   Obj_Control_Var_08(A0), D1                       ; $0034
                move.w  D1, Obj_Y(A0)                                    ; $000C
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_1B0D0
                move.b  #$0B, Obj_Ani_Time(A0)                           ; $001E
                bchg    #01, Obj_Map_Id(A0)                              ; $001A
loc_1B0D0:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     Jmp_0C_To_DeleteObject                 ; loc_1B112
                bra     Jmp_08_To_DisplaySprite                ; loc_1B10C                 
;-------------------------------------------------------------------------------
Leaves_Mappings:                                               ; loc_1B0DC
                dc.w    loc_1B0E4-Leaves_Mappings
                dc.w    loc_1B0EE-Leaves_Mappings
                dc.w    loc_1B0F8-Leaves_Mappings
                dc.w    loc_1B102-Leaves_Mappings
loc_1B0E4:
                dc.w    $0001
                dc.l    $FC000000, $0000FFFC
loc_1B0EE:
                dc.w    $0001
                dc.l    $FC040001, $0000FFF8
loc_1B0F8:
                dc.w    $0001
                dc.l    $FC040003, $0001FFF8
loc_1B102:
                dc.w    $0001
                dc.l    $FC040005, $0002FFF8 
;===============================================================================
; Object 0x2C - Folhas soltas na Neo Green Hill
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_08_To_DisplaySprite:                                       ; loc_1B10C
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_0C_To_DeleteObject:                                        ; loc_1B112
		jmp     (DeleteObject)                         ; loc_D314
Jmp_03_To_SingleObjectLoad:                                    ; loc_1B118
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_00_To_PseudoRandomNumber:                                  ; loc_1B11E
		jmp     (PseudoRandomNumber)                   ; loc_325C
Jmp_02_To_CalcSine:                                            ; loc_1B124
		jmp     (CalcSine)                             ; loc_3282
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj40_Diagonal_Springs:                                     ; loc_1B12C
;===============================================================================
; Object 0x40 - Molas tipo sanfona na Dust Hill, Chemical Plant e Neo Green Hill
; [ Begin ]
;===============================================================================    
; loc_1B12C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1B13E(PC, D0), D1
                jsr     loc_1B13E(PC, D1)
                bra     Jmp_0E_To_MarkObjGone                  ; loc_1B3D4       
;------------------------------------------------------------------------------- 
loc_1B13E:
                dc.w    loc_1B148-loc_1B13E
                dc.w    loc_1B184-loc_1B13E   
;------------------------------------------------------------------------------- 
loc_1B142:
                dc.w    $FC00, $F600, $F800           
;-------------------------------------------------------------------------------
loc_1B148:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Diagonal_Spring_Mappings, Obj_Map(A0) ; loc_1B3AA, $0004
                move.w  #$0440, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_0E_To_ModifySpriteAttr_2P          ; loc_1B3E0
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$1C, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                bset    #$07, Obj_Status(A0)                             ; $0022
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$0002, D0
                move.w  loc_1B142(PC, D0), Obj_Control_Var_04(A0)  ; $0030  
;-------------------------------------------------------------------------------
loc_1B184:
                lea     (Diagonal_Spring_Animate_Data), A1     ; loc_1B39E
                bsr     Jmp_02_To_AnimateSprite                ; loc_1B3DA
                move.w  #$0027, D1
                move.w  #$0008, D2
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     loc_1B34E(PC), A2
                tst.b   Obj_Map_Id(A0)                                   ; $001A
                beq.s   loc_1B1A8
                lea     loc_1B376(PC), A2
loc_1B1A8:
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Jmp_00_To_SolidObject_3_A1             ; loc_1B3E6
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_1B1C0
                bsr.s   loc_1B1DA
loc_1B1C0:
                movem.l (A7)+, D1-D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                bsr     Jmp_00_To_SolidObject_3_A1             ; loc_1B3E6
                btst    #$04, Obj_Status(A0)                             ; $0022
                beq.s   loc_1B1D8
                bsr.s   loc_1B1DA
loc_1B1D8:
                rts
loc_1B1DA:
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_1B1F2
                move.w  Obj_X(A0), D0                                    ; $0008
                subi.w  #$0010, D0
                cmp.w   Obj_X(A1), D0                                    ; $0008
                bcs.s   loc_1B202
                rts
loc_1B1F2:
                move.w  Obj_X(A0), D0                                    ; $0008
                addi.w  #$0010, D0
                cmp.w   Obj_X(A1), D0                                    ; $0008
                bcc.s   loc_1B202
                rts
loc_1B202:
                cmpi.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                beq.s   loc_1B212
                move.w  #$0100, Obj_Ani_Number(A0)                       ; $001C
                rts
loc_1B212:
                tst.b   Obj_Map_Id(A0)                                   ; $001A
                beq.s   loc_1B21A
                rts
loc_1B21A:
                move.w  Obj_X(A0), D0                                    ; $0008
                subi.w  #$001C, D0
                sub.w   Obj_X(A1), D0                                    ; $0008
                neg.w   D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1B236
                not.w   D0
                addi.w  #$0027, D0
loc_1B236:
                tst.w   D0
                bpl.s   loc_1B23C
                moveq   #$00, D0
loc_1B23C:
                lea     (loc_1B306), A3
                move.b  $00(A3, D0), D0
                move.w  #$FC00, Obj_Speed_Y(A1)                          ; $0012
                sub.b   D0, Obj_Speed_Y(A1)                              ; $0012
                bset    #$00, Obj_Status(A1)                             ; $0022
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_1B266
                bclr    #$00, Obj_Status(A1)                             ; $0022
                neg.b   D0
loc_1B266:
                move.w  Obj_Speed(A1), D1                                ; $0010
                bpl.s   loc_1B26E
                neg.w   D1
loc_1B26E:
                cmpi.w  #$0400, D1
                bcs.s   loc_1B278
                sub.b   D0, Obj_Speed(A1)                                ; $0010
loc_1B278:
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$10, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Subtype(A0), D0                              ; $0028
                btst    #$00, D0
                beq.s   loc_1B2D4
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$01, Obj_P_Flips_Remaining(A1)                  ; $002C
                move.b  #$08, Obj_Player_Flip_Speed(A1)                  ; $002D
                btst    #$01, D0
                bne.s   loc_1B2C4
                move.b  #$03, Obj_P_Flips_Remaining(A1)                  ; $002C
loc_1B2C4:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_1B2D4
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_1B2D4:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_1B2EA
                move.b  #$0C, Obj_Player_Top_Solid(A1)                   ; $003E
                move.b  #$0D, Obj_Player_LRB_Solid(A1)                   ; $003F
loc_1B2EA:
                cmpi.b  #$08, D0
                bne.s   loc_1B2FC
                move.b  #$0E, Obj_Player_Top_Solid(A1)                   ; $003E
                move.b  #$0F, Obj_Player_LRB_Solid(A1)                   ; $003F
loc_1B2FC:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512   
;-------------------------------------------------------------------------------
loc_1B306:
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $01, $01, $01, $01, $01, $01, $01, $01
                dc.b    $02, $02, $02, $02, $02, $02, $02, $02
                dc.b    $03, $03, $03, $03, $03, $03, $04, $04
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00
                dc.b    $00, $00, $00, $00, $00, $00, $00, $00     
;-------------------------------------------------------------------------------
loc_1B34E:
                dc.b    $08, $08, $08, $08, $08, $08, $08, $09
                dc.b    $0A, $0B, $0C, $0D, $0E, $0F, $10, $10
                dc.b    $11, $12, $13, $14, $14, $15, $15, $16
                dc.b    $17, $18, $18, $18, $18, $18, $18, $18
                dc.b    $18, $18, $18, $18, $18, $18, $18, $18  
;-------------------------------------------------------------------------------   
loc_1B376:
                dc.b    $08, $08, $08, $08, $08, $08, $08, $09
                dc.b    $0A, $0B, $0C, $0C, $0C, $0C, $0D, $0D
                dc.b    $0D, $0D, $0D, $0D, $0E, $0E, $0F, $0F
                dc.b    $10, $10, $10, $10, $0F, $0F, $0E, $0E
                dc.b    $0D, $0D, $0D, $0D, $0D, $0D, $0D, $0D  
;-------------------------------------------------------------------------------
Diagonal_Spring_Animate_Data:                                  ; loc_1B39E
                dc.w    loc_1B3A2-Diagonal_Spring_Animate_Data
                dc.w    loc_1B3A5-Diagonal_Spring_Animate_Data
loc_1B3A2:
                dc.b    $0F, $00, $FF
loc_1B3A5:
                dc.b    $03, $01, $00, $FD, $00       
;-------------------------------------------------------------------------------
Diagonal_Spring_Mappings:                                      ; loc_1B3AA
                dc.w    loc_1B3AE-Diagonal_Spring_Mappings
                dc.w    loc_1B3C0-Diagonal_Spring_Mappings
loc_1B3AE:
                dc.w    $0002
                dc.l    $E8090000, $0000FFE4
                dc.l    $E80D0006, $0003FFFC
loc_1B3C0:
                dc.w    $0002
                dc.l    $E809000E, $0007FFE4
                dc.l    $E80D0014, $000AFFFC                                    
;===============================================================================
; Object 0x40 - Molas tipo sanfona na Dust Hill, Chemical Plant e Neo Green Hill
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_0E_To_MarkObjGone:                                         ; loc_1B3D4
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_02_To_AnimateSprite:                                       ; loc_1B3DA
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_0E_To_ModifySpriteAttr_2P:                                 ; loc_1B3E0
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_00_To_SolidObject_3_A1:                                    ; loc_1B3E6
		jmp     (SolidObject_3_A1)                     ; loc_F406
;-------------------------------------------------------------------------------
Obj42_Steam_Vent:                                           ; loc_1B3EC
;===============================================================================
; Object 0x42 - Molas a vapor na Metropolis
; [ Begin ] 
;===============================================================================
; loc_1B3EC:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1B3FA(PC, D0), D1
                jmp     loc_1B3FA(PC, D1)
;-------------------------------------------------------------------------------
loc_1B3FA:
                dc.w    loc_1B400-loc_1B3FA
                dc.w    loc_1B440-loc_1B3FA
                dc.w    loc_1B5EC-loc_1B3FA          
;-------------------------------------------------------------------------------
loc_1B400:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Steam_Vent_Mappings, Obj_Map(A0) ; loc_1B61E, $0004
                move.w  #$6000, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                bsr     Jmp_0F_To_ModifySpriteAttr_2P          ; loc_1B6C8
                move.b  #$07, Obj_Map_Id(A0)                             ; $001A
                move.w  Obj_Y(A0), Obj_Control_Var_08(A0)         ; $000C, $0034
                move.w  #$0010, Obj_Control_Var_0A(A0)                   ; $0036
                addi.w  #$0010, Obj_Y(A0)                                ; $000C   
;-------------------------------------------------------------------------------
loc_1B440:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0010, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Jmp_01_To_SolidObject_2_A1             ; loc_1B6CE
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_1B46A
                bsr     loc_1B546
loc_1B46A:
                movem.l (A7)+, D1-D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                bsr     Jmp_01_To_SolidObject_2_A1             ; loc_1B6CE
                btst    #$04, Obj_Status(A0)                             ; $0022
                beq.s   loc_1B484
                bsr     loc_1B546
loc_1B484:
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                bne.s   loc_1B49C
                subq.w  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bpl.s   loc_1B500
                move.w  #$007F, Obj_Control_Var_06(A0)                   ; $0032
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bra.s   loc_1B500
loc_1B49C:
                subq.b  #$02, D0
                bne.s   loc_1B4CE
                subq.w  #$08, Obj_Control_Var_0A(A0)                     ; $0036
                bne.s   loc_1B4C0
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bsr.s   loc_1B504
                addi.w  #$0028, Obj_X(A1)                                ; $0008
                bsr.s   loc_1B504
                subi.w  #$0028, Obj_X(A1)                                ; $0008
                bset    #$00, Obj_Flags(A1)                              ; $0001
loc_1B4C0:
                move.w  Obj_Control_Var_0A(A0), D0                       ; $0036
                add.w   Obj_Control_Var_08(A0), D0                       ; $0034
                move.w  D0, Obj_Y(A0)                                    ; $000C
                bra.s   loc_1B500
loc_1B4CE:
                subq.b  #$02, D0
                bne.s   loc_1B4E4
                subq.w  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bpl.s   loc_1B500
                move.w  #$007F, Obj_Control_Var_06(A0)                   ; $0032
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bra.s   loc_1B500
loc_1B4E4:
                addq.w  #$08, Obj_Control_Var_0A(A0)                     ; $0036
                cmpi.w  #$0010, Obj_Control_Var_0A(A0)                   ; $0036
                bne.s   loc_1B4F4
                clr.b   Obj_Routine_2(A0)                                ; $0025
loc_1B4F4:
                move.w  Obj_Control_Var_0A(A0), D0                       ; $0036
                add.w   Obj_Control_Var_08(A0), D0                       ; $0034
                move.w  D0, Obj_Y(A0)                                    ; $000C
loc_1B500:
                bra     Jmp_0F_To_MarkObjGone                  ; loc_1B6C2
loc_1B504:
                bsr     Jmp_04_To_SingleObjectLoad             ; loc_1B6BC
                bne.s   loc_1B544
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                addq.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Control_Var_08(A0), Obj_Y(A1)         ; $000C, $0034
                move.b  #$07, Obj_Ani_Time(A1)                           ; $001E
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  #$2405, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$18, Obj_Width(A1)                              ; $0019
                move.b  #$04, Obj_Priority(A1)                           ; $0018
loc_1B544:
                rts
loc_1B546:
                cmpi.b  #$02, Obj_Routine_2(A0)                          ; $0025
                beq.s   loc_1B550
                rts
loc_1B550:
                move.w  #$F600, Obj_Speed_Y(A1)                          ; $0012
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$10, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_1B57A
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
loc_1B57A:
                btst    #$00, D0
                beq.s   loc_1B5BA
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$00, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$04, Obj_Control_Var_01(A1)                     ; $002D
                btst    #$01, D0
                bne.s   loc_1B5AA
                move.b  #$01, Obj_Control_Var_00(A1)                     ; $002C
loc_1B5AA:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_1B5BA
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_1B5BA:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_1B5D0
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
loc_1B5D0:
                cmpi.b  #$08, D0
                bne.s   loc_1B5E2
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_1B5E2:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512
;-------------------------------------------------------------------------------
loc_1B5EC:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_1B61A
                move.b  #$07, Obj_Ani_Time(A0)                           ; $001E
                move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$03, Obj_Map_Id(A0)                             ; $001A
                bne.s   loc_1B610
                move.b  #$A6, Obj_Col_Flags(A0)                          ; $0020
loc_1B610:
                cmpi.b  #$07, Obj_Map_Id(A0)                             ; $001A
                beq     Jmp_0D_To_DeleteObject                 ; loc_1B6B6
loc_1B61A:
                bra     Jmp_09_To_DisplaySprite                ; loc_1B6B0              
;-------------------------------------------------------------------------------
Steam_Vent_Mappings:                                           ; loc_1B61E
                dc.w    loc_1B62E-Steam_Vent_Mappings
                dc.w    loc_1B638-Steam_Vent_Mappings
                dc.w    loc_1B642-Steam_Vent_Mappings
                dc.w    loc_1B64C-Steam_Vent_Mappings
                dc.w    loc_1B65E-Steam_Vent_Mappings
                dc.w    loc_1B670-Steam_Vent_Mappings
                dc.w    loc_1B68A-Steam_Vent_Mappings
                dc.w    loc_1B69C-Steam_Vent_Mappings
loc_1B62E:
                dc.w    $0001
                dc.l    $FF000000, $0000FFE8
loc_1B638:
                dc.w    $0001
                dc.l    $FF040001, $0000FFE8
loc_1B642:
                dc.w    $0001
                dc.l    $FC050003, $0001FFEC
loc_1B64C:
                dc.w    $0002
                dc.l    $FC050007, $0003FFF8
                dc.l    $FC050003, $0001FFF0
loc_1B65E:
                dc.w    $0002
                dc.l    $FC051007, $10030000
                dc.l    $FC01100B, $1005FFF8
loc_1B670:
                dc.w    $0003
                dc.l    $FC01000D, $0006000C
                dc.l    $FC01000B, $00050004
                dc.l    $FC01180D, $1806FFFC
loc_1B68A:
                dc.w    $0002
                dc.l    $FC01000D, $00060010
                dc.l    $FC01180D, $18060008
loc_1B69C:
                dc.w    $0002
                dc.l    $F0070015, $000AFFF0
                dc.l    $F007001D, $000E0000 
;===============================================================================
; Object 0x42 - Molas a vapor na Metropolis
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_09_To_DisplaySprite:                                       ; loc_1B6B0
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_0D_To_DeleteObject:                                        ; loc_1B6B6
		jmp     (DeleteObject)                         ; loc_D314
Jmp_04_To_SingleObjectLoad:                                    ; loc_1B6BC
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_0F_To_MarkObjGone:                                         ; loc_1B6C2
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_0F_To_ModifySpriteAttr_2P:                                 ; loc_1B6C8
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_01_To_SolidObject_2_A1:                                    ; loc_1B6CE
		jmp     (SolidObject_2_A1)                     ; loc_F3B4
;-------------------------------------------------------------------------------
Obj64_Pistons:                                              ; loc_1B6D4
;===============================================================================
; Object 0x64 - Pistões gigantes na Metropolis.
; [ Begin ]
;===============================================================================
; loc_1B6D4:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1B6E2(PC, D0), D1
                jmp     loc_1B6E2(PC, D1)
;-------------------------------------------------------------------------------
loc_1B6E2:
                dc.w    loc_1B6EE-loc_1B6E2
                dc.w    loc_1B756-loc_1B6E2       
;-------------------------------------------------------------------------------
loc_1B6E6:
                dc.b    $40, $0C, $40, $01, $10, $20, $40, $01 
;-------------------------------------------------------------------------------
loc_1B6EE:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     loc_1B6E6(PC, D0), A3
                move.b  (A3)+, Obj_Width(A0)                             ; $0019
                move.b  (A3)+, Obj_Control_Var_02(A0)                    ; $002E
                lsr.w   #$02, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                bne.s   loc_1B71E
                move.b  #$6C, Obj_Height_2(A0)                           ; $0016
                bset    #$04, Obj_Flags(A0)                              ; $0001
loc_1B71E:
                move.l  #Pistons_Mappings, Obj_Map(A0)  ; loc_1B810, $0004
                move.w  #$2000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_10_To_ModifySpriteAttr_2P          ; loc_1B888
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.w  Obj_X(A0), Obj_Control_Var_08(A0)         ; $0008, $0034
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                moveq   #$00, D0
                move.b  (A3)+, D0
                move.w  D0, Obj_Control_Var_10(A0)                       ; $003C
                andi.b  #$0F, Obj_Subtype(A0)                            ; $0028  
;-------------------------------------------------------------------------------
loc_1B756:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                add.w   D0, D0
                move.w  loc_1B7A8(PC, D0), D1
                jsr     loc_1B7A8(PC, D1)
                move.w  (A7)+, D4
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_1B78A
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Control_Var_02(A0), D2                       ; $002E
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     Jmp_06_To_SolidObject                  ; loc_1B88E
loc_1B78A:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1B7A2
                jmp     (DisplaySprite)                        ; loc_D322
loc_1B7A2:
                jmp     (DeleteObject)                         ; loc_D314
;------------------------------------------------------------------------------- 
loc_1B7A8:
                dc.w    loc_1B7AC-loc_1B7A8
                dc.w    loc_1B7AE-loc_1B7A8                     
;-------------------------------------------------------------------------------
loc_1B7AC:
                rts     
;-------------------------------------------------------------------------------
loc_1B7AE:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                bne.s   loc_1B7D2
                tst.w   Obj_Control_Var_0E(A0)                           ; $003A
                beq.s   loc_1B7C0
                subq.w  #$08, Obj_Control_Var_0E(A0)                     ; $003A
                bra.s   loc_1B7F2
loc_1B7C0:
                subq.w  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                bpl.s   loc_1B7F2
                move.w  #$003C, Obj_Control_Var_0A(A0)                   ; $0036
                move.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
loc_1B7D2:
                move.w  Obj_Control_Var_0E(A0), D0                       ; $003A
                cmp.w   Obj_Control_Var_10(A0), D0                       ; $003C
                beq.s   loc_1B7E2
                addq.w  #$08, Obj_Control_Var_0E(A0)                     ; $003A
                bra.s   loc_1B7F2
loc_1B7E2:
                subq.w  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                bpl.s   loc_1B7F2
                move.w  #$003C, Obj_Control_Var_0A(A0)                   ; $0036
                clr.b   Obj_Control_Var_0C(A0)                           ; $0038
loc_1B7F2:
                move.w  Obj_Control_Var_0E(A0), D0                       ; $003A
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1B804
                neg.w   D0
                addi.w  #$0040, D0
loc_1B804:
                move.w  Obj_Control_Var_04(A0), D1                       ; $0030
                add.w   D0, D1
                move.w  D1, Obj_Y(A0)                                    ; $000C
                rts                      
;-------------------------------------------------------------------------------
Pistons_Mappings:                                              ; loc_1B810
                dc.w    loc_1B814-Pistons_Mappings
                dc.w    loc_1B866-Pistons_Mappings
loc_1B814:
                dc.w    $000A
                dc.l    $F40E0001, $0000FFC0
                dc.l    $F40E0801, $0800FFE0
                dc.l    $F40E0001, $00000000
                dc.l    $F40E0801, $08000020
                dc.l    $0C07000D, $0006FFD8
                dc.l    $2C07000D, $0006FFD8
                dc.l    $4C07000D, $0006FFD8
                dc.l    $0C07000D, $00060018
                dc.l    $2C07000D, $00060018
                dc.l    $4C07000D, $00060018
loc_1B866:
                dc.w    $0004
                dc.l    $E0070057, $002BFFF0
                dc.l    $E0070857, $082B0000
                dc.l    $00071057, $102BFFF0
                dc.l    $00071857, $182B0000 
;===============================================================================
; Object 0x64 - Pistões gigantes na Metropolis.
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_10_To_ModifySpriteAttr_2P:                                 ; loc_1B888
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_06_To_SolidObject:                                         ; loc_1B88E
		jmp     (SolidObject)                          ; loc_F344
;-------------------------------------------------------------------------------
Obj65_Platform_Over_Gear:                                   ; loc_1B894
;===============================================================================
; Object 0x65 - Plataformas sobre engrenagens na Metropolis
; [ Begin ]
;===============================================================================
; loc_1B894:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1B8A2(PC, D0), D1
                jmp     loc_1B8A2(PC, D1)
;-------------------------------------------------------------------------------   
loc_1B8A2:
                dc.w    loc_1B8BA-loc_1B8A2
                dc.w    loc_1B9D0-loc_1B8A2
                dc.w    loc_1BC40-loc_1B8A2
                dc.w    loc_1BC5E-loc_1B8A2     
;------------------------------------------------------------------------------- 
loc_1B8AA:
                dc.b    $40, $0C, $80, $01, $20, $0C, $40, $03
                dc.b    $10, $10, $20, $00, $40, $0C, $80, $07 
;-------------------------------------------------------------------------------
loc_1B8BA:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Mz_Platform_Mappings, Obj_Map(A0) ; loc_1BC64, $0004
                move.w  #$6000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_11_To_ModifySpriteAttr_2P          ; loc_1BCE8
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     loc_1B8AA(PC, D0), A3
                move.b  (A3)+, Obj_Width(A0)                             ; $0019
                move.b  (A3)+, Obj_Height_2(A0)                          ; $0016
                lsr.w   #$02, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                cmpi.b  #$01, D0
                bne.s   loc_1B906
                bset    #$07, Obj_Status(A0)                             ; $0022
loc_1B906:
                cmpi.b  #$02, D0
                bne.s   loc_1B922
                addq.b  #$04, Obj_Routine(A0)                            ; $0024
                move.l  #Mini_Gear_Mappings, Obj_Map(A0) ; loc_1BCA0, $0004
                move.w  #$655F, Obj_Art_VRAM(A0)                         ; $0002
                bra     loc_1BC5E
loc_1B922:
                move.w  Obj_X(A0), Obj_Control_Var_08(A0)         ; $0008, $0034
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                moveq   #$00, D0
                move.b  (A3)+, D0
                move.w  D0, Obj_Control_Var_10(A0)                       ; $003C
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl     loc_1B9CA
                andi.b  #$0F, D0
                move.b  D0, Obj_Control_Var_12(A0)                       ; $003E
                move.b  (A3), Obj_Subtype(A0)                            ; $0028
                cmpi.b  #$07, (A3)
                bne.s   loc_1B958
                move.w  Obj_Control_Var_10(A0), Obj_Control_Var_0E(A0); $003A, $003C
loc_1B958:
                bsr     Jmp_08_To_SingleObjectLoad_2           ; loc_1BCE2
                bne.s   loc_1B9B8
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                addq.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$FFB4, Obj_X(A1)                                ; $0008
                addi.w  #$0014, Obj_Y(A1)                                ; $000C
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_1B994
                subi.w  #$FFE8, Obj_X(A1)                                ; $0008
                bset    #$00, Obj_Flags(A1)                              ; $0001
loc_1B994:
                move.l  #Mini_Gear_Mappings, Obj_Map(A1) ; loc_1BCA0, $0004
                move.w  #$655F, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.l  A0, Obj_Control_Var_10(A1)                       ; $003C
loc_1B9B8:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_1B9CA
                bclr    #$07, $02(A2, D0)
loc_1B9CA:
                andi.b  #$0F, Obj_Subtype(A0)                            ; $0028      
;-------------------------------------------------------------------------------
loc_1B9D0:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                add.w   D0, D0
                move.w  loc_1BA2E(PC, D0), D1
                jsr     loc_1BA2E(PC, D1)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     Jmp_07_To_SolidObject                  ; loc_1BCEE
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1BA16
                jmp     (DisplaySprite)                        ; loc_D322
loc_1BA16:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_1BA28
                bclr    #$07, $02(A2, D0)
loc_1BA28:
                jmp     (DeleteObject)                         ; loc_D314    
;-------------------------------------------------------------------------------
loc_1BA2E:
                dc.w    loc_1BA3E-loc_1BA2E
                dc.w    loc_1BA54-loc_1BA2E
                dc.w    loc_1BAE0-loc_1BA2E
                dc.w    loc_1BB3C-loc_1BA2E
                dc.w    loc_1BBE0-loc_1BA2E
                dc.w    loc_1BBEE-loc_1BA2E
                dc.w    loc_1BA40-loc_1BA2E
                dc.w    loc_1BAC0-loc_1BA2E    
;-------------------------------------------------------------------------------
loc_1BA3E:
                rts
loc_1BA40:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                bne.s   loc_1BA52
                subq.w  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                bne.s   loc_1BA80
                move.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
loc_1BA52:
                bra.s   loc_1BA72
loc_1BA54:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                bne.s   loc_1BA72
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  Obj_Control_Var_12(A0), D0                       ; $003E
                btst    #$00, $00(A2, D0)
                beq.s   loc_1BA80
                move.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
loc_1BA72:
                move.w  Obj_Control_Var_10(A0), D0                       ; $003C
                cmp.w   Obj_Control_Var_0E(A0), D0                       ; $003A
                beq.s   loc_1BA9E
                addq.w  #$02, Obj_Control_Var_0E(A0)                     ; $003A
loc_1BA80:
                move.w  Obj_Control_Var_0E(A0), D0                       ; $003A
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1BA92
                neg.w   D0
                addi.w  #$0080, D0
loc_1BA92:
                move.w  Obj_Control_Var_08(A0), D1                       ; $0034
                sub.w   D0, D1
                move.w  D1, Obj_X(A0)                                    ; $0008
                rts
loc_1BA9E:
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
                move.w  #$00B4, Obj_Control_Var_0A(A0)                   ; $0036
                clr.b   Obj_Control_Var_0C(A0)                           ; $0038
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_1BA80
                bset    #$00, $02(A2, D0)
                bra.s   loc_1BA80
loc_1BAC0:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                bne.s   loc_1BADE
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  Obj_Control_Var_12(A0), D0                       ; $003E
                btst    #$00, $00(A2, D0)
                beq.s   loc_1BAFC
                move.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
loc_1BADE:
                bra.s   loc_1BAF2
loc_1BAE0:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                bne.s   loc_1BAF2
                subq.w  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                bne.s   loc_1BAFC
                move.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
loc_1BAF2:
                tst.w   Obj_Control_Var_0E(A0)                           ; $003A
                beq.s   loc_1BB1A
                subq.w  #$02, Obj_Control_Var_0E(A0)                     ; $003A
loc_1BAFC:
                move.w  Obj_Control_Var_0E(A0), D0                       ; $003A
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1BB0E
                neg.w   D0
                addi.w  #$0080, D0
loc_1BB0E:
                move.w  Obj_Control_Var_08(A0), D1                       ; $0034
                sub.w   D0, D1
                move.w  D1, Obj_X(A0)                                    ; $0008
                rts
loc_1BB1A:
                subq.b  #$01, Obj_Subtype(A0)                            ; $0028
                move.w  #$00B4, Obj_Control_Var_0A(A0)                   ; $0036
                clr.b   Obj_Control_Var_0C(A0)                           ; $0038
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_1BAFC
                bclr    #$00, $02(A2, D0)
                bra.s   loc_1BAFC
loc_1BB3C:
                move.w  Obj_Control_Var_08(A0), D4                       ; $0034
                move.w  D4, D5
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_1BB54
                subi.w  #$0020, D4
                addi.w  #$0060, D5
                bra.s   loc_1BB5C
loc_1BB54:
                subi.w  #$00A0, D4
                subi.w  #$0020, D5
loc_1BB5C:
                move.w  Obj_Y(A0), D2                                    ; $000C
                move.w  D2, D3
                subi.w  #$0010, D2
                addi.w  #$0040, D3
                moveq   #$00, D1
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                cmp.w   D4, D0
                bcs.s   loc_1BB86
                cmp.w   D5, D0
                bcc.s   loc_1BB86
                move.w  (Player_One_Position_Y).w, D0                ; $FFFFB00C
                cmp.w   D2, D0
                bcs.s   loc_1BB86
                cmp.w   D3, D0
                bcc.s   loc_1BB86
                moveq   #$01, D1
loc_1BB86:
                move.w  (Player_Two_Position_X).w, D0                ; $FFFFB048
                cmp.w   D4, D0
                bcs.s   loc_1BBA0
                cmp.w   D5, D0
                bcc.s   loc_1BBA0
                move.w  (Player_Two_Position_Y).w, D0                ; $FFFFB04C
                cmp.w   D2, D0
                bcs.s   loc_1BBA0
                cmp.w   D3, D0
                bcc.s   loc_1BBA0
                moveq   #$01, D1
loc_1BBA0:
                tst.b   D1
                beq.s   loc_1BBB6
                move.w  Obj_Control_Var_10(A0), D0                       ; $003C
                cmp.w   Obj_Control_Var_0E(A0), D0                       ; $003A
                beq.s   loc_1BBDE
                addi.w  #$0010, Obj_Control_Var_0E(A0)                   ; $003A
                bra.s   loc_1BBC2
loc_1BBB6:
                tst.w   Obj_Control_Var_0E(A0)                           ; $003A
                beq.s   loc_1BBC2
                subi.w  #$0010, Obj_Control_Var_0E(A0)                   ; $003A
loc_1BBC2:
                move.w  Obj_Control_Var_0E(A0), D0                       ; $003A
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1BBD4
                neg.w   D0
                addi.w  #$0040, D0
loc_1BBD4:
                move.w  Obj_Control_Var_08(A0), D1                       ; $0034
                sub.w   D0, D1
                move.w  D1, Obj_X(A0)                                    ; $0008
loc_1BBDE:
                rts
loc_1BBE0:
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_1BBEC
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
loc_1BBEC:
                rts
loc_1BBEE:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                bne.s   loc_1BC20
                addq.w  #$02, Obj_X(A0)                                  ; $0008
                cmpi.b  #$05, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_1BC10
                cmpi.w  #$2940, Obj_X(A0)                                ; $0008
                bne.s   loc_1BC32
                move.b  #$00, Obj_Subtype(A0)                            ; $0028
                bra.s   loc_1BC32
loc_1BC10:
                cmpi.w  #$1BC0, Obj_X(A0)                                ; $0008
                bne.s   loc_1BC32
                move.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                bra.s   loc_1BC32
loc_1BC20:
                subq.w  #$02, Obj_X(A0)                                  ; $0008
                cmpi.w  #$1880, Obj_X(A0)                                ; $0008
                bne.s   loc_1BC32
                move.b  #$00, Obj_Control_Var_0C(A0)                     ; $0038
loc_1BC32:
                move.w  Obj_X(A0), Obj_Control_Var_08(A0)         ; $0008, $0034
                move.w  Obj_X(A0), ($FFFFF7B0).w                         ; $0008
                rts   
;------------------------------------------------------------------------------- 
loc_1BC40:
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.w  Obj_Control_Var_0E(A1), D0                       ; $003A
loc_1BC48:                
                andi.w  #$0007, D0
                move.b  loc_1BC56(PC, D0), Obj_Map_Id(A0)          ; $001A
                bra     Jmp_10_To_MarkObjGone                  ; loc_1BCDC                       
;-------------------------------------------------------------------------------  
loc_1BC56:
                dc.b    $00, $00, $02, $02, $02, $01, $01, $01                                                                
;-------------------------------------------------------------------------------
loc_1BC5E:
                move.w  ($FFFFF7B0).w, D0
                bra.s   loc_1BC48       
;-------------------------------------------------------------------------------   
Mz_Platform_Mappings:                                          ; loc_1BC64
                dc.w    Automatic_Platform_Mappings-Mz_Platform_Mappings ; loc_1BC6C
                dc.w    Platform_Over_Gear_Mappings-Mz_Platform_Mappings ; loc_1BC8E
                dc.w    Automatic_Platform_Mappings-Mz_Platform_Mappings ; loc_1BC6C
                dc.w    Automatic_Platform_Mappings-Mz_Platform_Mappings ; loc_1BC6C
Automatic_Platform_Mappings:                                   ; loc_1BC6C
                dc.w    $0004
                dc.l    $F40E004B, $0025FFC0
                dc.l    $F40E004B, $0025FFE0
                dc.l    $F40E004B, $00250000
                dc.l    $F40E004B, $00250020
Platform_Over_Gear_Mappings:                                   ; loc_1BC8E
                dc.w    $0002
                dc.l    $F40E0039, $001CFFE0
                dc.l    $F40E0839, $081C0000    
;-------------------------------------------------------------------------------
Mini_Gear_Mappings:                                            ; loc_1BCA0
                dc.w    loc_1BCA6-Mini_Gear_Mappings
                dc.w    loc_1BCB8-Mini_Gear_Mappings
                dc.w    loc_1BCCA-Mini_Gear_Mappings
loc_1BCA6:
                dc.w    $0002
                dc.l    $F4060000, $0000FFF0
                dc.l    $F4060800, $08000000
loc_1BCB8:
                dc.w    $0002
                dc.l    $F4060006, $0003FFF0
                dc.l    $F4061806, $18030000
loc_1BCCA:
                dc.w    $0002
                dc.l    $F4061006, $1003FFF0
                dc.l    $F4060806, $08030000
;===============================================================================
; Object 0x65 - Plataformas sobre engrenagens na Metropolis
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_10_To_MarkObjGone:                                         ; loc_1BCDC
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_08_To_SingleObjectLoad_2:                                  ; loc_1BCE2
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_11_To_ModifySpriteAttr_2P:                                 ; loc_1BCE8
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_07_To_SolidObject:                                         ; loc_1BCEE
		jmp     (SolidObject)                          ; loc_F344
;-------------------------------------------------------------------------------
Obj66_Springs_Wall:                                         ; loc_1BCF4
;===============================================================================
; Object 0x66 - Object para as molas triangulares nas paredes da Metropolis
; [ Begin ]
;===============================================================================
; loc_1BCF4:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1BD02(PC, D0), D1
                jmp     loc_1BD02(PC, D1)
;------------------------------------------------------------------------------- 
loc_1BD02:
                dc.w    loc_1BD06-loc_1BD02
                dc.w    loc_1BD4A-loc_1BD02           
;------------------------------------------------------------------------------- 
loc_1BD06:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Springs_Wall_Mappings, Obj_Map(A0) ; loc_1BEBC, $0004
                move.w  #$8680, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_12_To_ModifySpriteAttr_2P          ; loc_1BEF0
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$40, Obj_Height_2(A0)                           ; $0016
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.b   #$04, D0
                andi.b  #$07, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                beq.s   loc_1BD4A
                move.b  #$80, Obj_Height_2(A0)                           ; $0016  
;------------------------------------------------------------------------------- 
loc_1BD4A:
                move.w  #$0013, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Jmp_02_To_SolidObject_2_A1             ; loc_1BEF6
                cmpi.b  #$01, D4
                bne.s   loc_1BD92
                btst    #$01, Obj_Status(A1)                             ; $0022
                beq.s   loc_1BD92
                move.b  Obj_Status(A0), D1                               ; $0022
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcs.s   loc_1BD8A
                eori.b  #$01, D1
loc_1BD8A:
                andi.b  #$01, D1
                bne.s   loc_1BD92
                bsr.s   loc_1BDE8
loc_1BD92:
                movem.l (A7)+, D1-D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                bsr     Jmp_02_To_SolidObject_2_A1             ; loc_1BEF6
                cmpi.b  #$01, D4
                bne.s   loc_1BDC8
                btst    #$01, Obj_Status(A1)                             ; $0022
                beq.s   loc_1BDC8
                move.b  Obj_Status(A0), D1                               ; $0022
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcs.s   loc_1BDC0
                eori.b  #$01, D1
loc_1BDC0:
                andi.b  #$01, D1
                bne.s   loc_1BDC8
                bsr.s   loc_1BDE8
loc_1BDC8:
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Jmp_0E_To_DeleteObject                 ; loc_1BEEA
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                beq.s   loc_1BDE6
                bsr     Jmp_0A_To_DisplaySprite                ; loc_1BEE4
loc_1BDE6:
                rts
loc_1BDE8:
                move.w  Obj_Control_Var_04(A0), Obj_Speed(A1)     ; $0010, $0030
                move.w  #$F800, Obj_Speed(A1)                            ; $0010
                move.w  #$F800, Obj_Speed_Y(A1)                          ; $0012
                bset    #$00, Obj_Status(A1)                             ; $0022
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_1BE12
                bclr    #$00, Obj_Status(A1)                             ; $0022
                neg.w   Obj_Speed(A1)                                    ; $0010
loc_1BE12:
                move.w  #$000F, Obj_Player_Control(A1)                   ; $002E
                move.w  Obj_Speed(A1), Obj_Inertia(A1)            ; $0010, $0014
                btst    #$02, Obj_Status(A1)                             ; $0022
                bne.s   loc_1BE2C
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
loc_1BE2C:
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_1BE38
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
loc_1BE38:
                btst    #$00, D0
                beq.s   loc_1BE78
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$01, Obj_P_Flips_Remaining(A1)                  ; $002C
                move.b  #$08, Obj_Player_Flip_Speed(A1)                  ; $002D
                btst    #$01, D0
                bne.s   loc_1BE68
                move.b  #$03, Obj_P_Flips_Remaining(A1)                  ; $002C
loc_1BE68:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_1BE78
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_1BE78:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_1BE8E
                move.b  #$0C, Obj_Player_Top_Solid(A1)                   ; $003E
                move.b  #$0D, Obj_Player_LRB_Solid(A1)                   ; $003F
loc_1BE8E:
                cmpi.b  #$08, D0
                bne.s   loc_1BEA0
                move.b  #$0E, Obj_Player_Top_Solid(A1)                   ; $003E
                move.b  #$0F, Obj_Player_LRB_Solid(A1)                   ; $003F
loc_1BEA0:
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$06, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512   
;-------------------------------------------------------------------------------
Springs_Wall_Mappings:                                         ; loc_1BEBC
                dc.w    loc_1BEC0-Springs_Wall_Mappings
                dc.w    loc_1BED2-Springs_Wall_Mappings
loc_1BEC0:
                dc.w    $0002
                dc.l    $C0050034, $001AFFF8
                dc.l    $30050034, $001AFFF8
loc_1BED2:
                dc.w    $0002
                dc.l    $80050034, $001AFFF8
                dc.l    $70050034, $001AFFF8  
;===============================================================================
; Object 0x66 - Object para as molas triangulares nas paredes da Metropolis
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_0A_To_DisplaySprite:                                       ; loc_1BEE4
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_0E_To_DeleteObject:                                        ; loc_1BEEA
		jmp     (DeleteObject)                         ; loc_D314
Jmp_12_To_ModifySpriteAttr_2P:                                 ; loc_1BEF0
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_02_To_SolidObject_2_A1:                                    ; loc_1BEF6
		jmp     (SolidObject_2_A1)                     ; loc_F3B4
;-------------------------------------------------------------------------------
Obj67_Teleport_Attributes:                                  ; loc_1BEFC
;===============================================================================
; Object 0x67 - Atributo dos teletransportes na Metropolis
; [ Begin ] 
;===============================================================================
; loc_1BEFC:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1BF24(PC, D0), D1
                jsr     loc_1BF24(PC, D1)
                move.b  Obj_Control_Var_00(A0), D0                       ; $002C
                add.b   Obj_Control_Var_0A(A0), D0                       ; $0036
                beq     Jmp_03_To_MarkObjGone_3                ; loc_1C32C
                lea     (Teleport_Animate_Data), A1            ; loc_1C2CE
                bsr     Jmp_03_To_AnimateSprite                ; loc_1C326
                bra     Jmp_0B_To_DisplaySprite                ; loc_1C320
;-------------------------------------------------------------------------------     
loc_1BF24:
                dc.w    loc_1BF28-loc_1BF24
                dc.w    loc_1BF4C-loc_1BF24            
;------------------------------------------------------------------------------- 
loc_1BF28:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Teleport_Mappings, Obj_Map(A0) ; loc_1C2E8, $0004
                move.w  #$633C, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$05, Obj_Priority(A0)                           ; $0018    
;------------------------------------------------------------------------------- 
loc_1BF4C:
                lea     (Player_One).w, A1                           ; $FFFFB000
                lea     Obj_Control_Var_00(A0), A4                       ; $002C
                bsr.s   loc_1BF5E
                lea     (Player_Two).w, A1                           ; $FFFFB040
                lea     Obj_Control_Var_0A(A0), A4                       ; $0036
loc_1BF5E:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  loc_1BF6A(PC, D0), D0
                jmp     loc_1BF6A(PC, D0)         
;-------------------------------------------------------------------------------  
loc_1BF6A:
                dc.w    loc_1BF70-loc_1BF6A
                dc.w    loc_1C000-loc_1BF6A
                dc.w    loc_1C034-loc_1BF6A    
;-------------------------------------------------------------------------------  
loc_1BF70:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne     loc_1BFFE
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                addq.w  #$03, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1BF8E
                addi.w  #$000A, D0
loc_1BF8E:
                cmpi.w  #$0010, D0
                bcc.s   loc_1BFFE
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                addi.w  #$0020, D1
                cmpi.w  #$0040, D1
                bcc.s   loc_1BFFE
                tst.b   Obj_Timer(A1)                                    ; $002A
                bne.s   loc_1BFFE
                addq.b  #$02, (A4)
                move.b  #$81, Obj_Timer(A1)                              ; $002A
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.w  #$0800, Obj_Inertia(A1)                          ; $0014
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
                bclr    #$05, Obj_Status(A0)                             ; $0022
                bclr    #$05, Obj_Status(A1)                             ; $0022
                bset    #$01, Obj_Status(A1)                             ; $0022
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                clr.b   $0001(A4) 
                move.w  #$00BE, D0
                jsr     (Play_Sfx)                             ; loc_1512
                move.w  #$0100, Obj_Ani_Number(A0)                       ; $001C
loc_1BFFE:
                rts 
;-------------------------------------------------------------------------------  
loc_1C000:
                move.b  $0001(A4), D0 
                addq.b  #$02, $0001(A4) 
                jsr     (CalcSine)                             ; loc_3282
                asr.w   #$05, D0
                move.w  Obj_Y(A0), D2                                    ; $000C
                sub.w   D0, D2
                move.w  D2, Obj_Y(A1)                                    ; $000C
                cmpi.b  #$80, $0001(A4) 
                bne.s   loc_1C032
                bsr     loc_1C0B0
                addq.b  #$02, (A4)
                move.w  #$00BC, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_1C032:
                rts  
;-------------------------------------------------------------------------------  
loc_1C034:
                subq.b  #$01, $0002(A4) 
                bpl.s   loc_1C068
                move.l  $0006(A4), A2
                move.w  (A2)+, D4
                move.w  D4, Obj_X(A1)                                    ; $0008
                move.w  (A2)+, D5
                move.w  D5, Obj_Y(A1)                                    ; $000C
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bpl.s   loc_1C052
                subq.w  #$08, A2
loc_1C052:
                move.l  A2, $0006(A4)
                subq.w  #$04, $0004(A4) 
                beq.s   loc_1C08E
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$1000, D2
                bra     loc_1C114
loc_1C068:
                move.l  Obj_X(A1), D2                                    ; $0008
                move.l  Obj_Y(A1), D3                                    ; $000C
                move.w  Obj_Speed(A1), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  Obj_Speed_Y(A1), D0                              ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, Obj_X(A1)                                    ; $0008
                move.l  D3, Obj_Y(A1)                                    ; $000C
                rts
loc_1C08E:
                andi.w  #$07FF, Obj_Y(A1)                                ; $000C
                clr.b   (A4)
                clr.b   Obj_Timer(A1)                                    ; $002A
                btst    #$04, Obj_Subtype(A0)                            ; $0028
                bne.s   loc_1C0AE
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
loc_1C0AE:
                rts
loc_1C0B0:
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_1C0E4
                neg.b   D0
                andi.w  #$000F, D0
                add.w   D0, D0
                lea     (Teleport_From_To_Data), A2            ; loc_1C192
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D0
                subq.w  #$04, D0
                move.w  D0, $0004(A4) 
                lea     $00(A2, D0), A2
                move.w  (A2)+, D4
                move.w  D4, Obj_X(A1)                                    ; $0008
                move.w  (A2)+, D5
                move.w  D5, Obj_Y(A1)                                    ; $000C
                subq.w  #$08, A2
                bra.s   loc_1C108
loc_1C0E4:
                andi.w  #$000F, D0
                add.w   D0, D0
                lea     (Teleport_From_To_Data), A2            ; loc_1C192
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, $0004(A4) 
                subq.w  #$04, $0004(A4) 
                move.w  (A2)+, D4
                move.w  D4, Obj_X(A1)                                    ; $0008
                move.w  (A2)+, D5
                move.w  D5, Obj_Y(A1)                                    ; $000C
loc_1C108:
                move.l  A2, $0006(A4)
                move.w  (A2)+, D4
                move.w  (A2)+, D5
                move.w  #$1000, D2
loc_1C114:
                moveq   #$00, D0
                move.w  D2, D3
                move.w  D4, D0
                sub.w   Obj_X(A1), D0                                    ; $0008
                bge.s   loc_1C124
                neg.w   D0
                neg.w   D2
loc_1C124:
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   Obj_Y(A1), D1                                    ; $000C
                bge.s   loc_1C132
                neg.w   D1
                neg.w   D3
loc_1C132:
                cmp.w   D0, D1
                bcs.s   loc_1C164
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   Obj_Y(A1), D1                                    ; $000C
                swap.w  D1
                divs.w  D3, D1
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   Obj_X(A1), D0                                    ; $0008
                beq.s   loc_1C150
                swap.w  D0
                divs.w  D1, D0
loc_1C150:
                move.w  D0, Obj_Speed(A1)                                ; $0010
                move.w  D3, Obj_Speed_Y(A1)                              ; $0012
                tst.w   D1
                bpl.s   loc_1C15E
                neg.w   D1
loc_1C15E:
                move.w  D1, $0002(A4) 
                rts
loc_1C164:
                moveq   #$00, D0
                move.w  D4, D0
                sub.w   Obj_X(A1), D0                                    ; $0008
                swap.w  D0
                divs.w  D2, D0
                moveq   #$00, D1
                move.w  D5, D1
                sub.w   Obj_Y(A1), D1                                    ; $000C
                beq.s   loc_1C17E
                swap.w  D1
                divs.w  D0, D1
loc_1C17E:
                move.w  D1, Obj_Speed_Y(A1)                              ; $0012
                move.w  D2, Obj_Speed(A1)                                ; $0010
                tst.w   D0
                bpl.s   loc_1C18C
                neg.w   D0
loc_1C18C:
                move.w  D0, $0002(A4) 
                rts                         
;-------------------------------------------------------------------------------
Teleport_From_To_Data:                                         ; loc_1C192
                dc.w    loc_1C1AC-Teleport_From_To_Data
                dc.w    loc_1C1C6-Teleport_From_To_Data
                dc.w    loc_1C1D0-Teleport_From_To_Data
                dc.w    loc_1C1EA-Teleport_From_To_Data
                dc.w    loc_1C1F4-Teleport_From_To_Data
                dc.w    loc_1C1FE-Teleport_From_To_Data
                dc.w    loc_1C218-Teleport_From_To_Data
                dc.w    loc_1C232-Teleport_From_To_Data
                dc.w    loc_1C24C-Teleport_From_To_Data
                dc.w    loc_1C266-Teleport_From_To_Data
                dc.w    loc_1C280-Teleport_From_To_Data
                dc.w    loc_1C29A-Teleport_From_To_Data
                dc.w    loc_1C2B4-Teleport_From_To_Data
loc_1C1AC:
                dc.w    $0018
                dc.w    $07A8, $0270, $0750, $0270
                dc.w    $0740, $0280, $0740, $03E0
                dc.w    $0750, $03F0, $07A8, $03F0
loc_1C1C6:
                dc.w    $0008
                dc.w    $0C58, $05F0, $0E28, $05F0
loc_1C1D0:
                dc.w    $0018
                dc.w    $1828, $06B0, $17D0, $06B0
                dc.w    $17C0, $06C0, $17C0, $07E0
                dc.w    $17B0, $07F0, $1758, $07F0
loc_1C1EA:
                dc.w    $0008
                dc.w    $05D8, $0370, $0780, $0370
loc_1C1F4:
                dc.w    $0008
                dc.w    $05D8, $05F0, $0700, $05F0
loc_1C1FE:
                dc.w    $0018
                dc.w    $0BD8, $01F0, $0C30, $01F0
                dc.w    $0C40, $01E0, $0C40, $00C0
                dc.w    $0C50, $00B0, $0CA8, $00B0
loc_1C218:
                dc.w    $0018
                dc.w    $1728, $0330, $15D0, $0330
                dc.w    $15C0, $0320, $15C0, $0240
                dc.w    $15D0, $0230, $1628, $0230
loc_1C232:
                dc.w    $0018
                dc.w    $06D8, $01F0, $0730, $01F0
                dc.w    $0740, $01E0, $0740, $0100
                dc.w    $0750, $00F0, $07A8, $00F0
loc_1C24C:
                dc.w    $0018
                dc.w    $07D8, $0330, $0828, $0330
                dc.w    $0840, $0340, $0840, $0458
                dc.w    $0828, $0470, $07D8, $0470
loc_1C266:
                dc.w    $0018
                dc.w    $0FD8, $03B0, $1028, $03B0
                dc.w    $1040, $0398, $1040, $02C4
                dc.w    $1058, $02B0, $10A8, $02B0
loc_1C280:
                dc.w    $0018
                dc.w    $0FD8, $04B0, $1028, $04B0
                dc.w    $1040, $04C0, $1040, $05D8
                dc.w    $1058, $05F0, $10A8, $05F0
loc_1C29A:
                dc.w    $0018
                dc.w    $2058, $0430, $20A8, $0430
                dc.w    $20C0, $0418, $20C0, $02C0
                dc.w    $20D0, $02B0, $2128, $02B0
loc_1C2B4:
                dc.w    $0018
                dc.w    $2328, $05B0, $22D0, $05B0
                dc.w    $22C0, $05A0, $22C0, $04C0
                dc.w    $22D0, $04B0, $2328, $04B0
;-------------------------------------------------------------------------------
Teleport_Animate_Data:                                         ; loc_1C2CE
                dc.w    loc_1C2D2-Teleport_Animate_Data
                dc.w    loc_1C2D5-Teleport_Animate_Data
loc_1C2D2:
                dc.b    $1F, $00, $FF
loc_1C2D5:
                dc.b    $01, $01, $00, $00, $00, $00, $00, $01
                dc.b    $00, $00, $00, $01, $00, $00, $01, $00
                dc.b    $FE, $02, $00               
;-------------------------------------------------------------------------------
Teleport_Mappings:                                             ; loc_1C2E8
                dc.w    loc_1C2EC-Teleport_Mappings
                dc.w    loc_1C2EE-Teleport_Mappings
loc_1C2EC:
                dc.w    $0000
loc_1C2EE:
                dc.w    $0006
                dc.l    $E0050000, $0000FFEC
                dc.l    $E0050000, $0000FFF8
                dc.l    $F0050000, $0000FFEC
                dc.l    $F0050000, $0000FFF8
                dc.l    $00050000, $0000FFEC
                dc.l    $00050000, $0000FFF8
;===============================================================================
; Object 0x67 - Atributo dos teletransportes na Metropolis
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_0B_To_DisplaySprite:                                       ; loc_1C320
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_03_To_AnimateSprite:                                       ; loc_1C326
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_03_To_MarkObjGone_3:                                       ; loc_1C32C
		jmp     (MarkObjGone_3)                        ; loc_D26C
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj68_Block_Harpon:                                         ; loc_1C334
;===============================================================================
; Object 0x68 - Bloco com harpão na Metropolis
; [ Begin ] 
;===============================================================================
; loc_1C334:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1C342(PC, D0), D1
                jmp     loc_1C342(PC, D1)
;-------------------------------------------------------------------------------
loc_1C342:
                dc.w    loc_1C348-loc_1C342
                dc.w    loc_1C3EA-loc_1C342
                dc.w    loc_1C402-loc_1C342       
;-------------------------------------------------------------------------------
loc_1C348:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Block_Harpon_Mappings, Obj_Map(A0) ; loc_1C4F0, $0004
                move.w  #$6414, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_13_To_ModifySpriteAttr_2P          ; loc_1C610
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                bsr     Jmp_09_To_SingleObjectLoad_2           ; loc_1C60A
                bne.s   loc_1C3E4
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                addq.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_X(A1), Obj_Control_Var_04(A1)         ; $0008, $0030
                move.w  Obj_Y(A1), Obj_Control_Var_06(A1)         ; $000C, $0032
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  #$241C, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.w  ($FFFFFE04).w, D0
                lsr.w   #$06, D0
                move.w  D0, D1
                andi.w  #$0001, D0
                move.w  D0, Obj_Control_Var_0A(A1)                       ; $0036
                lsr.w   #$01, D1
                add.b   Obj_Subtype(A0), D1                              ; $0028
                andi.w  #$0003, D1
                move.b  D1, Obj_Routine_2(A1)                            ; $0025
                move.b  D1, Obj_Map_Id(A1)                               ; $001A
                lea     (loc_1C4EC), A2
                move.b  $00(A2, D1), Obj_Col_Flags(A1)                   ; $0020
loc_1C3E4:
                move.b  #$04, Obj_Map_Id(A0)                             ; $001A  
;-------------------------------------------------------------------------------
loc_1C3EA:
                move.w  #$001B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_08_To_SolidObject                  ; loc_1C616
                bra     Jmp_11_To_MarkObjGone                  ; loc_1C604 
;-------------------------------------------------------------------------------
loc_1C402:
                bsr     loc_1C46A
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                add.w   D0, D0
                move.w  loc_1C41E(PC, D0), D1
                jsr     loc_1C41E(PC, D1)
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                bra     Jmp_01_To_MarkObjGone_2                ; loc_1C61C            
;-------------------------------------------------------------------------------   
loc_1C41E:
                dc.w    loc_1C426-loc_1C41E
                dc.w    loc_1C438-loc_1C41E
                dc.w    loc_1C448-loc_1C41E
                dc.w    loc_1C458-loc_1C41E         
;------------------------------------------------------------------------------- 
loc_1C426:
                moveq   #$00, D0
                move.b  Obj_Control_Var_08(A0), D0                       ; $0034
                neg.w   D0
                add.w   Obj_Control_Var_06(A0), D0                       ; $0032
                move.w  D0, Obj_Y(A0)                                    ; $000C
                rts     
;------------------------------------------------------------------------------- 
loc_1C438:
                moveq   #$00, D0
                move.b  Obj_Control_Var_08(A0), D0                       ; $0034
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_X(A0)                                    ; $0008
                rts      
;------------------------------------------------------------------------------- 
loc_1C448:
                moveq   #$00, D0
                move.b  Obj_Control_Var_08(A0), D0                       ; $0034
                add.w   Obj_Control_Var_06(A0), D0                       ; $0032
                move.w  D0, Obj_Y(A0)                                    ; $000C
                rts  
;------------------------------------------------------------------------------- 
loc_1C458:
                moveq   #$00, D0
                move.b  Obj_Control_Var_08(A0), D0                       ; $0034
                neg.w   D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_X(A0)                                    ; $0008
                rts
loc_1C46A:
                tst.w   Obj_Control_Var_0C(A0)                           ; $0038
                beq.s   loc_1C48E
                move.b  ($FFFFFE05).w, D0
                andi.b  #$3F, D0
                bne.s   loc_1C4EA
                clr.w   Obj_Control_Var_0C(A0)                           ; $0038
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_1C48E
                move.w  #$00B6, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_1C48E:
                tst.w   Obj_Control_Var_0A(A0)                           ; $0036
                beq.s   loc_1C4CA
                subi.w  #$0800, Obj_Control_Var_08(A0)                   ; $0034
                bcc.s   loc_1C4EA
                move.w  #$0000, Obj_Control_Var_08(A0)                   ; $0034
                move.w  #$0000, Obj_Control_Var_0A(A0)                   ; $0036
                move.w  #$0001, Obj_Control_Var_0C(A0)                   ; $0038
                addq.b  #$01, Obj_Routine_2(A0)                          ; $0025
                andi.b  #$03, Obj_Routine_2(A0)                          ; $0025
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.b  loc_1C4EC(PC, D0), Obj_Col_Flags(A0)       ; $0020
                rts
loc_1C4CA:
                addi.w  #$0800, Obj_Control_Var_08(A0)                   ; $0034
                cmpi.w  #$2000, Obj_Control_Var_08(A0)                   ; $0034
                bcs.s   loc_1C4EA
                move.w  #$2000, Obj_Control_Var_08(A0)                   ; $0034
                move.w  #$0001, Obj_Control_Var_0A(A0)                   ; $0036
                move.w  #$0001, Obj_Control_Var_0C(A0)                   ; $0038
loc_1C4EA:
                rts 
;-------------------------------------------------------------------------------  
loc_1C4EC:
                dc.b    $84, $A6, $84, $A6       
;-------------------------------------------------------------------------------
Block_Harpon_Mappings:                                         ; loc_1C4F0
                dc.w    loc_1C4FA-Block_Harpon_Mappings
                dc.w    loc_1C504-Block_Harpon_Mappings
                dc.w    loc_1C50E-Block_Harpon_Mappings
                dc.w    loc_1C518-Block_Harpon_Mappings
                dc.w    loc_1C522-Block_Harpon_Mappings
loc_1C4FA:
                dc.w    $0001
                dc.l    $F0031000, $1000FFFC
loc_1C504:
                dc.w    $0001
                dc.l    $FC0C0004, $0002FFF0
loc_1C50E:
                dc.w    $0001
                dc.l    $F0030000, $0000FFFC
loc_1C518:
                dc.w    $0001
                dc.l    $FC0C0804, $0802FFF0
loc_1C522:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0
                dc.l    $F0070800, $08000000       
;===============================================================================
; Object 0x68 - Bloco com harpão na Metropolis
; [ End ] 
;===============================================================================
Obj6D_Harpoon:                                              ; loc_1C534
;===============================================================================
; Object 0x6D - Harpões no chão na Metropolis
; [ Begin ] 
;===============================================================================
; loc_1C534:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1C542(PC, D0), D1
                jmp     loc_1C542(PC, D1)
;------------------------------------------------------------------------------- 
loc_1C542:
                dc.w    loc_1C546-loc_1C542
                dc.w    loc_1C580-loc_1C542      
;-------------------------------------------------------------------------------
loc_1C546:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Block_Harpon_Mappings, Obj_Map(A0) ; loc_1C4F0, $0004
                move.w  #$241C, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_13_To_ModifySpriteAttr_2P          ; loc_1C610
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                move.b  #$84, Obj_Col_Flags(A0)                          ; $0020  
;-------------------------------------------------------------------------------
loc_1C580:
                bsr     loc_1C59C
                moveq   #$00, D0
                move.b  Obj_Control_Var_08(A0), D0                       ; $0034
                neg.w   D0
                add.w   Obj_Control_Var_06(A0), D0                       ; $0032
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                bra     Jmp_01_To_MarkObjGone_2                ; loc_1C61C
loc_1C59C:
                tst.w   Obj_Control_Var_0E(A0)                           ; $003A
                beq.s   loc_1C5A8
                subq.w  #$01, Obj_Control_Var_0E(A0)                     ; $003A
                rts
loc_1C5A8:
                tst.w   Obj_Control_Var_0C(A0)                           ; $0038
                beq.s   loc_1C5C0
                move.b  ($FFFFFE05).w, D0
                sub.b   Obj_Subtype(A0), D0                              ; $0028
                andi.b  #$7F, D0
                bne.s   loc_1C602
                clr.w   Obj_Control_Var_0C(A0)                           ; $0038
loc_1C5C0:
                tst.w   Obj_Control_Var_0A(A0)                           ; $0036
                beq.s   loc_1C5E2
                subi.w  #$0400, Obj_Control_Var_08(A0)                   ; $0034
                bcc.s   loc_1C602
                move.w  #$0000, Obj_Control_Var_08(A0)                   ; $0034
                move.w  #$0000, Obj_Control_Var_0A(A0)                   ; $0036
                move.w  #$0001, Obj_Control_Var_0C(A0)                   ; $0038
                rts
loc_1C5E2:
                addi.w  #$0400, Obj_Control_Var_08(A0)                   ; $0034
                cmpi.w  #$2000, Obj_Control_Var_08(A0)                   ; $0034
                bcs.s   loc_1C602
                move.w  #$2000, Obj_Control_Var_08(A0)                   ; $0034
                move.w  #$0001, Obj_Control_Var_0A(A0)                   ; $0036
                move.w  #$0003, Obj_Control_Var_0E(A0)                   ; $003A
loc_1C602:
                rts         
;===============================================================================
; Object 0x6D - Harpões no chão na Metropolis
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_11_To_MarkObjGone:                                         ; loc_1C604
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_09_To_SingleObjectLoad_2:                                  ; loc_1C60A
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_13_To_ModifySpriteAttr_2P:                                 ; loc_1C610
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_08_To_SolidObject:                                         ; loc_1C616
		jmp     (SolidObject)                          ; loc_F344
Jmp_01_To_MarkObjGone_2:                                       ; loc_1C61C
		jmp     (MarkObjGone_2)                        ; loc_D238
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj69_Screw_Nut:                                            ; loc_1C624
;===============================================================================
; Object 0x69 - Porca usada nos parafusos na Metropolis
; [ Begin ] 
;===============================================================================
; loc_1C624:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1C632(PC, D0), D1
                jmp     loc_1C632(PC, D1)
;-------------------------------------------------------------------------------
loc_1C632:
                dc.w    loc_1C63A-loc_1C632
                dc.w    loc_1C67C-loc_1C632
                dc.w    loc_1C79C-loc_1C632
                dc.w    loc_1C694-loc_1C632         
;-------------------------------------------------------------------------------  
loc_1C63A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Screw_Nut_Mappings, Obj_Map(A0) ; loc_1C7C6, $0004
                move.w  #$2500, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_14_To_ModifySpriteAttr_2P          ; loc_1C83C
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$0B, Obj_Height_2(A0)                           ; $0016
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$007F, D0
                lsl.w   #$03, D0
                move.w  D0, Obj_Control_Var_0A(A0)                       ; $0036      
;-------------------------------------------------------------------------------  
loc_1C67C:
                lea     (Player_One).w, A1                           ; $FFFFB000
                lea     Obj_Control_Var_0C(A0), A4                       ; $0038
                moveq   #$03, D6
                bsr.s   loc_1C6B2
                lea     (Player_Two).w, A1                           ; $FFFFB040
                lea     Obj_Control_Var_10(A0), A4                       ; $003C
                moveq   #$04, D6
                bsr.s   loc_1C6B2           
;-------------------------------------------------------------------------------  
loc_1C694:
                andi.w  #$07FF, Obj_Y(A0)                                ; $000C
                move.w  #$002B, D1
                move.w  #$000C, D2
                move.w  #$000D, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_09_To_SolidObject                  ; loc_1C842
                bra     Jmp_12_To_MarkObjGone                  ; loc_1C830
loc_1C6B2:
                btst    D6, Obj_Status(A0)                               ; $0022
                bne.s   loc_1C6BA
                clr.b   (A4)
loc_1C6BA:
                moveq   #$00, D0
                move.b  (A4), D0
                move.w  loc_1C6C6(PC, D0), D0
                jmp     loc_1C6C6(PC, D0)        
;-------------------------------------------------------------------------------  
loc_1C6C6:
                dc.w    loc_1C6CC-loc_1C6C6
                dc.w    loc_1C6EC-loc_1C6C6
                dc.w    loc_1C70E-loc_1C6C6     
;-------------------------------------------------------------------------------   
loc_1C6CC:
                btst    D6, Obj_Status(A0)                               ; $0022
                bne.s   loc_1C6D4
                rts
loc_1C6D4:
                addq.b  #$02, (A4)
                move.b  #$00, $0001(A4) 
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bcc.s   loc_1C6EC
                move.b  #$01, $0001(A4)  
;-------------------------------------------------------------------------------  
loc_1C6EC:
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                tst.b   Obj_Flags(A4)                                    ; $0001
                beq.s   loc_1C6FE
                addi.w  #$000F, D0
loc_1C6FE:
                cmpi.w  #$0010, D0
                bcc.s   loc_1C70C
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                addq.b  #$02, (A4)
loc_1C70C:
                rts  
;-------------------------------------------------------------------------------  
loc_1C70E:
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                bcc.s   loc_1C774
                add.w   D0, Obj_Control_Var_08(A0)                       ; $0034
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                asr.w   #$03, D0
                move.w  D0, D1
                asr.w   #$01, D0
                andi.w  #$0003, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                neg.w   D1
                add.w   Obj_Control_Var_06(A0), D1                       ; $0032
                move.w  D1, Obj_Y(A0)                                    ; $000C
                sub.w   Obj_Control_Var_06(A0), D1                       ; $0032
                move.w  Obj_Control_Var_0A(A0), D0                       ; $0036
                cmp.w   D0, D1
                blt.s   loc_1C772
                move.w  D0, D1
                add.w   Obj_Control_Var_06(A0), D1                       ; $0032
                move.w  D1, Obj_Y(A0)                                    ; $000C
                lsl.w   #$03, D0
                neg.w   D0
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bmi.s   loc_1C76C
                clr.b   (A4)
                rts
loc_1C76C:
                move.b  #$04, Obj_Routine(A0)                            ; $0024
loc_1C772:
                rts
loc_1C774:
                add.w   D0, Obj_Control_Var_08(A0)                       ; $0034
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                asr.w   #$03, D0
                move.w  D0, D1
                asr.w   #$01, D0
                andi.w  #$0003, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                neg.w   D1
                add.w   Obj_Control_Var_06(A0), D1                       ; $0032
                move.w  D1, Obj_Y(A0)                                    ; $000C
                rts   
;-------------------------------------------------------------------------------  
loc_1C79C:
                bsr     Jmp_09_To_SpeedToPos                   ; loc_1C848
                addi.w  #$0038, Obj_Speed_Y(A0)                          ; $0012
                bsr     Jmp_00_To_ObjHitFloor                  ; loc_1C836
                tst.w   D1
                bpl     loc_1C7C2
                add.w   D1, Obj_Y(A0)                                    ; $000C
                andi.w  #$07FF, Obj_Y(A0)                                ; $000C
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_1C7C2:
                bra     loc_1C694                   
;-------------------------------------------------------------------------------
Screw_Nut_Mappings:                                            ; loc_1C7C6
                dc.w    loc_1C7CE-Screw_Nut_Mappings
                dc.w    loc_1C7E0-Screw_Nut_Mappings
                dc.w    loc_1C7FA-Screw_Nut_Mappings
                dc.w    loc_1C814-Screw_Nut_Mappings
loc_1C7CE:
                dc.w    $0002
                dc.l    $F40E0000, $0000FFE0
                dc.l    $F40E000C, $00060000
loc_1C7E0:
                dc.w    $0003
                dc.l    $F40A0003, $0001FFE0
                dc.l    $F40E000C, $0006FFF8
                dc.l    $F4020809, $08040018
loc_1C7FA:
                dc.w    $0003
                dc.l    $F4060024, $0012FFE0
                dc.l    $F40E002A, $0015FFF0
                dc.l    $F4060018, $000C0010
loc_1C814:
                dc.w    $0003
                dc.l    $F4020027, $0013FFE0
                dc.l    $F40E0018, $000CFFE8
                dc.l    $F40A082D, $08160008
;===============================================================================
; Object 0x69 - Porca usada nos parafusos na Metropolis
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_12_To_MarkObjGone:                                         ; loc_1C830
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_00_To_ObjHitFloor:                                         ; loc_1C836
		jmp     (ObjHitFloor)                          ; loc_14204
Jmp_14_To_ModifySpriteAttr_2P:                                 ; loc_1C83C
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_09_To_SolidObject:                                         ; loc_1C842
		jmp     (SolidObject)                          ; loc_F344
Jmp_09_To_SpeedToPos:                                          ; loc_1C848
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj6A_DHz_Three_Boxes_Mz_Ptfrm:                             ; loc_1C850
;===============================================================================
; Object 0x6A - Três caixas rodando na Dust Hill / Plataformas na Metropolis
; [ Begin ] 
;===============================================================================  
; loc_1C850:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1C85E(PC, D0), D1
                jmp     loc_1C85E(PC, D1)  
;-------------------------------------------------------------------------------  
loc_1C85E:
                dc.w    loc_1C864-loc_1C85E
                dc.w    loc_1C97E-loc_1C85E
                dc.w    loc_1CA06-loc_1C85E       
;-------------------------------------------------------------------------------  
loc_1C864:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Mz_Platform_Mappings, Obj_Map(A0) ; loc_1BC64, $0004
                move.w  #$6000, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$0C, Obj_Height_2(A0)                           ; $0016
                move.l  #loc_1CA7C, Obj_Control_Var_00(A0)         ; $002C
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$0B, (Level_Id).w                           ; $FFFFFE10
                bne     loc_1C964
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Rotating_Boxes_Mappings, Obj_Map(A0) ; loc_1CAD0, $0004
                move.w  #$63D4, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$20, Obj_Height_2(A0)                           ; $0016
                move.l  #loc_1CA94, Obj_Control_Var_00(A0)         ; $002C
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1C8DC
                move.l  #loc_1CAB2, Obj_Control_Var_00(A0)         ; $002C
loc_1C8DC:
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$18, Obj_Subtype(A0)                            ; $0028
                bne     loc_1C970
                bsr     Jmp_0A_To_SingleObjectLoad_2           ; loc_1CAF4
                bne.s   loc_1C93C
                bsr.s   loc_1C93E
                addi.w  #$0040, Obj_X(A1)                                ; $0008
                addi.w  #$0040, Obj_Y(A1)                                ; $000C
                move.b  #$06, Obj_Subtype(A1)                            ; $0028
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1C914
                move.b  #$0C, Obj_Subtype(A1)                            ; $0028
loc_1C914:
                bsr     Jmp_0A_To_SingleObjectLoad_2           ; loc_1CAF4
                bne.s   loc_1C93C
                bsr.s   loc_1C93E
                subi.w  #$0040, Obj_X(A1)                                ; $0008
                addi.w  #$0040, Obj_Y(A1)                                ; $000C
                move.b  #$0C, Obj_Subtype(A1)                            ; $0028
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1C93C
                move.b  #$06, Obj_Subtype(A1)                            ; $0028
loc_1C93C:
                bra.s   loc_1C964
loc_1C93E:
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_X(A0), Obj_Control_Var_06(A1)         ; $0008, $0032
                move.w  Obj_Y(A0), Obj_Control_Var_04(A1)         ; $000C, $0030
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                rts
loc_1C964:
                move.w  Obj_X(A0), Obj_Control_Var_06(A0)         ; $0008, $0032
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
loc_1C970:
                bsr     Jmp_15_To_ModifySpriteAttr_2P          ; loc_1CAFA
                move.b  Obj_Subtype(A0), Obj_Control_Var_0C(A0)   ; $0028, $0038
                bra     loc_1CA42   
;-------------------------------------------------------------------------------  
loc_1C97E:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                tst.w   Obj_Control_Var_0A(A0)                           ; $0036
                bne.s   loc_1C9CE
                move.b  Obj_Control_Var_10(A0), D1                       ; $003C
                move.b  Obj_Status(A0), D0                               ; $0022
                btst    #$03, D0
                bne.s   loc_1C9AA
                btst    #$03, D1
                beq.s   loc_1C9AE
                move.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                move.b  #$00, Obj_Control_Var_10(A0)                     ; $003C
                bra.s   loc_1C9DE
loc_1C9AA:
                move.b  D0, Obj_Control_Var_10(A0)                       ; $003C
loc_1C9AE:
                btst    #$04, D0
                bne.s   loc_1C9C8
                btst    #$04, D1
                beq.s   loc_1C9DE
                move.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                move.b  #$00, Obj_Control_Var_10(A0)                     ; $003C
                bra.s   loc_1C9DE
loc_1C9C8:
                move.b  D0, Obj_Control_Var_10(A0)                       ; $003C
                bra.s   loc_1C9DE
loc_1C9CE:
                jsr     (SpeedToPos)                           ; loc_D1DA
                subq.w  #$01, Obj_Control_Var_08(A0)                     ; $0034
                bne.s   loc_1C9DE
                bsr     loc_1CA42
loc_1C9DE:
                move.w  (A7)+, D4
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_1C9FE
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     Jmp_0A_To_SolidObject                  ; loc_1CB00
loc_1C9FE:
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                bra     Jmp_02_To_MarkObjGone_2                ; loc_1CB06 
;-------------------------------------------------------------------------------  
loc_1CA06:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                jsr     (SpeedToPos)                           ; loc_D1DA
                subq.w  #$01, Obj_Control_Var_08(A0)                     ; $0034
                bne.s   loc_1CA1A
                bsr     loc_1CA42
loc_1CA1A:
                move.w  (A7)+, D4
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_1CA3A
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     Jmp_0A_To_SolidObject                  ; loc_1CB00
loc_1CA3A:
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                bra     Jmp_02_To_MarkObjGone_2                ; loc_1CB06
loc_1CA42:
                moveq   #$00, D0
                move.b  Obj_Control_Var_0C(A0), D0                       ; $0038
                move.l  Obj_Control_Var_00(A0), A1                       ; $002C
                lea     $00(A1, D0), A1
                move.w  (A1)+, Obj_Speed(A0)                             ; $0010
                move.w  (A1)+, Obj_Speed_Y(A0)                           ; $0012
                move.w  (A1)+, Obj_Control_Var_08(A0)                    ; $0034
                move.w  #$0007, Obj_Control_Var_0E(A0)                   ; $003A
                move.b  #$00, Obj_Control_Var_0A(A0)                     ; $0036
                addq.b  #$06, Obj_Control_Var_0C(A0)                     ; $0038
                cmpi.b  #$18, Obj_Control_Var_0C(A0)                     ; $0038
                bcs.s   loc_1CA7A
                move.b  #$00, Obj_Control_Var_0C(A0)                     ; $0038
loc_1CA7A:
                rts      
;-------------------------------------------------------------------------------
loc_1CA7C:
                dc.w    $0000, $0400, $0010, $0400, $FE00, $0020, $0000, $0400
                dc.w    $0010, $FC00, $FE00, $0020          
;-------------------------------------------------------------------------------  
loc_1CA94:
                dc.w    $0000, $0100, $0040, $FF00, $0000, $0080, $0000, $FF00
                dc.w    $0040, $0100, $0000, $0080, $0100, $0000, $0040
;-------------------------------------------------------------------------------
loc_1CAB2:
                dc.w    $0000, $0100, $0040, $0100, $0000, $0080, $0000, $FF00
                dc.w    $0040, $FF00, $0000, $0080, $FF00, $0000, $0040  
;-------------------------------------------------------------------------------    
Rotating_Boxes_Mappings:                                       ; loc_1CAD0
                dc.w    loc_1CAD2-Rotating_Boxes_Mappings
loc_1CAD2:
                dc.w    $0004
                dc.l    $E00F0000, $0000FFE0
                dc.l    $E00F0010, $00080000
                dc.l    $000F1810, $1808FFE0
                dc.l    $000F1800, $18000000 
;===============================================================================
; Object 0x6A - Três caixas rodando na Dust Hill / Plataformas na Metropolis
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_0A_To_SingleObjectLoad_2:                                  ; loc_1CAF4
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_15_To_ModifySpriteAttr_2P:                                 ; loc_1CAFA
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_0A_To_SolidObject:                                         ; loc_1CB00
		jmp     (SolidObject)                          ; loc_F344
Jmp_02_To_MarkObjGone_2:                                       ; loc_1CB06
		jmp     (MarkObjGone_2)                        ; loc_D238
;-------------------------------------------------------------------------------
Obj6B_Mz_Platform:                                          ; loc_1CB0C
;===============================================================================
; Object 0x6B - Plataformas na Metropolis / Blocos na Chemical Plant
; [ Begin ] 
;===============================================================================   
; loc_1CB0C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1CB1A(PC, D0), D1
                jmp     loc_1CB1A(PC, D1) 
;-------------------------------------------------------------------------------                     
loc_1CB1A:
                dc.w    loc_1CB26-loc_1CB1A
                dc.w    loc_1CBA8-loc_1CB1A        
;-------------------------------------------------------------------------------    
loc_1CB1E:
                dc.b    $20, $0C, $01, $00, $10, $10, $00, $00   
;-------------------------------------------------------------------------------
loc_1CB26:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Mz_Platform_Mappings, Obj_Map(A0) ; loc_1BC64, $0004
                move.w  #$6000, Obj_Art_VRAM(A0)                         ; $0002
                cmpi.b  #$0D, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_1CB4E
                move.l  #CPz_Block_Mappings, Obj_Map(A0) ; loc_1CDA2, $0004
                move.w  #$6418, Obj_Art_VRAM(A0)                         ; $0002
loc_1CB4E:
                bsr     Jmp_16_To_ModifySpriteAttr_2P          ; loc_1CDB0
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     loc_1CB1E(PC, D0), A2
                move.b  (A2)+, Obj_Width(A0)                             ; $0019
                move.b  (A2)+, Obj_Height_2(A0)                          ; $0016
                move.b  (A2)+, Obj_Map_Id(A0)                            ; $001A
                move.w  Obj_X(A0), Obj_Control_Var_08(A0)         ; $0008, $0034
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                subq.w  #$08, D0
                bcs.s   loc_1CBA8
                lsl.w   #$02, D0
                lea     ($FFFFFE8A).w, A2
                lea     $00(A2, D0), A2
                tst.w   (A2)
                bpl.s   loc_1CBA8
                bchg    #00, Obj_Status(A0)                              ; $0022  
;-------------------------------------------------------------------------------
loc_1CBA8:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                add.w   D0, D0
                move.w  loc_1CBE8(PC, D0), D1
                jsr     loc_1CBE8(PC, D1)
                move.w  (A7)+, D4
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_1CBE0
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     Jmp_0B_To_SolidObject                  ; loc_1CDB6
loc_1CBE0:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                bra     Jmp_03_To_MarkObjGone_2                ; loc_1CDBC                                     
;------------------------------------------------------------------------------- 
loc_1CBE8:
                dc.w    loc_1CC00-loc_1CBE8
                dc.w    loc_1CC02-loc_1CBE8
                dc.w    loc_1CC0E-loc_1CBE8
                dc.w    loc_1CC30-loc_1CBE8
                dc.w    loc_1CC3C-loc_1CBE8
                dc.w    loc_1CC5E-loc_1CBE8
                dc.w    loc_1CC7C-loc_1CBE8
                dc.w    loc_1CCAA-loc_1CBE8
                dc.w    loc_1CCE2-loc_1CBE8
                dc.w    loc_1CCF4-loc_1CBE8
                dc.w    loc_1CD04-loc_1CBE8
                dc.w    loc_1CD14-loc_1CBE8    
;-------------------------------------------------------------------------------    
loc_1CC00:
                rts      
;------------------------------------------------------------------------------- 
loc_1CC02:
                move.w  #$0040, D1
                moveq   #$00, D0
                move.b  ($FFFFFE68).w, D0
                bra.s   loc_1CC18  
;------------------------------------------------------------------------------- 
loc_1CC0E:
                move.w  #$0080, D1
                moveq   #$00, D0
                move.b  ($FFFFFE7C).w, D0
loc_1CC18:
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1CC24
                neg.w   D0
                add.w   D1, D0
loc_1CC24:
                move.w  Obj_Control_Var_08(A0), D1                       ; $0034
                sub.w   D0, D1
                move.w  D1, Obj_X(A0)                                    ; $0008
                rts     
;------------------------------------------------------------------------------- 
loc_1CC30:
                move.w  #$0040, D1
                moveq   #$00, D0
                move.b  ($FFFFFE68).w, D0
                bra.s   loc_1CC46     
;------------------------------------------------------------------------------- 
loc_1CC3C:
                move.w  #$0080, D1
                moveq   #$00, D0
                move.b  ($FFFFFE7C).w, D0
loc_1CC46:
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1CC52
                neg.w   D0
                add.w   D1, D0
loc_1CC52:
                move.w  Obj_Control_Var_04(A0), D1                       ; $0030
                sub.w   D0, D1
                move.w  D1, Obj_Y(A0)                                    ; $000C
                rts    
;------------------------------------------------------------------------------- 
loc_1CC5E:
                move.b  ($FFFFFE60).w, D0
                lsr.w   #$01, D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.b  Obj_Status(A0), D1                               ; $0022
                andi.b  #$18, D1
                beq.s   loc_1CC7A
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
loc_1CC7A:
                rts    
;------------------------------------------------------------------------------- 
loc_1CC7C:
                move.l  Obj_Y(A0), D3                                    ; $000C
                move.w  Obj_Speed_Y(A0), D0                              ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D3, Obj_Y(A0)                                    ; $000C
                addi.w  #$0008, Obj_Speed_Y(A0)                          ; $0012
                move.w  (Sonic_Level_Limits_Max_Y).w, D0             ; $FFFFEECE
                addi.w  #$00E0, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcc.s   loc_1CCA8
                move.b  #$00, Obj_Subtype(A0)                            ; $0028
loc_1CCA8:
                rts  
;------------------------------------------------------------------------------- 
loc_1CCAA:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                bne.s   loc_1CCC0
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_1CCE0
                move.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
loc_1CCC0:
                bsr     Jmp_0A_To_SpeedToPos                   ; loc_1CDC2
                moveq   #$08, D1
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                addi.w  #$0070, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcc.s   loc_1CCD6
                neg.w   D1
loc_1CCD6:
                add.w   D1, Obj_Speed_Y(A0)                              ; $0012
                bne.s   loc_1CCE0
                clr.b   Obj_Subtype(A0)                                  ; $0028
loc_1CCE0:
                rts  
;------------------------------------------------------------------------------- 
loc_1CCE2:
                move.w  #$0010, D1
                moveq   #$00, D0
                move.b  ($FFFFFE88).w, D0
                lsr.w   #$01, D0
                move.w  ($FFFFFE8A).w, D3
                bra.s   loc_1CD22    
;------------------------------------------------------------------------------- 
loc_1CCF4:
                move.w  #$0030, D1
                moveq   #$00, D0
                move.b  ($FFFFFE8C).w, D0
                move.w  ($FFFFFE8E).w, D3
                bra.s   loc_1CD22 
;------------------------------------------------------------------------------- 
loc_1CD04:
                move.w  #$0050, D1
                moveq   #$00, D0
                move.b  ($FFFFFE90).w, D0
                move.w  ($FFFFFE92).w, D3
                bra.s   loc_1CD22   
;------------------------------------------------------------------------------- 
loc_1CD14:
                move.w  #$0070, D1
                moveq   #$00, D0
                move.b  ($FFFFFE94).w, D0
                move.w  ($FFFFFE96).w, D3
loc_1CD22:
                tst.w   D3
                bne.s   loc_1CD30
                addq.b  #$01, Obj_Status(A0)                             ; $0022
                andi.b  #$03, Obj_Status(A0)                             ; $0022
loc_1CD30:
                move.b  Obj_Status(A0), D2                               ; $0022
                andi.b  #$03, D2
                bne.s   loc_1CD50
                sub.w   D1, D0
                add.w   Obj_Control_Var_08(A0), D0                       ; $0034
                move.w  D0, Obj_X(A0)                                    ; $0008
                neg.w   D1
                add.w   Obj_Control_Var_04(A0), D1                       ; $0030
                move.w  D1, Obj_Y(A0)                                    ; $000C
                rts
loc_1CD50:
                subq.b  #$01, D2
                bne.s   loc_1CD6E
                subq.w  #$01, D1
                sub.w   D1, D0
                neg.w   D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_Y(A0)                                    ; $000C
                addq.w  #$01, D1
                add.w   Obj_Control_Var_08(A0), D1                       ; $0034
                move.w  D1, Obj_X(A0)                                    ; $0008
                rts
loc_1CD6E:
                subq.b  #$01, D2
                bne.s   loc_1CD8C
                subq.w  #$01, D1
                sub.w   D1, D0
                neg.w   D0
                add.w   Obj_Control_Var_08(A0), D0                       ; $0034
                move.w  D0, Obj_X(A0)                                    ; $0008
                addq.w  #$01, D1
                add.w   Obj_Control_Var_04(A0), D1                       ; $0030
                move.w  D1, Obj_Y(A0)                                    ; $000C
                rts
loc_1CD8C:
                sub.w   D1, D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_Y(A0)                                    ; $000C
                neg.w   D1
                add.w   Obj_Control_Var_08(A0), D1                       ; $0034
                move.w  D1, Obj_X(A0)                                    ; $0008
                rts              
;-------------------------------------------------------------------------------
CPz_Block_Mappings:                                            ; loc_1CDA2
                dc.w    loc_1CDA4-CPz_Block_Mappings
loc_1CDA4:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
;===============================================================================
; Object 0x6B - Plataformas na Metropolis / Blocos na Chemical Plant
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_16_To_ModifySpriteAttr_2P:                                 ; loc_1CDB0
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_0B_To_SolidObject:                                         ; loc_1CDB6
		jmp     (SolidObject)                          ; loc_F344
Jmp_03_To_MarkObjGone_2:                                       ; loc_1CDBC
		jmp     (MarkObjGone_2)                        ; loc_D238
Jmp_0A_To_SpeedToPos:                                          ; loc_1CDC2
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj6C_Mz_Moving_Platforms:                                  ; loc_1CDC8
;===============================================================================
; Object 0x6C - Plataformas na Metropolis
; [ Begin ] 
;===============================================================================   
; loc_1CDC8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1CDF0(PC, D0), D1
                jsr     loc_1CDF0(PC, D1)
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1CDEC
                bra     Jmp_0C_To_DisplaySprite                ; loc_1D11C
loc_1CDEC:
                bra     Jmp_0F_To_DeleteObject                 ; loc_1D122
;-------------------------------------------------------------------------------
loc_1CDF0:
                dc.w    loc_1CDF4-loc_1CDF0
                dc.w    loc_1CEFC-loc_1CDF0             
;-------------------------------------------------------------------------------
loc_1CDF4:
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bmi     loc_1CEA6
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Mz_Moving_Platforms_Mappings, Obj_Map(A0) ; loc_1D106, $0004
                move.w  #$63F9, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                bsr     Jmp_17_To_ModifySpriteAttr_2P          ; loc_1D12E
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                move.w  D0, D1
                lsr.w   #$03, D0
                andi.w  #$001E, D0
                lea     Mz_Moving_Platforms_Move_Data(PC), A2  ; loc_1CFE6
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, Obj_Control_Var_0C(A0)                    ; $0038
                move.l  A2, Obj_Control_Var_10(A0)                       ; $003C
                andi.w  #$000F, D1
                lsl.w   #$02, D1
                move.b  D1, Obj_Control_Var_0C(A0)                       ; $0038
                move.b  #$04, Obj_Control_Var_0E(A0)                     ; $003A
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1CE86
                neg.b   Obj_Control_Var_0E(A0)                           ; $003A
                moveq   #$00, D1
                move.b  Obj_Control_Var_0C(A0), D1                       ; $0038
                add.b   Obj_Control_Var_0E(A0), D1                       ; $003A
                cmp.b   Obj_Control_Var_0D(A0), D1                       ; $0039
                bcs.s   loc_1CE82
                move.b  D1, D0
                moveq   #$00, D1
                tst.b   D0
                bpl.s   loc_1CE82
                move.b  Obj_Control_Var_0D(A0), D1                       ; $0039
                subq.b  #$04, D1
loc_1CE82:
                move.b  D1, Obj_Control_Var_0C(A0)                       ; $0038
loc_1CE86:
                move.w  $00(A2, D1), D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034
                move.w  $02(A2, D1), D0
                add.w   Obj_Control_Var_06(A0), D0                       ; $0032
                move.w  D0, Obj_Control_Var_0A(A0)                       ; $0036
                bsr     loc_1CF6E
                bra     loc_1CEFC
loc_1CEA6:
                andi.w  #$007F, D0
                add.w   D0, D0
                lea     (Mz_Moving_Platforms_Move_Data_01), A2 ; loc_1D06A
                adda.w  $00(A2, D0), A2
                move.w  (A2)+, D1
                move.l  A0, A1
                move.w  Obj_X(A0), D2                                    ; $0008
                move.w  Obj_Y(A0), D3                                    ; $000C
                bra.s   loc_1CECA                               
;-------------------------------------------------------------------------------
loc_1CEC4:
                bsr     Jmp_05_To_SingleObjectLoad             ; loc_1D128
                bne.s   loc_1CEF4      
loc_1CECA:                                      
;-------------------------------------------------------------------------------
                move.b  #$6C, Obj_Id(A1)                                 ; $0000
                move.w  (A2)+, D0
                add.w   D2, D0
                move.w  D0, Obj_X(A1)                                    ; $0008
                move.w  (A2)+, D0
                add.w   D3, D0
                move.w  D0, Obj_Y(A1)                                    ; $000C
                move.w  D2, Obj_Control_Var_04(A1)                       ; $0030
                move.w  D3, Obj_Control_Var_06(A1)                       ; $0032
                move.w  (A2)+, D0
                move.b  D0, Obj_Subtype(A1)                              ; $0028
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
loc_1CEF4:
                dbra    D1, loc_1CEC4
                addq.l  #$04, A7
                rts 
;-------------------------------------------------------------------------------
loc_1CEFC:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_1CF12
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                moveq   #$08, D3
                move.w  (A7)+, D4
                bra     Jmp_00_To_Platform_Object              ; loc_1D134
loc_1CF12:
                move.w  Obj_X(A0), D0                                    ; $0008
                cmp.w   Obj_Control_Var_08(A0), D0                       ; $0034
                bne.s   loc_1CF68
                move.w  Obj_Y(A0), D0                                    ; $000C
                cmp.w   Obj_Control_Var_0A(A0), D0                       ; $0036
                bne.s   loc_1CF68
                moveq   #$00, D1
                move.b  Obj_Control_Var_0C(A0), D1                       ; $0038
                add.b   Obj_Control_Var_0E(A0), D1                       ; $003A
                cmp.b   Obj_Control_Var_0D(A0), D1                       ; $0039
                bcs.s   loc_1CF44
                move.b  D1, D0
                moveq   #$00, D1
                tst.b   D0
                bpl.s   loc_1CF44
                move.b  Obj_Control_Var_0D(A0), D1                       ; $0039
                subq.b  #$04, D1
loc_1CF44:
                move.b  D1, Obj_Control_Var_0C(A0)                       ; $0038
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.w  $00(A1, D1), D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034
                move.w  $02(A1, D1), D0
                add.w   Obj_Control_Var_06(A0), D0                       ; $0032
                move.w  D0, Obj_Control_Var_0A(A0)                       ; $0036
                bsr     loc_1CF6E
loc_1CF68:
                bsr     Jmp_0B_To_SpeedToPos                   ; loc_1D13A
                rts
loc_1CF6E:
                moveq   #$00, D0
                move.w  #$FF00, D2
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_Control_Var_08(A0), D0                       ; $0034
                bcc.s   loc_1CF82
                neg.w   D0
                neg.w   D2
loc_1CF82:
                moveq   #$00, D1
                move.w  #$FF00, D3
                move.w  Obj_Y(A0), D1                                    ; $000C
                sub.w   Obj_Control_Var_0A(A0), D1                       ; $0036
                bcc.s   loc_1CF96
                neg.w   D1
                neg.w   D3
loc_1CF96:
                cmp.w   D0, D1
                bcs.s   loc_1CFC0
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   Obj_Control_Var_08(A0), D0                       ; $0034
                beq.s   loc_1CFAC
                ext.l   D0
                asl.l   #$08, D0
                divs.w  D1, D0
                neg.w   D0
loc_1CFAC:
                move.w  D0, Obj_Speed(A0)                                ; $0010
                move.w  D3, Obj_Speed_Y(A0)                              ; $0012
                swap.w  D0
                move.w  D0, Obj_Sub_Y(A0)                                ; $000A
                clr.w   $000E(A0)
                rts
loc_1CFC0:
                move.w  Obj_Y(A0), D1                                    ; $000C
                sub.w   Obj_Control_Var_0A(A0), D1                       ; $0036
                beq.s   loc_1CFD2
                ext.l   D1
                asl.l   #$08, D1
                divs.w  D0, D1
                neg.w   D1
loc_1CFD2:
                move.w  D1, Obj_Speed_Y(A0)                              ; $0012
                move.w  D2, Obj_Speed(A0)                                ; $0010
                swap.w  D1
                move.w  D1, $000E(A0)
                clr.w   Obj_Sub_Y(A0)                                    ; $000A
                rts                
;-------------------------------------------------------------------------------  
Mz_Moving_Platforms_Move_Data:                                 ; loc_1CFE6
                dc.w    loc_1CFEC-Mz_Moving_Platforms_Move_Data
                dc.w    loc_1D016-Mz_Moving_Platforms_Move_Data
                dc.w    loc_1D040-Mz_Moving_Platforms_Move_Data
loc_1CFEC:
                dc.w    $0028
                dc.w    $0000, $0000, $FFEA, $000A
                dc.w    $FFE0, $0020, $FFE0, $00E0
                dc.w    $FFEA, $00F6, $0000, $0100
                dc.w    $0016, $00F6, $0020, $00E0
                dc.w    $0020, $0020, $0016, $000A
loc_1D016:
                dc.w    $0028
                dc.w    $0000, $0000, $FFEA, $000A
                dc.w    $FFE0, $0020, $FFE0, $0160
                dc.w    $FFEA, $0176, $0000, $0180
                dc.w    $0016, $0176, $0020, $0160
                dc.w    $0020, $0020, $0016, $000A
loc_1D040:
                dc.w    $0028
                dc.w    $0000, $0000, $FFEA, $000A
                dc.w    $FFE0, $0020, $FFE0, $01E0
                dc.w    $FFEA, $01F6, $0000, $0200
                dc.w    $0016, $01F6, $0020, $01E0
                dc.w    $0020, $0020, $0016, $000A
;-------------------------------------------------------------------------------
Mz_Moving_Platforms_Move_Data_01:                              ; loc_1D06A
                dc.w    loc_1D070-Mz_Moving_Platforms_Move_Data_01
                dc.w    loc_1D0A2-Mz_Moving_Platforms_Move_Data_01
                dc.w    loc_1D0D4-Mz_Moving_Platforms_Move_Data_01
loc_1D070:
                dc.w    $0007
                dc.w    $0000, $0000, $0001
                dc.w    $FFE0, $003A, $0003
                dc.w    $FFE0, $0080, $0003
                dc.w    $FFE0, $00C6, $0003
                dc.w    $0000, $0100, $0006
                dc.w    $0020, $00C6, $0008
                dc.w    $0020, $0080, $0008
                dc.w    $0020, $003A, $0008
loc_1D0A2:
                dc.w    $0007
                dc.w    $0000, $0000, $0011
                dc.w    $FFE0, $005A, $0013
                dc.w    $FFE0, $00C0, $0013
                dc.w    $FFE0, $0126, $0013
                dc.w    $0000, $0180, $0016
                dc.w    $0020, $0126, $0018
                dc.w    $0020, $00C0, $0018
                dc.w    $0020, $005A, $0018
loc_1D0D4:
                dc.w    $0007
                dc.w    $0000, $0000, $0021
                dc.w    $FFE0, $007A, $0023
                dc.w    $FFE0, $0100, $0023
                dc.w    $FFE0, $0186, $0023
                dc.w    $0000, $0200, $0026
                dc.w    $0020, $0186, $0028
                dc.w    $0020, $0100, $0028    
                dc.w    $0020, $007A, $0028
;-------------------------------------------------------------------------------
Mz_Moving_Platforms_Mappings:                                  ; loc_1D106
                dc.w    loc_1D108-Mz_Moving_Platforms_Mappings
loc_1D108:
                dc.w    $0002
                dc.l    $F8050000, $0000FFF0
                dc.l    $F8050800, $08000000 
;===============================================================================
; Object 0x6C - Plataformas na Metropolis
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_0C_To_DisplaySprite:                                       ; loc_1D11C
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_0F_To_DeleteObject:                                        ; loc_1D122
		jmp     (DeleteObject)                         ; loc_D314
Jmp_05_To_SingleObjectLoad:                                    ; loc_1D128
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_17_To_ModifySpriteAttr_2P:                                 ; loc_1D12E
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_00_To_Platform_Object:                                     ; loc_1D134
		jmp     (Platform_Object)                      ; loc_F82C
Jmp_0B_To_SpeedToPos:                                          ; loc_1D13A
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj6E_Machine:                                              ; loc_1D140
;===============================================================================
; Object 0x6E - Máquina na Metropolis
; [ Begin ] 
;===============================================================================
; loc_1D140:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1D14E(PC, D0), D1
                jmp     loc_1D14E(PC, D1)
;-------------------------------------------------------------------------------  
loc_1D14E:
                dc.w    loc_1D15C-loc_1D14E
                dc.w    loc_1D1C6-loc_1D14E
                dc.w    loc_1D250-loc_1D14E     
;-------------------------------------------------------------------------------  
loc_1D154:
                dc.b    $10, $0C, $28, $08, $60, $18, $0C, $0C  
;-------------------------------------------------------------------------------
loc_1D15C:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Machine_Mappings, Obj_Map(A0)  ; loc_1D2C0, $0004
                move.w  #$6000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_18_To_ModifySpriteAttr_2P          ; loc_1D348
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                lea     loc_1D154(PC, D0), A3
                move.b  (A3)+, Obj_Width(A0)                             ; $0019
                move.b  (A3)+, Obj_Height_2(A0)                          ; $0016
                lsr.w   #$01, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.w  Obj_X(A0), Obj_Control_Var_08(A0)         ; $0008, $0034
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                cmpi.b  #$03, D0
                bne.s   loc_1D1C6
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$63F0, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_18_To_ModifySpriteAttr_2P          ; loc_1D348
                move.b  #$05, Obj_Priority(A0)                           ; $0018
                bra     loc_1D250               
;-------------------------------------------------------------------------------  
loc_1D1C6:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                move.b  ($FFFFFE80).w, D1
                subi.b  #$38, D1
                ext.w   D1
                move.b  ($FFFFFE84).w, D2
                subi.b  #$38, D2
                ext.w   D2
                btst    #$00, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_1D1EA
                neg.w   D1
                neg.w   D2
loc_1D1EA:
                btst    #$01, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_1D1F6
                neg.w   D1
                exg.l   D1, D2
loc_1D1F6:
                add.w   Obj_Control_Var_08(A0), D1                       ; $0034
                move.w  D1, Obj_X(A0)                                    ; $0008
                add.w   Obj_Control_Var_04(A0), D2                       ; $0030
                move.w  D2, Obj_Y(A0)                                    ; $000C
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     Jmp_0C_To_SolidObject                  ; loc_1D34E
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1D238
                jmp     (DisplaySprite)                        ; loc_D322
loc_1D238:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_1D24A
                bclr    #$07, $02(A2, D0)
loc_1D24A:
                jmp     (DeleteObject)                         ; loc_D314  
;-------------------------------------------------------------------------------  
loc_1D250:
                move.b  ($FFFFFE80).w, D1
                lsr.b   #$01, D1
                subi.b  #$1C, D1
                ext.w   D1
                move.b  ($FFFFFE84).w, D2
                lsr.b   #$01, D2
                subi.b  #$1C, D2
                ext.w   D2
                btst    #$00, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_1D274
                neg.w   D1
                neg.w   D2
loc_1D274:
                btst    #$01, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_1D280
                neg.w   D1
                exg.l   D1, D2
loc_1D280:
                add.w   Obj_Control_Var_08(A0), D1                       ; $0034
                move.w  D1, Obj_X(A0)                                    ; $0008
                add.w   Obj_Control_Var_04(A0), D2                       ; $0030
                move.w  D2, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1D2A8
                jmp     (DisplaySprite)                        ; loc_D322
loc_1D2A8:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_1D2BA
                bclr    #$07, $02(A2, D0)
loc_1D2BA:
                jmp     (DeleteObject)                         ; loc_D314   
;-------------------------------------------------------------------------------   
Machine_Mappings:                                              ; loc_1D2C0
                dc.w    loc_1D2C8-Machine_Mappings
                dc.w    loc_1D2D2-Machine_Mappings
                dc.w    loc_1D2EC-Machine_Mappings
                dc.w    loc_1D33E-Machine_Mappings
loc_1D2C8:
                dc.w    $0001
                dc.l    $F40E0025, $0012FFF0
loc_1D2D2:
                dc.w    $0003
                dc.l    $F80D0031, $0018FFD8
                dc.l    $F80D0031, $0018FFF8
                dc.l    $F8050031, $00180018
loc_1D2EC:
                dc.w    $000A
                dc.l    $E80E0039, $001CFFA0
                dc.l    $E80E0839, $081CFFC0
                dc.l    $E80E0039, $001CFFE0
                dc.l    $E80E0839, $081C0000
                dc.l    $E80E0039, $001C0020
                dc.l    $E80E0839, $081C0040
                dc.l    $00060045, $0022FFA0
                dc.l    $00060845, $0822FFB0
                dc.l    $00060045, $00220040
                dc.l    $00060845, $08220050
loc_1D33E:
                dc.w    $0001
                dc.l    $F40A0000, $0000FFF4            
;===============================================================================
; Object 0x6E - Máquina na Metropolis
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_18_To_ModifySpriteAttr_2P:                                 ; loc_1D348
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_0C_To_SolidObject:                                         ; loc_1D34E
		jmp     (SolidObject)                          ; loc_F344
;-------------------------------------------------------------------------------
Obj_Ox6F_Parallelogram_Elevator:                               ; loc_1D354
;===============================================================================
; Object 0x6F - Elevadores em forma de paralelogramos na Metropolis #3
; [ Begin ] 
;===============================================================================
; loc_1D354:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1D362(PC, D0), D1
                jmp     loc_1D362(PC, D1)
;-------------------------------------------------------------------------------
loc_1D362:
                dc.w    loc_1D366-loc_1D362
                dc.w    loc_1D3CC-loc_1D362     
;-------------------------------------------------------------------------------
loc_1D366:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Parallelogram_Elevator_Mappings, Obj_Map(A0) ; loc_1D61A, $0004
                move.w  #$653F, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_19_To_ModifySpriteAttr_2P          ; loc_1D6A0
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$80, Obj_Width(A0)                              ; $0019
                move.b  #$20, Obj_Height_2(A0)                           ; $0016
                move.w  Obj_X(A0), Obj_Control_Var_06(A0)         ; $0008, $0032
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                lea     (Parallelogram_Elevator_Data), A1      ; loc_1D48E
                move.w  $00(A1, D0), D0
                lea     $00(A1, D0), A1
                move.l  A1, Obj_Control_Var_10(A0)                       ; $003C
                bsr     loc_1D460
                bset    #$07, Obj_Status(A0)                             ; $0022
                andi.b  #$0F, Obj_Subtype(A0)                            ; $0028    
;-------------------------------------------------------------------------------
loc_1D3CC:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                add.w   D0, D0
                move.w  loc_1D436(PC, D0), D1
                jsr     loc_1D436(PC, D1)
                move.w  (A7)+, D4
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                lea     (Parallelogram_Elevator_Solid_Data), A2 ;  loc_1D51A
                bsr     loc_1D6A6
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1D40A
                jmp     (DisplaySprite)                        ; loc_D322
loc_1D40A:
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1D41E
                rts
loc_1D41E:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_1D430
                bclr    #$07, $02(A2, D0)
loc_1D430:
                jmp     (DeleteObject)                         ; loc_D314  
;-------------------------------------------------------------------------------
loc_1D436:
                dc.w    loc_1D43C-loc_1D436
                dc.w    loc_1D43E-loc_1D436
                dc.w    loc_1D44E-loc_1D436   
;-------------------------------------------------------------------------------
loc_1D43C:
                rts  
;-------------------------------------------------------------------------------
loc_1D43E:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_1D44C
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
loc_1D44C:
                rts     
;-------------------------------------------------------------------------------
loc_1D44E:
                jsr     (SpeedToPos)                           ; loc_D1DA
                subq.w  #$01, Obj_Control_Var_08(A0)                     ; $0034
                bne.s   loc_1D45E
                bsr     loc_1D460
loc_1D45E:
                rts
loc_1D460:
                moveq   #$00, D0
                move.b  Obj_Control_Var_0C(A0), D0                       ; $0038
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.w  (A1)+, D1
                lea     $00(A1, D0), A1
                move.w  (A1)+, Obj_Speed(A0)                             ; $0010
                move.w  (A1)+, Obj_Speed_Y(A0)                           ; $0012
                move.w  (A1)+, Obj_Control_Var_08(A0)                    ; $0034
                addq.b  #$06, Obj_Control_Var_0C(A0)                     ; $0038
                cmp.b   Obj_Control_Var_0C(A0), D1                       ; $0038
                bhi.s   loc_1D48C
                move.b  #$00, Obj_Control_Var_0C(A0)                     ; $0038
loc_1D48C:
                rts
;-------------------------------------------------------------------------------
Parallelogram_Elevator_Data:                                   ; loc_1D48E
                dc.w    loc_1D498-Parallelogram_Elevator_Data
                dc.w    loc_1D4A6-Parallelogram_Elevator_Data
                dc.w    loc_1D4B4-Parallelogram_Elevator_Data
                dc.w    loc_1D4CE-Parallelogram_Elevator_Data
                dc.w    loc_1D500-Parallelogram_Elevator_Data
loc_1D498:
                dc.w    $000C               ; Número de movimentos dividido por 6 ex.: $06 = 1, $0C = 2 ...
                dc.w    $0100, $FF80, $0100 ; Velocidade X / Velocidade Y / Tempo antes do próximo movimento
                dc.w    $FF00, $0080, $0100
loc_1D4A6:
                dc.w    $000C
                dc.w    $0100, $FF80, $0180
                dc.w    $FF00, $0080, $0180
loc_1D4B4:
                dc.w    $0018
                dc.w    $FF00, $0080, $0080
                dc.w    $FF00, $0000, $0180
                dc.w    $0100, $FF80, $0080
                dc.w    $0100, $0000, $0180
loc_1D4CE:
                dc.w    $0030
                dc.w    $0100, $FF80, $0200
                dc.w    $0100, $0000, $0100
                dc.w    $FF00, $0080, $0100
                dc.w    $0100, $0000, $0180
                dc.w    $FF00, $0000, $0180
                dc.w    $0100, $FF80, $0100
                dc.w    $FF00, $0000, $0100
                dc.w    $FF00, $0080, $0200
loc_1D500:
                dc.w    $0018
                dc.w    $FF00, $0080, $0180
                dc.w    $0100, $0000, $0200
                dc.w    $FF00, $0000, $0200
                dc.w    $0100, $FF80, $0180 
;-------------------------------------------------------------------------------
Parallelogram_Elevator_Solid_Data:                             ; loc_1D51A
                dc.w    $E101, $E202, $E303, $E404, $E505, $E606, $E707, $E808
                dc.w    $E909, $EA0A, $EB0B, $EC0C, $ED0D, $EE0E, $EF0F, $F010
                dc.w    $F111, $F212, $F313, $F414, $F515, $F616, $F717, $F818
                dc.w    $F919, $FA1A, $FB1B, $FC1C, $FD1D, $FE1E, $FF1F, $0020
                dc.w    $0121, $0222, $0323, $0424, $0525, $0626, $0727, $0828
                dc.w    $0929, $0A2A, $0B2B, $0C2C, $0D2D, $0E2E, $0F2F, $1030
                dc.w    $1131, $1232, $1333, $1434, $1535, $1636, $1737, $1838
                dc.w    $1939, $1A3A, $1B3B, $1C3C, $1D3D, $1E3E, $1F3F, $2040
                dc.w    $2040, $203F, $203E, $203D, $203C, $203B, $203A, $2039
                dc.w    $2038, $2037, $2036, $2035, $2034, $2033, $2032, $2031
                dc.w    $2030, $202F, $202E, $202D, $202C, $202B, $202A, $2029
                dc.w    $2028, $2027, $2026, $2025, $2024, $2023, $2022, $2021
                dc.w    $2020, $201F, $201E, $201D, $201C, $201B, $201A, $2019
                dc.w    $2018, $2017, $2016, $2015, $2014, $2013, $2012, $2011
                dc.w    $2010, $200F, $200E, $200D, $200C, $200B, $200A, $2009
                dc.w    $2008, $2007, $2006, $2005, $2004, $2003, $2002, $2001  
;-------------------------------------------------------------------------------
Parallelogram_Elevator_Mappings:                               ; loc_1D61A
                dc.w    loc_1D61C-Parallelogram_Elevator_Mappings
loc_1D61C:
                dc.w    $0010
                dc.l    $100D0000, $0000FF80
                dc.l    $000D0000, $0000FFA0
                dc.l    $100D0008, $0004FFA0
                dc.l    $F00D0000, $0000FFC0
                dc.l    $000F0010, $0008FFC0
                dc.l    $E00D0000, $0000FFE0
                dc.l    $F00D0008, $0004FFE0
                dc.l    $000F0010, $0008FFE0
                dc.l    $E00F0010, $00080000
                dc.l    $000D0008, $00040000
                dc.l    $100D1800, $18000000
                dc.l    $E00F0010, $00080020
                dc.l    $000D1800, $18000020
                dc.l    $E00D0008, $00040040
                dc.l    $F00D1800, $18000040
                dc.l    $E00D1800, $18000060             
;===============================================================================
; Object 0x6F - Elevadores em forma de paralelogramos na Metropolis #3
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_19_To_ModifySpriteAttr_2P:                                 ; loc_1D6A0
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
loc_1D6A6:
		jmp     (loc_F442)
;-------------------------------------------------------------------------------
Obj70_Rotating_Gears:                                       ; loc_1D6AC
;===============================================================================
; Object 0x70 - Engrenagens na Metropolis
; [ Begin ]
;===============================================================================
; loc_1D6AC:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1D6BA(PC, D0), D1
                jmp     loc_1D6BA(PC, D1)
;-------------------------------------------------------------------------------
loc_1D6BA:
                dc.w    loc_1D6BE-loc_1D6BA
                dc.w    loc_1D73E-loc_1D6BA        
;-------------------------------------------------------------------------------
loc_1D6BE:
                moveq   #$07, D1
                moveq   #$00, D4
                lea     (loc_1D812), A2
                move.l  A0, A1
                move.w  Obj_X(A0), D2                                    ; $0008
                move.w  Obj_Y(A0), D3                                    ; $000C
                bset    #$07, Obj_Status(A0)                             ; $0022
                bra.s   loc_1D6E0     
;-------------------------------------------------------------------------------   
loc_1D6DA:
                bsr     Jmp_0B_To_SingleObjectLoad_2           ; loc_1DA14
                bne.s   loc_1D73A 
;-------------------------------------------------------------------------------   
loc_1D6E0:
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                addq.b  #$02, Obj_Routine(A1)                            ; $0024
                move.l  #Rotating_Gears_Mappings, Obj_Map(A1) ; loc_1D872, $0004
                move.w  #$6378, Obj_Art_VRAM(A1)                         ; $0002
                bsr     Jmp_01_To_ModifySpriteAttr_2P_A1       ; loc_1DA1A
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.w  D2, Obj_Control_Var_06(A1)                       ; $0032
                move.w  D3, Obj_Control_Var_04(A1)                       ; $0030
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D2, D0
                move.w  D0, Obj_X(A1)                                    ; $0008
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D3, D0
                move.w  D0, Obj_Y(A1)                                    ; $000C
                move.b  (A2)+, Obj_Map_Id(A1)                            ; $001A
                move.w  D4, Obj_Control_Var_08(A1)                       ; $0034
                addq.w  #$03, D4
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
loc_1D73A:
                dbra    D1, loc_1D6DA   
;-------------------------------------------------------------------------------   
loc_1D73E:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                move.b  ($FFFFFE05).w, D0
                move.b  D0, D1
                andi.w  #$000F, D0
                bne.s   loc_1D7B6
                move.w  Obj_Control_Var_0A(A0), D1                       ; $0036
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1D770
                subi.w  #$0018, D1
                bcc.s   loc_1D78E
                moveq   #$48, D1
                subq.w  #$03, Obj_Control_Var_08(A0)                     ; $0034
                bcc.s   loc_1D78E
                move.w  #$0015, Obj_Control_Var_08(A0)                   ; $0034
                bra.s   loc_1D78E
loc_1D770:
                addi.w  #$0018, D1
                cmpi.w  #$0060, D1
                bcs.s   loc_1D78E
                moveq   #$00, D1
                addq.w  #$03, Obj_Control_Var_08(A0)                     ; $0034
                cmpi.w  #$0018, Obj_Control_Var_08(A0)                   ; $0034
                bcs.s   loc_1D78E
                move.w  #$0000, Obj_Control_Var_08(A0)                   ; $0034
loc_1D78E:
                move.w  D1, Obj_Control_Var_0A(A0)                       ; $0036
                add.w   Obj_Control_Var_08(A0), D1                       ; $0034
                lea     loc_1D812(PC, D1), A1
                move.b  (A1)+, D0
                ext.w   D0
                add.w   Obj_Control_Var_06(A0), D0                       ; $0032
                move.w  D0, Obj_X(A0)                                    ; $0008
                move.b  (A1)+, D0
                ext.w   D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.b  (A1)+, Obj_Map_Id(A0)                            ; $001A
loc_1D7B6:
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                add.w   D0, D0
                andi.w  #$001E, D0
                moveq   #$00, D1
                moveq   #$00, D2
                move.b  loc_1D7F2(PC, D0), D1
                move.b  loc_1D7F2+$01(PC, D0), D2
                move.w  D2, D3
                move.w  (A7)+, D4
                bsr     Jmp_0D_To_SolidObject                  ; loc_1DA20
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1D7EC
                jmp     (DisplaySprite)                        ; loc_D322
loc_1D7EC:
                jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
loc_1D7F2:
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10
                dc.b    $10, $10, $10, $10, $10, $10, $10, $0C
                dc.b    $10, $08, $10, $0C, $10, $10, $10, $10
                dc.b    $10, $10, $10, $10, $10, $10, $10, $10    
;-------------------------------------------------------------------------------  
loc_1D812:
                dc.b    $00, $B8, $00, $32, $CE, $04, $48, $00
                dc.b    $08, $32, $32, $0C, $00, $48, $10, $CE
                dc.b    $32, $14, $B8, $00, $18, $CE, $CE, $1C
                dc.b    $0D, $B8, $01, $3F, $DA, $05, $48, $0C
                dc.b    $09, $27, $3C, $0D, $F3, $48, $11, $C1
                dc.b    $26, $15, $B8, $F4, $19, $D9, $C4, $1D
                dc.b    $19, $BC, $02, $46, $E9, $06, $46, $17
                dc.b    $0A, $19, $44, $0E, $E7, $44, $12, $BA
                dc.b    $17, $16, $BA, $E9, $1A, $E7, $BC, $1E
                dc.b    $27, $C4, $03, $48, $F4, $07, $3F, $26
                dc.b    $0B, $0D, $48, $0F, $D9, $3C, $13, $B8
                dc.b    $0C, $17, $C1, $DA, $1B, $F3, $B8, $1F
;-------------------------------------------------------------------------------
Rotating_Gears_Mappings:                                       ; loc_1D872
                dc.w    loc_1D8B2-Rotating_Gears_Mappings
                dc.w    loc_1D8C4-Rotating_Gears_Mappings
                dc.w    loc_1D8CE-Rotating_Gears_Mappings
                dc.w    loc_1D8D8-Rotating_Gears_Mappings
                dc.w    loc_1D8E2-Rotating_Gears_Mappings
                dc.w    loc_1D8EC-Rotating_Gears_Mappings
                dc.w    loc_1D8F6-Rotating_Gears_Mappings
                dc.w    loc_1D900-Rotating_Gears_Mappings
                dc.w    loc_1D90A-Rotating_Gears_Mappings
                dc.w    loc_1D91C-Rotating_Gears_Mappings
                dc.w    loc_1D926-Rotating_Gears_Mappings
                dc.w    loc_1D930-Rotating_Gears_Mappings
                dc.w    loc_1D93A-Rotating_Gears_Mappings
                dc.w    loc_1D944-Rotating_Gears_Mappings
                dc.w    loc_1D94E-Rotating_Gears_Mappings
                dc.w    loc_1D958-Rotating_Gears_Mappings
                dc.w    loc_1D962-Rotating_Gears_Mappings
                dc.w    loc_1D974-Rotating_Gears_Mappings
                dc.w    loc_1D97E-Rotating_Gears_Mappings
                dc.w    loc_1D988-Rotating_Gears_Mappings
                dc.w    loc_1D992-Rotating_Gears_Mappings
                dc.w    loc_1D99C-Rotating_Gears_Mappings
                dc.w    loc_1D9A6-Rotating_Gears_Mappings
                dc.w    loc_1D9B0-Rotating_Gears_Mappings
                dc.w    loc_1D9BA-Rotating_Gears_Mappings
                dc.w    loc_1D9CC-Rotating_Gears_Mappings
                dc.w    loc_1D9D6-Rotating_Gears_Mappings
                dc.w    loc_1D9E0-Rotating_Gears_Mappings
                dc.w    loc_1D9EA-Rotating_Gears_Mappings
                dc.w    loc_1D9F4-Rotating_Gears_Mappings
                dc.w    loc_1D9FE-Rotating_Gears_Mappings
                dc.w    loc_1DA08-Rotating_Gears_Mappings
loc_1D8B2:
                dc.w    $0002
                dc.l    $F0070000, $0000FFF0
                dc.l    $F0070800, $08000000
loc_1D8C4:
                dc.w    $0001
                dc.l    $F00B0808, $0804FFF4
loc_1D8CE:
                dc.w    $0001
                dc.l    $F00F0814, $080AFFF0
loc_1D8D8:
                dc.w    $0001
                dc.l    $F00F0824, $0812FFF0
loc_1D8E2:
                dc.w    $0001
                dc.l    $F00F0834, $081AFFF0
loc_1D8EC:
                dc.w    $0001
                dc.l    $F00F0844, $0822FFF0
loc_1D8F6:
                dc.w    $0001
                dc.l    $F00F0854, $082AFFF0
loc_1D900:
                dc.w    $0001
                dc.l    $F40E0864, $0832FFF0
loc_1D90A:
                dc.w    $0002
                dc.l    $F00D0870, $0838FFF0
                dc.l    $000D1870, $1838FFF0
loc_1D91C:
                dc.w    $0001
                dc.l    $F40E1864, $1832FFF0
loc_1D926:
                dc.w    $0001
                dc.l    $F00F1854, $182AFFF0
loc_1D930:
                dc.w    $0001
                dc.l    $F00F1844, $1822FFF0
loc_1D93A:
                dc.w    $0001
                dc.l    $F00F1834, $181AFFF0
loc_1D944:
                dc.w    $0001
                dc.l    $F00F1824, $1812FFF0
loc_1D94E:
                dc.w    $0001
                dc.l    $F00F1814, $180AFFF0
loc_1D958:
                dc.w    $0001
                dc.l    $F00B1808, $1804FFF4
loc_1D962:
                dc.w    $0002
                dc.l    $F0071000, $1000FFF0
                dc.l    $F0071800, $18000000
loc_1D974:
                dc.w    $0001
                dc.l    $F00B1008, $1004FFF4
loc_1D97E:
                dc.w    $0001
                dc.l    $F00F1014, $100AFFF0
loc_1D988:
                dc.w    $0001
                dc.l    $F00F1024, $1012FFF0
loc_1D992:
                dc.w    $0001
                dc.l    $F00F1034, $101AFFF0
loc_1D99C:
                dc.w    $0001
                dc.l    $F00F1044, $1022FFF0
loc_1D9A6:
                dc.w    $0001
                dc.l    $F00F1054, $102AFFF0
loc_1D9B0:
                dc.w    $0001
                dc.l    $F40E1064, $1032FFF0
loc_1D9BA:
                dc.w    $0002
                dc.l    $F00D0070, $0038FFF0
                dc.l    $000D1070, $1038FFF0
loc_1D9CC:
                dc.w    $0001
                dc.l    $F40E0064, $0032FFF0
loc_1D9D6:
                dc.w    $0001
                dc.l    $F00F0054, $002AFFF0
loc_1D9E0:
                dc.w    $0001
                dc.l    $F00F0044, $0022FFF0
loc_1D9EA:
                dc.w    $0001
                dc.l    $F00F0034, $001AFFF0
loc_1D9F4:
                dc.w    $0001
                dc.l    $F00F0024, $0012FFF0
loc_1D9FE:
                dc.w    $0001
                dc.l    $F00F0014, $000AFFF0
loc_1DA08:
                dc.w    $0001
                dc.l    $F00B0008, $0004FFF4          
;===============================================================================
; Object 0x70 - Engrenagens na Metropolis
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_0B_To_SingleObjectLoad_2:                                  ; loc_1DA14
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_01_To_ModifySpriteAttr_2P_A1:                              ; loc_1DA1A
		jmp     (ModifySpriteAttr_2P_A1)               ; loc_DBDA
Jmp_0D_To_SolidObject:                                         ; loc_1DA20
		jmp     (SolidObject)                          ; loc_F344
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj72_Conveyor_Belt_Attributes:                             ; loc_1DA28
;===============================================================================
; Object 0x72 - Atributo invisivel das esteiras na Casino Night / Metropolis
; [ Begin ]
;===============================================================================
; loc_1DA28:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1DA36(PC, D0), D1
                jmp     loc_1DA36(PC, D1)
;-------------------------------------------------------------------------------  
loc_1DA36:
                dc.w    loc_1DA3A-loc_1DA36
                dc.w    loc_1DA5A-loc_1DA36           
;------------------------------------------------------------------------------- 
loc_1DA3A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsl.b   #$04, D0
                move.b  D0, Obj_Control_Var_0C(A0)                       ; $0038
                move.w  #$0002, Obj_Control_Var_0A(A0)                   ; $0036
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1DA5A
                neg.w   Obj_Control_Var_0A(A0)                           ; $0036  
;------------------------------------------------------------------------------- 
loc_1DA5A:
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_1DA6A
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr.s   loc_1DA6A
                bra     Jmp_04_To_MarkObjGone_3                ; loc_1DAA8
loc_1DA6A:
                moveq   #$00, D2
                move.b  Obj_Control_Var_0C(A0), D2                       ; $0038
                move.w  D2, D3
                add.w   D3, D3
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                add.w   D2, D0
                cmp.w   D3, D0
                bcc.s   loc_1DAA4
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                addi.w  #$0030, D1
                cmpi.w  #$0030, D1
                bcc.s   loc_1DAA4
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne.s   loc_1DAA4
                move.w  Obj_Control_Var_0A(A0), D0                       ; $0036
                add.w   D0, Obj_X(A1)                                    ; $0008
loc_1DAA4:
                rts    
;===============================================================================
; Object 0x72 - Atributo invisivel das esteiras na Casino Night / Metropolis
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_04_To_MarkObjGone_3:                                       ; loc_1DAA8
		jmp     (MarkObjGone_3)                        ; loc_D26C
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj73_Rotating_Rings:                                       ; loc_1DAB0
;===============================================================================
; Object 0x73 - Anéis girando, Sonic consegue andar em cima
; [ Begin ]
;===============================================================================   
; loc_1DAB0:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1DABE(PC, D0), D1
                jmp     loc_1DABE(PC, D1)
;-------------------------------------------------------------------------------
loc_1DABE:
                dc.w    loc_1DAC4-loc_1DABE
                dc.w    loc_1DBB2-loc_1DABE
                dc.w    loc_1DC5A-loc_1DABE         
;-------------------------------------------------------------------------------
loc_1DAC4:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Rotating_Rings_Mappings, Obj_Map(A0) ; loc_1DC78, $0004
                move.w  #$26BC, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_1A_To_ModifySpriteAttr_2P          ; loc_1DC96
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.w  Obj_X(A0), Obj_Control_Var_0E(A0)         ; $0008, $003A
                move.w  Obj_Y(A0), Obj_Control_Var_0C(A0)         ; $000C, $0038
                move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
                bset    #$07, Obj_Status(A0)                             ; $0022
                move.b  Obj_Subtype(A0), D1                              ; $0028
                andi.b  #$F0, D1
                ext.w   D1
                asl.w   #$03, D1
                move.w  D1, Obj_Control_Var_12(A0)                       ; $003E
                move.b  Obj_Status(A0), D0                               ; $0022
                ror.b   #$02, D0
                andi.b  #$C0, D0
                move.b  D0, Obj_Angle(A0)                                ; $0026
                lea     Obj_Player_Flip_Flag(A0), A2                     ; $0029
                move.b  Obj_Subtype(A0), D1                              ; $0028
                andi.w  #$0007, D1
                move.b  #$00, (A2)+
                move.w  D1, D3
                lsl.w   #$04, D3
                move.b  D3, Obj_Control_Var_10(A0)                       ; $003C
                subq.w  #$01, D1
                bcs.s   loc_1DBA4
                btst    #$03, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_1DB4A
                subq.w  #$01, D1
                bcs.s   loc_1DBA4
loc_1DB4A:
                bsr     Jmp_06_To_SingleObjectLoad             ; loc_1DC8A
                bne.s   loc_1DBA4
                addq.b  #$01, Obj_Player_Flip_Flag(A0)                   ; $0029
                move.w  A1, D5
                subi.w  #$B000, D5
                lsr.w   #$06, D5
                andi.w  #$007F, D5
                move.b  D5, (A2)+
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  Obj_Priority(A0), Obj_Priority(A1)        ; $0018, $0018
                move.b  Obj_Width(A0), Obj_Width(A1)              ; $0019, $0019
                move.b  Obj_Col_Flags(A0), Obj_Col_Flags(A1)      ; $0020, $0020
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                subi.b  #$10, D3
                move.b  D3, Obj_Control_Var_10(A1)                       ; $003C
                dbra    D1, loc_1DB4A
loc_1DBA4:
                move.w  A0, D5
                subi.w  #$B000, D5
                lsr.w   #$06, D5
                andi.w  #$007F, D5
                move.b  D5, (A2)+
loc_1DBB2:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_1DBD0
                move.w  #$0008, D1
                move.w  #$0008, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  (A7)+, D4
                bsr     Jmp_0E_To_SolidObject                  ; loc_1DC9C
                bra     loc_1DC22
loc_1DBD0:
                move.w  Obj_Control_Var_12(A0), D0                       ; $003E
                add.w   D0, Obj_Angle(A0)                                ; $0026
                move.b  Obj_Angle(A0), D0                                ; $0026
                jsr     (CalcSine)                             ; loc_3282
                move.w  Obj_Control_Var_0C(A0), D2                       ; $0038
                move.w  Obj_Control_Var_0E(A0), D3                       ; $003A
                lea     Obj_Player_Flip_Flag(A0), A2                     ; $0029
                moveq   #$00, D6
                move.b  (A2)+, D6
loc_1DBF2:
                moveq   #$00, D4
                move.b  (A2)+, D4
                lsl.w   #$06, D4
                addi.l  #$FFFFB000, D4
                move.l  D4, A1
                moveq   #$00, D4
                move.b  Obj_Control_Var_10(A1), D4                       ; $003C
                move.l  D4, D5
                muls.w  D0, D4
                asr.l   #$08, D4
                muls.w  D1, D5
                asr.l   #$08, D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D4, Obj_Y(A1)                                    ; $000C
                move.w  D5, Obj_X(A1)                                    ; $0008
                dbra    D6, loc_1DBF2
                rts
loc_1DC22:
                move.w  Obj_Control_Var_0E(A0), D0                       ; $003A
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_1DC3A
                bra     Jmp_0D_To_DisplaySprite                ; loc_1DC84
loc_1DC3A:
                moveq   #$00, D2
                lea     Obj_Player_Flip_Flag(A0), A2                     ; $0029
                move.b  (A2)+, D2
loc_1DC42:
                moveq   #$00, D0
                move.b  (A2)+, D0
                lsl.w   #$06, D0
                addi.l  #Obj_Memory_Address, D0                      ; $FFFFB000
                move.l  D0, A1
                bsr     Jmp_00_To_DeleteObject_A1              ; loc_1DC90
                dbra    D2, loc_1DC42
                rts
loc_1DC5A:
                move.w  #$0008, D1
                move.w  #$0008, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  Obj_Control_Var_0A(A0), D4                       ; $0036
                bsr     Jmp_0E_To_SolidObject                  ; loc_1DC9C
                move.w  Obj_X(A0), Obj_Control_Var_0A(A0)         ; $0008, $0036
                bra     Jmp_0D_To_DisplaySprite                ; loc_1DC84
;-------------------------------------------------------------------------------   
Rotating_Rings_Mappings:                                       ; loc_1DC78
                dc.w    loc_1DC7A-Rotating_Rings_Mappings
loc_1DC7A:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8        
;===============================================================================
; Object 0x73 - Anéis girando, Sonic consegue andar em cima
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_0D_To_DisplaySprite:                                       ; loc_1DC84
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_06_To_SingleObjectLoad:                                    ; loc_1DC8A
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_00_To_DeleteObject_A1:                                     ; loc_1DC90
		jmp     (DeleteObject_A1)                      ; loc_D316
Jmp_1A_To_ModifySpriteAttr_2P:                                 ; loc_1DC96
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_0E_To_SolidObject:                                         ; loc_1DC9C
		jmp     (SolidObject)                          ; loc_F344
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj75_Spikeball_Chain:                                      ; loc_1DCA4
;===============================================================================
; Object 0x75 - Bola de espinhos com corrente na Dust Hill
; [ Begin ] 
;===============================================================================   
; loc_1DCA4:
                btst    #$06, Obj_Flags(A0)                              ; $0001
                bne     loc_1DCBC
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1DCC4(PC, D0), D1
                jmp     loc_1DCC4(PC, D1)
loc_1DCBC:
                move.w  #$0280, D0
                bra     Jmp_00_To_DisplaySprite_Param          ; loc_1DE9C
;-------------------------------------------------------------------------------
loc_1DCC4:
                dc.w    loc_1DCCA-loc_1DCC4
                dc.w    loc_1DDA6-loc_1DCC4      
                dc.w    loc_1DE48-loc_1DCC4        
;-------------------------------------------------------------------------------  
loc_1DCCA:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Spikeball_Chain_Mappings, Obj_Map(A0) ; loc_1DE66, $0004
                move.w  #$2000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_1B_To_ModifySpriteAttr_2P          ; loc_1DEC0
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$05, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                move.b  Obj_Subtype(A0), D1                              ; $0028
                move.b  D1, D0
                andi.w  #$000F, D1
                andi.b  #$F0, D0
                ext.w   D0
                asl.w   #$03, D0
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034
                move.b  Obj_Status(A0), D0                               ; $0022
                ror.b   #$02, D0
                andi.b  #$C0, D0
                move.b  D0, Obj_Angle(A0)                                ; $0026
                cmpi.b  #$0F, D1
                bne.s   loc_1DD3A
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
                rts
loc_1DD3A:
                move.b  #$9A, Obj_Col_Flags(A0)                          ; $0020
                bsr     Jmp_0C_To_SingleObjectLoad_2           ; loc_1DEBA
                bne.s   loc_1DDA6
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                bset    #$06, Obj_Flags(A1)                              ; $0001
                move.b  #$40, $000E(A1)
                move.w  Obj_X(A0), D2                                    ; $0008
                move.w  Obj_Y(A0), D3                                    ; $000C
                move.b  D1, Obj_Ani_Boss_Cnt(A1)                         ; $000F
                subq.w  #$01, D1
                lea     Obj_Speed(A1), A2                                ; $0010
loc_1DD7C:
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                move.w  #$0001, (A2)+
                dbra    D1, loc_1DD7C
                move.w  D2, Obj_X(A1)                                    ; $0008
                move.w  D3, Obj_Y(A1)                                    ; $000C
                move.b  #$00, Obj_Boss_Ani_Map(A1)                       ; $000B
                move.l  A1, Obj_Control_Var_10(A0)                       ; $003C
                move.b  #$40, Obj_Inertia(A1)                            ; $0014
                bset    #$04, Obj_Flags(A1)                              ; $0001    
;------------------------------------------------------------------------------- 
loc_1DDA6:
                moveq   #$00, D0
                moveq   #$00, D1
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                add.w   D0, Obj_Angle(A0)                                ; $0026
                move.b  Obj_Angle(A0), D0                                ; $0026
                bsr     Jmp_03_To_CalcSine                     ; loc_1DEC6
                move.w  Obj_Control_Var_06(A0), D2                       ; $0032
                move.w  Obj_Control_Var_04(A0), D3                       ; $0030
                moveq   #$00, D6
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.b  Obj_Ani_Boss_Cnt(A1), D6                         ; $000F
                subq.w  #$01, D6
                bcs.s   loc_1DE1A
                swap.w  D0
                swap.w  D1
                asr.l   #$04, D0
                asr.l   #$04, D1
                moveq   #$00, D4
                moveq   #$00, D5
                lea     Obj_Speed(A1), A2                                ; $0010
loc_1DDE0:
                movem.l D4/D5, -(A7)
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, (A2)+
                move.w  D4, (A2)+
                movem.l (A7)+, D4/D5
                add.l   D0, D4
                add.l   D1, D5
                addq.w  #$02, A2
                dbra    D6, loc_1DDE0
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, Obj_X(A0)                                    ; $0008
                move.w  D4, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Subtype(A1), Obj_X(A1)                ; $0008, $0028
                move.w  Obj_Timer(A1), Obj_Y(A1)                  ; $000C, $002A
loc_1DE1A:
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                beq.s   loc_1DE24
                bra     Jmp_0E_To_DisplaySprite                ; loc_1DEA2
loc_1DE24:
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_1DE3C
                bra     Jmp_0E_To_DisplaySprite                ; loc_1DEA2
loc_1DE3C:
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                bsr     Jmp_01_To_DeleteObject_A1              ; loc_1DEB4
                bra     Jmp_10_To_DeleteObject                 ; loc_1DEA8    
;------------------------------------------------------------------------------- 
loc_1DE48:
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_0F_To_SolidObject                  ; loc_1DECC
                bra     Jmp_13_To_MarkObjGone                  ; loc_1DEAE       
;-------------------------------------------------------------------------------    
Spikeball_Chain_Mappings:                                      ; loc_1DE66
                dc.w    loc_1DE6C-Spikeball_Chain_Mappings
                dc.w    loc_1DE7E-Spikeball_Chain_Mappings
                dc.w    loc_1DE88-Spikeball_Chain_Mappings
loc_1DE6C:
                dc.w    $0002
                dc.l    $F00D007A, $003DFFF0
                dc.l    $000D187A, $183DFFF0
loc_1DE7E:
                dc.w    $0001
                dc.l    $F8054066, $4033FFF8
loc_1DE88:
                dc.w    $0002
                dc.l    $F0074040, $4020FFF0
                dc.l    $F0074840, $48200000
;===============================================================================
; Object 0x75 - Bola de espinhos com corrente na Dust Hill
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_00_To_DisplaySprite_Param:                                 ; loc_1DE9C
		jmp     (DisplaySprite_Param)                  ; loc_D35E
Jmp_0E_To_DisplaySprite:                                       ; loc_1DEA2
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_10_To_DeleteObject:                                        ; loc_1DEA8
		jmp     (DeleteObject)                         ; loc_D314
Jmp_13_To_MarkObjGone:                                         ; loc_1DEAE
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_01_To_DeleteObject_A1:                                     ; loc_1DEB4
		jmp     (DeleteObject_A1)                      ; loc_D316
Jmp_0C_To_SingleObjectLoad_2:                                  ; loc_1DEBA
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_1B_To_ModifySpriteAttr_2P:                                 ; loc_1DEC0
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_03_To_CalcSine:                                            ; loc_1DEC6
		jmp     (CalcSine)                             ; loc_3282
Jmp_0F_To_SolidObject:                                         ; loc_1DECC
		jmp     (SolidObject)                          ; loc_F344
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj76_Platform_Spikes:                                      ; loc_1DED4
;===============================================================================
; Object 0x76 - Platform with spikes on the sides from Dust Hill
; [ Begin ] 
;===============================================================================   
; loc_1DED4:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1DEE2(PC, D0), D1
                jmp     loc_1DEE2(PC, D1)
;-------------------------------------------------------------------------------
loc_1DEE2:
                dc.w    loc_1DEEA-loc_1DEE2
                dc.w    loc_1DF3A-loc_1DEE2      
;-------------------------------------------------------------------------------
Platform_Spikes_Config:                                        ; loc_1DEE6
                dc.b    $40, $10            ; Width / Height of spike
                dc.b    $00, $00                                        
;-------------------------------------------------------------------------------
loc_1DEEA:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Platform_Spikes_Mappings, Obj_Map(A0) ; loc_1E016, $0004
                move.w  #$0000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_1C_To_ModifySpriteAttr_2P          ; loc_1E052
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$02, D0
                andi.w  #$001C, D0
                lea     Platform_Spikes_Config(PC, D0), A2     ; loc_1DEE6
                move.b  (A2)+, Obj_Width(A0)                             ; $0019
                move.b  (A2)+, Obj_Height_2(A0)                          ; $0016
                move.b  (A2)+, Obj_Map_Id(A0)                            ; $001A
                move.w  Obj_X(A0), Obj_Control_Var_08(A0)         ; $0008, $0034
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                andi.w  #$000F, Obj_Subtype(A0)                          ; $0028  
;-------------------------------------------------------------------------------
loc_1DF3A:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                move.w  loc_1DFA6(PC, D0), D1
                jsr     loc_1DFA6(PC, D1)
                move.w  (A7)+, D4
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_1DF9E
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     Jmp_10_To_SolidObject                  ; loc_1E058
                swap.w  D6
                andi.w  #$0003, D6
                beq.s   loc_1DF9E
                move.b  D6, D0
                andi.b  #$01, D0
                beq.s   loc_1DF8A
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr     Jmp_00_To_Touch_ChkHurt2               ; loc_1E04C
                bclr    #$05, Obj_Status(A0)                             ; $0022
loc_1DF8A:
                andi.b  #$02, D6
                beq.s   loc_1DF9E
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr     Jmp_00_To_Touch_ChkHurt2               ; loc_1E04C
                bclr    #$06, Obj_Status(A0)                             ; $0022
loc_1DF9E:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                bra     Jmp_04_To_MarkObjGone_2                ; loc_1E05E                                         
;-------------------------------------------------------------------------------
loc_1DFA6:
                dc.w    loc_1DFAA-loc_1DFA6
                dc.w    loc_1DFFA-loc_1DFA6                  
;-------------------------------------------------------------------------------
loc_1DFAA:
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr.s   loc_1DFB4
                lea     (Player_Two).w, A1                           ; $FFFFB040
loc_1DFB4:
                btst    #$01, Obj_Status(A1)                             ; $0022
                bne.s   loc_1DFF8
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                addi.w  #$00C0, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1DFD4
                subi.w  #$0100, D0
loc_1DFD4:
                cmpi.w  #$0080, D0
                bcc.s   loc_1DFF8
                move.w  Obj_Y(A1), D0                                    ; $000C
                sub.w   Obj_Y(A0), D0                                    ; $000C
                addi.w  #$0010, D0
                cmpi.w  #$0020, D0
                bcc.s   loc_1DFF8
                move.b  #$02, Obj_Subtype(A0)                            ; $0028
                move.w  #$0080, Obj_Control_Var_0A(A0)                   ; $0036
loc_1DFF8:
                rts  
;-------------------------------------------------------------------------------
loc_1DFFA:
                tst.w   Obj_Control_Var_0A(A0)                           ; $0036
                beq.s   loc_1E014
                subq.w  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                moveq   #-$01, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1E010
                neg.w   D0
loc_1E010:
                add.w   D0, Obj_X(A0)                                    ; $0008
loc_1E014:
                rts        
;-------------------------------------------------------------------------------   
Platform_Spikes_Mappings:                                      ; loc_1E016
                include 'mappings/sprite/obj76.asm'
;===============================================================================
; Object 0x76 - Platform with spikes on the sides from Dust Hill
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
		nop
Jmp_00_To_Touch_ChkHurt2:                                      ; loc_1E04C
		jmp     (Touch_ChkHurt2)                       ; loc_C9A4
Jmp_1C_To_ModifySpriteAttr_2P:                                 ; loc_1E052
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_10_To_SolidObject:                                         ; loc_1E058
		jmp     (SolidObject)                          ; loc_F344
Jmp_04_To_MarkObjGone_2:                                       ; loc_1E05E
		jmp     (MarkObjGone_2)                        ; loc_D238
;-------------------------------------------------------------------------------
Obj77_Bridge:                                               ; loc_1E064
;===============================================================================
; Object 0x77 - Dust Hill Bridges
; [ Begin ] 
;===============================================================================   
; loc_1E064:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1E072(PC, D0), D1
                jmp     loc_1E072(PC, D1)
;-------------------------------------------------------------------------------
loc_1E072:
                dc.w    loc_1E076-loc_1E072
                dc.w    loc_1E098-loc_1E072    
;-------------------------------------------------------------------------------
loc_1E076:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #DHz_Bridge_Mappings, Obj_Map(A0) ; loc_1E140, $0004
                move.w  #$643C, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_1D_To_ModifySpriteAttr_2P          ; loc_1E29A
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$80, Obj_Width(A0)                              ; $0019 
;-------------------------------------------------------------------------------
loc_1E098:
                tst.b   Obj_Control_Var_08(A0)                           ; $0034
                bne.s   loc_1E0CC
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                btst    #$00, $00(A2, D0)
                beq.s   loc_1E0CC
                move.b  #$01, Obj_Control_Var_08(A0)                     ; $0034
                bchg    #00, Obj_Ani_Number(A0)                          ; $001C
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_1E0CC
                move.w  #$00BB, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_1E0CC:
                lea     (DHz_Bridge_Animate_Data), A1          ; loc_1E12C
                jsr     (AnimateSprite)                        ; loc_D372
                tst.b   Obj_Map_Id(A0)                                   ; $001A
                bne.s   loc_1E0F6
                move.w  #$004B, D1
                move.w  #$0008, D2
                move.w  D2, D3
                addq.w  #$01, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_11_To_SolidObject                  ; loc_1E2A0
                bra     Jmp_14_To_MarkObjGone                  ; loc_1E294
loc_1E0F6:
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_1E128
                move.b  D0, D1
                andi.b  #$08, D0
                beq.s   loc_1E112
                lea     (Player_One).w, A1                           ; $FFFFB000
                bclr    #$03, Obj_Status(A1)                             ; $0022
loc_1E112:
                andi.b  #$10, D1
                beq.s   loc_1E122
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bclr    #$03, Obj_Status(A1)                             ; $0022
loc_1E122:
                andi.b  #$E7, Obj_Status(A0)                             ; $0022
loc_1E128:
                bra     Jmp_14_To_MarkObjGone                  ; loc_1E294        
;-------------------------------------------------------------------------------    
DHz_Bridge_Animate_Data:                                       ; loc_1E12C
                dc.w    loc_1E130-DHz_Bridge_Animate_Data
                dc.w    loc_1E138-DHz_Bridge_Animate_Data
loc_1E130:
                dc.b    $03, $04, $03, $02, $01, $00, $FE, $01
loc_1E138:
                dc.b    $03, $00, $01, $02, $03, $04, $FE, $01     
;-------------------------------------------------------------------------------
DHz_Bridge_Mappings:                                           ; loc_1E140
                include 'mappings/sprite/obj77.asm'   
;===============================================================================
; Object 0x77 - Dust Hill Bridges
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
Jmp_14_To_MarkObjGone:                                         ; loc_1E294
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_1D_To_ModifySpriteAttr_2P:                                 ; loc_1E29A
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_11_To_SolidObject:                                         ; loc_1E2A0
		jmp     (SolidObject)                          ; loc_F344
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj78_Stair_Case_Platforms:                                 ; loc_1E2A8
;===============================================================================
; Object 0x78 - Plataformas que giram em torno de si mesmo, plataformas que
; [ Begin ]          sobem ou descem quando tocadas na Chemical Plant e Escadas
;===============================================================================   
; loc_1E2A8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1E2BE(PC, D0), D1
                jsr     loc_1E2BE(PC, D1)
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                bra     Jmp_05_To_MarkObjGone_2                ; loc_1E476
;-------------------------------------------------------------------------------
loc_1E2BE:
                dc.w    loc_1E2C4-loc_1E2BE
                dc.w    loc_1E348-loc_1E2BE
                dc.w    loc_1E35C-loc_1E2BE             
;-------------------------------------------------------------------------------
loc_1E2C4:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                moveq   #$34, D3
                moveq   #$02, D4
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1E2D8
                moveq   #$3A, D3
                moveq   #-$02, D4
loc_1E2D8:
                move.w  Obj_X(A0), D2                                    ; $0008
                move.l  A0, A1
                moveq   #$03, D1
                bra.s   loc_1E2F0          
;------------------------------------------------------------------------------- 
loc_1E2E2:
                bsr     Jmp_0D_To_SingleObjectLoad_2           ; loc_1E464
                bne     loc_1E348
                move.b  #$04, Obj_Routine(A1)                            ; $0024
;------------------------------------------------------------------------------- 
loc_1E2F0:
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.l  #CPz_Block_Mappings, Obj_Map(A1) ; loc_1CDA2, $0004
                move.w  #$6418, Obj_Art_VRAM(A1)                         ; $0002
                bsr     Jmp_02_To_ModifySpriteAttr_2P_A1       ; loc_1E46A
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  Obj_Subtype(A0), Obj_Subtype(A1)          ; $0028, $0028
                move.w  D2, Obj_X(A1)                                    ; $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_X(A0), Obj_Control_Var_04(A1)         ; $0008, $0030
                move.w  Obj_Y(A1), Obj_Control_Var_06(A1)         ; $000C, $0032
                addi.w  #$0020, D2
                move.b  D3, Obj_Control_Var_03(A1)                       ; $002F
                move.l  A0, Obj_Control_Var_10(A1)                       ; $003C
                add.b   D4, D3
                dbra    D1, loc_1E2E2        
;------------------------------------------------------------------------------- 
loc_1E348:
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$0007, D0
                add.w   D0, D0
                move.w  loc_1E394(PC, D0), D1
                jsr     loc_1E394(PC, D1)       
;------------------------------------------------------------------------------- 
loc_1E35C:
                move.l  Obj_Control_Var_10(A0), A2                       ; $003C
                moveq   #$00, D0
                move.b  Obj_Control_Var_03(A0), D0                       ; $002F
                move.w  $00(A2, D0), D0
                add.w   Obj_Control_Var_06(A0), D0                       ; $0032
                move.w  D0, Obj_Y(A0)                                    ; $000C
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                move.w  #$0010, D2
                move.w  #$0011, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_12_To_SolidObject                  ; loc_1E470
                swap.w  D6
                or.b    D6, Obj_Control_Var_02(A2)                       ; $002E
                rts                 
;-------------------------------------------------------------------------------
loc_1E394:
                dc.w    loc_1E3A4-loc_1E394
                dc.w    loc_1E410-loc_1E394
                dc.w    loc_1E3C8-loc_1E394
                dc.w    loc_1E410-loc_1E394
                dc.w    loc_1E3A4-loc_1E394
                dc.w    loc_1E43A-loc_1E394
                dc.w    loc_1E3C8-loc_1E394
                dc.w    loc_1E43A-loc_1E394      
;-------------------------------------------------------------------------------
loc_1E3A4:
                tst.w   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_1E3BC
                move.b  Obj_Control_Var_02(A0), D0                       ; $002E
                andi.b  #$30, D0
                beq.s   loc_1E3BA
                move.w  #$001E, Obj_Control_Var_00(A0)                   ; $002C
loc_1E3BA:
                rts
loc_1E3BC:
                subq.w  #$01, Obj_Control_Var_00(A0)                     ; $002C
                bne.s   loc_1E3BA
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
                rts             
;-------------------------------------------------------------------------------
loc_1E3C8:
                tst.w   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_1E3E0
                move.b  Obj_Control_Var_02(A0), D0                       ; $002E
                andi.b  #$0C, D0
                beq.s   loc_1E3DE
                move.w  #$003C, Obj_Control_Var_00(A0)                   ; $002C
loc_1E3DE:
                rts
loc_1E3E0:
                subq.w  #$01, Obj_Control_Var_00(A0)                     ; $002C
                bne.s   loc_1E3EC
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
                rts
loc_1E3EC:
                lea     Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_Control_Var_00(A0), D0                       ; $002C
                lsr.b   #$02, D0
                andi.b  #$01, D0
                move.w  D0, (A1)+
                eori.b  #$01, D0
                move.w  D0, (A1)+
                eori.b  #$01, D0
                move.w  D0, (A1)+
                eori.b  #$01, D0
                move.w  D0, (A1)+
                rts   
;-------------------------------------------------------------------------------
loc_1E410:
                lea     Obj_Control_Var_08(A0), A1                       ; $0034
                cmpi.w  #$0080, (A1)
                beq.s   loc_1E438
                addq.w  #$01, (A1)
                moveq   #$00, D1
                move.w  (A1)+, D1
                swap.w  D1
                lsr.l   #$01, D1
                move.l  D1, D2
                lsr.l   #$01, D1
                move.l  D1, D3
                add.l   D2, D3
                swap.w  D1
                swap.w  D2
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D2, (A1)+
                move.w  D1, (A1)+
loc_1E438:
                rts    
;-------------------------------------------------------------------------------
loc_1E43A:
                lea     Obj_Control_Var_08(A0), A1                       ; $0034
                cmpi.w  #$FF80, (A1)
                beq.s   loc_1E462
                subq.w  #$01, (A1)
                moveq   #$00, D1
                move.w  (A1)+, D1
                swap.w  D1
                asr.l   #$01, D1
                move.l  D1, D2
                asr.l   #$01, D1
                move.l  D1, D3
                add.l   D2, D3
                swap.w  D1
                swap.w  D2
                swap.w  D3
                move.w  D3, (A1)+
                move.w  D2, (A1)+
                move.w  D1, (A1)+
loc_1E462:
                rts
;===============================================================================
; Object 0x78 - Plataformas que giram em torno de si mesmo, plataformas que
; [ End ]          sobem ou descem quando tocadas na Chemical Plant e Escadas
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_0D_To_SingleObjectLoad_2:                                  ; loc_1E464
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_02_To_ModifySpriteAttr_2P_A1:                              ; loc_1E46A
		jmp     (ModifySpriteAttr_2P_A1)               ; loc_DBDA
Jmp_12_To_SolidObject:                                         ; loc_1E470
		jmp     (SolidObject)                          ; loc_F344
Jmp_05_To_MarkObjGone_2:                                       ; loc_1E476
		jmp     (MarkObjGone_2)                        ; loc_D238
;-------------------------------------------------------------------------------
Obj7A_Platform_Horizontal:                                  ; loc_1E47C
;===============================================================================
; Object 0x7A - Horizontal moving platforms from Chemical Plant and Dust Hill
; [ Begin ]          
;===============================================================================
; loc_1E47C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1E48A(PC, D0), D1
                jmp     loc_1E48A(PC, D1)
;-------------------------------------------------------------------------------
loc_1E48A:
                dc.w    loc_1E4A8-loc_1E48A
                dc.w    loc_1E56A-loc_1E48A
                dc.w    loc_1E5C6-loc_1E48A
;-------------------------------------------------------------------------------
loc_1E490:
                dc.b    $00, $68, $FF, $98, $00, $00, $01, $A8
                dc.b    $FF, $50, $00, $40, $01, $E8, $FF, $80
                dc.b    $00, $80, $00, $68, $00, $67, $00, $00
;-------------------------------------------------------------------------------
loc_1E4A8:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Platform_Horizontal_Mappings, Obj_Map(A0) ; loc_1E640, $0004
                move.w  #$E418, Obj_Art_VRAM(A0)                         ; $0002
                cmpi.b  #$0B, (Level_Id).w                           ; $FFFFFE10
                bne.s   loc_1E4D0
                move.l  #DHz_Swing_Platforms_Mappings, Obj_Map(A0) ; loc_8FF0, $0004
                move.w  #$0000, Obj_Art_VRAM(A0)                         ; $0002
loc_1E4D0:
                bsr     Jmp_1E_To_ModifySpriteAttr_2P          ; loc_1E660
                moveq   #$00, D1
                move.b  Obj_Subtype(A0), D1                              ; $0028
                lea     loc_1E490(PC, D1), A2
                move.b  (A2)+, D1
                move.l  A0, A1
                bra.s   loc_1E502
;-------------------------------------------------------------------------------
loc_1E4E4:
                bsr     Jmp_0E_To_SingleObjectLoad_2           ; loc_1E65A
                bne.s   loc_1E526
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
;-------------------------------------------------------------------------------
loc_1E502:
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$18, Obj_Width(A1)                              ; $0019
                move.w  Obj_X(A1), Obj_Control_Var_04(A1)         ; $0008, $0030
loc_1E526:
                dbra    D1, loc_1E4E4
                move.l  A0, Obj_Control_Var_10(A1)                       ; $003C
                move.l  A1, Obj_Control_Var_10(A0)                       ; $003C
                cmpi.b  #$0C, Obj_Subtype(A0)                            ; $0028
                bne.s   loc_1E540
                move.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
loc_1E540:
                moveq   #$00, D1
                move.b  (A2)+, D1
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                sub.w   D1, D0
                move.w  D0, Obj_Control_Var_06(A0)                       ; $0032
                move.w  D0, Obj_Control_Var_06(A1)                       ; $0032
                add.w   D1, D0
                add.w   D1, D0
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034
                move.w  D0, Obj_Control_Var_08(A1)                       ; $0034
                move.w  (A2)+, D0
                add.w   D0, Obj_X(A0)                                    ; $0008
                move.w  (A2)+, D0
                add.w   D0, Obj_X(A1)                                    ; $0008
;-------------------------------------------------------------------------------
loc_1E56A:
                bsr.s   loc_1E5D0
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                beq.s   loc_1E576
                bra     Jmp_0F_To_DisplaySprite                ; loc_1E654
loc_1E576:
                move.w  Obj_Control_Var_06(A0), D0                       ; $0032
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bls.s   loc_1E59A
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_1E5A0
loc_1E59A:
                jmp     (DisplaySprite)                        ; loc_D322
loc_1E5A0:
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                cmpa.l  A0, A1
                beq.s   loc_1E5AE
                jsr     (DeleteObject_A1)                      ; loc_D316
loc_1E5AE:
                lea     ($FFFFFC00).w, A2
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_1E5C0
                bclr    #$07, $02(A2, D0)
loc_1E5C0:
                jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
loc_1E5C6:
                bsr.s   loc_1E5D0
                bsr.s   loc_1E61A
                jmp     (DisplaySprite)                        ; loc_D322
loc_1E5D0:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                tst.b   Obj_Control_Var_0A(A0)                           ; $0036
                beq.s   loc_1E5F2
                move.w  Obj_X(A0), D0                                    ; $0008
                subq.w  #$01, D0
                cmp.w   Obj_Control_Var_06(A0), D0                       ; $0032
                bne.s   loc_1E5EC
                move.b  #$00, Obj_Control_Var_0A(A0)                     ; $0036
loc_1E5EC:
                move.w  D0, Obj_X(A0)                                    ; $0008
                bra.s   loc_1E608
loc_1E5F2:
                move.w  Obj_X(A0), D0                                    ; $0008
                addq.w  #$01, D0
                cmp.w   Obj_Control_Var_08(A0), D0                       ; $0034
                bne.s   loc_1E604
                move.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
loc_1E604:
                move.w  D0, Obj_X(A0)                                    ; $0008
loc_1E608:
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                move.w  #$0008, D3
                move.w  (A7)+, D4
                bsr     Jmp_01_To_Platform_Object              ; loc_1E666
                rts
loc_1E61A:
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.w  Obj_X(A0), D0                                    ; $0008
                subi.w  #$0018, D0
                move.w  Obj_X(A1), D2                                    ; $0008
                addi.w  #$0018, D2
                cmp.w   D0, D2
                bne.s   loc_1E63E
                eori.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                eori.b  #$01, Obj_Control_Var_0A(A1)                     ; $0036
loc_1E63E:
                rts
;-------------------------------------------------------------------------------
Platform_Horizontal_Mappings:                                  ; loc_1E640
                dc.w    loc_1E642-Platform_Horizontal_Mappings
loc_1E642:
                dc.w    $0002
                dc.l    $F8090010, $0008FFE8
                dc.l    $F8090810, $08080000
;===============================================================================
; Object 0x7A - Horizontal moving platforms from Chemical Plant and Dust Hill
; [ End ]          
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_0F_To_DisplaySprite:                                       ; loc_1E654
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_0E_To_SingleObjectLoad_2:                                  ; loc_1E65A
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_1E_To_ModifySpriteAttr_2P:                                 ; loc_1E660
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_01_To_Platform_Object:                                     ; loc_1E666
		jmp     (Platform_Object)                      ; loc_F82C
;-------------------------------------------------------------------------------
Obj7B_Spring_Tubes:                                         ; loc_1E66C
;===============================================================================
; Object 0x7B - Springs on the tubes from Chemical Plant
; [ Begin ]
;===============================================================================
; loc_1E66C:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1E69C(PC, D0), D1
                jsr     loc_1E69C(PC, D1)
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                beq.s   loc_1E684
                bra     Jmp_10_To_DisplaySprite                ; loc_1E884
loc_1E684:
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     Jmp_11_To_DeleteObject                 ; loc_1E88A
                bra     Jmp_10_To_DisplaySprite                ; loc_1E884
;-------------------------------------------------------------------------------
loc_1E69C:
                dc.w    loc_1E6A4-loc_1E69C
                dc.w    loc_1E6DA-loc_1E69C
;-------------------------------------------------------------------------------
loc_1E6A0:
                dc.w    $F000, $F600
;-------------------------------------------------------------------------------
loc_1E6A4:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Spring_Tubes_Mappings, Obj_Map(A0) ; loc_1E840, $0004
                move.w  #$03E0, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$0002, D0
                move.w  loc_1E6A0(PC, D0), Obj_Control_Var_04(A0)  ; $0030
                bsr     Jmp_1F_To_ModifySpriteAttr_2P          ; loc_1E896
;-------------------------------------------------------------------------------
loc_1E6DA:
                cmpi.b  #$01, Obj_Map_Id(A0)                             ; $001A
                beq.s   loc_1E722
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0010, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                lea     (Player_One).w, A1                           ; $FFFFB000
                moveq   #$03, D6
                movem.l D1-D4, -(A7)
                bsr     Jmp_03_To_SolidObject_2_A1             ; loc_1E89C
                btst    #$03, Obj_Status(A0)                             ; $0022
                beq.s   loc_1E70A
                bsr.s   loc_1E782
loc_1E70A:
                movem.l (A7)+, D1-D4
                lea     (Player_Two).w, A1                           ; $FFFFB040
                moveq   #$04, D6
                bsr     Jmp_03_To_SolidObject_2_A1             ; loc_1E89C
                btst    #$04, Obj_Status(A0)                             ; $0022
                beq.s   loc_1E722
                bsr.s   loc_1E782
loc_1E722:
                move.w  Obj_X(A0), D4                                    ; $0008
                move.w  D4, D5
                subi.w  #$0010, D4
                addi.w  #$0010, D5
                move.w  Obj_Y(A0), D2                                    ; $000C
                move.w  D2, D3
                addi.w  #$0030, D3
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                cmp.w   D4, D0
                bcs.s   loc_1E758
                cmp.w   D5, D0
                bcc.s   loc_1E758
                move.w  (Player_One_Position_Y).w, D0                ; $FFFFB00C
                cmp.w   D2, D0
                bcs.s   loc_1E758
                cmp.w   D3, D0
                bcc.s   loc_1E758
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
loc_1E758:
                move.w  (Player_Two_Position_X).w, D0                ; $FFFFB048
                cmp.w   D4, D0
                bcs.s   loc_1E776
                cmp.w   D5, D0
                bcc.s   loc_1E776
                move.w  (Player_Two_Position_Y).w, D0                ; $FFFFB04C
                cmp.w   D2, D0
                bcs.s   loc_1E776
                cmp.w   D3, D0
                bcc.s   loc_1E776
                move.b  #$03, Obj_Ani_Number(A0)                         ; $001C
loc_1E776:
                lea     (Spring_Tube_Animate_Data), A1         ; loc_1E828
                bra     Jmp_04_To_AnimateSprite                ; loc_1E890
;-------------------------------------------------------------------------------
; loc_1E780:
                rts
;-------------------------------------------------------------------------------
loc_1E782:
                move.w  #$0100, Obj_Ani_Number(A0)                       ; $001C
                addq.w  #$04, Obj_Y(A1)                                  ; $000C
                move.w  Obj_Control_Var_04(A0), Obj_Speed_Y(A1)   ; $0012, $0030
                bset    #$01, Obj_Status(A1)                             ; $0022
                bclr    #$03, Obj_Status(A1)                             ; $0022
                move.b  #$10, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_1E7B6
                move.w  #$0000, Obj_Speed(A1)                            ; $0010
loc_1E7B6:
                btst    #$00, D0
                beq.s   loc_1E7F6
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$00, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$04, Obj_Control_Var_01(A1)                     ; $002D
                btst    #$01, D0
                bne.s   loc_1E7E6
                move.b  #$01, Obj_Control_Var_00(A1)                     ; $002C
loc_1E7E6:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_1E7F6
                neg.b   Obj_Flip_Angle(A1)                               ; $0027
                neg.w   Obj_Inertia(A1)                                  ; $0014
loc_1E7F6:
                andi.b  #$0C, D0
                cmpi.b  #$04, D0
                bne.s   loc_1E80C
                move.b  #$0C, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0D, Obj_Control_Var_13(A1)                     ; $003F
loc_1E80C:
                cmpi.b  #$08, D0
                bne.s   loc_1E81E
                move.b  #$0E, Obj_Control_Var_12(A1)                     ; $003E
                move.b  #$0F, Obj_Control_Var_13(A1)                     ; $003F
loc_1E81E:
                move.w  #$00CC, D0
                jmp     (Play_Sfx)                             ; loc_1512
;-------------------------------------------------------------------------------
Spring_Tube_Animate_Data:                                      ; loc_1E828
                dc.w    loc_1E830-Spring_Tube_Animate_Data
                dc.w    loc_1E833-Spring_Tube_Animate_Data
                dc.w    loc_1E837-Spring_Tube_Animate_Data
                dc.w    loc_1E837-Spring_Tube_Animate_Data
loc_1E830:
                dc.b    $0F, $00, $FF
loc_1E833:
                dc.b    $00, $03, $FD, $00
loc_1E837:
                dc.b    $05, $01, $02, $02, $02, $04, $FD, $00
                dc.b    $00
;-------------------------------------------------------------------------------
Spring_Tubes_Mappings:                                         ; loc_1E840
                include 'mappings/sprite/obj7B.asm'
;===============================================================================
; Object 0x7B - Springs on the tubes from Chemical Plant
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_10_To_DisplaySprite:                                       ; loc_1E884
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_11_To_DeleteObject:                                        ; loc_1E88A
		jmp     (DeleteObject)                         ; loc_D314
Jmp_04_To_AnimateSprite:                                       ; loc_1E890
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_1F_To_ModifySpriteAttr_2P:                                 ; loc_1E896
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_03_To_SolidObject_2_A1:                                    ; loc_1E89C
		jmp     (SolidObject_2_A1)                     ; loc_F3B4
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj7F_Vines_Switch:                                         ; loc_1E8A4
;===============================================================================
; Object 0x7F - Vines used as switches to lift bridges from Dust Hill
; [ Begin ]          
;===============================================================================
; loc_1E8A4:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1E8B2(PC, D0), D1
                jmp     loc_1E8B2(PC, D1)
;-------------------------------------------------------------------------------
loc_1E8B2:
                dc.w    loc_1E8B6-loc_1E8B2
                dc.w    loc_1E8DE-loc_1E8B2
;-------------------------------------------------------------------------------
loc_1E8B6:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Vines_Switch_Mappings, Obj_Map(A0) ; loc_1E9EC, $0004
                move.w  #$640E, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_20_To_ModifySpriteAttr_2P          ; loc_1EA2A
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$08, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
;-------------------------------------------------------------------------------
loc_1E8DE:
                lea     Obj_Control_Var_04(A0), A2                       ; $0030
                lea     (Player_One).w, A1                           ; $FFFFB000
                move.w  (Control_Ports_Buffer_Data).w, D0            ; $FFFFF604
                bsr.s   loc_1E8FC
                lea     (Player_Two).w, A1                           ; $FFFFB040
                addq.w  #$01, A2
                move.w  ($FFFFF606).w, D0
                bsr.s   loc_1E8FC
                bra     Jmp_15_To_MarkObjGone                  ; loc_1EA24
loc_1E8FC:
                tst.b   (A2)
                beq.s   loc_1E950
                andi.b  #$70, D0
                beq     loc_1E9EA
                clr.b   Obj_Timer(A1)                                    ; $002A
                clr.b   (A2)
                move.b  #$12, Obj_Art_VRAM(A2)                           ; $0002
                andi.w  #$0F00, D0
                beq.s   loc_1E920
                move.b  #$3C, Obj_Art_VRAM(A2)                           ; $0002
loc_1E920:
                move.w  #$FD00, Obj_Speed_Y(A1)                          ; $0012
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                lea     ($FFFFF7E0).w, A3
                lea     $00(A3, D0), A3
                bclr    #$00, (A3)
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                tst.w   Obj_Control_Var_04(A0)                           ; $0030
                beq.s   loc_1E94C
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
loc_1E94C:
                bra     loc_1E9EA
loc_1E950:
                tst.b   Obj_Art_VRAM(A2)                                 ; $0002
                beq.s   loc_1E95E
                subq.b  #$01, Obj_Art_VRAM(A2)                           ; $0002
                bne     loc_1E9EA
loc_1E95E:
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                addi.w  #$000C, D0
                cmpi.w  #$0018, D0
                bcc     loc_1E9EA
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                subi.w  #$0028, D1
                cmpi.w  #$0010, D1
                bcc     loc_1E9EA
                cmpi.b  #$04, Obj_Routine(A1)                            ; $0024
                bcc.s   loc_1E9EA
                clr.w   Obj_Speed(A1)                                    ; $0010
                clr.w   Obj_Speed_Y(A1)                                  ; $0012
                clr.w   Obj_Inertia(A1)                                  ; $0014
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0030, Obj_Y(A1)                                ; $000C
                move.b  #$14, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$01, Obj_Timer(A1)                              ; $002A
                move.b  #$01, (A2)
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                lea     ($FFFFF7E0).w, A3
                bset    #$00, $00(A3, D0)
                move.w  #$00CD, D0
                jsr     (Play_Sfx)                             ; loc_1512
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                tst.w   Obj_Control_Var_04(A0)                           ; $0030
                beq.s   loc_1E9EA
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
loc_1E9EA:
                rts
;-------------------------------------------------------------------------------
Vines_Switch_Mappings:                                         ; loc_1E9EC
                include 'mappings/sprite/obj7F.asm'
;===============================================================================
; Object 0x7F - Vines used as switches to lift bridges from Dust Hill
; [ End ]          
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_15_To_MarkObjGone:                                         ; loc_1EA24
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_20_To_ModifySpriteAttr_2P:                                 ; loc_1EA2A
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
;-------------------------------------------------------------------------------
Obj80_Vines_Chain_Hook:                                     ; loc_1EA30
;===============================================================================
; Object 0x80 - Chain with hook from the Sky Fortress.
; [ Begin ]          Roots that can hang from Dust Hill.
;===============================================================================
; loc_1EA30:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1EA3E(PC, D0), D1
                jmp     loc_1EA3E(PC, D1)
;-------------------------------------------------------------------------------
loc_1EA3E:
                dc.w    loc_1EA42-loc_1EA3E
                dc.w    loc_1EAAC-loc_1EA3E
;-------------------------------------------------------------------------------
loc_1EA42:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Vines_Mappings, Obj_Map(A0)    ; loc_1EC14, $0004
                move.w  #$641E, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_21_To_ModifySpriteAttr_2P          ; loc_1ED86
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$80, Obj_Height_2(A0)                           ; $0016
                bset    #$04, Obj_Flags(A0)                              ; $0001
                move.w  Obj_Y(A0), Obj_Control_Var_10(A0)         ; $000C, $003C
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bpl.s   loc_1EA88
                move.b  #$01, Obj_Control_Var_08(A0)                     ; $0034
loc_1EA88:
                move.w  #$0002, Obj_Control_Var_0E(A0)                   ; $003A
                andi.b  #$70, D0
                beq.s   loc_1EAAC
                move.w  #$00B0, Obj_Control_Var_0C(A0)                   ; $0038
                move.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                addi.w  #$00B0, Obj_Y(A0)                                ; $000C
                move.b  #$06, Obj_Map_Id(A0)                             ; $001A
;-------------------------------------------------------------------------------
loc_1EAAC:
                tst.b   Obj_Control_Var_0A(A0)                           ; $0036
                beq.s   loc_1EABA
                tst.w   Obj_Control_Var_04(A0)                           ; $0030
                bne.s   loc_1EAD0
                bra.s   loc_1EAC0
loc_1EABA:
                tst.w   Obj_Control_Var_04(A0)                           ; $0030
                beq.s   loc_1EAD0
loc_1EAC0:
                move.w  Obj_Control_Var_0C(A0), D2                       ; $0038
                cmpi.w  #$00B0, D2
                beq.s   loc_1EAF4
                add.w   Obj_Control_Var_0E(A0), D2                       ; $003A
                bra.s   loc_1EADA
loc_1EAD0:
                move.w  Obj_Control_Var_0C(A0), D2                       ; $0038
                beq.s   loc_1EAF4
                sub.w   Obj_Control_Var_0E(A0), D2                       ; $003A
loc_1EADA:
                move.w  D2, Obj_Control_Var_0C(A0)                       ; $0038
                move.w  Obj_Control_Var_10(A0), D0                       ; $003C
                add.w   D2, D0
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.w  D2, D0
                beq.s   loc_1EAF0
                lsr.w   #$05, D0
                addq.w  #$01, D0
loc_1EAF0:
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
loc_1EAF4:
                lea     Obj_Control_Var_04(A0), A2                       ; $0030
                lea     (Player_One).w, A1                           ; $FFFFB000
                move.w  (Control_Ports_Buffer_Data).w, D0            ; $FFFFF604
                bsr.s   loc_1EB12
                lea     (Player_Two).w, A1                           ; $FFFFB040
                addq.w  #$01, A2
                move.w  ($FFFFF606).w, D0
                bsr.s   loc_1EB12
                bra     Jmp_16_To_MarkObjGone                  ; loc_1ED80
loc_1EB12:
                tst.b   (A2)
                beq.s   loc_1EB8A
                andi.b  #$70, D0
                beq     loc_1EB7A
                clr.b   Obj_Timer(A1)                                    ; $002A
                clr.b   (A2)
                move.b  #$12, $0002(A2)
                andi.w  #$0F00, D0
                beq     loc_1EB38
                move.b  #$3C, $0002(A2)
loc_1EB38:
                btst    #$0A, D0
                beq.s   loc_1EB44
                move.w  #$FE00, Obj_Speed(A1)                            ; $0010
loc_1EB44:
                btst    #$0B, D0
                beq.s   loc_1EB50
                move.w  #$0200, Obj_Speed(A1)                            ; $0010
loc_1EB50:
                move.w  #$FC80, Obj_Speed_Y(A1)                          ; $0012
                bset    #$01, Obj_Status(A1)                             ; $0022
                tst.b   Obj_Control_Var_08(A0)                           ; $0034
                beq.s   loc_1EB76
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                lea     ($FFFFF7E0).w, A3
                lea     $00(A3, D0), A3
                bclr    #$00, (A3)
loc_1EB76:
                bra     loc_1EC12
loc_1EB7A:
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0094, Obj_Y(A1)                                ; $000C
                bra     loc_1EC12
loc_1EB8A:
                tst.b   $0002(A2)
                beq.s   loc_1EB98
                subq.b  #$01, $0002(A2)
                bne     loc_1EC12
loc_1EB98:
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                addi.w  #$0010, D0
                cmpi.w  #$0020, D0
                bcc     loc_1EC12
                move.w  Obj_Y(A1), D1                                    ; $000C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                subi.w  #$0088, D1
                cmpi.w  #$0018, D1
                bcc     loc_1EC12
                cmpi.b  #$04, Obj_Routine(A1)                            ; $0024
                bcc.s   loc_1EC12
                clr.w   Obj_Speed(A1)                                    ; $0010
                clr.w   Obj_Speed_Y(A1)                                  ; $0012
                clr.w   Obj_Inertia(A1)                                  ; $0014
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0094, Obj_Y(A1)                                ; $000C
                move.b  #$14, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$01, Obj_Timer(A1)                              ; $002A
                move.b  #$01, (A2)
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                lea     ($FFFFF7E0).w, A3
                bset    #$00, $00(A3, D0)
                move.w  #$CD, D0                             ; play switch sound
                jsr     (Play_Sfx)                             ; loc_1512
loc_1EC12:
                rts
;-------------------------------------------------------------------------------
Vines_Mappings:                                                ; loc_1EC14
                include 'mappings/sprite/obj80.asm'
;===============================================================================
; Object 0x80 - Chain with hook from the Sky Fortress.
; [ Begin ]          Roots that can hang from Dust Hill.
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_16_To_MarkObjGone:                                         ; loc_1ED80
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_21_To_ModifySpriteAttr_2P:                                 ; loc_1ED86
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
;-------------------------------------------------------------------------------
Obj81_Vertical_Bridge:                                      ; loc_1ED8C
;===============================================================================
; Object 0x81 - Ponte que abre ao puxar as raizes na Dust Hill
; [ Begin ]
;===============================================================================
; loc_1ED8C:
                btst    #$06, Obj_Flags(A0)                              ; $0001
                bne     loc_1EDA4
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1EDAC(PC, D0), D1
                jmp     loc_1EDAC(PC, D1)
loc_1EDA4:
                move.w  #$0280, D0
                bra     Jmp_01_To_DisplaySprite_Param          ; loc_1EFE8
;-------------------------------------------------------------------------------
loc_1EDAC:
                dc.w    loc_1EDB2-loc_1EDAC
                dc.w    loc_1EE8A-loc_1EDAC
                dc.w    loc_1EF12-loc_1EDAC              
;-------------------------------------------------------------------------------
loc_1EDB2:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Vertical_Bridge_Mappings, Obj_Map(A0) ; loc_1EFD6, $0004
                move.w  #$643C, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_22_To_ModifySpriteAttr_2P          ; loc_1F006
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$05, Obj_Priority(A0)                           ; $0018
                move.b  #$08, Obj_Width(A0)                              ; $0019
                ori.b   #$80, Obj_Status(A0)                             ; $0022
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                subi.w  #$0048, Obj_Y(A0)                                ; $000C
                move.b  #$C0, Obj_Angle(A0)                              ; $0026
                moveq   #-$10, D4
                btst    #$01, Obj_Status(A0)                             ; $0022
                beq.s   loc_1EE10
                addi.w  #$0090, Obj_Y(A0)                                ; $000C
                move.b  #$40, Obj_Angle(A0)                              ; $0026
                neg.w   D4
loc_1EE10:
                move.w  #$0100, D1
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1EE1E
                neg.w   D1
loc_1EE1E:
                move.w  D1, Obj_Control_Var_08(A0)                       ; $0034
                bsr     Jmp_0F_To_SingleObjectLoad_2           ; loc_1F000
                bne.s   loc_1EE8A
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                bset    #$06, Obj_Flags(A1)                              ; $0001
                move.b  #$40, $000E(A1)
                move.w  Obj_Control_Var_04(A0), D2                       ; $0030
                move.w  Obj_Control_Var_06(A0), D3                       ; $0032
                moveq   #$08, D1
                move.b  D1, Obj_Ani_Boss_Cnt(A1)                         ; $000F
                subq.w  #$01, D1
                lea     Obj_Speed(A1), A2                                ; $0010
loc_1EE60:
                add.w   D4, D3
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                move.w  #$0001, (A2)+
                dbra    D1, loc_1EE60
                move.w  Obj_Subtype(A1), Obj_X(A1)                ; $0008, $0028
                move.w  Obj_Timer(A1), Obj_Y(A1)                  ; $000C, $002A
                move.l  A1, Obj_Control_Var_10(A0)                       ; $003C
                move.b  #$40, Obj_Inertia(A1)                            ; $0014
                bset    #$04, Obj_Flags(A1)                              ; $0001    
;-------------------------------------------------------------------------------
loc_1EE8A:
                lea     ($FFFFF7E0).w, A2
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                btst    #$00, $00(A2, D0)
                beq.s   loc_1EEC2
                move.b  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                bne.s   loc_1EEC2
                move.w  #$00E7, D0
                jsr     (Play_Sfx)                             ; loc_1512
                cmpi.b  #$81, Obj_Status(A0)                             ; $0022
                bne.s   loc_1EEC2
                move.w  Obj_Control_Var_04(A0), Obj_X(A0)         ; $0008, $0030
                subi.w  #$0048, Obj_X(A0)                                ; $0008
loc_1EEC2:
                tst.b   Obj_Control_Var_0A(A0)                           ; $0036
                beq.s   loc_1EF10
                move.w  #$0048, D1
                tst.b   Obj_Angle(A0)                                    ; $0026
                beq.s   loc_1EEDC
                cmpi.b  #$80, Obj_Angle(A0)                              ; $0026
                bne.s   loc_1EF08
                neg.w   D1
loc_1EEDC:
                move.w  Obj_Control_Var_06(A0), Obj_Y(A0)         ; $000C, $0032
                move.w  Obj_Control_Var_04(A0), Obj_X(A0)         ; $0008, $0030
                add.w   D1, Obj_X(A0)                                    ; $0008
                move.b  #$40, Obj_Width(A0)                              ; $0019
                move.b  #$00, Obj_Control_Var_0A(A0)                     ; $0036
                move.w  #$00E9, D0
                jsr     (Play_Sfx)                             ; loc_1512
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bra.s   loc_1EF10
loc_1EF08:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                add.w   D0, Obj_Angle(A0)                                ; $0026
loc_1EF10:
                bsr.s   loc_1EF72         
;-------------------------------------------------------------------------------
loc_1EF12:
                move.w  #$0013, D1
                move.w  #$0040, D2
                move.w  #$0041, D3
                move.b  Obj_Angle(A0), D0                                ; $0026
                beq.s   loc_1EF30
                cmpi.b  #$40, D0
                beq.s   loc_1EF3C
                cmpi.b  #$C0, D0
                bcc.s   loc_1EF3C
loc_1EF30:
                move.w  #$004B, D1
                move.w  #$0008, D2
                move.w  #$0009, D3
loc_1EF3C:
                move.w  Obj_X(A0), D4                                    ; $0008
                bsr     Jmp_13_To_SolidObject                  ; loc_1F012
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                beq.s   loc_1EF4E
                bra     Jmp_11_To_DisplaySprite                ; loc_1EFEE
loc_1EF4E:
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_1EF66
                bra     Jmp_11_To_DisplaySprite                ; loc_1EFEE
loc_1EF66:
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                bsr     Jmp_02_To_DeleteObject_A1              ; loc_1EFFA
                bra     Jmp_12_To_DeleteObject                 ; loc_1EFF4
loc_1EF72:
                tst.b   Obj_Control_Var_0A(A0)                           ; $0036
                beq.s   loc_1EFD4
                moveq   #$00, D0
                moveq   #$00, D1
                move.b  Obj_Angle(A0), D0                                ; $0026
                bsr     Jmp_04_To_CalcSine                     ; loc_1F00C
                move.w  Obj_Control_Var_06(A0), D2                       ; $0032
                move.w  Obj_Control_Var_04(A0), D3                       ; $0030
                moveq   #$00, D6
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.b  Obj_Ani_Boss_Cnt(A1), D6                         ; $000F
                subq.w  #$01, D6
                bcs.s   loc_1EFD4
                swap.w  D0
                swap.w  D1
                asr.l   #$04, D0
                asr.l   #$04, D1
                move.l  D0, D4
                move.l  D1, D5
                lea     Obj_Speed(A1), A2                                ; $0010
loc_1EFAA:
                movem.l D4/D5, -(A7)
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, (A2)+
                move.w  D4, (A2)+
                movem.l (A7)+, D4/D5
                add.l   D0, D4
                add.l   D1, D5
                addq.w  #$02, A2
                dbra    D6, loc_1EFAA
                move.w  Obj_Subtype(A1), Obj_X(A1)                ; $0008, $0028
                move.w  Obj_Timer(A1), Obj_Y(A1)                  ; $000C, $002A
loc_1EFD4:
                rts                       
;-------------------------------------------------------------------------------     
Vertical_Bridge_Mappings:                                      ; loc_1EFD6
                dc.w    loc_1EFDA-Vertical_Bridge_Mappings
                dc.w    loc_1EFDC-Vertical_Bridge_Mappings
loc_1EFDA:
                dc.w    $0000
loc_1EFDC:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8 
;===============================================================================
; Object 0x81 - Ponte que abre ao puxar as raizes na Dust Hill
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_01_To_DisplaySprite_Param:                                 ; loc_1EFE8
		jmp     (DisplaySprite_Param)                  ; loc_D35E
Jmp_11_To_DisplaySprite:                                       ; loc_1EFEE
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_12_To_DeleteObject:                                        ; loc_1EFF4
		jmp     (DeleteObject)                         ; loc_D314
Jmp_02_To_DeleteObject_A1:                                     ; loc_1EFFA
		jmp     (DeleteObject_A1)                      ; loc_D316
Jmp_0F_To_SingleObjectLoad_2:                                  ; loc_1F000
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_22_To_ModifySpriteAttr_2P:                                 ; loc_1F006
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_04_To_CalcSine:                                            ; loc_1F00C
		jmp     (CalcSine)                             ; loc_3282
Jmp_13_To_SolidObject:                                         ; loc_1F012
		jmp     (SolidObject)                          ; loc_F344
;-------------------------------------------------------------------------------
Obj82_Falling_Pillar:                                       ; loc_1F018
;===============================================================================
; Object 0x82 -> Pilar cai ao pisar em cima na Neo Green Hill
; [ Begin ]
;===============================================================================
; loc_1F018:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1F026(PC, D0), D1
                jmp     loc_1F026(PC, D1)
;-------------------------------------------------------------------------------      
loc_1F026:
                dc.w    loc_1F032-loc_1F026
                dc.w    loc_1F09A-loc_1F026    
;------------------------------------------------------------------------------- 
loc_1F02A:
                dc.b    $20, $08, $1C, $30, $10, $10, $10, $10 
;-------------------------------------------------------------------------------
loc_1F032:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Falling_Pillar_Mappings, Obj_Map(A0) ; loc_1F1FE, $0004
                move.w  #$0000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_23_To_ModifySpriteAttr_2P          ; loc_1F266
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsr.w   #$03, D0
                andi.w  #$000E, D0
                lea     loc_1F02A(PC, D0), A2
                move.b  (A2)+, Obj_Width(A0)                             ; $0019
                move.b  (A2), Obj_Height_2(A0)                           ; $0016
                lsr.w   #$01, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.w  Obj_X(A0), Obj_Control_Var_08(A0)         ; $0008, $0034
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.b  #$0F, D0
                beq.s   loc_1F094
                cmpi.b  #$07, D0
                beq.s   loc_1F094
                move.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
loc_1F094:
                andi.b  #$0F, Obj_Subtype(A0)                            ; $0028    
;-------------------------------------------------------------------------------
loc_1F09A:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                add.w   D0, D0
                move.w  loc_1F0E0(PC, D0), D1
                jsr     loc_1F0E0(PC, D1)
                move.w  (A7)+, D4
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_1F0D8
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                moveq   #$00, D2
                move.b  Obj_Height_2(A0), D2                             ; $0016
                move.w  D2, D3
                addq.w  #$01, D3
                bsr     Jmp_14_To_SolidObject                  ; loc_1F272
                swap.w  D6
                move.b  D6, Obj_Control_Var_13(A0)                       ; $003F
                bsr     loc_1F1BA
loc_1F0D8:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                bra     Jmp_06_To_MarkObjGone_2                ; loc_1F278                                           
;-------------------------------------------------------------------------------
loc_1F0E0:
                dc.w    loc_1F0F0-loc_1F0E0
                dc.w    loc_1F0F2-loc_1F0E0
                dc.w    loc_1F11A-loc_1F0E0
                dc.w    loc_1F0F2-loc_1F0E0
                dc.w    loc_1F13E-loc_1F0E0
                dc.w    loc_1F160-loc_1F0E0
                dc.w    loc_1F11A-loc_1F0E0
                dc.w    loc_1F174-loc_1F0E0          
;-------------------------------------------------------------------------------     
loc_1F0F0:
                rts     
;-------------------------------------------------------------------------------   
loc_1F0F2:
                tst.w   Obj_Control_Var_0A(A0)                           ; $0036
                bne.s   loc_1F10A
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_1F108
                move.w  #$001E, Obj_Control_Var_0A(A0)                   ; $0036
loc_1F108:
                rts
loc_1F10A:
                subq.w  #$01, Obj_Control_Var_0A(A0)                     ; $0036
                bne.s   loc_1F108
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
                clr.b   Obj_Control_Var_0C(A0)                           ; $0038
                rts  
;-------------------------------------------------------------------------------   
loc_1F11A:
                bsr     Jmp_0C_To_SpeedToPos                   ; loc_1F27E
                addi.w  #$0008, Obj_Speed_Y(A0)                          ; $0012
                bsr     Jmp_01_To_ObjHitFloor                  ; loc_1F260
                tst.w   D1
                bpl     loc_1F13C
                addq.w  #$01, D1
                add.w   D1, Obj_Y(A0)                                    ; $000C
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
                clr.b   Obj_Subtype(A0)                                  ; $0028
loc_1F13C:
                rts   
;-------------------------------------------------------------------------------   
loc_1F13E:
                bsr     Jmp_0C_To_SpeedToPos                   ; loc_1F27E
                subi.w  #$0008, Obj_Speed_Y(A0)                          ; $0012
                bsr     Jmp_00_To_Object_HitCeiling            ; loc_1F26C
                tst.w   D1
                bpl     loc_1F15E
                sub.w   D1, Obj_Y(A0)                                    ; $000C
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
                clr.b   Obj_Subtype(A0)                                  ; $0028
loc_1F15E:
                rts 
;-------------------------------------------------------------------------------   
loc_1F160:
                move.b  Obj_Control_Var_13(A0), D0                       ; $003F
                andi.b  #$03, D0
                beq.s   loc_1F172
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
                clr.b   Obj_Control_Var_0C(A0)                           ; $0038
loc_1F172:
                rts   
;-------------------------------------------------------------------------------   
loc_1F174:
                move.w  (Water_Level).w, D0                          ; $FFFFF646
                sub.w   Obj_Y(A0), D0                                    ; $000C
                beq.s   loc_1F1B8
                bcc.s   loc_1F19C
                cmpi.w  #$FFFE, D0
                bge.s   loc_1F188
                moveq   #-$02, D0
loc_1F188:
                add.w   D0, Obj_Y(A0)                                    ; $000C
                bsr     Jmp_00_To_Object_HitCeiling            ; loc_1F26C
                tst.w   D1
                bpl     loc_1F19A
                sub.w   D1, Obj_Y(A0)                                    ; $000C
loc_1F19A:
                rts
loc_1F19C:
                cmpi.w  #$0002, D0
                ble.s   loc_1F1A4
                moveq   #$02, D0
loc_1F1A4:
                add.w   D0, Obj_Y(A0)                                    ; $000C
                bsr     Jmp_01_To_ObjHitFloor                  ; loc_1F260
                tst.w   D1
                bpl     loc_1F1B8
                addq.w  #$01, D1
                add.w   D1, Obj_Y(A0)                                    ; $000C
loc_1F1B8:
                rts
loc_1F1BA:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                beq.s   loc_1F1FC
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                bne.s   loc_1F1D6
                tst.b   Obj_Control_Var_12(A0)                           ; $003E
                beq.s   loc_1F1FC
                subq.b  #$04, Obj_Control_Var_12(A0)                     ; $003E
                bra.s   loc_1F1E2
loc_1F1D6:
                cmpi.b  #$40, Obj_Control_Var_12(A0)                     ; $003E
                beq.s   loc_1F1FC
                addq.b  #$04, Obj_Control_Var_12(A0)                     ; $003E
loc_1F1E2:
                move.b  Obj_Control_Var_12(A0), D0                       ; $003E
                jsr     (CalcSine)                             ; loc_3282
                move.w  #$0400, D1
                muls.w  D1, D0
                swap.w  D0
                add.w   Obj_Control_Var_04(A0), D0                       ; $0030
                move.w  D0, Obj_Y(A0)                                    ; $000C
loc_1F1FC:
                rts         
;-------------------------------------------------------------------------------
Falling_Pillar_Mappings:                                       ; loc_1F1FE
                dc.w    loc_1F202-Falling_Pillar_Mappings
                dc.w    loc_1F214-Falling_Pillar_Mappings
loc_1F202:
                dc.w    $0002
                dc.l    $F80D6055, $602AFFE0
                dc.l    $F80D6055, $602A0000
loc_1F214:
                dc.w    $0009
                dc.l    $D005205D, $202EFFE0
                dc.l    $D005285D, $282E0010
                dc.l    $D00D2061, $2030FFF0
                dc.l    $E00D2069, $2034FFF0
                dc.l    $F00D2069, $2034FFF0
                dc.l    $000D2071, $2038FFF0
                dc.l    $100D2069, $2034FFF0
                dc.l    $200D2079, $203CFFF0
                dc.l    $30042081, $2040FFF0
;===============================================================================
; Object 0x82 -> Pilar cai ao pisar em cima na Neo Green Hill
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_01_To_ObjHitFloor:                                         ; loc_1F260
		jmp     (ObjHitFloor)                          ; loc_14204
Jmp_23_To_ModifySpriteAttr_2P:                                 ; loc_1F266
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_00_To_Object_HitCeiling:                                   ; loc_1F26C
		jmp     (Object_HitCeiling)                    ; loc_143C8
Jmp_14_To_SolidObject:                                         ; loc_1F272
		jmp     (SolidObject)                          ; loc_F344
Jmp_06_To_MarkObjGone_2:                                       ; loc_1F278
		jmp     (MarkObjGone_2)                        ; loc_D238
Jmp_0C_To_SpeedToPos:                                          ; loc_1F27E
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj83_Three_Rotating_Platforms:                             ; loc_1F284
;===============================================================================
; Object 0x83 - Três plataformas girando na Neo Green Hill
; [ Begin ]
;===============================================================================
; loc_1F284:
                btst    #$06, Obj_Flags(A0)                              ; $0001
                bne     loc_1F29C
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1F2A4(PC, D0), D1
                jmp     loc_1F2A4(PC, D1)
loc_1F29C:
                move.w  #$0280, D0
                bra     Jmp_02_To_DisplaySprite_Param          ; loc_1F500
;------------------------------------------------------------------------------- 
loc_1F2A4:
                dc.w    loc_1F2AA-loc_1F2A4
                dc.w    loc_1F3A8-loc_1F2A4
                dc.w    loc_1F4D6-loc_1F2A4             
;-------------------------------------------------------------------------------  
loc_1F2AA:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #NGHz_Swing_Platforms_Mappings, Obj_Map(A0) ; loc_8FB8, $0004
                move.w  #$0000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_24_To_ModifySpriteAttr_2P          ; loc_1F51E
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.w  Obj_Y(A0), Obj_Control_Var_06(A0)         ; $000C, $0032
                move.b  Obj_Subtype(A0), D1                              ; $0028
                move.b  D1, D0
                andi.w  #$000F, D1
                andi.b  #$F0, D0
                ext.w   D0
                asl.w   #$03, D0
                move.w  D0, Obj_Control_Var_02(A0)                       ; $002E
                move.b  Obj_Status(A0), D0                               ; $0022
                ror.b   #$02, D0
                andi.b  #$C0, D0
                move.b  D0, Obj_Angle(A0)                                ; $0026
                bsr     Jmp_10_To_SingleObjectLoad_2           ; loc_1F518
                bne.s   loc_1F364
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                bset    #$06, Obj_Flags(A1)                              ; $0001
                move.b  #$40, $000E(A1)
                moveq   #$08, D1
                move.b  D1, Obj_Ani_Boss_Cnt(A1)                         ; $000F
                subq.w  #$01, D1
                lea     Obj_Speed(A1), A2                                ; $0010
loc_1F338:
                addq.w  #$04, A2
                move.w  #$0001, (A2)+
                dbra    D1, loc_1F338
                move.b  #$01, Obj_Boss_Ani_Map(A1)                       ; $000B
                move.b  #$40, Obj_Inertia(A1)                            ; $0014
                bset    #$04, Obj_Flags(A1)                              ; $0001
                move.l  A1, Obj_Control_Var_08(A0)                       ; $0034
                bsr.s   loc_1F366
                move.l  A1, Obj_Control_Var_0C(A0)                       ; $0038
                bsr.s   loc_1F366
                move.l  A1, Obj_Control_Var_10(A0)                       ; $003C
loc_1F364:
                bra.s   loc_1F3A8
loc_1F366:
                bsr     Jmp_10_To_SingleObjectLoad_2           ; loc_1F518
                bne.s   loc_1F3A6
                addq.b  #$04, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.w  Obj_X(A0), Obj_Control_Var_04(A1)         ; $0008, $0030
                move.w  Obj_Y(A0), Obj_Control_Var_06(A1)         ; $000C, $0032
                move.w  Obj_X(A0), Obj_Control_Var_00(A1)         ; $0008, $002C
loc_1F3A6:
                rts     
;-------------------------------------------------------------------------------
loc_1F3A8:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                moveq   #$00, D0
                moveq   #$00, D1
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                add.w   D0, Obj_Angle(A0)                                ; $0026
                move.w  Obj_Control_Var_06(A0), D2                       ; $0032
                move.w  Obj_Control_Var_04(A0), D3                       ; $0030
                moveq   #$00, D6
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                lea     Obj_Speed(A1), A2                                ; $0010
                move.b  Obj_Angle(A0), D0                                ; $0026
                bsr     Jmp_05_To_CalcSine                     ; loc_1F524
                swap.w  D0
                swap.w  D1
                asr.l   #$04, D0
                asr.l   #$04, D1
                move.l  D0, D4
                move.l  D1, D5
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, Obj_X(A1)                                    ; $0008
                move.w  D4, Obj_Y(A1)                                    ; $000C
                move.l  D0, D4
                move.l  D1, D5
                add.l   D0, D4
                add.l   D1, D5
                moveq   #$01, D6
                bsr     loc_1F4B6
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, Obj_X(A0)                                    ; $0008
                move.w  D4, Obj_Y(A0)                                    ; $000C
                move.b  Obj_Angle(A0), D0                                ; $0026
                addi.b  #$55, D0
                bsr     Jmp_05_To_CalcSine                     ; loc_1F524
                swap.w  D0
                swap.w  D1
                asr.l   #$04, D0
                asr.l   #$04, D1
                move.l  D0, D4
                move.l  D1, D5
                moveq   #$02, D6
                bsr     loc_1F4B6
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.l  Obj_Control_Var_0C(A0), A1                       ; $0038
                move.w  D5, Obj_X(A1)                                    ; $0008
                move.w  D4, Obj_Y(A1)                                    ; $000C
                move.b  Obj_Angle(A0), D0                                ; $0026
                subi.b  #$55, D0
                bsr     Jmp_05_To_CalcSine                     ; loc_1F524
                swap.w  D0
                swap.w  D1
                asr.l   #$04, D0
                asr.l   #$04, D1
                move.l  D0, D4
                move.l  D1, D5
                moveq   #$02, D6
                bsr     loc_1F4B6
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                move.w  D5, Obj_X(A1)                                    ; $0008
                move.w  D4, Obj_Y(A1)                                    ; $000C
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                move.w  #$0008, D2
                move.w  #$0009, D3
                move.w  (A7)+, D4
                bsr     Jmp_02_To_Platform_Object              ; loc_1F52A
                tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
                beq.s   loc_1F492
                bra     Jmp_12_To_DisplaySprite                ; loc_1F506
loc_1F492:
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi     loc_1F4AA
                bra     Jmp_12_To_DisplaySprite                ; loc_1F506
loc_1F4AA:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                bsr     Jmp_03_To_DeleteObject_A1              ; loc_1F512
                bra     Jmp_13_To_DeleteObject                 ; loc_1F50C
loc_1F4B6:
                movem.l D4/D5, -(A7)
                swap.w  D4
                swap.w  D5
                add.w   D2, D4
                add.w   D3, D5
                move.w  D5, (A2)+
                move.w  D4, (A2)+
                movem.l (A7)+, D4/D5
                add.l   D0, D4
                add.l   D1, D5
                addq.w  #$02, A2
                dbra    D6, loc_1F4B6
                rts  
;-------------------------------------------------------------------------------
loc_1F4D6:
                moveq   #$00, D1
                move.b  Obj_Width(A0), D1                                ; $0019
                addi.w  #$000B, D1
                move.w  #$0008, D2
                move.w  #$0009, D3
                move.w  Obj_Control_Var_00(A0), D4                       ; $002C
                bsr     Jmp_02_To_Platform_Object              ; loc_1F52A
                move.w  Obj_X(A0), Obj_Control_Var_00(A0)         ; $0008, $002C
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                bra     Jmp_07_To_MarkObjGone_2                ; loc_1F530 
;===============================================================================
; Object 0x83 - Três plataformas girando na Neo Green Hill
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_02_To_DisplaySprite_Param:                                 ; loc_1F500
		jmp     (DisplaySprite_Param)                  ; loc_D35E
Jmp_12_To_DisplaySprite:                                       ; loc_1F506
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_13_To_DeleteObject:                                        ; loc_1F50C
		jmp     (DeleteObject)                         ; loc_D314
Jmp_03_To_DeleteObject_A1:                                     ; loc_1F512
		jmp     (DeleteObject_A1)                      ; loc_D316
Jmp_10_To_SingleObjectLoad_2:                                  ; loc_1F518
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_24_To_ModifySpriteAttr_2P:                                 ; loc_1F51E
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_05_To_CalcSine:                                            ; loc_1F524
		jmp     (CalcSine)                             ; loc_3282
Jmp_02_To_Platform_Object:                                     ; loc_1F52A
		jmp     (Platform_Object)                      ; loc_F82C
Jmp_07_To_MarkObjGone_2:                                       ; loc_1F530
		jmp     (MarkObjGone_2)                        ; loc_D238
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj3F_Fans:                                                 ; loc_1F538
;===============================================================================
; Object 0x3F - Ventiladores na Oil Ocean
; [ Begin ]
;===============================================================================  
; loc_1F538:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1F546(PC, D0), D1
                jmp     loc_1F546(PC, D1)
;-------------------------------------------------------------------------------
loc_1F546:
                dc.w    loc_1F54C-loc_1F546
                dc.w    loc_1F58A-loc_1F546
                dc.w    loc_1F678-loc_1F546         
;-------------------------------------------------------------------------------
loc_1F54C:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Vertical_Fan_Mappings, Obj_Map(A0) ; loc_1F77E, $0004
                move.w  #$6403, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_25_To_ModifySpriteAttr_2P          ; loc_1F8EA
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bpl.s   loc_1F58A
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Horizontal_Fan_Mappings, Obj_Map(A0) ; loc_1F830, $0004
                bra     loc_1F678            
;-------------------------------------------------------------------------------
loc_1F58A:
                btst    #$01, Obj_Subtype(A0)                            ; $0028
                bne.s   loc_1F5B2
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bpl.s   loc_1F5B2
                move.w  #$0000, Obj_Control_Var_08(A0)                   ; $0034
                move.w  #$0078, Obj_Control_Var_04(A0)                   ; $0030
                bchg    #00, Obj_Control_Var_06(A0)                      ; $0032
                beq.s   loc_1F5B2
                move.w  #$00B4, Obj_Control_Var_04(A0)                   ; $0030
loc_1F5B2:
                tst.b   Obj_Control_Var_06(A0)                           ; $0032
                beq     loc_1F5D6
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_1F618
                cmpi.w  #$0400, Obj_Control_Var_08(A0)                   ; $0034
                bcc.s   loc_1F618
                addi.w  #$002A, Obj_Control_Var_08(A0)                   ; $0034
                move.b  Obj_Control_Var_08(A0), Obj_Ani_Time(A0)  ; $001E, $0034
                bra.s   loc_1F5F2
loc_1F5D6:
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr     loc_1F61C
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr     loc_1F61C
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_1F618
                move.b  #$00, Obj_Ani_Time(A0)                           ; $001E
loc_1F5F2:
                addq.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
                cmpi.b  #$06, Obj_Ani_Frame(A0)                          ; $001B
                bcs.s   loc_1F604
                move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
loc_1F604:
                moveq   #$00, D0
                btst    #$00, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_1F610
                moveq   #$05, D0
loc_1F610:
                add.b   Obj_Ani_Frame(A0), D0                            ; $001B
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
loc_1F618:
                bra     Jmp_17_To_MarkObjGone                  ; loc_1F8E4
loc_1F61C:
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_1F62E
                neg.w   D0
loc_1F62E:
                addi.w  #$0050, D0
                cmpi.w  #$00F0, D0
                bcc.s   loc_1F676
                move.w  Obj_Y(A1), D1                                    ; $000C
                addi.w  #$0060, D1
                sub.w   Obj_Y(A0), D1                                    ; $000C
                bcs.s   loc_1F676
                cmpi.w  #$0070, D1
                bcc.s   loc_1F676
                subi.w  #$0050, D0
                bcc.s   loc_1F656
                not.w   D0
                add.w   D0, D0
loc_1F656:
                addi.w  #$0060, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_1F664
                neg.w   D0
loc_1F664:
                neg.w   D0
                asr.w   #$04, D0
                btst    #$00, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_1F672
                neg.w   D0
loc_1F672:
                add.w   D0, Obj_X(A1)                                    ; $0008
loc_1F676:
                rts 
;-------------------------------------------------------------------------------
loc_1F678:
                btst    #$01, Obj_Subtype(A0)                            ; $0028
                bne.s   loc_1F6A0
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bpl.s   loc_1F6A0
                move.w  #$0000, Obj_Control_Var_08(A0)                   ; $0034
                move.w  #$0078, Obj_Control_Var_04(A0)                   ; $0030
                bchg    #00, Obj_Control_Var_06(A0)                      ; $0032
                beq.s   loc_1F6A0
                move.w  #$00B4, Obj_Control_Var_04(A0)                   ; $0030
loc_1F6A0:
                tst.b   Obj_Control_Var_06(A0)                           ; $0032
                beq     loc_1F6C4
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_1F706
                cmpi.w  #$0400, Obj_Control_Var_08(A0)                   ; $0034
                bcc.s   loc_1F706
                addi.w  #$002A, Obj_Control_Var_08(A0)                   ; $0034
                move.b  Obj_Control_Var_08(A0), Obj_Ani_Time(A0)  ; $001E, $0034
                bra.s   loc_1F6E0
loc_1F6C4:
                lea     (Player_One).w, A1                           ; $FFFFB000
                bsr     loc_1F70A
                lea     (Player_Two).w, A1                           ; $FFFFB040
                bsr     loc_1F70A
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_1F706
                move.b  #$00, Obj_Ani_Time(A0)                           ; $001E
loc_1F6E0:
                addq.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
                cmpi.b  #$06, Obj_Ani_Frame(A0)                          ; $001B
                bcs.s   loc_1F6F2
                move.b  #$00, Obj_Ani_Frame(A0)                          ; $001B
loc_1F6F2:
                moveq   #$00, D0
                btst    #$00, Obj_Subtype(A0)                            ; $0028
                beq.s   loc_1F6FE
                moveq   #$05, D0
loc_1F6FE:
                add.b   Obj_Ani_Frame(A0), D0                            ; $001B
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
loc_1F706:
                bra     Jmp_17_To_MarkObjGone                  ; loc_1F8E4
loc_1F70A:
                move.w  Obj_X(A1), D0                                    ; $0008
                sub.w   Obj_X(A0), D0                                    ; $0008
                addi.w  #$0040, D0
                cmpi.w  #$0080, D0
                bcc.s   loc_1F77C
                moveq   #$00, D1
                move.b  ($FFFFFE74).w, D1
                add.w   Obj_Y(A1), D1                                    ; $000C
                addi.w  #$0060, D1
                sub.w   Obj_Y(A0), D1                                    ; $000C
                bcs.s   loc_1F77C
                cmpi.w  #$0090, D1
                bcc.s   loc_1F77C
                subi.w  #$0060, D1
                bcs.s   loc_1F740
                not.w   D1
                add.w   D1, D1
loc_1F740:
                addi.w  #$0060, D1
                neg.w   D1
                asr.w   #$04, D1
                add.w   D1, Obj_Y(A1)                                    ; $000C
                bset    #$01, Obj_Status(A1)                             ; $0022
                move.w  #$0000, Obj_Speed_Y(A1)                          ; $0012
                move.w  #$0001, Obj_Inertia(A1)                          ; $0014
                tst.b   Obj_Flip_Angle(A1)                               ; $0027
                bne.s   loc_1F77C
                move.b  #$01, Obj_Flip_Angle(A1)                         ; $0027
                move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$7F, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$08, Obj_Control_Var_01(A1)                     ; $002D
loc_1F77C:
                rts   
;-------------------------------------------------------------------------------
Vertical_Fan_Mappings:                                         ; loc_1F77E
                dc.w    loc_1F794-Vertical_Fan_Mappings
                dc.w    loc_1F7AE-Vertical_Fan_Mappings
                dc.w    loc_1F7C8-Vertical_Fan_Mappings
                dc.w    loc_1F7E2-Vertical_Fan_Mappings
                dc.w    loc_1F7FC-Vertical_Fan_Mappings
                dc.w    loc_1F816-Vertical_Fan_Mappings
                dc.w    loc_1F7FC-Vertical_Fan_Mappings
                dc.w    loc_1F7E2-Vertical_Fan_Mappings
                dc.w    loc_1F7C8-Vertical_Fan_Mappings
                dc.w    loc_1F7AE-Vertical_Fan_Mappings
                dc.w    loc_1F794-Vertical_Fan_Mappings
loc_1F794:
                dc.w    $0003
                dc.l    $F3020000, $0000FFF4
                dc.l    $F0050007, $0003FFFC
                dc.l    $00051007, $1003FFFC
loc_1F7AE:
                dc.w    $0003
                dc.l    $F5021000, $1000FFF4
                dc.l    $F0050007, $0003FFFC
                dc.l    $00051007, $1003FFFC
loc_1F7C8:
                dc.w    $0003
                dc.l    $F0030003, $0001FFF4
                dc.l    $F0050007, $0003FFFC
                dc.l    $00051007, $1003FFFC
loc_1F7E2:
                dc.w    $0003
                dc.l    $F3020000, $0000FFF4
                dc.l    $F005000B, $0005FFFC
                dc.l    $0005100B, $1005FFFC
loc_1F7FC:
                dc.w    $0003
                dc.l    $F5021000, $1000FFF4
                dc.l    $F005000B, $0005FFFC
                dc.l    $0005100B, $1005FFFC
loc_1F816:
                dc.w    $0003
                dc.l    $F0030003, $0001FFF4
                dc.l    $F005000B, $0005FFFC
                dc.l    $0005100B, $1005FFFC  
;-------------------------------------------------------------------------------
Horizontal_Fan_Mappings:                                       ; loc_1F830
                dc.w    loc_1F846-Horizontal_Fan_Mappings
                dc.w    loc_1F860-Horizontal_Fan_Mappings
                dc.w    loc_1F87A-Horizontal_Fan_Mappings
                dc.w    loc_1F894-Horizontal_Fan_Mappings
                dc.w    loc_1F8AE-Horizontal_Fan_Mappings
                dc.w    loc_1F8C8-Horizontal_Fan_Mappings
                dc.w    loc_1F8AE-Horizontal_Fan_Mappings
                dc.w    loc_1F894-Horizontal_Fan_Mappings
                dc.w    loc_1F87A-Horizontal_Fan_Mappings
                dc.w    loc_1F860-Horizontal_Fan_Mappings
                dc.w    loc_1F846-Horizontal_Fan_Mappings
loc_1F846:
                dc.w    $0003
                dc.l    $F408000F, $0007FFF3
                dc.l    $FC050016, $000BFFF0
                dc.l    $FC050816, $080B0000
loc_1F860:
                dc.w    $0003
                dc.l    $F408080F, $0807FFF5
                dc.l    $FC050016, $000BFFF0
                dc.l    $FC050816, $080B0000
loc_1F87A:
                dc.w    $0003
                dc.l    $F40C0012, $0009FFF0
                dc.l    $FC050016, $000BFFF0
                dc.l    $FC050816, $080B0000
loc_1F894:
                dc.w    $0003
                dc.l    $F408000F, $0007FFF3
                dc.l    $FC05001A, $000DFFF0
                dc.l    $FC05081A, $080D0000
loc_1F8AE:
                dc.w    $0003
                dc.l    $F408080F, $0807FFF5
                dc.l    $FC05001A, $000DFFF0
                dc.l    $FC05081A, $080D0000
loc_1F8C8:
                dc.w    $0003
                dc.l    $F40C0012, $0009FFF0
                dc.l    $FC05001A, $000DFFF0
                dc.l    $FC05081A, $080D0000  
;===============================================================================
; Object 0x3F - Ventiladores na Oil Ocean
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_17_To_MarkObjGone:                                         ; loc_1F8E4
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_25_To_ModifySpriteAttr_2P:                                 ; loc_1F8EA
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
;-------------------------------------------------------------------------------
Obj_Spinning_Ball:                                             ; loc_1F8F0
;===============================================================================
; Object - Inimigo "Spinning Ball"
; [ Begin ]
;===============================================================================
; loc_1F8F0:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1F8FE(PC, D0), D1
                jmp     loc_1F8FE(PC, D1)
;-------------------------------------------------------------------------------
loc_1F8FE:
                dc.w    loc_1F902-loc_1F8FE
                dc.w    loc_1F950-loc_1F8FE  
;-------------------------------------------------------------------------------
loc_1F902:
                move.l  #Spinning_Ball_Mappings, Obj_Map(A0) ; loc_1F9C8, $0004
                move.w  #$04C6, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_26_To_ModifySpriteAttr_2P          ; loc_1FA04
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$14, Obj_Width(A0)                              ; $0019
                move.b  #$0C, Obj_Height_2(A0)                           ; $0016
                move.b  #$08, Obj_Width_2(A0)                            ; $0017
                move.b  #$0C, Obj_Col_Flags(A0)                          ; $0020
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$40, Obj_Angle(A0)                              ; $0026
                move.w  #$FF00, Obj_Speed(A0)                            ; $0010
                move.w  #$0100, Obj_Speed_Y(A0)                          ; $0012
                rts                                                            
;-------------------------------------------------------------------------------
loc_1F950:
                bsr     Jmp_01_To_ObjectFall                   ; loc_1FA10
                bsr     loc_1F966
                lea     (Spinning_Ball_Animate_Data), A1       ; loc_1F9C0
                bsr     Jmp_05_To_AnimateSprite                ; loc_1F9F2
                bra     Jmp_18_To_MarkObjGone                  ; loc_1F9EC
loc_1F966:
                moveq   #$00, D3
                move.b  Obj_Width(A0), D3                                ; $0019
                tst.w   Obj_Speed(A0)                                    ; $0010
                bpl.s   loc_1F988
                neg.w   D3
                bsr     Jmp_00_To_Object_HitWall_Left          ; loc_1F9FE
                tst.w   D1
                bmi.s   loc_1F99E
                move.w  Obj_X(A0), D1                                    ; $0008
                subi.w  #$000C, D1
                bgt.s   loc_1F9AC
                bra.s   loc_1F99E
loc_1F988:
                bsr     Jmp_01_To_Object_HitWall_Right         ; loc_1FA0A
                tst.w   D1
                bmi.s   loc_1F99E
                move.w  (Sonic_Level_Limits_Max_X).w, D1             ; $FFFFEECA
                subi.w  #$000C, D1
                sub.w   Obj_X(A0), D1                                    ; $0008
                bgt.s   loc_1F9AC
loc_1F99E:
                add.w   D1, Obj_X(A0)                                    ; $0008
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Status(A0)                              ; $0022
loc_1F9AC:
                bsr     Jmp_02_To_ObjHitFloor                  ; loc_1F9F8
                tst.w   D1
                bpl.s   loc_1F9BE
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  #$FA00, Obj_Speed_Y(A0)                          ; $0012
loc_1F9BE:
                rts                  
;-------------------------------------------------------------------------------
Spinning_Ball_Animate_Data:                                    ; loc_1F9C0
                dc.w    loc_1F9C2-Spinning_Ball_Animate_Data
loc_1F9C2:
                dc.b    $03, $02, $01, $00, $FF, $00     
;-------------------------------------------------------------------------------
Spinning_Ball_Mappings:                                        ; loc_1F9C8
                dc.w    loc_1F9CE-Spinning_Ball_Mappings
                dc.w    loc_1F9D8-Spinning_Ball_Mappings
                dc.w    loc_1F9E2-Spinning_Ball_Mappings
loc_1F9CE:
                dc.w    $0001
                dc.l    $F40A0000, $0000FFF4
loc_1F9D8:
                dc.w    $0001
                dc.l    $F40A0009, $0004FFF4
loc_1F9E2:
                dc.w    $0001
                dc.l    $F40A0012, $0009FFF4
;===============================================================================
; Object - Inimigo "Spinning Ball"
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_18_To_MarkObjGone:                                         ; loc_1F9EC
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_05_To_AnimateSprite:                                       ; loc_1F9F2
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_02_To_ObjHitFloor:                                         ; loc_1F9F8
		jmp     (ObjHitFloor)                          ; loc_14204
Jmp_00_To_Object_HitWall_Left:                                 ; loc_1F9FE
		jmp     (Object_HitWall_Left)                  ; loc_14490
Jmp_26_To_ModifySpriteAttr_2P:                                 ; loc_1FA04
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_01_To_Object_HitWall_Right:                                ; loc_1FA0A
		jmp     (Object_HitWall_Right)                 ; loc_1430A
Jmp_01_To_ObjectFall:                                          ; loc_1FA10
		jmp     (ObjectFall)                           ; loc_D1AE
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj4C_Batbot:                                               ; loc_1FA18
;===============================================================================
; Object 0x4C - Batbot - Bat enemy from Hidden Palace
; [ Begin ]
;===============================================================================
; loc_1FA18:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1FA26(PC, D0), D1
                jmp     loc_1FA26(PC, D1)
;-------------------------------------------------------------------------------
loc_1FA26:
                dc.w    loc_1FA2C-loc_1FA26
                dc.w    loc_1FA6A-loc_1FA26
                dc.w    loc_1FAD8-loc_1FA26
;-------------------------------------------------------------------------------
loc_1FA2C:
                move.l  #Batbot_Mappings, Obj_Map(A0)   ; loc_1FCB6, $0004
                move.w  #$2530, Obj_Art_VRAM(A0)		; wrong palette line, should be $0530 instead of $2530
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$0A, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$10, Obj_Height_2(A0)                           ; $0016
                move.b  #$08, Obj_Width_2(A0)                            ; $0017
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  Obj_Y(A0), Obj_Control_Var_02(A0)         ; $000C, $002E
                rts
;-------------------------------------------------------------------------------
loc_1FA6A:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_1FA8A(PC, D0), D1
                jsr     loc_1FA8A(PC, D1)
                bsr     loc_1FA90
                lea     (Batbot_Animate_Data), A1              ; loc_1FC82
                bsr     Jmp_06_To_AnimateSprite                ; loc_1FE92
                bra     Jmp_19_To_MarkObjGone                  ; loc_1FE8C
;-------------------------------------------------------------------------------
loc_1FA8A:
                dc.w    loc_1FBF6-loc_1FA8A
                dc.w    loc_1FC2E-loc_1FA8A
                dc.w    loc_1FC3A-loc_1FA8A
;-------------------------------------------------------------------------------
loc_1FA90:
                move.b  Obj_Control_Var_13(A0), D0                       ; $003F
                jsr     (CalcSine)                             ; loc_3282
                asr.w   #$06, D0
                add.w   Obj_Control_Var_02(A0), D0                       ; $002E
                move.w  D0, Obj_Y(A0)                                    ; $000C
                addq.b  #$04, Obj_Control_Var_13(A0)                     ; $003F
                rts
;-------------------------------------------------------------------------------
loc_1FAAA:
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   ($FFFFB008).w, D0
                cmpi.w  #$0080, D0
                bgt.s   loc_1FAD6
                cmpi.w  #$FF80, D0
                blt.s   loc_1FAD6
                move.b  #$04, Obj_Routine_2(A0)                          ; $0025
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0008, Obj_Timer(A0)                            ; $002A
                move.b  #$00, Obj_Control_Var_12(A0)                     ; $003E
loc_1FAD6:
                rts
;-------------------------------------------------------------------------------
loc_1FAD8:
                bsr     loc_1FBD6
                bsr     loc_1FB78
                bsr     loc_1FAF8
                bsr     Jmp_0D_To_SpeedToPos                   ; loc_1FE98
                lea     (Batbot_Animate_Data), A1              ; loc_1FC82
                bsr     Jmp_06_To_AnimateSprite                ; loc_1FE92
                bra     Jmp_19_To_MarkObjGone                  ; loc_1FE8C
;-------------------------------------------------------------------------------
; loc_1FAF6:
                rts
;-------------------------------------------------------------------------------
loc_1FAF8:
                tst.b   Obj_Control_Var_11(A0)                           ; $003D
                beq.s   loc_1FB0A
                bset    #$00, Obj_Flags(A0)                              ; $0001
                bset    #$00, Obj_Status(A0)                             ; $0022
loc_1FB0A:
                rts
;-------------------------------------------------------------------------------
loc_1FB0C:
                subi.w  #$0001, Obj_Control_Var_00(A0)                   ; $002C
                bpl.s   loc_1FB56
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                cmpi.w  #$0060, D0
                bgt.s   loc_1FB58
                cmpi.w  #$FFA0, D0
                blt.s   loc_1FB58
                tst.w   D0
                bpl.s   loc_1FB30
                st      Obj_Control_Var_11(A0)                           ; $003D
loc_1FB30:
                move.b  #$40, Obj_Control_Var_13(A0)                     ; $003F
                move.w  #$0400, Obj_Inertia(A0)                          ; $0014
                move.b  #$04, Obj_Routine(A0)                            ; $0024
                move.b  #$03, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$000C, Obj_Timer(A0)                            ; $002A
                move.b  #$01, Obj_Control_Var_12(A0)                     ; $003E
                moveq   #$00, D0
loc_1FB56:
                rts
loc_1FB58:
                cmpi.w  #$0080, D0
                bgt.s   loc_1FB64
                cmpi.w  #$FF80, D0
                bgt.s   loc_1FB56
loc_1FB64:
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$00, Obj_Routine_2(A0)                          ; $0025
                move.w  #$0018, Obj_Timer(A0)                            ; $002A
                rts
loc_1FB78:
                tst.b   Obj_Control_Var_11(A0)                           ; $003D
                bne.s   loc_1FB92
                moveq   #$00, D0
                move.b  Obj_Control_Var_13(A0), D0                       ; $003F
                cmpi.w  #$00C0, D0
                bge.s   loc_1FBA6
                addq.b  #$02, D0
                move.b  D0, Obj_Control_Var_13(A0)                       ; $003F
                rts
loc_1FB92:
                moveq   #$00, D0
                move.b  Obj_Control_Var_13(A0), D0                       ; $003F
                cmpi.w  #$00C0, D0
                beq.s   loc_1FBA6
                subq.b  #$02, D0
                move.b  D0, Obj_Control_Var_13(A0)                       ; $003F
                rts
loc_1FBA6:
                sf      Obj_Control_Var_11(A0)                           ; $003D
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Routine_2(A0)                          ; $0025
                move.w  #$0018, Obj_Timer(A0)                            ; $002A
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                bclr    #$00, Obj_Flags(A0)                              ; $0001
                bclr    #$00, Obj_Status(A0)                             ; $0022
                rts
loc_1FBD6:
                move.b  Obj_Control_Var_13(A0), D0                       ; $003F
                jsr     (CalcSine)                             ; loc_3282
                muls.w  Obj_Inertia(A0), D1                              ; $0014
                asr.l   #$08, D1
                move.w  D1, Obj_Speed(A0)                                ; $0010
                muls.w  Obj_Inertia(A0), D0                              ; $0014
                asr.l   #$08, D0
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
                rts
;-------------------------------------------------------------------------------
loc_1FBF6:
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bpl.s   loc_1FC2C
                bsr     loc_1FAAA
                beq.s   loc_1FC2C
                jsr     (PseudoRandomNumber)                   ; loc_325C
                andi.b  #$FF, D0
                bne.s   loc_1FC2C
                move.w  #$0018, Obj_Timer(A0)                            ; $002A
                move.w  #$001E, Obj_Control_Var_00(A0)                   ; $002C
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$00, Obj_Control_Var_12(A0)                     ; $003E
loc_1FC2C:
                rts
;-------------------------------------------------------------------------------
loc_1FC2E:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bpl.s   loc_1FC38
                subq.b  #$02, Obj_Routine_2(A0)                          ; $0025
loc_1FC38:
                rts
;-------------------------------------------------------------------------------
loc_1FC3A:
                bsr     loc_1FB0C
                beq.s   loc_1FC80
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bne.s   loc_1FC80
                move.b  Obj_Control_Var_12(A0), D0                       ; $003E
                beq.s   loc_1FC68
                move.b  #$00, Obj_Control_Var_12(A0)                     ; $003E
                move.w  #$0008, Obj_Timer(A0)                            ; $002A
                bset    #$00, Obj_Flags(A0)                              ; $0001
                bset    #$00, Obj_Status(A0)                             ; $0022
                rts
loc_1FC68:
                move.b  #$01, Obj_Control_Var_12(A0)                     ; $003E
                move.w  #$000C, Obj_Timer(A0)                            ; $002A
                bclr    #$00, Obj_Flags(A0)                              ; $0001
                bclr    #$00, Obj_Status(A0)                             ; $0022
loc_1FC80:
                rts
;-------------------------------------------------------------------------------
Batbot_Animate_Data:                                           ; loc_1FC82
                dc.w    loc_1FC8A-Batbot_Animate_Data
                dc.w    loc_1FC8E-Batbot_Animate_Data
                dc.w    loc_1FC9D-Batbot_Animate_Data
                dc.w    loc_1FCAE-Batbot_Animate_Data
loc_1FC8A:
                dc.b    $01, $00, $05, $FF
loc_1FC8E:
                dc.b    $01, $01, $06, $01, $06, $02, $07, $02
                dc.b    $07, $01, $06, $01, $06, $FD, $00
loc_1FC9D:
                dc.b    $01, $01, $06, $01, $06, $02, $07, $03
                dc.b    $08, $04, $09, $04, $09, $03, $08, $FE
                dc.b    $0A
loc_1FCAE:
                dc.b    $03, $0A, $0B, $0C, $0D, $0E, $FF, $00
;-------------------------------------------------------------------------------
Batbot_Mappings:                                               ; loc_1FCB6
                include 'mappings/sprite/obj4C.asm'
;===============================================================================
; Object 0x4C - Batbot - Bat enemy from Hidden Palace
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		dc.w    $0000
Jmp_19_To_MarkObjGone:                                         ; loc_1FE8C
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_06_To_AnimateSprite:                                       ; loc_1FE92
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_0D_To_SpeedToPos:                                          ; loc_1FE98
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------

;===============================================================================
; Object 0x52 - Piranha
; [ Begin ] 
;===============================================================================
; loc_1FEA0:
Previus_Build_Obj52_Piranha: ; Object 0x52 in Sonic 2 Beta
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_1FEAE(PC, D0), D1
                jmp     loc_1FEAE(PC, D1)
;-------------------------------------------------------------------------------
loc_1FEAE:
                dc.w    loc_1FEB4-loc_1FEAE
                dc.w    loc_1FF2C-loc_1FEAE
                dc.w    loc_1FF9C-loc_1FEAE      
;-------------------------------------------------------------------------------
loc_1FEB4:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Piranha_Mappings, Obj_Map(A0)  ; loc_200B2, $0004
                move.w  #$2530, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$0A, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                move.b  D0, D1
                andi.w  #$00F0, D1
                add.w   D1, D1
                add.w   D1, D1
                move.w  D1, Obj_Control_Var_0E(A0)                       ; $003A
                move.w  D1, Obj_Control_Var_10(A0)                       ; $003C
                andi.w  #$000F, D0
                lsl.w   #$06, D0
                subq.w  #$01, D0
                move.w  D0, Obj_Control_Var_04(A0)                       ; $0030
                move.w  D0, Obj_Control_Var_06(A0)                       ; $0032
                move.w  #$FF80, Obj_Speed(A0)                            ; $0010
                move.l  #$FFFB8000, Obj_Control_Var_0A(A0)               ; $0036
                move.w  Obj_Y(A0), Obj_Control_Var_08(A0)         ; $000C, $0034
                bset    #$06, Obj_Status(A0)                             ; $0022
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_1FF2C
                neg.w   Obj_Speed(A0)                                    ; $0010
;-------------------------------------------------------------------------------
loc_1FF2C:
                cmpi.w  #$FFFF, Obj_Control_Var_0E(A0)                   ; $003A
                beq.s   loc_1FF38
                subq.w  #$01, Obj_Control_Var_0E(A0)                     ; $003A
loc_1FF38:
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bpl.s   loc_1FF5A
                move.w  Obj_Control_Var_06(A0), Obj_Control_Var_04(A0) ; $0030, $0032
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Status(A0)                              ; $0022
                move.b  #$01, Obj_Ani_Flag(A0)                           ; $001D
                move.w  Obj_Control_Var_10(A0), Obj_Control_Var_0E(A0) ; $003A, $003C
loc_1FF5A:
                lea     (Piranha_Animate_Data), A1             ; loc_2009A
                bsr     Jmp_07_To_AnimateSprite                ; loc_200EA
                bsr     Jmp_0E_To_SpeedToPos                   ; loc_200F0
                tst.w   Obj_Control_Var_0E(A0)                           ; $003A
                bgt     Jmp_1A_To_MarkObjGone                  ; loc_200E4
                cmpi.w  #$FFFF, Obj_Control_Var_0E(A0)                   ; $003A
                beq     Jmp_1A_To_MarkObjGone                  ; loc_200E4
                move.l  #$FFFB8000, Obj_Control_Var_0A(A0)               ; $0036
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$FFFF, Obj_Control_Var_0E(A0)                   ; $003A
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0001, Obj_Control_Var_12(A0)                   ; $003E
                bra     Jmp_1A_To_MarkObjGone                  ; loc_200E4
;-------------------------------------------------------------------------------
loc_1FF9C:
                move.w  #$0390, (Water_Level).w                      ; $FFFFF646
                lea     (Piranha_Animate_Data), A1             ; loc_2009A
                bsr     Jmp_07_To_AnimateSprite                ; loc_200EA
                move.w  Obj_Control_Var_12(A0), D0                       ; $003E
                sub.w   D0, Obj_Control_Var_04(A0)                       ; $0030
                bsr     loc_2004C
                tst.l   Obj_Control_Var_0A(A0)                           ; $0036
                bpl.s   loc_1FFF4
                move.w  Obj_Y(A0), D0                                    ; $000C
                cmp.w   (Water_Level).w, D0                          ; $FFFFF646
                bgt     Jmp_1A_To_MarkObjGone                  ; loc_200E4
                move.b  #$03, Obj_Ani_Number(A0)                         ; $001C
                bclr    #$06, Obj_Status(A0)                             ; $0022
                tst.b   Obj_Timer(A0)                                    ; $002A
                bne     Jmp_1A_To_MarkObjGone                  ; loc_200E4
                move.w  Obj_Speed(A0), D0                                ; $0010
                asl.w   #$01, D0
                move.w  D0, Obj_Speed(A0)                                ; $0010
                addq.w  #$01, Obj_Control_Var_12(A0)                     ; $003E
                st      Obj_Timer(A0)                                    ; $002A
                bra     Jmp_1A_To_MarkObjGone                  ; loc_200E4
loc_1FFF4:
                move.w  Obj_Y(A0), D0                                    ; $000C
                cmp.w   (Water_Level).w, D0                          ; $FFFFF646
                bgt.s   loc_20008
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                bra     Jmp_1A_To_MarkObjGone                  ; loc_200E4
loc_20008:
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                bset    #$06, Obj_Status(A0)                             ; $0022
                bne.s   loc_20022
                move.l  Obj_Control_Var_0A(A0), D0                       ; $0036
                asr.l   #$01, D0
                move.l  D0, Obj_Control_Var_0A(A0)                       ; $0036
                nop
loc_20022:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bgt     Jmp_1A_To_MarkObjGone                  ; loc_200E4
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                tst.b   Obj_Timer(A0)                                    ; $002A
                beq     Jmp_1A_To_MarkObjGone                  ; loc_200E4
                move.w  Obj_Speed(A0), D0                                ; $0010
                asr.w   #$01, D0
                move.w  D0, Obj_Speed(A0)                                ; $0010
                sf      Obj_Timer(A0)                                    ; $002A
                bra     Jmp_1A_To_MarkObjGone                  ; loc_200E4
loc_2004C:
                move.l  Obj_X(A0), D2                                    ; $0008
                move.l  Obj_Y(A0), D3                                    ; $000C
                move.w  Obj_Speed(A0), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                add.l   Obj_Control_Var_0A(A0), D3                       ; $0036
                btst    #$06, Obj_Status(A0)                             ; $0022
                beq.s   loc_20088
                tst.l   Obj_Control_Var_0A(A0)                           ; $0036
                bpl.s   loc_20080
                addi.l  #$00001000, Obj_Control_Var_0A(A0)               ; $0036
                addi.l  #$00001000, Obj_Control_Var_0A(A0)               ; $0036
loc_20080:
                subi.l  #$00001000, Obj_Control_Var_0A(A0)               ; $0036
loc_20088:
                addi.l  #$00001800, Obj_Control_Var_0A(A0)               ; $0036
                move.l  D2, Obj_X(A0)                                    ; $0008
                move.l  D3, Obj_Y(A0)                                    ; $000C
                rts           
;-------------------------------------------------------------------------------
Piranha_Animate_Data:                                          ; loc_2009A
                dc.w    loc_200A2-Piranha_Animate_Data
                dc.w    loc_200A6-Piranha_Animate_Data
                dc.w    loc_200AA-Piranha_Animate_Data
                dc.w    loc_200AE-Piranha_Animate_Data
loc_200A2:
                dc.b    $0E, $00, $01, $FF
loc_200A6:
                dc.b    $03, $00, $01, $FF
loc_200AA:
                dc.b    $0E, $02, $03, $FF
loc_200AE:
                dc.b    $03, $02, $03, $FF    
;-------------------------------------------------------------------------------
Piranha_Mappings:                                              ; loc_200B2
                dc.w    loc_200BA-Piranha_Mappings
                dc.w    loc_200C4-Piranha_Mappings
                dc.w    loc_200CE-Piranha_Mappings
                dc.w    loc_200D8-Piranha_Mappings
loc_200BA:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_200C4:
                dc.w    $0001
                dc.l    $F00F0010, $0008FFF0
loc_200CE:
                dc.w    $0001
                dc.l    $F00F0020, $0010FFF0
loc_200D8:
                dc.w    $0001
                dc.l    $F00F0030, $0018FFF0
;===============================================================================
; Object 0x52 - Piranha
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		dc.w    $0000
Jmp_1A_To_MarkObjGone:                                         ; loc_200E4
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_07_To_AnimateSprite:                                       ; loc_200EA
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_0E_To_SpeedToPos:                                          ; loc_200F0
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj56_GHz_Boss:                                             ; loc_200F8
;===============================================================================
; Object 0x56 - Green Hill Boss
; [ Begin ]
;===============================================================================   
; loc_200F8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_20106(PC, D0), D1
                jmp     loc_20106(PC, D1)
;-------------------------------------------------------------------------------
loc_20106:
                dc.w    loc_20110-loc_20106
                dc.w    loc_2021A-loc_20106
                dc.w    loc_20258-loc_20106
                dc.w    loc_2028A-loc_20106
                dc.w    loc_2032C-loc_20106   
;-------------------------------------------------------------------------------
loc_20110:
                move.l  #GHz_Boss_Mappings_03, Obj_Map(A0) ; loc_20490, $0004
                move.w  #$23A0, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$08, Obj_Boss_Hit(A0)                           ; $0021
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  Obj_X(A0), Obj_Control_Var_04(A0)         ; $0008, $0030
                move.w  Obj_Y(A0), Obj_Control_Var_0C(A0)         ; $000C, $0038
                bsr     Jmp_27_To_ModifySpriteAttr_2P          ; loc_2050E
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne     loc_20200
                move.b  #$56, Obj_Id(A1)                                 ; $0000
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.l  A1, Obj_Control_Var_08(A0)                       ; $0034
                move.l  #GHz_Boss_Mappings_03, Obj_Map(A1) ; loc_20490, $0004
                move.w  #$03A0, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addq.b  #$04, Obj_Routine(A1)                            ; $0024
                move.b  #$01, Obj_Ani_Number(A1)                         ; $001C
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                bsr     Jmp_03_To_ModifySpriteAttr_2P_A1       ; loc_20508
                tst.b   Obj_Subtype(A0)                                  ; $0028
                bmi.s   loc_20200
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne.s   loc_20200
                move.b  #$56, Obj_Id(A1)                                 ; $0000
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.l  #GHz_Boss_Mappings, Obj_Map(A1) ; loc_203E8, $0004
                move.w  #$04D0, Obj_Art_VRAM(A1)                         ; $0002
                bsr     Jmp_03_To_ModifySpriteAttr_2P_A1       ; loc_20508
                move.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addq.b  #$06, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
loc_20200:
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$007F, D0
                add.w   D0, D0
                add.w   D0, D0
                move.l  loc_20212(PC, D0), A1
                jmp     (A1)  
;-------------------------------------------------------------------------------
loc_20212:
                dc.l    loc_2385E
                dc.l    Obj56_GHz_Boss_Sub_4                ; loc_20BFC    
;-------------------------------------------------------------------------------
loc_2021A:
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$007F, D0
                add.w   D0, D0
                add.w   D0, D0
                move.l  loc_20250(PC, D0), A1
                jsr     (A1)
                lea     (GHz_Boss_Animate_Data), A1            ; loc_20484
                jsr     (AnimateSprite)                        ; loc_D372
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$03, D0
                andi.b  #$FC, Obj_Flags(A0)                              ; $0001
                or.b    D0, Obj_Flags(A0)                                ; $0001
                jmp     (DisplaySprite)                        ; loc_D322
;-------------------------------------------------------------------------------
loc_20250:
                dc.l    loc_2393E
                dc.l    Obj56_GHz_Boss_Sub_2                ; loc_20514                          
;-------------------------------------------------------------------------------
loc_20258:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.l  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                move.l  #GHz_Boss_Animate_Data, A1             ; loc_20484
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322
;-------------------------------------------------------------------------------
loc_20286:
                dc.b    $00, $FF, $01, $00                                    
;-------------------------------------------------------------------------------
loc_2028A:
                btst    #$07, Obj_Status(A0)                             ; $0022
                bne.s   loc_202DE
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.l  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_202D2
                move.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                move.b  Obj_Timer(A0), D0                                ; $002A
                addq.b  #$01, D0
                cmpi.b  #$02, D0
                ble.s   loc_202C8
                moveq   #$00, D0
loc_202C8:
                move.b  loc_20286(PC, D0), Obj_Map_Id(A0)          ; $001A
                move.b  D0, Obj_Timer(A0)                                ; $002A
loc_202D2:
                cmpi.b  #$FF, Obj_Map_Id(A0)                             ; $001A
                bne     Jmp_13_To_DisplaySprite                ; loc_204FC
                rts
loc_202DE:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                btst    #$06, Obj_Control_Var_02(A1)                     ; $002E
                bne.s   loc_202EC
                rts
loc_202EC:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #GHz_Boss_Mappings_01, Obj_Map(A0) ; loc_20400, $0004
                move.w  #$04D8, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_27_To_ModifySpriteAttr_2P          ; loc_2050E
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.b  #$05, Obj_Ani_Time(A0)                           ; $001E
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                addi.w  #$0004, Obj_Y(A0)                                ; $000C
                subi.w  #$0028, Obj_X(A0)                                ; $0008
                rts
loc_2032C:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_2036E
                move.b  #$05, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$04, Obj_Map_Id(A0)                             ; $001A
                bne     loc_2036E
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.b  (A1), D0
                beq     Jmp_14_To_DeleteObject                 ; loc_20502
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                addi.w  #$0004, Obj_Y(A0)                                ; $000C
                subi.w  #$0028, Obj_X(A0)                                ; $0008
loc_2036E:
                bra     Jmp_13_To_DisplaySprite                ; loc_204FC     
;===============================================================================
; Object 0x56 - Green Hill Boss
; [ Begin ]
;===============================================================================
Obj58_GHz_Boss:                                             ; loc_20372
;===============================================================================
; Object 0x58 - Robotnik na Green Hill
; [ Begin ]
;===============================================================================   
; loc_20372:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_20380(PC, D0), D1
                jmp     loc_20380(PC, D1)                           
;-------------------------------------------------------------------------------
loc_20380:
                dc.w    loc_20384-loc_20380
                dc.w    loc_203CA-loc_20380      
;-------------------------------------------------------------------------------
loc_20384:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #GHz_Boss_Mappings_02, Obj_Map(A0) ; loc_20430, $0004
                move.w  #$0580, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_27_To_ModifySpriteAttr_2P          ; loc_2050E
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$0C, Obj_Width(A0)                              ; $0019
                move.b  #$07, Obj_Ani_Time(A0)                           ; $001E
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.w  #$00C4, D0
                jmp     (Play_Sfx)                             ; loc_1512  
;-------------------------------------------------------------------------------   
loc_203C8:
                rts      
;-------------------------------------------------------------------------------
loc_203CA:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_203E4
                move.b  #$07, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$07, Obj_Map_Id(A0)                             ; $001A
                beq     Jmp_14_To_DeleteObject                 ; loc_20502
loc_203E4:
                bra     Jmp_13_To_DisplaySprite                ; loc_204FC    
;-------------------------------------------------------------------------------
GHz_Boss_Mappings:                                             ; loc_203E8
                dc.w    loc_203EC-GHz_Boss_Mappings
                dc.w    loc_203F6-GHz_Boss_Mappings
loc_203EC:
                dc.w    $0001
                dc.l    $00050000, $0000001C
loc_203F6:
                dc.w    $0001
                dc.l    $00050004, $0002001C     
;-------------------------------------------------------------------------------
GHz_Boss_Mappings_01:                                          ; loc_20400
                dc.w    loc_20408-GHz_Boss_Mappings_01
                dc.w    loc_20412-GHz_Boss_Mappings_01
                dc.w    loc_2041C-GHz_Boss_Mappings_01
                dc.w    loc_20426-GHz_Boss_Mappings_01
loc_20408:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
loc_20412:
                dc.w    $0001
                dc.l    $F8050004, $0002FFF8
loc_2041C:
                dc.w    $0001
                dc.l    $F8050008, $0004FFF8
loc_20426:
                dc.w    $0001
                dc.l    $F805000C, $0006FFF8   
;-------------------------------------------------------------------------------
GHz_Boss_Mappings_02:                                          ; loc_20430
                dc.w    loc_2043E-GHz_Boss_Mappings_02
                dc.w    loc_20448-GHz_Boss_Mappings_02
                dc.w    loc_20452-GHz_Boss_Mappings_02
                dc.w    loc_2045C-GHz_Boss_Mappings_02
                dc.w    loc_20466-GHz_Boss_Mappings_02
                dc.w    loc_20470-GHz_Boss_Mappings_02
                dc.w    loc_2047A-GHz_Boss_Mappings_02
loc_2043E:
                dc.w    $0001
                dc.l    $F8050000, $0000FFF8
loc_20448:
                dc.w    $0001
                dc.l    $F00F0004, $0002FFF0
loc_20452:
                dc.w    $0001
                dc.l    $F00F0014, $000AFFF0
loc_2045C:
                dc.w    $0001
                dc.l    $F00F0024, $0012FFF0
loc_20466:
                dc.w    $0001
                dc.l    $F00F0034, $001AFFF0
loc_20470:
                dc.w    $0001
                dc.l    $F00F0044, $0022FFF0
loc_2047A:
                dc.w    $0001
                dc.l    $F00F0054, $002AFFF0   
;-------------------------------------------------------------------------------
GHz_Boss_Animate_Data:                                        ; Oloc_20484
                dc.w    loc_20488-GHz_Boss_Animate_Data
                dc.w    loc_2048B-GHz_Boss_Animate_Data
loc_20488:
                dc.b    $0F, $00, $FF
loc_2048B:
                dc.b    $07, $01, $02, $FF, $00   
;-------------------------------------------------------------------------------
GHz_Boss_Mappings_03:                                          ; loc_20490
                dc.w    loc_20496-GHz_Boss_Mappings_03
                dc.w    loc_204B8-GHz_Boss_Mappings_03
                dc.w    loc_204DA-GHz_Boss_Mappings_03
loc_20496:
                dc.w    $0004
                dc.l    $F8050000, $0000FFE0
                dc.l    $08050004, $0002FFE0
                dc.l    $F80F0008, $0004FFF0
                dc.l    $F8070018, $000C0010
loc_204B8:
                dc.w    $0004
                dc.l    $E8050028, $0014FFE0
                dc.l    $E80D0030, $0018FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
loc_204DA:
                dc.w    $0004
                dc.l    $E8050028, $0014FFE0
                dc.l    $E80D0038, $001CFFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
;===============================================================================
; Object 0x58 - Robotnik na Green Hill
; [ Begin ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_13_To_DisplaySprite:                                       ; loc_204FC
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_14_To_DeleteObject:                                        ; loc_20502
		jmp     (DeleteObject)                         ; loc_D314
Jmp_03_To_ModifySpriteAttr_2P_A1:                              ; loc_20508
		jmp     (ModifySpriteAttr_2P_A1)               ; loc_DBDA
Jmp_27_To_ModifySpriteAttr_2P:                                 ; loc_2050E
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
;===============================================================================
; Object 0x56 Add-on - Boss from Green Hill
; [ Begin ]
;===============================================================================
Obj56_GHz_Boss_Sub_2:                                       ; loc_20514
		moveq   #$00, D0
		move.b  Obj_Routine_2(A0), D0                            ; $0025
		move.w  loc_20522(PC, D0), D1
		jmp     loc_20522(PC, D1)
;-------------------------------------------------------------------------------
loc_20522:
		dc.w    loc_2052E-loc_20522
		dc.w    loc_20554-loc_20522
		dc.w    loc_205B0-loc_20522
		dc.w    loc_205E2-loc_20522
		dc.w    loc_2060C-loc_20522
		dc.w    loc_20626-loc_20522
;-------------------------------------------------------------------------------
loc_2052E:
		move.b  #$00, Obj_Col_Flags(A0)                          ; $0020
		cmpi.w  #$29D0, Obj_X(A0)                                ; $0008
		ble.s   loc_20546
		subi.w  #$0001, Obj_X(A0)                                ; $0008
		bra     Jmp_14_To_DisplaySprite                ; loc_20E58
loc_20546:
		move.w  #$29D0, Obj_X(A0)                                ; $0008
		addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
		bra     Jmp_14_To_DisplaySprite                ; loc_20E58
;-------------------------------------------------------------------------------
loc_20554:
		moveq   #$00, D0
		move.b  Obj_Control_Var_00(A0), D0                       ; $002C
		move.w  loc_20562(PC, D0), D1
		jmp     loc_20562(PC, D1)
;-------------------------------------------------------------------------------
loc_20562:
		dc.w    loc_20566-loc_20562
		dc.w    loc_2058C-loc_20562
;-------------------------------------------------------------------------------
loc_20566:
		cmpi.w  #$041E, Obj_Y(A0)                                ; $000C
		bge.s   loc_20578
		addi.w  #$0001, Obj_Y(A0)                                ; $000C
		bra     Jmp_14_To_DisplaySprite                ; loc_20E58
loc_20578:
		addq.b  #$02, Obj_Control_Var_00(A0)                     ; $002C
		bset    #$00, Obj_Control_Var_01(A0)                     ; $002D
		move.w  #$003C, Obj_Timer(A0)                            ; $002A
		bra     Jmp_14_To_DisplaySprite                ; loc_20E58
;-------------------------------------------------------------------------------
loc_2058C:
		subi.w  #$0001, Obj_Timer(A0)                            ; $002A
		bpl     Jmp_14_To_DisplaySprite                ; loc_20E58
		move.w  #$FE00, Obj_Speed(A0)                            ; $0010
		addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
		move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
		bset    #$01, Obj_Control_Var_01(A0)                     ; $002D
		bra     Jmp_14_To_DisplaySprite                ; loc_20E58
;-------------------------------------------------------------------------------
loc_205B0:
		bsr     loc_20724
		bsr     loc_20702
		move.w  Obj_Control_Var_02(A0), D0                       ; $002E
		lsr.w   #$01, D0
		subi.w  #$0014, D0
		move.w  D0, Obj_Y(A0)                                    ; $000C
		move.w  #$0000, Obj_Control_Var_02(A0)                   ; $002E
		move.l  Obj_X(A0), D2                                    ; $0008
		move.w  Obj_Speed(A0), D0                                ; $0010
		ext.l   D0
		asl.l   #$08, D0
		add.l   D0, D2
		move.l  D2, Obj_X(A0)                                    ; $0008
		bra     Jmp_14_To_DisplaySprite                ; loc_20E58
;-------------------------------------------------------------------------------
loc_205E2:
		subq.w  #$01, Obj_Control_Var_10(A0)                     ; $003C
		bpl     Boss_Defeated                          ; loc_23AEC
		bset    #$00, Obj_Status(A0)                             ; $0022
		bclr    #$07, Obj_Status(A0)                             ; $0022
		clr.w   Obj_Speed(A0)                                    ; $0010
		addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
		move.w  #$FFDA, Obj_Control_Var_10(A0)                   ; $003C
		move.w  #$000C, Obj_Timer(A0)                            ; $002A
		rts
;-------------------------------------------------------------------------------
loc_2060C:
		addq.w  #$01, Obj_Y(A0)                                  ; $000C
		subq.w  #$01, Obj_Timer(A0)                              ; $002A
		bpl     Jmp_14_To_DisplaySprite                ; loc_20E58
		addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
		move.b  #$00, Obj_Control_Var_00(A0)                     ; $002C
		bra     Jmp_14_To_DisplaySprite                ; loc_20E58
;-------------------------------------------------------------------------------
loc_20626:
		moveq   #$00, D0
		move.b  Obj_Control_Var_00(A0), D0                       ; $002C
		move.w  loc_20640(PC, D0), D1
		jsr     loc_20640(PC, D1)
		tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
		bne     Jmp_15_To_DeleteObject                 ; loc_20E5E
		bra     Jmp_14_To_DisplaySprite                ; loc_20E58
;-------------------------------------------------------------------------------
loc_20640:
		dc.w    loc_20646-loc_20640
		dc.w    loc_206BE-loc_20640
		dc.w    loc_206D8-loc_20640
;-------------------------------------------------------------------------------
loc_20646:
		bclr    #$00, Obj_Control_Var_01(A0)                     ; $002D
		bsr     Jmp_11_To_SingleObjectLoad_2           ; loc_20E6A
		bne     Jmp_14_To_DisplaySprite                ; loc_20E58
		move.b  #$5B, Obj_Id(A1)                                 ; $0000
		move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
		move.l  #GHz_Boss_Mappings_04, Obj_Map(A1) ; loc_20CE4, $0004
		move.w  #$25E8, Obj_Art_VRAM(A1)                         ; $0002
		bsr     Jmp_04_To_ModifySpriteAttr_2P_A1       ; loc_20E76
		move.b  #$04, Obj_Flags(A1)                              ; $0001
		move.b  #$20, Obj_Width(A1)                              ; $0019
		move.b  #$04, Obj_Priority(A1)                           ; $0018
		move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		addi.w  #$000C, Obj_Y(A1)                                ; $000C
		move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
		move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
		move.b  #$08, Obj_Routine(A1)                            ; $0024
		move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
		move.w  #$0010, Obj_Timer(A1)                            ; $002A
		move.w  #$0032, Obj_Timer(A0)                            ; $002A
		addq.b  #$02, Obj_Control_Var_00(A0)                     ; $002C
		rts
;-------------------------------------------------------------------------------
loc_206BE:
		subi.w  #$0001, Obj_Timer(A0)                            ; $002A
		bpl.s   loc_206D6
		bset    #$02, Obj_Control_Var_01(A0)                     ; $002D
		move.w  #$0060, Obj_Timer(A0)                            ; $002A
		addq.b  #$02, Obj_Control_Var_00(A0)                     ; $002C
loc_206D6:
		rts
;-------------------------------------------------------------------------------
loc_206D8:
		subq.w  #$01, Obj_Y(A0)                                  ; $000C
		subi.w  #$0001, Obj_Timer(A0)                            ; $002A
		bpl.s   loc_20700
		addq.w  #$01, Obj_Y(A0)                                  ; $000C
		addq.w  #$02, Obj_X(A0)                                  ; $0008
		cmpi.w  #$2B08, Obj_X(A0)                                ; $0008
		bcs.s   loc_20700
		tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
		bne.s   loc_20700
		move.b  #$01, (Boss_Defeated_Flag).w                 ; $FFFFF7A7
loc_20700:
		rts
loc_20702:
		move.w  Obj_X(A0), D0                                    ; $0008
		cmpi.w  #$2720, D0
		ble.s   loc_20712
		cmpi.w  #$2B08, D0
		blt.s   loc_20722
loc_20712:
		bchg    #00, Obj_Status(A0)                              ; $0022
		bchg    #00, Obj_Flags(A0)                               ; $0001
		neg.w   Obj_Speed(A0)                                    ; $0010
loc_20722:
		rts
loc_20724:
		cmpi.b  #$06, Obj_Routine_2(A0)                          ; $0025
		bcc.s   loc_2076A
		tst.b   Obj_Status(A0)                                   ; $0022
		bmi.s   loc_2076C
		tst.b   Obj_Col_Flags(A0)                                ; $0020
		bne.s   loc_2076A
		tst.b   Obj_Control_Var_12(A0)                           ; $003E
		bne.s   loc_2074E
		move.b  #$20, Obj_Control_Var_12(A0)                     ; $003E
		move.w  #$00AC, D0
		jsr     (Play_Sfx)                             ; loc_1512
loc_2074E:
		lea     ($FFFFFB22).w, A1
		moveq   #$00, D0
		tst.w   (A1)
		bne.s   loc_2075C
		move.w  #$0EEE, D0
loc_2075C:
		move.w  D0, (A1)
		subq.b  #$01, Obj_Control_Var_12(A0)                     ; $003E
		bne.s   loc_2076A
		move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
loc_2076A:
		rts
loc_2076C:
		moveq   #$64, D0
		bsr     Jmp_00_To_AddPoints                    ; loc_20E82
		move.b  #$06, Obj_Routine_2(A0)                          ; $0025
		move.w  #$00B3, Obj_Control_Var_10(A0)                   ; $003C
		bset    #$03, Obj_Control_Var_01(A0)                     ; $002D
		rts
;===============================================================================
; Object 0x56 Add-on - Boss from Green Hill
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x5B - Robotnik from Green Hill
; [ Begin ]
;===============================================================================
; loc_20786:
Obj5B_GHz_Boss:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_20794(PC, D0), D1
                jmp     loc_20794(PC, D1)
;-------------------------------------------------------------------------------
loc_20794:
                dc.w    loc_207C2-loc_20794
                dc.w    loc_20848-loc_20794
                dc.w    loc_2089A-loc_20794
                dc.w    loc_2097C-loc_20794
                dc.w    loc_2079E-loc_20794    
;-------------------------------------------------------------------------------
loc_2079E:
                subi.w  #$0001, Obj_Y(A0)                                ; $000C
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bpl     Jmp_14_To_DisplaySprite                ; loc_20E58
                move.b  #$00, Obj_Routine(A0)                            ; $0024
                lea     (GHz_Boss_Animate_Data_01), A1         ; loc_20CAA
                bsr     Jmp_08_To_AnimateSprite                ; loc_20E70
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58      
;-------------------------------------------------------------------------------
loc_207C2:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_207D0(PC, D0), D1
                jmp     loc_207D0(PC, D1)    
;-------------------------------------------------------------------------------
loc_207D0:
                dc.w    loc_207D4-loc_207D0
                dc.w    loc_2081E-loc_207D0  
;-------------------------------------------------------------------------------
loc_207D4:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                cmpi.b  #$56, (A1)
                bne     Jmp_15_To_DeleteObject                 ; loc_20E5E
                btst    #$00, Obj_Control_Var_01(A1)                     ; $002D
                beq.s   loc_207F8
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0018, Obj_Timer(A0)                            ; $002A
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
loc_207F8:
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                lea     (GHz_Boss_Animate_Data_01), A1         ; loc_20CAA
                bsr     Jmp_08_To_AnimateSprite                ; loc_20E70
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58        
;-------------------------------------------------------------------------------
loc_2081E:
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bpl.s   loc_2083A
                cmpi.w  #$FFF0, Obj_Timer(A0)                            ; $002A
                ble     Jmp_15_To_DeleteObject                 ; loc_20E5E
                addi.w  #$0001, Obj_Y(A0)                                ; $000C
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58
loc_2083A:
                lea     (GHz_Boss_Animate_Data_01), A1         ; loc_20CAA
                bsr     Jmp_08_To_AnimateSprite                ; loc_20E70
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58     
;-------------------------------------------------------------------------------
loc_20848:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                cmpi.b  #$56, (A1)
                bne     Jmp_15_To_DeleteObject                 ; loc_20E5E
                btst    #$01, Obj_Control_Var_01(A1)                     ; $002D
                beq     Jmp_14_To_DisplaySprite                ; loc_20E58
                btst    #$02, Obj_Control_Var_01(A1)                     ; $002D
                bne     loc_2088A
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                addi.w  #$0008, Obj_Y(A0)                                ; $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58
loc_2088A:
                move.b  #$08, Obj_Map_Id(A0)                             ; $001A
                move.b  #$00, Obj_Priority(A0)                           ; $0018
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58  
;-------------------------------------------------------------------------------
loc_2089A:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_208A8(PC, D0), D1
                jmp     loc_208A8(PC, D1)
;-------------------------------------------------------------------------------
loc_208A8:
                dc.w    loc_208B0-loc_208A8
                dc.w    loc_208CE-loc_208A8
                dc.w    loc_2092E-loc_208A8
                dc.w    loc_2095A-loc_208A8      
;-------------------------------------------------------------------------------
loc_208B0:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                cmpi.b  #$56, (A1)
                bne     Jmp_15_To_DeleteObject                 ; loc_20E5E
                btst    #$01, Obj_Control_Var_01(A1)                     ; $002D
                beq     Jmp_14_To_DisplaySprite                ; loc_20E58
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58    
;-------------------------------------------------------------------------------
loc_208CE:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                cmpi.b  #$56, (A1)
                bne     Jmp_15_To_DeleteObject                 ; loc_20E5E
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                tst.b   Obj_Status(A0)                                   ; $0022
                bpl.s   loc_208F0
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
loc_208F0:
                bsr     loc_20702
                bsr     Jmp_02_To_ObjectFall                   ; loc_20E88
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_20906
                add.w   D1, Obj_Y(A0)                                    ; $000C
loc_20906:
                move.w  #$0100, Obj_Speed_Y(A0)                          ; $0012
                cmpi.b  #$01, Obj_Priority(A0)                           ; $0018
                bne.s   loc_20920
                move.w  Obj_Y(A0), D0                                    ; $000C
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                add.w   D0, Obj_Control_Var_02(A1)                       ; $002E
loc_20920:
                lea     (GHz_Boss_Animate_Data_02), A1         ; loc_20DB8
                bsr     Jmp_08_To_AnimateSprite                ; loc_20E70
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58     
;-------------------------------------------------------------------------------
loc_2092E:
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bpl     Jmp_14_To_DisplaySprite                ; loc_20E58
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$000A, Obj_Timer(A0)                            ; $002A
                move.w  #$FD00, Obj_Speed_Y(A0)                          ; $0012
                cmpi.b  #$01, Obj_Priority(A0)                           ; $0018
                beq     Jmp_14_To_DisplaySprite                ; loc_20E58
                neg.w   Obj_Speed(A0)                                    ; $0010
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58      
;-------------------------------------------------------------------------------
loc_2095A:
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                bpl     Jmp_14_To_DisplaySprite                ; loc_20E58
                bsr     Jmp_02_To_ObjectFall                   ; loc_20E88
                bsr     Jmp_03_To_ObjHitFloor                  ; loc_20E7C
                tst.w   D1
                bpl.s   loc_20978
                move.w  #$FE00, Obj_Speed_Y(A0)                          ; $0012
                add.w   D1, Obj_Y(A0)                                    ; $000C
loc_20978:
                bra     Jmp_1B_To_MarkObjGone                  ; loc_20E64     
;-------------------------------------------------------------------------------
loc_2097C:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                cmpi.b  #$56, (A1)
                bne     Jmp_15_To_DeleteObject                 ; loc_20E5E
                btst    #$03, Obj_Control_Var_01(A1)                     ; $002D
                bne.s   loc_209E2
                bsr     loc_20A02
                btst    #$01, Obj_Control_Var_01(A1)                     ; $002D
                beq     Jmp_14_To_DisplaySprite                ; loc_20E58
                move.b  #$8B, Obj_Col_Flags(A0)                          ; $0020
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                addi.w  #$0010, Obj_Y(A0)                                ; $000C
                move.w  #$FFCA, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_209D0
                neg.w   D0
loc_209D0:
                add.w   D0, Obj_X(A0)                                    ; $0008
                lea     (GHz_Boss_Animate_Data_02), A1         ; loc_20DB8
                bsr     Jmp_08_To_AnimateSprite                ; loc_20E70
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58
loc_209E2:
                move.w  #$FFFD, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_209F0
                neg.w   D0
loc_209F0:
                add.w   D0, Obj_X(A0)                                    ; $0008
                lea     (GHz_Boss_Animate_Data_02), A1         ; loc_20DB8
                bsr     Jmp_08_To_AnimateSprite                ; loc_20E70
                bra     Jmp_14_To_DisplaySprite                ; loc_20E58
loc_20A02:
                cmpi.b  #$01, Obj_Col_Prop(A1)                           ; $0021
                beq.s   loc_20A0C
                rts
loc_20A0C:
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   ($FFFFB008).w, D0
                bpl.s   loc_20A20
                btst    #$00, Obj_Status(A1)                             ; $0022
                bne.s   loc_20A2A
                rts
loc_20A20:
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_20A2A
                rts
loc_20A2A:
                bset    #$03, Obj_Control_Var_01(A1)                     ; $002D
                rts          
;===============================================================================
; Object 0x5B - Robotnik from Green Hill
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x56 Add-on - Boss from Green Hill
; [ Begin ]
;===============================================================================
Obj56_GHz_Boss_Sub_3:                                       ; loc_20A32
		jsr     (SingleObjectLoad_2)                   ; loc_E714
		bne.s   loc_20AAA
		move.b  #$5B, Obj_Id(A1)                                 ; $0000
		move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
		move.l  #GHz_Boss_Mappings_05, Obj_Map(A1) ; loc_20DCC, $0004
		move.w  #$2400, Obj_Art_VRAM(A1)                         ; $0002
		bsr     Jmp_04_To_ModifySpriteAttr_2P_A1       ; loc_20E76
		move.b  #$04, Obj_Flags(A1)                              ; $0001
		move.b  #$10, Obj_Width(A1)                              ; $0019
		move.b  #$01, Obj_Priority(A1)                           ; $0018
		move.b  #$10, Obj_Height_2(A1)                           ; $0016
		move.b  #$10, Obj_Width_2(A1)                            ; $0017
		move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		addi.w  #$001C, Obj_X(A1)                                ; $0008
		addi.w  #$000C, Obj_Y(A1)                                ; $000C
		move.w  #$FE00, Obj_Speed(A1)                            ; $0010
		move.b  #$04, Obj_Routine(A1)                            ; $0024
		move.b  #$04, Obj_Map_Id(A1)                             ; $001A
		move.b  #$01, Obj_Ani_Number(A1)                         ; $001C
		move.w  #$0016, Obj_Timer(A1)                            ; $002A
loc_20AAA:
		jsr     (SingleObjectLoad_2)                   ; loc_E714
		bne.s   loc_20B22
		move.b  #$5B, Obj_Id(A1)                                 ; $0000
		move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
		move.l  #GHz_Boss_Mappings_05, Obj_Map(A1) ; loc_20DCC, $0004
		move.w  #$2400, Obj_Art_VRAM(A1)                         ; $0002
		bsr     Jmp_04_To_ModifySpriteAttr_2P_A1       ; loc_20E76
		move.b  #$04, Obj_Flags(A1)                              ; $0001
		move.b  #$10, Obj_Width(A1)                              ; $0019
		move.b  #$01, Obj_Priority(A1)                           ; $0018
		move.b  #$10, Obj_Height_2(A1)                           ; $0016
		move.b  #$10, Obj_Width_2(A1)                            ; $0017
		move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		addi.w  #$FFF4, Obj_X(A1)                                ; $0008
		addi.w  #$000C, Obj_Y(A1)                                ; $000C
		move.w  #$FE00, Obj_Speed(A1)                            ; $0010
		move.b  #$04, Obj_Routine(A1)                            ; $0024
		move.b  #$04, Obj_Map_Id(A1)                             ; $001A
		move.b  #$01, Obj_Ani_Number(A1)                         ; $001C
		move.w  #$004B, Obj_Timer(A1)                            ; $002A
loc_20B22:
		jsr     (SingleObjectLoad_2)                   ; loc_E714
		bne.s   loc_20B9A
		move.b  #$5B, Obj_Id(A1)                                 ; $0000
		move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
		move.l  #GHz_Boss_Mappings_05, Obj_Map(A1) ; loc_20DCC, $0004
		move.w  #$2400, Obj_Art_VRAM(A1)                         ; $0002
		bsr     Jmp_04_To_ModifySpriteAttr_2P_A1       ; loc_20E76
		move.b  #$04, Obj_Flags(A1)                              ; $0001
		move.b  #$10, Obj_Width(A1)                              ; $0019
		move.b  #$02, Obj_Priority(A1)                           ; $0018
		move.b  #$10, Obj_Height_2(A1)                           ; $0016
		move.b  #$10, Obj_Width_2(A1)                            ; $0017
		move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		addi.w  #$FFD4, Obj_X(A1)                                ; $0008
		addi.w  #$000C, Obj_Y(A1)                                ; $000C
		move.w  #$FE00, Obj_Speed(A1)                            ; $0010
		move.b  #$04, Obj_Routine(A1)                            ; $0024
		move.b  #$06, Obj_Map_Id(A1)                             ; $001A
		move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
		move.w  #$0030, Obj_Timer(A1)                            ; $002A
loc_20B9A:
		jsr     (SingleObjectLoad_2)                   ; loc_E714
		bne.s   loc_20BFA
		move.b  #$5B, Obj_Id(A1)                                 ; $0000
		move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
		move.l  #GHz_Boss_Mappings_05, Obj_Map(A1) ; loc_20DCC, $0004
		move.w  #$2400, Obj_Art_VRAM(A1)                         ; $0002
		bsr     Jmp_04_To_ModifySpriteAttr_2P_A1       ; loc_20E76
		move.b  #$04, Obj_Flags(A1)                              ; $0001
		move.b  #$10, Obj_Width(A1)                              ; $0019
		move.b  #$01, Obj_Priority(A1)                           ; $0018
		move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		addi.w  #$FFCA, Obj_X(A1)                                ; $0008
		addi.w  #$0008, Obj_Y(A1)                                ; $000C
		move.b  #$06, Obj_Routine(A1)                            ; $0024
		move.b  #$01, Obj_Map_Id(A1)                             ; $001A
		move.b  #$00, Obj_Ani_Number(A1)                         ; $001C
loc_20BFA:
		rts
;-------------------------------------------------------------------------------
Obj56_GHz_Boss_Sub_4:                                       ; loc_20BFC
		jsr     (SingleObjectLoad_2)                   ; loc_E714
		bne.s   loc_20C44
		move.b  #$5B, Obj_Id(A1)                                 ; $0000
		move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
		move.l  #GHz_Boss_Mappings_05, Obj_Map(A1) ; loc_20DCC, $0004
		move.w  #$0400, Obj_Art_VRAM(A1)                         ; $0002
		bsr     Jmp_04_To_ModifySpriteAttr_2P_A1       ; loc_20E76
		move.b  #$04, Obj_Flags(A1)                              ; $0001
		move.b  #$20, Obj_Width(A1)                              ; $0019
		move.b  #$02, Obj_Priority(A1)                           ; $0018
		move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		move.b  #$02, Obj_Routine(A1)                            ; $0024
loc_20C44:
		bsr     Obj56_GHz_Boss_Sub_3                ; loc_20A32
		subi.w  #$0008, Obj_Control_Var_0C(A0)                   ; $0038
		move.w  #$2A00, Obj_X(A0)                                ; $0008
		move.w  #$02C0, Obj_Y(A0)                                ; $000C
		jsr     (SingleObjectLoad_2)                   ; loc_E714
		bne.s   loc_20CA8
		move.b  #$5B, Obj_Id(A1)                                 ; $0000
		move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
		move.l  #GHz_Boss_Mappings_04, Obj_Map(A1) ; loc_20CE4, $0004
		move.w  #$25E8, Obj_Art_VRAM(A1)                         ; $0002
		bsr     Jmp_04_To_ModifySpriteAttr_2P_A1       ; loc_20E76
		move.b  #$04, Obj_Flags(A1)                              ; $0001
		move.b  #$20, Obj_Width(A1)                              ; $0019
		move.b  #$04, Obj_Priority(A1)                           ; $0018
		move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		move.w  #$001E, Obj_Timer(A1)                            ; $002A
		move.b  #$00, Obj_Routine(A1)                            ; $0024
loc_20CA8:
		rts
;-------------------------------------------------------------------------------
GHz_Boss_Animate_Data_01:                                      ; loc_20CAA
		dc.w    loc_20CB0-GHz_Boss_Animate_Data_01
		dc.w    loc_20CB4-GHz_Boss_Animate_Data_01
		dc.w    loc_20CCA-GHz_Boss_Animate_Data_01
loc_20CB0:
		dc.b    $01, $05, $06, $FF
loc_20CB4:
		dc.b    $01, $01, $01, $01, $02, $02, $02, $03
		dc.b    $03, $03, $04, $04, $04, $00, $00, $00
		dc.b    $00, $00, $00, $00, $00, $FF
loc_20CCA:
		dc.b    $01, $00, $00, $00, $00, $00, $00, $00
		dc.b    $00, $04, $04, $04, $03, $03, $03, $02
		dc.b    $02, $02, $01, $01, $01, $05, $06, $FE
		dc.b    $02, $00
;-------------------------------------------------------------------------------
GHz_Boss_Mappings_04:                                          ; loc_20CE4
		dc.w    loc_20CF2-GHz_Boss_Mappings_04
		dc.w    loc_20CFC-GHz_Boss_Mappings_04
		dc.w    loc_20D26-GHz_Boss_Mappings_04
		dc.w    loc_20D50-GHz_Boss_Mappings_04
		dc.w    loc_20D6A-GHz_Boss_Mappings_04
		dc.w    loc_20D84-GHz_Boss_Mappings_04
		dc.w    loc_20D9E-GHz_Boss_Mappings_04
loc_20CF2:
		dc.w    $0001
		dc.l    $D8050000, $00000002
loc_20CFC:
		dc.w    $0005
		dc.l    $D8050004, $00020002
		dc.l    $D80D000C, $00060012
		dc.l    $D80D000C, $00060032
		dc.l    $D80D000C, $0006FFE2
		dc.l    $D80D000C, $0006FFC2
loc_20D26:
		dc.w    $0005
		dc.l    $D8050004, $00020002
		dc.l    $D80D000C, $00060012
		dc.l    $D8050008, $00040032
		dc.l    $D80D000C, $0006FFE2
		dc.l    $D8050008, $0004FFD2
loc_20D50:
		dc.w    $0003
		dc.l    $D8050004, $00020002
		dc.l    $D80D000C, $00060012
		dc.l    $D80D000C, $0006FFE2
loc_20D6A:
		dc.w    $0003
		dc.l    $D8050004, $00020002
		dc.l    $D8050008, $00040012
		dc.l    $D8050008, $0004FFF2
loc_20D84:
		dc.w    $0003
		dc.l    $D8050000, $00000002
		dc.l    $D80D000C, $00060012
		dc.l    $D80D000C, $00060032
loc_20D9E:
		dc.w    $0003
		dc.l    $D8050004, $00020002
		dc.l    $D80D000C, $0006FFE2
		dc.l    $D80D000C, $0006FFC2
;-------------------------------------------------------------------------------
GHz_Boss_Animate_Data_02:                                      ; loc_20DB8
		dc.w    loc_20DBE-GHz_Boss_Animate_Data_02
		dc.w    loc_20DC3-GHz_Boss_Animate_Data_02
		dc.w    loc_20DC7-GHz_Boss_Animate_Data_02
loc_20DBE:
		dc.b    $05, $01, $02, $03, $FF
loc_20DC3:
		dc.b    $01, $04, $05, $FF
loc_20DC7:
		dc.b    $01, $06, $07, $FF, $00
;-------------------------------------------------------------------------------
GHz_Boss_Mappings_05:                                          ; loc_20DCC
		dc.w    loc_20DDE-GHz_Boss_Mappings_05
		dc.w    loc_20DF8-GHz_Boss_Mappings_05
		dc.w    loc_20E02-GHz_Boss_Mappings_05
		dc.w    loc_20E0C-GHz_Boss_Mappings_05
		dc.w    loc_20E16-GHz_Boss_Mappings_05
		dc.w    loc_20E20-GHz_Boss_Mappings_05
		dc.w    loc_20E2A-GHz_Boss_Mappings_05
		dc.w    loc_20E34-GHz_Boss_Mappings_05
		dc.w    loc_20E3E-GHz_Boss_Mappings_05
loc_20DDE:
		dc.w    $0003
		dc.l    $F00F0000, $0000FFD0
		dc.l    $F00F0010, $0008FFF0
		dc.l    $F00F0020, $00100010
loc_20DF8:
		dc.w    $0001
		dc.l    $F00F0030, $0018FFF0
loc_20E02:
		dc.w    $0001
		dc.l    $F00F0040, $0020FFF0
loc_20E0C:
		dc.w    $0001
		dc.l    $F00F0050, $0028FFF0
loc_20E16:
		dc.w    $0001
		dc.l    $F00F0060, $0030FFF0
loc_20E20:
		dc.w    $0001
		dc.l    $F00F1060, $1030FFF0
loc_20E2A:
		dc.w    $0001
		dc.l    $F00F0070, $0038FFF0
loc_20E34:
		dc.w    $0001
		dc.l    $F00F1070, $1038FFF0
loc_20E3E:
		dc.w    $0003
		dc.l    $F00F8000, $8000FFD0
		dc.l    $F00F8010, $8008FFF0
		dc.l    $F00F8020, $80100010
;===============================================================================
; Complemento do Object 0x56 - Chefe na Green Hill
; [ End ]
;===============================================================================
Jmp_14_To_DisplaySprite:
		jmp     (DisplaySprite)
Jmp_15_To_DeleteObject:
		jmp     (DeleteObject)
Jmp_1B_To_MarkObjGone:
		jmp     (MarkObjGone)
Jmp_11_To_SingleObjectLoad_2:
		jmp     (SingleObjectLoad_2)
Jmp_08_To_AnimateSprite:
		jmp     (AnimateSprite)
Jmp_04_To_ModifySpriteAttr_2P_A1:
		jmp     (ModifySpriteAttr_2P_A1)
Jmp_03_To_ObjHitFloor:
		jmp     (ObjHitFloor)
Jmp_00_To_AddPoints:
		jmp     (AddPoints)
Jmp_02_To_ObjectFall:
		jmp     (ObjectFall)
		dc.w    $0000
;-------------------------------------------------------------------------------

;===============================================================================
; Object - "Bubbler" Enemy
; [ Begin ] Unassigned, supposed to occupy slot 0x55
;===============================================================================
; loc_20E90:
Obj_Bubbler:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_20E9E(PC, D0), D1
                jmp     loc_20E9E(PC, D1)
;-------------------------------------------------------------------------------  
loc_20E9E:
                dc.w    loc_20EA4-loc_20E9E
                dc.w    loc_20EFC-loc_20E9E
                dc.w    loc_20F48-loc_20E9E          
;------------------------------------------------------------------------------- 
loc_20EA4:
                move.l  #Bubbler_Mappings, Obj_Map(A0) ; loc_2106C, $0004
                move.w  #$24F9, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_28_To_ModifySpriteAttr_2P          ; loc_21154
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.b  #$14, Obj_Width(A0)                              ; $0019
                move.b  #$0C, Obj_Height_2(A0)                           ; $0016
                move.b  #$08, Obj_Width_2(A0)                            ; $0017
                move.b  #$0C, Obj_Col_Flags(A0)                          ; $0020
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$00B5, Obj_Timer(A0)                            ; $002A
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                bmi.s   loc_20EFA
                bset    #$00, Obj_Status(A0)                             ; $0022
loc_20EFA:
                rts   
;------------------------------------------------------------------------------- 
loc_20EFC:
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bmi.s   loc_20F2E
                cmpi.w  #$005E, Obj_Timer(A0)                            ; $002A
                bne.s   loc_20F12
                subi.w  #$0004, Obj_Y(A0)                                ; $000C
loc_20F12:
                cmpi.w  #$0054, Obj_Timer(A0)                            ; $002A
                bne.s   loc_20F20
                subi.w  #$0004, Obj_Y(A0)                                ; $000C
loc_20F20:
                lea     (Bubbler_Animate_Data), A1      ; loc_2100C
                bsr     Jmp_09_To_AnimateSprite                ; loc_2114E
                bra     Jmp_1C_To_MarkObjGone                  ; loc_21148
loc_20F2E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Routine_2(A0)                          ; $0025
                move.b  #$08, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0004, Obj_Timer(A0)                            ; $002A
                bra     Jmp_1C_To_MarkObjGone                  ; loc_21148  
;------------------------------------------------------------------------------- 
loc_20F48:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_20F56(PC, D0), D1
                jmp     loc_20F56(PC, D1)      
;-------------------------------------------------------------------------------   
loc_20F56:
                dc.w    loc_20F74-loc_20F56
                dc.w    loc_21004-loc_20F56
                dc.w    loc_20FF6-loc_20F56       
;------------------------------------------------------------------------------- 
loc_20F5C:
                dc.w    $FFFC, $FFFC, $0008, $0000, $FFFC, $0004               
;-------------------------------------------------------------------------------  
loc_20F68:
                dc.w    $FFE0, $0020, $FFD0, $0020, $0020, $0020                          
;-------------------------------------------------------------------------------  
loc_20F74:
                move.l  D7, -(A7)
                moveq   #$02, D7
                lea     loc_20F5C(PC), A2
                lea     loc_20F68(PC), A3
loc_20F80:
                bsr     Jmp_07_To_SingleObjectLoad             ; loc_21142
                bne.s   loc_20FEA
                move.b  (A0), (A1)
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.b  #$02, Obj_Routine_2(A1)                          ; $0025
                move.l  #Bubbler_Mappings, Obj_Map(A1) ; loc_2106C, $0004
                move.w  #$24F9, Obj_Art_VRAM(A1)                         ; $0002
                bsr     Jmp_28_To_ModifySpriteAttr_2P          ; loc_21154
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$14, Obj_Width(A1)                              ; $0019
                move.b  #$0C, Obj_Height_2(A1)                           ; $0016
                move.b  #$08, Obj_Width_2(A1)                            ; $0017
                move.w  Obj_X(A0), D1                                    ; $0008
                add.w   (A2)+, D1
                move.w  D1, Obj_X(A1)                                    ; $0008
                move.w  Obj_Y(A0), D1                                    ; $000C
                add.w   (A2)+, D1
                move.w  D1, Obj_Y(A1)                                    ; $000C
                move.w  (A3)+, Obj_Speed(A1)                             ; $0010
                move.w  (A3)+, Obj_Speed_Y(A1)                           ; $0012
                move.b  #$09, Obj_Map_Id(A1)                             ; $001A
                dbra    D7, loc_20F80   
;-------------------------------------------------------------------------------  
loc_20FEA:
                move.l  (A7)+, D7
                move.b  #$04, Obj_Routine_2(A0)                          ; $0025
                bra     Jmp_1C_To_MarkObjGone                  ; loc_21148
loc_20FF6:
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                beq     Jmp_16_To_DeleteObject                 ; loc_2113C
                bra     Jmp_1C_To_MarkObjGone                  ; loc_21148 
;-------------------------------------------------------------------------------  
loc_21004:
                bsr     Jmp_0F_To_SpeedToPos                   ; loc_2115A
                bra     Jmp_1C_To_MarkObjGone                  ; loc_21148                    
;-------------------------------------------------------------------------------
Bubbler_Animate_Data:                                   ; loc_2100C
                dc.w    loc_2100E-Bubbler_Animate_Data
loc_2100E:
                dc.b    $01, $00, $00, $00, $00, $01, $01, $01
                dc.b    $01, $01, $01, $01, $00, $00, $00, $00
                dc.b    $01, $01, $01, $01, $01, $01, $01, $00
                dc.b    $00, $00, $00, $01, $01, $01, $01, $01
                dc.b    $01, $01, $02, $02, $02, $02, $02, $03
                dc.b    $03, $03, $03, $03, $04, $04, $04, $04
                dc.b    $04, $05, $05, $05, $05, $05, $06, $06
                dc.b    $06, $06, $06, $06, $06, $06, $06, $06
                dc.b    $06, $06, $06, $06, $06, $06, $06, $06
                dc.b    $06, $06, $06, $06, $06, $06, $06, $06
                dc.b    $06, $06, $06, $06, $07, $07, $08, $08
                dc.b    $07, $07, $08, $08, $FF, $00      
;-------------------------------------------------------------------------------
Bubbler_Mappings:                                       ; loc_2106C
		include 'mappings/sprite/Bubbler.asm'
;===============================================================================
; Object - "Bubbler" Enemy
; [ End ]  Unassigned, supposed to occupy slot 0x55
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_16_To_DeleteObject:                                        ; loc_2113C
		jmp     (DeleteObject)                         ; loc_D314
Jmp_07_To_SingleObjectLoad:                                    ; loc_21142
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_1C_To_MarkObjGone:                                         ; loc_21148
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_09_To_AnimateSprite:                                       ; loc_2114E
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_28_To_ModifySpriteAttr_2P:                                 ; loc_21154
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_0F_To_SpeedToPos:                                          ; loc_2115A
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------

;===============================================================================
; Object 0x4E - Crocobot - Inimigo crocodilo na Hidden Palace
; [ Begin ] 
;===============================================================================
; loc_21160:
Obj4E_Crocobot:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2116E(PC, D0), D1
                jmp     loc_2116E(PC, D1)
;-------------------------------------------------------------------------------
loc_2116E:
                dc.w    loc_21172-loc_2116E
                dc.w    loc_211C2-loc_2116E       
;-------------------------------------------------------------------------------
loc_21172:
                move.l  #Crocobot_Mappings, Obj_Map(A0) ; loc_21290, $0004
                move.w  #$2300, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$0A, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$10, Obj_Height_2(A0)                           ; $0016
                move.b  #$08, Obj_Width_2(A0)                            ; $0017
                bsr     Jmp_03_To_ObjectFall                   ; loc_2144C
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_211C0
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_211C0:
                rts  
;-------------------------------------------------------------------------------
loc_211C2:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_211DE(PC, D0), D1
                jsr     loc_211DE(PC, D1)
                lea     (Crocobot_Animate_Data), A1            ; loc_21276
                bsr     Jmp_0A_To_AnimateSprite                ; loc_21446
                bra     Jmp_1D_To_MarkObjGone                  ; loc_21440    
;-------------------------------------------------------------------------------
loc_211DE:
                dc.w    loc_211E2-loc_211DE
                dc.w    loc_21206-loc_211DE             
;-------------------------------------------------------------------------------
loc_211E2:
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bpl.s   loc_21204
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$FF40, Obj_Speed(A0)                            ; $0010
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                bchg    #00, Obj_Status(A0)                              ; $0022
                bne.s   loc_21204
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_21204:
                rts   
;-------------------------------------------------------------------------------
loc_21206:
                bsr     loc_2123E
                bsr     Jmp_10_To_SpeedToPos                   ; loc_21452
                jsr     (ObjHitFloor)                          ; loc_14204
                cmpi.w  #$FFF8, D1
                blt.s   loc_21226
                cmpi.w  #$000C, D1
                bge.s   loc_21226
                add.w   D1, Obj_Y(A0)                                    ; $000C
                rts
loc_21226:
                subq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$003B, Obj_Control_Var_04(A0)                   ; $0030
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_2123E:
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                bmi.s   loc_21258           
                cmpi.w  #$0040, D0
                bgt.s   loc_2126E
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_21266
                rts
loc_21258:
                cmpi.w  #$FFC0, D0
                blt.s   loc_2126E
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_2126E
loc_21266:
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_2126E:
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                rts                          
;-------------------------------------------------------------------------------
Crocobot_Animate_Data:                                         ; loc_21276
                dc.w    loc_2127C-Crocobot_Animate_Data
                dc.w    loc_21284-Crocobot_Animate_Data
                dc.w    loc_21287-Crocobot_Animate_Data
loc_2127C:
                dc.b    $03, $00, $04, $02, $03, $01, $05, $FF
loc_21284:
                dc.b    $0F, $00, $FF
loc_21287:
                dc.b    $03, $06, $0A, $08, $09, $07, $0B, $FF
                dc.b    $00                                     
;-------------------------------------------------------------------------------
Crocobot_Mappings:                                             ; loc_21290
                dc.w    loc_212A8-Crocobot_Mappings
                dc.w    loc_212CA-Crocobot_Mappings
                dc.w    loc_212EC-Crocobot_Mappings
                dc.w    loc_2130E-Crocobot_Mappings
                dc.w    loc_21330-Crocobot_Mappings
                dc.w    loc_21352-Crocobot_Mappings
                dc.w    loc_21374-Crocobot_Mappings
                dc.w    loc_21396-Crocobot_Mappings
                dc.w    loc_213B8-Crocobot_Mappings
                dc.w    loc_213DA-Crocobot_Mappings
                dc.w    loc_213FC-Crocobot_Mappings
                dc.w    loc_2141E-Crocobot_Mappings
loc_212A8:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4
                dc.l    $F8050018, $000C0004
                dc.l    $0001001C, $000E0004
                dc.l    $00050020, $0010000C
loc_212CA:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4
                dc.l    $F8050018, $000C0004
                dc.l    $0001001C, $000E0004
                dc.l    $00050024, $0012000C
loc_212EC:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4
                dc.l    $F8050018, $000C0004
                dc.l    $0001001C, $000E0004
                dc.l    $00050028, $0014000C
loc_2130E:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4
                dc.l    $F8050018, $000C0004
                dc.l    $0001001E, $000F0004
                dc.l    $00050020, $0010000C
loc_21330:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4
                dc.l    $F8050018, $000C0004
                dc.l    $0001001E, $000F0004
                dc.l    $00050024, $0012000C
loc_21352:
                dc.w    $0004
                dc.l    $F80E0000, $0000FFE4
                dc.l    $F8050018, $000C0004
                dc.l    $0001001E, $000F0004
                dc.l    $00050028, $0014000C
loc_21374:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC
                dc.l    $F8050018, $000C0004
                dc.l    $0001001C, $000E0004
                dc.l    $00050020, $0010000C
loc_21396:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC
                dc.l    $F8050018, $000C0004
                dc.l    $0001001C, $000E0004
                dc.l    $00050024, $0012000C
loc_213B8:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC
                dc.l    $F8050018, $000C0004
                dc.l    $0001001C, $000E0004
                dc.l    $00050028, $0014000C
loc_213DA:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC
                dc.l    $F8050018, $000C0004
                dc.l    $0001001E, $000F0004
                dc.l    $00050020, $0010000C
loc_213FC:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC
                dc.l    $F8050018, $000C0004
                dc.l    $0001001E, $000F0004
                dc.l    $00050024, $0012000C
loc_2141E:
                dc.w    $0004
                dc.l    $F00B000C, $0006FFEC
                dc.l    $F8050018, $000C0004
                dc.l    $0001001E, $000F0004
                dc.l    $00050028, $0014000C 
;===============================================================================
; Object 0x4E - Crocobot - Inimigo crocodilo na Hidden Palace
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_1D_To_MarkObjGone:                                         ; loc_21440
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_0A_To_AnimateSprite:                                       ; loc_21446
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_03_To_ObjectFall:                                          ; loc_2144C
		jmp     (ObjectFall)                           ; loc_D1AE
Jmp_10_To_SpeedToPos:                                          ; loc_21452
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj_Blink:                                                     ; loc_21458
;===============================================================================
; Object - Inimigo "Blink"
; [ Begin ]
;===============================================================================
; loc_21458:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_21466(PC, D0), D1
                jmp     loc_21466(PC, D1)            
;-------------------------------------------------------------------------------    
loc_21466:
                dc.w    loc_2146E-loc_21466
                dc.w    loc_21558-loc_21466
                dc.w    loc_21586-loc_21466
                dc.w    loc_21516-loc_21466         
;-------------------------------------------------------------------------------
loc_2146E:
                move.l  #Blink_Mappings, Obj_Map(A0)    ; loc_21678, $0004
                move.w  #$24E1, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_29_To_ModifySpriteAttr_2P          ; loc_216F0
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$14, Obj_Width(A0)                              ; $0019
                move.b  #$0C, Obj_Height_2(A0)                           ; $0016
                move.b  #$08, Obj_Width_2(A0)                            ; $0017
                move.b  #$0C, Obj_Col_Flags(A0)                          ; $0020
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$000F, Obj_Timer(A0)                            ; $002A
                move.w  #$FF00, Obj_Speed(A0)                            ; $0010
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_214C0
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_214C0:
                bsr     Jmp_08_To_SingleObjectLoad             ; loc_216D2
                bne.s   loc_21514
                move.b  (A0), (A1)
                move.l  #Blink_Mappings, Obj_Map(A1)    ; loc_21678, $0004
                move.w  #$04E1, Obj_Art_VRAM(A1)                         ; $0002
                bsr     Jmp_29_To_ModifySpriteAttr_2P          ; loc_216F0
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$14, Obj_Width(A1)                              ; $0019
                move.b  #$0C, Obj_Height_2(A1)                           ; $0016
                move.b  #$08, Obj_Width_2(A1)                            ; $0017
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.l  A0, Obj_Control_Var_00(A1)                       ; $002C
loc_21514:
                rts   
;-------------------------------------------------------------------------------
loc_21516:
                move.l  Obj_Control_Var_00(A0), A1                       ; $002C
                tst.b   (A1)
                beq     Jmp_17_To_DeleteObject                 ; loc_216CC
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                addi.w  #$0001, Obj_Y(A0)                                ; $000C
                move.w  #$0015, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_21546
                neg.w   D0
loc_21546:
                add.w   D0, Obj_X(A0)                                    ; $0008
                lea     (Blink_Animate_Data), A1               ; loc_2166A
                bsr     Jmp_0B_To_AnimateSprite                ; loc_216DE
                bra     Jmp_1E_To_MarkObjGone                  ; loc_216D8 
;-------------------------------------------------------------------------------
loc_21558:
                bsr     Jmp_11_To_SpeedToPos                   ; loc_216FC
                bsr     loc_21564
                bra     Jmp_1E_To_MarkObjGone                  ; loc_216D8
loc_21564:
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bne.s   loc_21584
                bsr     Jmp_08_To_SingleObjectLoad             ; loc_216D2
                bne.s   loc_21584
                move.b  (A0), (A1)
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  #$0078, Obj_Timer(A1)                            ; $002A
                move.l  A0, Obj_Control_Var_00(A1)                       ; $002C
loc_21584:
                rts
;-------------------------------------------------------------------------------
loc_21586:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_21594(PC, D0), D1
                jmp     loc_21594(PC, D1)     
;-------------------------------------------------------------------------------
loc_21594:
                dc.w    loc_21598-loc_21594
                dc.w    loc_2163A-loc_21594       
;-------------------------------------------------------------------------------  
loc_21598:
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                bmi     loc_2162C
                bsr     Jmp_01_To_PseudoRandomNumber           ; loc_216E4
                andi.w  #$007F, D0
                bne     loc_2162A
                bsr     Jmp_08_To_SingleObjectLoad             ; loc_216D2
                bne.s   loc_2162A
                move.b  (A0), (A1)
                move.l  #Blink_Mappings, Obj_Map(A1)    ; loc_21678, $0004
                move.w  #$64E1, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                addi.b  #$02, Obj_Routine_2(A1)                          ; $0025
                bsr     Jmp_29_To_ModifySpriteAttr_2P          ; loc_216F0
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$04, Obj_Height_2(A1)                           ; $0016
                move.b  #$08, Obj_Width_2(A1)                            ; $0017
                move.b  #$01, Obj_Ani_Number(A1)                         ; $001C
                move.l  Obj_Control_Var_00(A0), A2                       ; $002C
                tst.b   (A2)
                beq.s   loc_2162C
                move.b  Obj_Status(A2), Obj_Status(A1)            ; $0022, $0022
                move.b  Obj_Flags(A2), Obj_Flags(A1)              ; $0001, $0001
                move.w  Obj_X(A2), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A2), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0007, Obj_Y(A1)                                ; $000C
                addi.w  #$0007, Obj_X(A1)                                ; $0008
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_2162A
                subi.w  #$000E, Obj_X(A1)                                ; $0008
loc_2162A:
                rts
loc_2162C:
                move.l  Obj_Control_Var_00(A0), A1                       ; $002C
                move.w  #$003C, Obj_Timer(A1)                            ; $002A
                bra     Jmp_17_To_DeleteObject                 ; loc_216CC    
;-------------------------------------------------------------------------------  
loc_2163A:
                bsr     Jmp_04_To_ObjectFall                   ; loc_216F6
                bsr     Jmp_04_To_ObjHitFloor                  ; loc_216EA
                tst.w   D1
                bpl.s   loc_2165C
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  #$55, Obj_Id(A0)                                 ; $0000
                move.b  #$00, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Routine(A0)                            ; $0024
loc_2165C:
                lea     (Blink_Animate_Data), A1               ; loc_2166A
                bsr     Jmp_0B_To_AnimateSprite                ; loc_216DE
                bra     Jmp_1E_To_MarkObjGone                  ; loc_216D8       
;-------------------------------------------------------------------------------
Blink_Animate_Data:                                            ; loc_2166A
                dc.w    loc_2166E-Blink_Animate_Data
                dc.w    loc_21672-Blink_Animate_Data
loc_2166E:
                dc.b    $03, $01, $06, $FF
loc_21672:
                dc.b    $03, $02, $05, $03, $04, $FF     
;-------------------------------------------------------------------------------
Blink_Mappings:                                                ; loc_21678
                dc.w    loc_21686-Blink_Mappings
                dc.w    loc_21690-Blink_Mappings
                dc.w    loc_2169A-Blink_Mappings
                dc.w    loc_216A4-Blink_Mappings
                dc.w    loc_216AE-Blink_Mappings
                dc.w    loc_216B8-Blink_Mappings
                dc.w    loc_216C2-Blink_Mappings
loc_21686:
                dc.w    $0001
                dc.l    $F00F0000, $0000FFF0
loc_21690:
                dc.w    $0001
                dc.l    $F8010012, $0009FFFC
loc_2169A:
                dc.w    $0001
                dc.l    $FC000014, $000AFFFC
loc_216A4:
                dc.w    $0001
                dc.l    $FC000015, $000AFFFC
loc_216AE:
                dc.w    $0001
                dc.l    $FC000016, $000BFFFC
loc_216B8:
                dc.w    $0001
                dc.l    $FC000017, $000BFFFC
loc_216C2:
                dc.w    $0001
                dc.l    $F8010010, $0008FFFC
;===============================================================================
; Object - Inimigo "Blink"
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_17_To_DeleteObject:                                        ; loc_216CC
		jmp     (DeleteObject)                         ; loc_D314
Jmp_08_To_SingleObjectLoad:                                    ; loc_216D2
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_1E_To_MarkObjGone:                                         ; loc_216D8
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_0B_To_AnimateSprite:                                       ; loc_216DE
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_01_To_PseudoRandomNumber:                                  ; loc_216E4
		jmp     (PseudoRandomNumber)                   ; loc_325C
Jmp_04_To_ObjHitFloor:                                         ; loc_216EA
		jmp     (ObjHitFloor)                          ; loc_14204
Jmp_29_To_ModifySpriteAttr_2P:                                 ; loc_216F0
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_04_To_ObjectFall:                                          ; loc_216F6
		jmp     (ObjectFall)                           ; loc_D1AE
Jmp_11_To_SpeedToPos:                                          ; loc_216FC
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj4A_Octus:                                                ; loc_21704
;===============================================================================
; Object 0x4A - Inimigo Octus na Oil Ocean
; [ Begin ] 
;===============================================================================   
; loc_21704:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_21712(PC, D0), D1
                jmp     loc_21712(PC, D1)
;-------------------------------------------------------------------------------
loc_21712:
                dc.w    loc_21742-loc_21712
                dc.w    loc_217A8-loc_21712
                dc.w    loc_21736-loc_21712
                dc.w    loc_2171A-loc_21712      
;-------------------------------------------------------------------------------
loc_2171A:
                subi.w  #$0001, Obj_Control_Var_00(A0)                   ; $002C
                bmi.s   loc_21724
                rts
loc_21724:
                bsr     Jmp_05_To_ObjectFall                   ; loc_219AC
                lea     (Octus_AnimateData), A1                ; loc_218F6
                bsr     Jmp_0C_To_AnimateSprite                ; loc_219A6
                bra     Jmp_1F_To_MarkObjGone                  ; loc_219A0      
;-------------------------------------------------------------------------------
loc_21736:
                subq.w  #$01, Obj_Control_Var_00(A0)                     ; $002C
                beq     Jmp_18_To_DeleteObject                 ; loc_2199A
                bra     Jmp_15_To_DisplaySprite                ; loc_21994   
;-------------------------------------------------------------------------------
loc_21742:
                move.l  #Octus_Mappings, Obj_Map(A0)    ; loc_21908, $0004
                move.w  #$238A, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$0A, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$10, Obj_Height_2(A0)                           ; $0016
                move.b  #$08, Obj_Width_2(A0)                            ; $0017
                bsr     Jmp_05_To_ObjectFall                   ; loc_219AC
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_217A0
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                bpl.s   loc_217A0
                bchg    #00, Obj_Status(A0)                              ; $0022
loc_217A0:
                move.w  Obj_Y(A0), Obj_Timer(A0)                  ; $000C, $002A
                rts        
;-------------------------------------------------------------------------------
loc_217A8:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_217C4(PC, D0), D1
                jsr     loc_217C4(PC, D1)
                lea     (Octus_AnimateData), A1                ; loc_218F6
                bsr     Jmp_0C_To_AnimateSprite                ; loc_219A6
                bra     Jmp_1F_To_MarkObjGone                  ; loc_219A0     
;-------------------------------------------------------------------------------
loc_217C4:
                dc.w    loc_217CC-loc_217C4
                dc.w    loc_217EC-loc_217C4
                dc.w    loc_2180E-loc_217C4
                dc.w    loc_218E0-loc_217C4    
;-------------------------------------------------------------------------------
loc_217CC:
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                cmpi.w  #$0080, D0
                bgt.s   loc_217EA
                cmpi.w  #$FF80, D0
                blt.s   loc_217EA
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
loc_217EA:
                rts  
;-------------------------------------------------------------------------------
loc_217EC:
                subi.l  #$00018000, Obj_Y(A0)                            ; $000C
                move.w  Obj_Timer(A0), D0                                ; $002A
                sub.w   Obj_Y(A0), D0                                    ; $000C
                cmpi.w  #$0020, D0
                ble.s   loc_2180C
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$0000, Obj_Control_Var_00(A0)                   ; $002C
loc_2180C:
                rts  
;-------------------------------------------------------------------------------
loc_2180E:
                subi.w  #$0001, Obj_Control_Var_00(A0)                   ; $002C
                beq     loc_218DA
                bpl     loc_218D8
                move.w  #$001E, Obj_Control_Var_00(A0)                   ; $002C
                jsr     (SingleObjectLoad)                     ; loc_E6FE
                bne.s   loc_21874
                move.b  #$4A, Obj_Id(A1)                                 ; $0000
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.l  #Octus_Mappings, Obj_Map(A1)    ; loc_21908, $0004
                move.b  #$04, Obj_Map_Id(A1)                             ; $001A
                move.w  #$24C6, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  #$001E, Obj_Control_Var_00(A1)                   ; $002C
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
loc_21874:
                jsr     (SingleObjectLoad)                     ; loc_E6FE
                bne.s   loc_218D8
                move.b  #$4A, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.l  #Octus_Mappings, Obj_Map(A1)    ; loc_21908, $0004
                move.w  #$24C6, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  #$000F, Obj_Control_Var_00(A1)                   ; $002C
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.w  #$FA80, Obj_Speed(A1)                            ; $0010
                btst    #$00, Obj_Flags(A1)                              ; $0001
                beq.s   loc_218D8
                neg.w   Obj_Speed(A1)                                    ; $0010
loc_218D8:
                rts
loc_218DA:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                rts   
;-------------------------------------------------------------------------------
loc_218E0:
                move.w  #$FFFA, D0
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_218EE
                neg.w   D0
loc_218EE:
                add.w   D0, Obj_X(A0)                                    ; $0008
                bra     Jmp_1F_To_MarkObjGone                  ; loc_219A0            
;-------------------------------------------------------------------------------
Octus_AnimateData:                                             ; loc_218F6
                dc.w    loc_218FC-Octus_AnimateData
                dc.w    loc_218FF-Octus_AnimateData
                dc.w    loc_21904-Octus_AnimateData
loc_218FC:
                dc.b    $0F, $00, $FF
loc_218FF:
                dc.b    $03, $01, $02, $03, $FF
loc_21904:
                dc.b    $02, $05, $06, $FF         
;-------------------------------------------------------------------------------
Octus_Mappings:                                                ; loc_21908
                dc.w    loc_21916-Octus_Mappings
                dc.w    loc_21928-Octus_Mappings
                dc.w    loc_21942-Octus_Mappings
                dc.w    loc_2195C-Octus_Mappings
                dc.w    loc_21976-Octus_Mappings
                dc.w    loc_21980-Octus_Mappings
                dc.w    loc_2198A-Octus_Mappings
loc_21916:
                dc.w    $0002
                dc.l    $F00D0000, $0000FFF0
                dc.l    $000D0008, $0004FFF0
loc_21928:
                dc.w    $0003
                dc.l    $F00D0000, $0000FFF0
                dc.l    $00090010, $0008FFE8
                dc.l    $00090016, $000B0000
loc_21942:
                dc.w    $0003
                dc.l    $F00D0000, $0000FFF0
                dc.l    $0009001C, $000EFFE8
                dc.l    $00090022, $00110000
loc_2195C:
                dc.w    $0003
                dc.l    $F00D0000, $0000FFF0
                dc.l    $00090028, $0014FFE8
                dc.l    $0009002E, $00170000
loc_21976:
                dc.w    $0001
                dc.l    $F0010034, $001AFFF7
loc_21980:
                dc.w    $0001
                dc.l    $F2010036, $001BFFF0
loc_2198A:
                dc.w    $0001
                dc.l    $F2010038, $001CFFF0
;===============================================================================
; Object 0x4A - Inimigo Octus na Oil Ocean
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_15_To_DisplaySprite:                                       ; loc_21994
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_18_To_DeleteObject:                                        ; loc_2199A
		jmp     (DeleteObject)                         ; loc_D314
Jmp_1F_To_MarkObjGone:                                         ; loc_219A0
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_0C_To_AnimateSprite:                                       ; loc_219A6
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_05_To_ObjectFall:                                          ; loc_219AC
		jmp     (ObjectFall)                           ; loc_D1AE
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj4F_Dinobot:                                              ; loc_219B4
;===============================================================================
; Object 0x4F - Dinobot - Inimigo dinossauro na Hidden Palace
; [ Begin ]
;===============================================================================
; loc_219B4:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_219C2(PC, D0), D1
                jmp     loc_219C2(PC, D1)
;-------------------------------------------------------------------------------
loc_219C2:
                dc.w    loc_219C8-loc_219C2
                dc.w    loc_21A1E-loc_219C2
                dc.w    loc_21AC0-loc_219C2
;-------------------------------------------------------------------------------
loc_219C8:
                move.l  #Dinobot_Mappings, Obj_Map(A0)  ; loc_21AD2, $0004
                move.w  #$0500, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$10, Obj_Height_2(A0)                           ; $0016
                move.b  #$06, Obj_Width_2(A0)                            ; $0017
                move.b  #$0C, Obj_Col_Flags(A0)                          ; $0020
                bsr     Jmp_06_To_ObjectFall                   ; loc_21B0A
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_21A1C
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bchg    #00, Obj_Status(A0)                              ; $0022
loc_21A1C:
                rts
;-------------------------------------------------------------------------------
loc_21A1E:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_21A64(PC, D0), D1
                jsr     loc_21A64(PC, D1)
                lea     (Dinobot_Animate_Data), A1             ; loc_21AC4
                bsr     Jmp_0D_To_AnimateSprite                ; loc_21B04
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   (Camera_X_pos_coarse).w, D0                  ; $FFFFF7DA
                cmpi.w  #$0280, D0
                bhi     loc_21A4E
                bra     Jmp_16_To_DisplaySprite                ; loc_21AF8
loc_21A4E:
                lea     (Obj_respawn_index).w, A2                    ; $FFFFFC00
                moveq   #$00, D0
                move.b  Obj_Respaw_Ref(A0), D0                           ; $0023
                beq.s   loc_21A60
                bclr    #$07, $02(A2, D0)
loc_21A60:
                bra     Jmp_19_To_DeleteObject                 ; loc_21AFE
;-------------------------------------------------------------------------------
loc_21A64:
                dc.w    loc_21A68-loc_21A64
                dc.w    loc_21A8C-loc_21A64
;-------------------------------------------------------------------------------
loc_21A68:
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bpl.s   loc_21A8A
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$FF80, Obj_Speed(A0)                            ; $0010
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                bchg    #00, Obj_Status(A0)                              ; $0022
                bne.s   loc_21A8A
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_21A8A:
                rts
;-------------------------------------------------------------------------------
loc_21A8C:
                bsr     Jmp_12_To_SpeedToPos                   ; loc_21B10
                jsr     (ObjHitFloor)                          ; loc_14204
                cmpi.w  #$FFF8, D1
                blt.s   loc_21AA8
                cmpi.w  #$000C, D1
                bge.s   loc_21AA8
                add.w   D1, Obj_Y(A0)                                    ; $000C
                rts
loc_21AA8:
                subq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$003B, Obj_Control_Var_04(A0)                   ; $0030
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                rts
;-------------------------------------------------------------------------------
loc_21AC0:
                bra     Jmp_19_To_DeleteObject                 ; loc_21AFE
;-------------------------------------------------------------------------------
Dinobot_Animate_Data:                                          ; loc_21AC4
                dc.w    loc_21AC8-Dinobot_Animate_Data
                dc.w    loc_21ACB-Dinobot_Animate_Data
loc_21AC8:
                dc.b    $09, $01, $FF
loc_21ACB:
                dc.b    $09, $00, $01, $02, $01, $FF, $00
;-------------------------------------------------------------------------------
Dinobot_Mappings:                                              ; loc_21AD2
		include 'mappings/sprite/obj4F.asm'
;===============================================================================
; Object 0x4F - Dinobot - Inimigo dinossauro na Hidden Palace
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		dc.w    $0000
Jmp_16_To_DisplaySprite:                                       ; loc_21AF8
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_19_To_DeleteObject:                                        ; loc_21AFE
		jmp     (DeleteObject)                         ; loc_D314
Jmp_0D_To_AnimateSprite:                                       ; loc_21B04
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_06_To_ObjectFall:                                          ; loc_21B0A
		jmp     (ObjectFall)                           ; loc_D1AE
Jmp_12_To_SpeedToPos:                                          ; loc_21B10
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj5A:                                                      ; loc_21B18
;===============================================================================
; Object 0x5A - Crawl (shield badnik) from CNZ (Unused)
; [ Begin ] 
;===============================================================================   
; loc_21B18:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_21B26(PC, D0), D1
                jmp     loc_21B26(PC, D1)
;-------------------------------------------------------------------------------
loc_21B26:
                dc.w    loc_21B2C-loc_21B26
                dc.w    loc_21BD4-loc_21B26
                dc.w    loc_21BE2-loc_21B26            
;------------------------------------------------------------------------------- 
loc_21B2C:
                subi.b  #$01, Obj_Subtype(A0)                            ; $0028
                bpl     loc_21BD2
                move.l  #Crawl_Mappings, Obj_Map(A0)                     ; $0004
                move.w  #$03C4, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$10, Obj_Height_2(A0)                           ; $0016
                move.b  #$08, Obj_Width_2(A0)                            ; $0017
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     Jmp_09_To_SingleObjectLoad             ; loc_21D98
                bne.s   loc_21BD2
                move.b  #$5A, Obj_Id(A1)                                 ; $0000
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.l  #Crawl_Mappings, Obj_Map(A1)                     ; $0004
                move.w  #$03C4, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$0A, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                subi.w  #$0008, Obj_Y(A1)                                ; $000C
                move.w  #$0072, Obj_Timer(A1)                            ; $002A
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bmi.s   loc_21BD2
                bset    #$00, Obj_Status(A1)                             ; $0022
                bset    #$00, Obj_Flags(A1)                              ; $0001
loc_21BD2:
                rts     
;------------------------------------------------------------------------------- 
loc_21BD4:
                lea     (loc_21C7A), A1
                bsr     Jmp_0E_To_AnimateSprite                ; loc_21DA4
                bra     Jmp_20_To_MarkObjGone                  ; loc_21D9E  
;------------------------------------------------------------------------------- 
loc_21BE2:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_21BF0(PC, D0), D1
                jmp     loc_21BF0(PC, D1)              
;-------------------------------------------------------------------------------  
loc_21BF0:
                dc.w    loc_21BF6-loc_21BF0
                dc.w    loc_21C12-loc_21BF0
                dc.w    loc_21C2E-loc_21BF0      
;-------------------------------------------------------------------------------   
loc_21BF6:
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bne     loc_21C10
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0020, Obj_Timer(A0)                            ; $002A
loc_21C10:
                rts       
;-------------------------------------------------------------------------------  
loc_21C12:
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bmi.s   loc_21C28
loc_21C1A:
                lea     (loc_21C7A), A1
                bsr     Jmp_0E_To_AnimateSprite                ; loc_21DA4
                bra     Jmp_20_To_MarkObjGone                  ; loc_21D9E
loc_21C28:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bra.s   loc_21C1A    
;-------------------------------------------------------------------------------  
loc_21C2E:
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                bmi.s   loc_21C46
                bset    #$00, Obj_Status(A0)                             ; $0022
                bset    #$00, Obj_Flags(A0)                              ; $0001
                bra.s   loc_21C52
loc_21C46:
                bclr    #$00, Obj_Status(A0)                             ; $0022
                bclr    #$00, Obj_Flags(A0)                              ; $0001
loc_21C52:
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                move.w  Obj_Y(A0), D0                                    ; $000C
                sub.w   ($FFFFB00C).w, D0
                cmpi.w  #$001E, D0
                blt.s   loc_21C6C
                addi.b  #$01, Obj_Ani_Number(A0)                         ; $001C
loc_21C6C:
                lea     (loc_21C7A), A1
                bsr     Jmp_0E_To_AnimateSprite                ; loc_21DA4
                bra     Jmp_20_To_MarkObjGone                  ; loc_21D9E           
;-------------------------------------------------------------------------------  
loc_21C7A:
                dc.w    loc_21C82-loc_21C7A
                dc.w    loc_21C96-loc_21C7A
                dc.w    loc_21C9D-loc_21C7A
                dc.w    loc_21CA0-loc_21C7A
loc_21C82:
                dc.b    $05, $00, $00, $00, $00, $00, $00, $00
                dc.b    $01, $01, $01, $01, $02, $02, $02, $02
                dc.b    $02, $03, $FE, $01
loc_21C96:
                dc.b    $07, $04, $05, $06, $07, $FD, $02
loc_21C9D:
                dc.b    $0F, $07, $FF
loc_21CA0:
                dc.b    $0F, $08, $FF, $00       
;-------------------------------------------------------------------------------  
;loc_21CA4:
Crawl_Mappings:
                include 'mappings/sprite/obj5A.asm'
;===============================================================================
; Object 0x5A - Crawl (shield badnik) from CNZ (Unused)
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_09_To_SingleObjectLoad:                                    ; loc_21D98
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_20_To_MarkObjGone:                                         ; loc_21D9E
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_0E_To_AnimateSprite:                                       ; loc_21DA4
		jmp     (AnimateSprite)                        ; loc_D372
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj50_Aquis:                                                ; loc_21DAC
;===============================================================================
; Object 0x50 - Seahorse Badnik (Aquis) from Oil Ocean
; [ Begin ]
;===============================================================================
; loc_21DAC:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_21DBA(PC, D0), D1
                jmp     loc_21DBA(PC, D1)
;-------------------------------------------------------------------------------   
loc_21DBA:
                dc.w    loc_21DC6-loc_21DBA
                dc.w    loc_21E7E-loc_21DBA
                dc.w    loc_21EAA-loc_21DBA
                dc.w    loc_21ED4-loc_21DBA
                dc.w    loc_220B6-loc_21DBA
                dc.w    loc_220F2-loc_21DBA        
;------------------------------------------------------------------------------- 
loc_21DC6:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Aquis_Mappings, Obj_Map(A0)    ; loc_2227C, $0004
                move.w  #$2570, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$0A, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.w  #$FF00, Obj_Speed(A0)                            ; $0010
                move.b  Obj_Subtype(A0), D0                              ; $0028
                move.b  D0, D1
                andi.w  #$00F0, D1
                lsl.w   #$04, D1
                move.w  D1, Obj_Control_Var_02(A0)                       ; $002E
                move.w  D1, Obj_Control_Var_04(A0)                       ; $0030
                andi.w  #$000F, D0
                lsl.w   #$04, D0
                subq.w  #$01, D0
                move.w  D0, Obj_Control_Var_06(A0)                       ; $0032
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034
                move.w  Obj_Y(A0), Obj_Timer(A0)                  ; $000C, $002A
                bsr     Jmp_0A_To_SingleObjectLoad             ; loc_22618
                bne.s   loc_21E7E
                move.b  #$50, Obj_Id(A1)                                 ; $0000
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$000A, Obj_X(A1)                                ; $0008
                addi.w  #$FFFA, Obj_Y(A1)                                ; $000C
                move.l  #Aquis_Mappings, Obj_Map(A1)    ; loc_2227C, $0004
                move.w  #$24E0, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.b  #$03, Obj_Ani_Number(A1)                         ; $001C
                move.l  A1, Obj_Control_Var_0A(A0)                       ; $0036
                move.l  A0, Obj_Control_Var_0A(A1)                       ; $0036
                bset    #$06, Obj_Status(A0)                             ; $0022   
;------------------------------------------------------------------------------- 
loc_21E7E:
                lea     (Aquis_Animate_Data), A1               ; loc_22244
                bsr     Jmp_0F_To_AnimateSprite                ; loc_22624
                move.w  #$039C, (Water_Level).w                      ; $FFFFF646
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_21EA4(PC, D0), D1
                jsr     loc_21EA4(PC, D1)
                bsr     loc_2207C
                bra     Jmp_21_To_MarkObjGone                  ; loc_2261E       
;------------------------------------------------------------------------------- 
loc_21EA4:
                dc.w    loc_21EEA-loc_21EA4
                dc.w    loc_21EFC-loc_21EA4
                dc.w    loc_21F0A-loc_21EA4   
;-------------------------------------------------------------------------------  
loc_21EAA:
                move.l  Obj_Control_Var_0A(A0), A1                       ; $0036
                tst.b   (A1)
                beq     Jmp_1A_To_DeleteObject                 ; loc_22612
                cmpi.b  #$50, (A1)
                bne     Jmp_1A_To_DeleteObject                 ; loc_22612
                btst    #$07, Obj_Status(A1)                             ; $0022
                bne     Jmp_1A_To_DeleteObject                 ; loc_22612
                lea     (Aquis_Animate_Data), A1               ; loc_22244
                bsr     Jmp_0F_To_AnimateSprite                ; loc_22624
                bra     Jmp_17_To_DisplaySprite                ; loc_2260C 
;-------------------------------------------------------------------------------  
loc_21ED4:
                bsr     loc_221A0
                bsr     Jmp_13_To_SpeedToPos                   ; loc_22630
                lea     (Aquis_Animate_Data), A1               ; loc_22244
                bsr     Jmp_0F_To_AnimateSprite                ; loc_22624
                bra     Jmp_21_To_MarkObjGone                  ; loc_2261E   
;-------------------------------------------------------------------------------  
loc_21EEA:
                bsr     Jmp_13_To_SpeedToPos                   ; loc_22630
                bsr     loc_22182
                bsr     loc_22028
                bsr     loc_21FC0
                rts    
;-------------------------------------------------------------------------------  
loc_21EFC:
                bsr     Jmp_13_To_SpeedToPos                   ; loc_22630
                bsr     loc_22182
                bsr     loc_2204A
                rts 
;-------------------------------------------------------------------------------  
loc_21F0A:
                bsr     Jmp_07_To_ObjectFall                   ; loc_2262A
                bsr     loc_22182
                bsr     loc_21F1C
                bsr     loc_21F98
                rts
loc_21F1C:
                tst.b   Obj_Control_Var_01(A0)                           ; $002D
                bne.s   loc_21F28
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bpl.s   loc_21F2A
loc_21F28:
                rts
loc_21F2A:
                st      Obj_Control_Var_01(A0)                           ; $002D
                bsr     Jmp_0A_To_SingleObjectLoad             ; loc_22618
                bne.s   loc_21F96
                move.b  #$50, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.l  #Aquis_Mappings, Obj_Map(A1)    ; loc_2227C, $0004
                move.w  #$24E0, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$E5, Obj_Col_Flags(A1)                          ; $0020
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.w  #$000C, D0
                move.w  #$0010, D1
                move.w  #$FD00, D2
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_21F8A
                neg.w   D1
                neg.w   D2
loc_21F8A:
                sub.w   D0, Obj_Y(A1)                                    ; $000C
                sub.w   D1, Obj_X(A1)                                    ; $0008
                move.w  D2, Obj_Speed(A1)                                ; $0010
loc_21F96:
                rts
loc_21F98:
                move.w  Obj_Y(A0), D0                                    ; $000C
                cmp.w   ($FFFFF646).w, D0
                blt.s   loc_21FBE
                move.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.w  Obj_Control_Var_04(A0), Obj_Control_Var_02(A0); $002E, $0030
                move.w  #$0040, Obj_Speed_Y(A0)                          ; $0012
                sf      Obj_Control_Var_01(A0)                           ; $002D
loc_21FBE:
                rts
loc_21FC0:
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                beq.s   loc_22026
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                move.w  (Player_One_Position_Y).w, D1                ; $FFFFB00C
                sub.w   Obj_Y(A0), D1                                    ; $000C
                bpl.s   loc_22026
                cmpi.w  #$FFD0, D1
                blt.s   loc_22026
                sub.w   Obj_X(A0), D0                                    ; $0008
                cmpi.w  #$0048, D0
                bgt.s   loc_22026
                cmpi.w  #$FFB8, D0
                blt.s   loc_22026
                tst.w   D0
                bpl.s   loc_21FFE
                cmpi.w  #$FFD8, D0
                bgt.s   loc_22026
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_22026
                bra.s   loc_2200C
loc_21FFE:
                cmpi.w  #$0028, D0
                blt.s   loc_22026
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_22026
loc_2200C:
                moveq   #$20, D0
                cmp.w   Obj_Control_Var_06(A0), D0                       ; $0032
                bgt.s   loc_22026
                move.b  #$04, Obj_Routine_2(A0)                          ; $0025
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$FC00, Obj_Speed_Y(A0)                          ; $0012
loc_22026:
                rts
loc_22028:
                subq.w  #$01, Obj_Control_Var_02(A0)                     ; $002E
                bne.s   loc_22048
                move.w  Obj_Control_Var_04(A0), Obj_Control_Var_02(A0); $002E, $0030
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$FFC0, D0
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                beq.s   loc_22044
                neg.w   D0
loc_22044:
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
loc_22048:
                rts
loc_2204A:
                move.w  Obj_Y(A0), D0                                    ; $000C
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_22068
                cmp.w   ($FFFFF646).w, D0
                bgt.s   loc_22066
                subq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                st      Obj_Control_Var_00(A0)                           ; $002C
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
loc_22066:
                rts
loc_22068:
                cmp.w   Obj_Timer(A0), D0                                ; $002A
                blt.s   loc_22066
                subq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                sf      Obj_Control_Var_00(A0)                           ; $002C
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
                rts
loc_2207C:
                moveq   #$0A, D0
                moveq   #-$06, D1
                move.l  Obj_Control_Var_0A(A0), A1                       ; $0036
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.b  Obj_Respaw_Ref(A0), Obj_Respaw_Ref(A1)    ; $0023, $0023
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_220AC
                neg.w   D0
loc_220AC:
                add.w   D0, Obj_X(A1)                                    ; $0008
                add.w   D1, Obj_Y(A1)                                    ; $000C
                rts 
;-------------------------------------------------------------------------------  
loc_220B6:
                bsr     Jmp_07_To_ObjectFall                   ; loc_2262A
                bsr     loc_220CC
                lea     (Aquis_Animate_Data), A1               ; loc_22244
                bsr     Jmp_0F_To_AnimateSprite                ; loc_22624
                bra     Jmp_21_To_MarkObjGone                  ; loc_2261E
loc_220CC:
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_220E6
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Speed_Y(A0), D0                              ; $0012
                asr.w   #$01, D0
                neg.w   D0
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
loc_220E6:
                subi.b  #$01, Obj_Col_Prop(A0)                           ; $0021
                beq     Jmp_1A_To_DeleteObject                 ; loc_22612
                rts             
;-------------------------------------------------------------------------------  
loc_220F2:
                bsr     loc_22142
                tst.b   Obj_Routine_2(A0)                                ; $0025
                beq.s   loc_22132
                subi.w  #$0001, Obj_Control_Var_00(A0)                   ; $002C
                beq     Jmp_1A_To_DeleteObject                 ; loc_22612
                move.w  (Player_One_Position_X).w, Obj_X(A0)         ; $FFFFB008; $0008
                move.w  (Player_One_Position_Y).w, Obj_Y(A0)         ; $FFFFB00C; $000C
                addi.w  #$000C, Obj_Y(A0)                                ; $000C
                subi.b  #$01, Obj_Timer(A0)                              ; $002A
                bne.s   loc_22134
                move.b  #$03, Obj_Timer(A0)                              ; $002A
                bchg    #00, Obj_Status(A0)                              ; $0022
                bchg    #00, Obj_Flags(A0)                               ; $0001
loc_22132:
                rts
loc_22134:
                lea     (Aquis_Animate_Data), A1               ; loc_22244
                bsr     Jmp_0F_To_AnimateSprite                ; loc_22624
                bra     Jmp_17_To_DisplaySprite                ; loc_2260C
loc_22142:
                tst.b   Obj_Routine_2(A0)                                ; $0025
                bne.s   loc_22180
                move.b  (Player_One+Obj_Routine).w, D0               ; $FFFFB024
                cmpi.b  #$02, D0
                bne.s   loc_22180
                move.w  (Player_One_Position_X).w, Obj_X(A0)         ; $FFFFB008; $0008
                move.w  (Player_One_Position_Y).w, Obj_Y(A0)         ; $FFFFB00C; $000C
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                move.b  #$05, Obj_Ani_Number(A0)                         ; $001C
                st      Obj_Routine_2(A0)                                ; $0025
                move.w  #$012C, Obj_Control_Var_00(A0)                   ; $002C
                move.b  #$03, Obj_Timer(A0)                              ; $002A
loc_22180:
                rts
loc_22182:
                subq.w  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bpl.s   loc_2219E
                move.w  Obj_Control_Var_08(A0), Obj_Control_Var_06(A0); $0032, $0034
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Status(A0)                              ; $0022
                move.b  #$01, Obj_Ani_Flag(A0)                           ; $001D
loc_2219E:
                rts
loc_221A0:
                tst.b   Obj_Col_Prop(A0)                                 ; $0021
                beq     loc_22242
                moveq   #$02, D3
loc_221AA:
                bsr     Jmp_0A_To_SingleObjectLoad             ; loc_22618
                bne.s   loc_2221C
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.b  #$08, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  #$24E0, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.w  #$FF00, Obj_Speed_Y(A1)                          ; $0012
                move.b  #$04, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$78, Obj_Col_Prop(A1)                           ; $0021
                cmpi.w  #$0001, D3
                beq.s   loc_22216
                blt.s   loc_22208
                move.w  #$00C0, Obj_Speed(A1)                            ; $0010
                addi.w  #$FF40, Obj_Speed_Y(A1)                          ; $0012
                bra.s   loc_2221C
loc_22208:
                move.w  #$FF00, Obj_Speed(A1)                            ; $0010
                addi.w  #$FFC0, Obj_Speed_Y(A1)                          ; $0012
                bra.s   loc_2221C
loc_22216:
                move.w  #$0040, Obj_Speed(A1)                            ; $0010
loc_2221C:
                dbra    D3, loc_221AA
                bsr     Jmp_0A_To_SingleObjectLoad             ; loc_22618
                bne.s   loc_2223E
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.b  #$0A, Obj_Routine(A1)                            ; $0024
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  #$24E0, Obj_Art_VRAM(A1)                         ; $0002
loc_2223E:
                bra     Jmp_1A_To_DeleteObject                 ; loc_22612
loc_22242:
                rts              
;-------------------------------------------------------------------------------
Aquis_Animate_Data:                                            ; loc_22244
                dc.w    loc_22254-Aquis_Animate_Data
                dc.w    loc_22257-Aquis_Animate_Data
                dc.w    loc_2225F-Aquis_Animate_Data
                dc.w    loc_22265-Aquis_Animate_Data
                dc.w    loc_22269-Aquis_Animate_Data
                dc.w    loc_2226C-Aquis_Animate_Data
                dc.w    loc_2226F-Aquis_Animate_Data
                dc.w    loc_22273-Aquis_Animate_Data
loc_22254:
                dc.b    $0E, $00, $FF
loc_22257:
                dc.b    $05, $03, $04, $03, $04, $03, $04, $FF
loc_2225F:
                dc.b    $03, $05, $06, $07, $06, $FF
loc_22265:
                dc.b    $03, $01, $02, $FF
loc_22269:
                dc.b    $01, $05, $FF
loc_2226C:
                dc.b    $0E, $08, $FF
loc_2226F:
                dc.b    $01, $09, $0A, $FF
loc_22273:
                dc.b    $05, $0B, $0C, $0B, $0C, $0B, $0C, $FF
                dc.b    $00     
;-------------------------------------------------------------------------------  
Aquis_Mappings:
		include 'mappings/sprite/obj50.asm'
;===============================================================================
; Object 0x50 - Seahorse Badnik (Aquis) from Oil Ocean
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x51 - Imimigo cavalo marinho (Aquis) na Oil Ocean
; [ Begin ] 
;===============================================================================
; loc_223C8:
Previus_Build_Obj51_Aquis: ; Object 0x51 in Sonic 2 Beta
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_223D6(PC, D0), D1
                jmp     loc_223D6(PC, D1)
;-------------------------------------------------------------------------------   
loc_223D6:
                dc.w    loc_223E2-loc_223D6
                dc.w    loc_22440-loc_223D6
                dc.w    loc_22464-loc_223D6      
;------------------------------------------------------------------------------- 
loc_223DC:
                dc.w    $0000, $FCE0, $FD1C              
;-------------------------------------------------------------------------------  
loc_223E2:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Aquis_Mappings, Obj_Map(A0)    ; loc_2227C, $0004
                move.w  #$2570, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$0A, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$06, Obj_Ani_Number(A0)                         ; $001C
                move.b  Obj_Subtype(A0), D0                              ; $0028
                andi.w  #$000F, D0
                move.w  D0, D1
                lsl.w   #$05, D1
                subq.w  #$01, D1
                move.w  D1, Obj_Control_Var_06(A0)                       ; $0032
                move.w  D1, Obj_Control_Var_08(A0)                       ; $0034
                move.w  Obj_Y(A0), Obj_Timer(A0)                  ; $000C, $002A
                move.w  Obj_Y(A0), Obj_Control_Var_02(A0)         ; $000C, $002E
                addi.w  #$0060, Obj_Control_Var_02(A0)                   ; $002E
                move.w  #$FF00, Obj_Speed(A0)                            ; $0010  
;-------------------------------------------------------------------------------  
loc_22440:
                lea     Aquis_Animate_Data(PC), A1             ; loc_22244
                bsr     Jmp_0F_To_AnimateSprite                ; loc_22624
                move.w  #$039C, (Water_Level).w                      ; $FFFFF646
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_22460(PC, D0), D1
                jsr     loc_22460(PC, D1)
                bra     Jmp_21_To_MarkObjGone                  ; loc_2261E    
;-------------------------------------------------------------------------------  
loc_22460:
                dc.w    loc_22478-loc_22460
                dc.w    loc_2248E-loc_22460  
;-------------------------------------------------------------------------------     
loc_22464:
                bsr     loc_221A0
                bsr     Jmp_13_To_SpeedToPos                   ; loc_22630
                lea     Aquis_Animate_Data(PC), A1             ; loc_22244
                bsr     Jmp_0F_To_AnimateSprite                ; loc_22624
                bra     Jmp_21_To_MarkObjGone                  ; loc_2261E   
;-------------------------------------------------------------------------------  
loc_22478:
                bsr     Jmp_13_To_SpeedToPos                   ; loc_22630
                bsr     loc_22182
                bsr     loc_224CA
                bsr     loc_225AC
                bsr     loc_2251C
                rts          
;-------------------------------------------------------------------------------  
loc_2248E:
                bsr     Jmp_13_To_SpeedToPos                   ; loc_22630
                bsr     loc_22182
                bsr     loc_224CA
                bsr     loc_225AC
                bsr     loc_224A4
                rts
loc_224A4:
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                beq.s   loc_224B8
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                cmpi.w  #$0012, D0
                beq     loc_22542
                rts
loc_224B8:
                subq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$06, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$00B4, Obj_Control_Var_04(A0)                   ; $0030
                rts
loc_224CA:
                sf      Obj_Control_Var_01(A0)                           ; $002D
                sf      Obj_Control_Var_00(A0)                           ; $002C
                sf      Obj_Control_Var_0A(A0)                           ; $0036
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                bpl.s   loc_224EA
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_224F2
                bra.s   loc_224F6
loc_224EA:
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_224F6
loc_224F2:
                st      Obj_Control_Var_00(A0)                           ; $002C
loc_224F6:
                move.w  (Player_One_Position_Y).w, D0                ; $FFFFB00C
                sub.w   Obj_Y(A0), D0                                    ; $000C
                cmpi.w  #$FFFC, D0
                blt.s   loc_2251A
                cmpi.w  #$0004, D0
                bgt.s   loc_22516
                st      Obj_Control_Var_01(A0)                           ; $002D
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                rts
loc_22516:
                st      Obj_Control_Var_0A(A0)                           ; $0036
loc_2251A:
                rts
loc_2251C:
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_22540
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bgt.s   loc_22540
                tst.b   Obj_Control_Var_01(A0)                           ; $002D
                beq.s   loc_22540
                move.b  #$07, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0024, Obj_Control_Var_04(A0)                   ; $0030
                addi.b  #$02, Obj_Routine_2(A0)                          ; $0025
loc_22540:
                rts
loc_22542:
                bsr     Jmp_0A_To_SingleObjectLoad             ; loc_22618
                bne.s   loc_225AA
                move.b  #$51, Obj_Id(A1)                                 ; $0000
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.l  #Aquis_Mappings, Obj_Map(A1)    ; loc_2227C, $0004
                move.w  #$24E0, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$E5, Obj_Col_Flags(A1)                          ; $0020
                move.w  #$000C, D0
                move.w  #$0010, D1
                move.w  #$FD00, D2
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_2259E
                neg.w   D1
                neg.w   D2
loc_2259E:
                sub.w   D0, Obj_Y(A1)                                    ; $000C
                sub.w   D1, Obj_X(A1)                                    ; $0008
                move.w  D2, Obj_Speed(A1)                                ; $0010
loc_225AA:
                rts
loc_225AC:
                tst.b   Obj_Control_Var_01(A0)                           ; $002D
                bne.s   loc_2260A
                tst.b   Obj_Control_Var_0A(A0)                           ; $0036
                beq.s   loc_225DC
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                ble.s   loc_22600
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                beq.s   loc_225D4
                move.w  Obj_Timer(A0), D0                                ; $002A
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bge.s   loc_22600
                rts
loc_225D4:
                move.w  #$0180, Obj_Speed_Y(A0)                          ; $0012
                rts
loc_225DC:
                move.w  Obj_Timer(A0), D0                                ; $002A
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bge.s   loc_22600
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                beq.s   loc_225F8
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                ble.s   loc_22600
                rts
loc_225F8:
                move.w  #$FE80, Obj_Speed_Y(A0)                          ; $0012
                rts
loc_22600:
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
loc_2260A:
                rts
;===============================================================================
; Object 0x51 - Imimigo cavalo marinho (Aquis) na Oil Ocean
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_17_To_DisplaySprite:                                       ; loc_2260C
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_1A_To_DeleteObject:                                        ; loc_22612
		jmp     (DeleteObject)                         ; loc_D314
Jmp_0A_To_SingleObjectLoad:                                    ; loc_22618
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_21_To_MarkObjGone:                                         ; loc_2261E
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_0F_To_AnimateSprite:                                       ; loc_22624
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_07_To_ObjectFall:                                          ; loc_2262A
		jmp     (ObjectFall)                           ; loc_D1AE
Jmp_13_To_SpeedToPos:                                          ; loc_22630
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------

;===============================================================================
; Object 0x59 - Snail Badnik from Green Hill (Unused)
; [ Begin ]
;===============================================================================   
; loc_22638:
Obj59_Snail:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_22646(PC, D0), D1
                jmp     loc_22646(PC, D1)
;-------------------------------------------------------------------------------
loc_22646:
                dc.w    loc_22650-loc_22646
                dc.w    loc_226F0-loc_22646
                dc.w    loc_2281C-loc_22646
                dc.w    loc_22854-loc_22646
                dc.w    loc_227DA-loc_22646         
;-------------------------------------------------------------------------------
loc_22650:
                move.l  #Snail_Mappings, Obj_Map(A0)    ; loc_22888, $0004
                move.w  #$0402, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_2A_To_ModifySpriteAttr_2P          ; loc_228DA
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$0A, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$10, Obj_Height_2(A0)                           ; $0016
                move.b  #$0E, Obj_Width_2(A0)                            ; $0017
                bsr     Jmp_12_To_SingleObjectLoad_2           ; loc_228C2
                bne.s   loc_226D8
                move.b  #$59, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.l  #Snail_Mappings, Obj_Map(A1)  ;   loc_22888, $0004
                move.w  #$2402, Obj_Art_VRAM(A1)                         ; $0002
                bsr     Jmp_05_To_ModifySpriteAttr_2P_A1       ; loc_228CE
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.l  A0, Obj_Timer(A1)                                ; $002A
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$02, Obj_Map_Id(A1)                             ; $001A
loc_226D8:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$FF80, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_226EA
                neg.w   D0
loc_226EA:
                move.w  D0, Obj_Speed(A0)                                ; $0010
                rts     
;-------------------------------------------------------------------------------
loc_226F0:
                bsr     loc_22738
                bsr     Jmp_14_To_SpeedToPos                   ; loc_228E6
                jsr     (ObjHitFloor)                          ; loc_14204
                cmpi.w  #$FFF8, D1
                blt.s   loc_2271C
                cmpi.w  #$000C, D1
                bge.s   loc_2271C
                add.w   D1, Obj_Y(A0)                                    ; $000C
                lea     (Snail_Animate_Data), A1               ; loc_2287C
                bsr     Jmp_10_To_AnimateSprite                ; loc_228C8
                bra     Jmp_00_To_MarkObjGone_4                ; loc_228D4
loc_2271C:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0014, Obj_Control_Var_04(A0)                   ; $0030
                st      Obj_Control_Var_08(A0)                           ; $0034
                lea     (Snail_Animate_Data), A1               ; loc_2287C
                bsr     Jmp_10_To_AnimateSprite                ; loc_228C8
                bra     Jmp_00_To_MarkObjGone_4                ; loc_228D4
loc_22738:
                tst.b   Obj_Control_Var_09(A0)                           ; $0035
                bne.s   loc_2277A
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                cmpi.w  #$0064, D0
                bgt.s   loc_2277A
                cmpi.w  #$FF9C, D0
                blt.s   loc_2277A
                tst.w   D0
                bmi.s   loc_22760
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_2277A
                bra.s   loc_22768
loc_22760:
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_2277A
loc_22768:
                move.w  Obj_Speed(A0), D0                                ; $0010
                asl.w   #$02, D0
                move.w  D0, Obj_Speed(A0)                                ; $0010
                st      Obj_Control_Var_09(A0)                           ; $0035
                bsr     loc_2277C
loc_2277A:
                rts
loc_2277C:
                bsr     Jmp_12_To_SingleObjectLoad_2           ; loc_228C2
                bne.s   loc_227D8
                move.b  #$59, Obj_Id(A1)                                 ; $0000
                move.b  #$08, Obj_Routine(A1)                            ; $0024
                move.l  #Buzzer_Mappings, Obj_Map(A1)   ; loc_241EA, $0004
                move.w  #$3E6, Obj_Art_VRAM(A1)                          ; $0002
                ; VRAM value leftover from the Simon Wai build, it has been
                ; moved to #$3D2 from this build.
                bsr     Jmp_05_To_ModifySpriteAttr_2P_A1       ; loc_228CE
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.l  A0, Obj_Timer(A1)                                ; $002A
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addq.w  #$07, Obj_Y(A1)                                  ; $000C
                addi.w  #$000D, Obj_X(A1)                                ; $0008
                move.b  #$01, Obj_Ani_Number(A1)                         ; $001C
loc_227D8:
                rts
;-------------------------------------------------------------------------------
loc_227DA:
                move.l  Obj_Timer(A0), A1                                ; $002A
                cmpi.b  #$59, (A1)
                bne     Jmp_1B_To_DeleteObject                 ; loc_228BC
                tst.b   Obj_Control_Var_08(A1)                           ; $0034
                bne     Jmp_1B_To_DeleteObject                 ; loc_228BC
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                addq.w  #$07, Obj_Y(A0)                                  ; $000C
                moveq   #$0D, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_2280A
                neg.w   D0
loc_2280A:
                add.w   D0, Obj_X(A0)                                    ; $0008
                lea     (Buzzer_AnimateData), A1               ; loc_241CE
                bsr     Jmp_10_To_AnimateSprite                ; loc_228C8
                bra     Jmp_00_To_MarkObjGone_4                ; loc_228D4       
;-------------------------------------------------------------------------------
loc_2281C:
                subi.w  #$0001, Obj_Control_Var_04(A0)                   ; $0030
                bpl     Jmp_00_To_MarkObjGone_4                ; loc_228D4
                neg.w   Obj_Speed(A0)                                    ; $0010
                bsr     Jmp_08_To_ObjectFall                   ; loc_228E0
                move.w  Obj_Speed(A0), D0                                ; $0010
                asr.w   #$02, D0
                move.w  D0, Obj_Speed(A0)                                ; $0010
                bchg    #00, Obj_Status(A0)                              ; $0022
                bchg    #00, Obj_Flags(A0)                               ; $0001
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                sf      Obj_Control_Var_08(A0)                           ; $0034
                sf      Obj_Control_Var_09(A0)                           ; $0035
                bra     Jmp_00_To_MarkObjGone_4                ; loc_228D4   
;-------------------------------------------------------------------------------
loc_22854:
                move.l  Obj_Timer(A0), A1                                ; $002A
                cmpi.b  #$59, (A1)
                bne     Jmp_1B_To_DeleteObject                 ; loc_228BC
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                bra     Jmp_00_To_MarkObjGone_4                ; loc_228D4              
;-------------------------------------------------------------------------------
Snail_Animate_Data:                                            ; loc_2287C
                dc.w    loc_22880-Snail_Animate_Data
                dc.w    loc_22884-Snail_Animate_Data
loc_22880:
                dc.b    $05, $00, $01, $FF
loc_22884:
                dc.b    $01, $00, $01, $FF      
;-------------------------------------------------------------------------------
Snail_Mappings:
                include 'mappings/sprite/obj59.asm'
;===============================================================================
; Object 0x59 - Snail Badnik from Green Hill (Unused)
; [ End ]
;===============================================================================		
;-------------------------------------------------------------------------------
Jmp_1B_To_DeleteObject:                                        ; loc_228BC
		jmp     (DeleteObject)                         ; loc_D314
Jmp_12_To_SingleObjectLoad_2:                                  ; loc_228C2
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_10_To_AnimateSprite:                                       ; loc_228C8
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_05_To_ModifySpriteAttr_2P_A1:                              ; loc_228CE
		jmp     (ModifySpriteAttr_2P_A1)               ; loc_DBDA
Jmp_00_To_MarkObjGone_4:                                       ; loc_228D4
		jmp     (MarkObjGone_4)                        ; loc_D2A0
Jmp_2A_To_ModifySpriteAttr_2P:                                 ; loc_228DA
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_08_To_ObjectFall:                                          ; loc_228E0
		jmp     (ObjectFall)                           ; loc_D1AE
Jmp_14_To_SpeedToPos:                                          ; loc_228E6
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj4D_Rhinobot:                                             ; loc_228EC
;===============================================================================
; Object 0x4D - Stegway - Badnik from Hidden Palace
; [ Begin ]
;===============================================================================
; loc_228EC:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_228FA(PC, D0), D1
                jmp     loc_228FA(PC, D1)
;-------------------------------------------------------------------------------
loc_228FA:
                dc.w    loc_228FE-loc_228FA
                dc.w    loc_2294E-loc_228FA
;-------------------------------------------------------------------------------
loc_228FE:
                move.l  #Rhinobot_Mappings, Obj_Map(A0) ; loc_22A56, $0004
                move.w  #$23B2, Obj_Art_VRAM(A0)                         ; $0002 ; wrong palette line, should be $03B2 instead of $23B2
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$0A, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$18, Obj_Width(A0)                              ; $0019
                move.b  #$10, Obj_Height_2(A0)                           ; $0016
                move.b  #$18, Obj_Width_2(A0)                            ; $0017
                bsr     Jmp_09_To_ObjectFall                   ; loc_22BB4
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_2294C
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_2294C:
                rts
;-------------------------------------------------------------------------------
loc_2294E:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_2296A(PC, D0), D1
                jsr     loc_2296A(PC, D1)
                lea     (Rhinobot_Animate_Data), A1            ; loc_22A3A
                bsr     Jmp_11_To_AnimateSprite                ; loc_22BAE
                bra     Jmp_22_To_MarkObjGone                  ; loc_22BA8
;-------------------------------------------------------------------------------
loc_2296A:
                dc.w    loc_2296E-loc_2296A
                dc.w    loc_22992-loc_2296A
;-------------------------------------------------------------------------------
loc_2296E:
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bpl.s   loc_22990
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$FF80, Obj_Speed(A0)                            ; $0010
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                bchg    #00, Obj_Status(A0)                              ; $0022
                bne.s   loc_22990
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_22990:
                rts
;-------------------------------------------------------------------------------
loc_22992:
                bsr     loc_229DC
                bsr     Jmp_09_To_ObjectFall                   ; loc_22BB4
                jsr     (ObjHitFloor)                          ; loc_14204
                cmpi.w  #$FFF8, D1
                blt.s   loc_229B8
                cmpi.w  #$000C, D1
                bge.s   loc_229B6
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                add.w   D1, Obj_Y(A0)                                    ; $000C
loc_229B6:
                rts
loc_229B8:
                subq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$003B, Obj_Control_Var_04(A0)                   ; $0030
                move.w  Obj_Speed(A0), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                sub.l   D0, Obj_X(A0)                                    ; $0008
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                rts
loc_229DC:
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                bmi.s   loc_22A10
                cmpi.w  #$0060, D0
                bgt.s   loc_22A00
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_22A02
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$FE00, Obj_Speed(A0)                            ; $0010
loc_22A00:
                rts
loc_22A02:
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0080, Obj_Speed(A0)                            ; $0010
                rts
loc_22A10:
                cmpi.w  #$FFA0, D0
                blt.s   loc_22A00
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_22A2C
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0200, Obj_Speed(A0)                            ; $0010
                rts
loc_22A2C:
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$FF80, Obj_Speed(A0)                            ; $0010
                rts
;-------------------------------------------------------------------------------
Rhinobot_Animate_Data:                                         ; loc_22A3A
                dc.w    loc_22A40-Rhinobot_Animate_Data
                dc.w    loc_22A4E-Rhinobot_Animate_Data
                dc.w    loc_22A51-Rhinobot_Animate_Data
loc_22A40:
                dc.b    $02, $00, $00, $00, $03, $03, $04, $01
                dc.b    $01, $02, $05, $05, $05, $FF
loc_22A4E:
                dc.b    $0F, $00, $FF
loc_22A51:
                dc.b    $02, $06, $07, $FF, $00
;-------------------------------------------------------------------------------
Rhinobot_Mappings:                                             ; loc_22A56
                  include 'mappings/sprite/obj4D.asm'
;===============================================================================
; Object 0x4D - Stegway - Badnik from Hidden Palace
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		dc.w    $0000
Jmp_22_To_MarkObjGone:                                         ; loc_22BA8
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_11_To_AnimateSprite:                                       ; loc_22BAE
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_09_To_ObjectFall:                                          ; loc_22BB4
		jmp     (ObjectFall)                           ; loc_D1AE
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj_CPz_Boss:                                                  ; loc_22BBC
;===============================================================================
; Object - Partes do chefe da Chemical Plant
; [ Begin ]
;===============================================================================
; loc_22BBC
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_22BCA(PC, D0), D1
                jmp     loc_22BCA(PC, D1)
;------------------------------------------------------------------------------- 
loc_22BCA:
                dc.w    loc_22D16-loc_22BCA
                dc.w    loc_22DE0-loc_22BCA
                dc.w    loc_22F3A-loc_22BCA
                dc.w    loc_23002-loc_22BCA
                dc.w    loc_235F6-loc_22BCA
                dc.w    loc_22F86-loc_22BCA
                dc.w    loc_2311A-loc_22BCA
                dc.w    loc_22C2A-loc_22BCA
                dc.w    loc_22BDC-loc_22BCA   
;-------------------------------------------------------------------------------
loc_22BDC:
                cmpi.b  #$F9, Obj_Control_Var_04(A0)                     ; $0030
                beq.s   loc_22BFE
                subi.b  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bgt     Jmp_18_To_DisplaySprite                ; loc_23F54
                bsr     loc_23B34
                move.b  #$F9, Obj_Control_Var_04(A0)                     ; $0030
                move.w  #$001E, Obj_Timer(A0)                            ; $002A
loc_22BFE:
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                bpl     Jmp_18_To_DisplaySprite                ; loc_23F54
                move.w  Obj_Speed(A0), D0                                ; $0010
                add.w   D0, Obj_X(A0)                                    ; $0008
                move.l  Obj_Y(A0), D3                                    ; $000C
                move.w  Obj_Speed_Y(A0), D0                              ; $0012
                addi.w  #$0038, Obj_Speed_Y(A0)                          ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D3, Obj_Y(A0)                                    ; $000C
                bra     Jmp_23_To_MarkObjGone                  ; loc_23F60        
;-------------------------------------------------------------------------------  
loc_22C2A:
                btst    #$07, Obj_Status(A0)                             ; $0022
                bne.s   loc_22C60
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.l  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.l  #loc_23C32, A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322
loc_22C60:
                moveq   #$22, D3
                move.b  #$78, Obj_Control_Var_04(A0)                     ; $0030
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  D3, Obj_Map_Id(A0)                               ; $001A
                move.b  #$10, Obj_Routine(A0)                            ; $0024
                jsr     (PseudoRandomNumber)                   ; loc_325C
                asr.w   #$08, D0
                asr.w   #$06, D0
                move.w  D0, Obj_Speed(A0)                                ; $0010
                move.w  #$FC80, Obj_Speed_Y(A0)                          ; $0012
                moveq   #$01, D2
                addq.w  #$01, D3
loc_22C9A:
                jsr     (SingleObjectLoad)                     ; loc_E6FE
                bne     Jmp_1C_To_DeleteObject                 ; loc_23F5A
                move.b  #$57, Obj_Id(A1)                                 ; $0000
                move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
                move.b  D3, Obj_Map_Id(A1)                               ; $001A
                move.b  #$10, Obj_Routine(A1)                            ; $0024
                move.w  #$2460, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$02, Obj_Priority(A1)                           ; $0018
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                jsr     (PseudoRandomNumber)                   ; loc_325C
                asr.w   #$08, D0
                asr.w   #$06, D0
                move.w  D0, Obj_Speed(A1)                                ; $0010
                move.w  #$FC80, Obj_Speed_Y(A1)                          ; $0012
                swap.w  D0
                addi.b  #$1E, D0
                andi.w  #$007F, D0
                move.b  D0, Obj_Control_Var_04(A1)                       ; $0030
                addq.w  #$01, D3
                dbra    D2, loc_22C9A
                rts       
;-------------------------------------------------------------------------------  
loc_22D16:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_22D24(PC, D0), D1
                jmp     loc_22D24(PC, D1)   
;------------------------------------------------------------------------------- 
loc_22D24:
                dc.w    loc_22D28-loc_22D24
                dc.w    loc_22D5C-loc_22D24        
;-------------------------------------------------------------------------------  
loc_22D28:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                btst    #$00, Obj_Control_Var_02(A1)                     ; $002E
                bne.s   loc_22D36
                rts
loc_22D36:
                move.b  #$04, Obj_Control_Var_03(A1)                     ; $002F
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                addi.w  #$0018, Obj_Y(A0)                                ; $000C
                move.w  #$000C, Obj_Control_Var_00(A0)                   ; $002C
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.l  A0, A1
                bra.s   loc_22D6A   
;-------------------------------------------------------------------------------  
loc_22D5C:
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                beq.s   loc_22D66
                rts
loc_22D66:
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
loc_22D6A:
                subq.w  #$01, Obj_Control_Var_00(A0)                     ; $002C
                blt.s   loc_22DD0
                move.b  #$57, Obj_Id(A1)                                 ; $0000
                move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
                move.w  #$2460, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$05, Obj_Priority(A1)                           ; $0018
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_Control_Var_00(A0), D0                       ; $002C
                subi.w  #$000B, D0
                neg.w   D0
                lsl.w   #$03, D0
                move.w  D0, Obj_Control_Var_0C(A1)                       ; $0038
                add.w   D0, Obj_Y(A1)                                    ; $000C
                move.b  #$01, Obj_Ani_Number(A1)                         ; $001C
                cmpi.b  #$02, Obj_Routine_2(A1)                          ; $0025
                beq     loc_22F86
                move.b  #$0A, Obj_Routine(A1)                            ; $0024
                bra     loc_22F86
loc_22DD0:
                move.b  #$00, Obj_Routine_2(A0)                          ; $0025
                move.b  #$02, Obj_Routine(A0)                            ; $0024
                bra     loc_22F86     
;-------------------------------------------------------------------------------  
loc_22DE0:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_22DEE(PC, D0), D1
                jmp     loc_22DEE(PC, D1)                     
;------------------------------------------------------------------------------- 
loc_22DEE:
                dc.w    loc_22DF4-loc_22DEE
                dc.w    loc_22E68-loc_22DEE
                dc.w    loc_22ED6-loc_22DEE        
;------------------------------------------------------------------------------- 
loc_22DF4:
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne     loc_22F86
                move.b  #$0A, Obj_Routine(A0)                            ; $0024
                move.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  #$02, Obj_Routine_2(A1)                          ; $0025
                move.b  #$57, Obj_Id(A1)                                 ; $0000
                move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
                move.w  #$2460, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$04, Obj_Control_Var_06(A1)                     ; $0032
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  #$0058, D0
                move.b  D0, Obj_Control_Var_05(A1)                       ; $0031
                add.w   D0, Obj_Y(A1)                                    ; $000C
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.b  #$12, Obj_Control_Var_04(A1)                     ; $0030
                bra     loc_22F86         
;-------------------------------------------------------------------------------  
loc_22E68:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_Control_Var_08(A1), A2                       ; $0034
                btst    #$07, Obj_Status(A2)                             ; $0022
                bne     Jmp_1C_To_DeleteObject                 ; loc_23F5A
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                subi.b  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bne.s   loc_22EBA
                move.b  #$12, Obj_Control_Var_04(A0)                     ; $0030
                subi.b  #$08, Obj_Control_Var_05(A0)                     ; $0031
                bgt.s   loc_22EBA
                bmi.s   loc_22EAC
                move.b  #$03, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$0C, Obj_Control_Var_04(A0)                     ; $0030
                bra.s   loc_22EBA
loc_22EAC:
                move.b  #$06, Obj_Control_Var_04(A0)                     ; $0030
                move.b  #$04, Obj_Routine_2(A0)                          ; $0025
                rts
loc_22EBA:
                moveq   #$00, D0
                move.b  Obj_Control_Var_05(A0), D0                       ; $0031
                add.w   D0, Obj_Y(A0)                                    ; $000C
                lea     (loc_23C32), A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322
;-------------------------------------------------------------------------------  
loc_22ED6:
                subi.b  #$01, Obj_Control_Var_04(A0)                     ; $0030
                beq.s   loc_22EE0
                rts
loc_22EE0:
                subq.b  #$01, Obj_Control_Var_06(A0)                     ; $0032
                beq.s   loc_22F26
                cmpi.b  #$01, Obj_Control_Var_06(A0)                     ; $0032
                bne.s   loc_22F0C
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne.s   loc_22F0C
                move.b  #$57, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.l  Obj_Control_Var_08(A0), A2                       ; $0034
                move.l  Obj_Control_Var_08(A2), Obj_Control_Var_08(A1); $0034, $0034
loc_22F0C:
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$12, Obj_Control_Var_04(A0)                     ; $0030
                move.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$58, Obj_Control_Var_05(A0)                     ; $0031
                rts
loc_22F26:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.b  #$58, Obj_Control_Var_05(A1)                     ; $0031
                bra     Jmp_1C_To_DeleteObject                 ; loc_23F5A               
;-------------------------------------------------------------------------------  
loc_22F3A:
                tst.b   Obj_Control_Var_10(A0)                           ; $003C
                bne.s   loc_22F76
                moveq   #$00, D0
                move.b  Obj_Control_Var_05(A0), D0                       ; $0031
                add.w   Obj_Y(A0), D0                                    ; $000C
                lea     (Obj_Memory_Address).w, A1                   ; $FFFFB000
                moveq   #$7F, D1
loc_22F50:
                cmp.w   Obj_Y(A1), D0                                    ; $000C
                beq.s   loc_22F66
                lea     Obj_Size(A1), A1                                 ; $0040
                dbra    D1, loc_22F50
                bra.s   loc_22F86
;-------------------------------------------------------------------------------
loc_22F60:
                st      Obj_Control_Var_10(A0)                           ; $003C
                bra.s   loc_22F86
loc_22F66:
                moveq   #$00, D7
                move.b  #$57, D7
                cmp.b   (A1), D7
                beq.s   loc_22F78
                dbra    D1, loc_22F50
                bra.s   loc_22F86
loc_22F76:
                move.l  A0, A1
loc_22F78:
                bset    #$07, Obj_Status(A1)                             ; $0022
                subi.b  #$08, Obj_Control_Var_05(A0)                     ; $0031
                beq.s   loc_22F60         
;-------------------------------------------------------------------------------  
loc_22F86:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_Control_Var_08(A1), A2                       ; $0034
                btst    #$07, Obj_Status(A2)                             ; $0022
                bne.s   loc_22FD6
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                cmpi.b  #$56, Obj_Id(A1)                                 ; $0000
                bne.s   loc_22FB0
                addi.w  #$0018, Obj_Y(A0)                                ; $000C
loc_22FB0:
                btst    #$07, Obj_Status(A0)                             ; $0022
                bne.s   loc_22FD2
                move.w  Obj_Control_Var_0C(A0), D0                       ; $0038
                add.w   D0, Obj_Y(A0)                                    ; $000C
                lea     (loc_23C32), A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322
loc_22FD2:
                bra     Jmp_1C_To_DeleteObject                 ; loc_23F5A
loc_22FD6:
                move.b  #$10, Obj_Routine(A0)                            ; $0024
                jsr     (PseudoRandomNumber)                   ; loc_325C
                asr.w   #$08, D0
                asr.w   #$06, D0
                move.w  D0, Obj_Speed(A0)                                ; $0010
                move.w  #$FC80, Obj_Speed_Y(A0)                          ; $0012
                swap.w  D0
                addi.b  #$1E, D0
                andi.w  #$007F, D0
                move.b  D0, Obj_Control_Var_04(A0)                       ; $0030
                bra     Jmp_18_To_DisplaySprite                ; loc_23F54          
;-------------------------------------------------------------------------------  
loc_23002:
                btst    #$07, Obj_Status(A0)                             ; $0022
                bne     Jmp_1C_To_DeleteObject                 ; loc_23F5A
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_2301A(PC, D0), D1
                jmp     loc_2301A(PC, D1)         
;-------------------------------------------------------------------------------   
loc_2301A:
                dc.w    loc_23020-loc_2301A
                dc.w    loc_23066-loc_2301A
                dc.w    loc_230B8-loc_2301A      
;------------------------------------------------------------------------------- 
loc_23020:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$57, Obj_Id(A0)                                 ; $0000
                move.l  #loc_23CD2, Obj_Map(A0)                    ; $0004
                move.w  #$6460, Obj_Art_VRAM(A0)                         ; $0002
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  #$0F, Obj_Control_Var_04(A0)                     ; $0030
                move.b  #$04, Obj_Ani_Number(A0)                         ; $001C  
;------------------------------------------------------------------------------- 
loc_23066:
                subq.b  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bne.s   loc_2308A
                move.b  #$05, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$04, Obj_Control_Var_04(A0)                     ; $0030
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                subi.w  #$0024, Obj_Y(A0)                                ; $000C
                subi.w  #$0002, Obj_X(A0)                                ; $0008
                rts
loc_2308A:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                lea     (loc_23C32), A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322  
;------------------------------------------------------------------------------- 
loc_230B8:
                subq.b  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bne.s   loc_230DE
                move.b  #$00, Obj_Routine_2(A0)                          ; $0025
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                bset    #$01, Obj_Control_Var_02(A1)                     ; $002E
                addq.b  #$01, Obj_Control_Var_10(A0)                     ; $003C
                cmpi.b  #$0C, Obj_Control_Var_10(A0)                     ; $003C
                bge     Jmp_1C_To_DeleteObject                 ; loc_23F5A
                rts
loc_230DE:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                subi.w  #$0024, Obj_Y(A0)                                ; $000C
                subi.w  #$0002, Obj_X(A0)                                ; $0008
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_23108
                addi.w  #$0004, Obj_X(A0)                                ; $0008
loc_23108:
                lea     (loc_23C32), A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322   
;-------------------------------------------------------------------------------  
loc_2311A:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_23128(PC, D0), D1
                jmp     loc_23128(PC, D1)       
;-------------------------------------------------------------------------------
loc_23128:
                dc.w    loc_23134-loc_23128
                dc.w    loc_231E4-loc_23128
                dc.w    loc_2358C-loc_23128
                dc.w    loc_23526-loc_23128
                dc.w    loc_235E2-loc_23128
                dc.w    loc_23270-loc_23128    
;------------------------------------------------------------------------------- 
loc_23134:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                btst    #$07, Obj_Control_Var_02(A1)                     ; $002E
                bne.s   loc_23196
                bset    #$07, Obj_Control_Var_02(A1)                     ; $002E
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne.s   loc_23196
                move.b  #$57, Obj_Id(A1)                                 ; $0000
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
                move.w  #$2460, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.b  #$0C, Obj_Routine(A1)                            ; $0024
                move.b  #$04, Obj_Routine_2(A1)                          ; $0025
                move.b  #$09, Obj_Ani_Number(A1)                         ; $001C
loc_23196:
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne.s   loc_231E0
                move.b  #$57, Obj_Id(A1)                                 ; $0000
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
                move.w  #$6460, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.b  #$0C, Obj_Routine(A1)                            ; $0024
                move.b  #$06, Obj_Routine_2(A1)                          ; $0025
loc_231E0:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025    
;-------------------------------------------------------------------------------  
loc_231E4:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                subi.w  #$0038, Obj_Y(A0)                                ; $000C
                btst    #$07, Obj_Status(A0)                             ; $0022
                bne.s   loc_23268
                btst    #$02, Obj_Control_Var_02(A1)                     ; $002E
                beq.s   loc_23214
                bsr     loc_23456
                bsr     loc_2337A
                bra.s   loc_23234
loc_23214:
                btst    #$05, Obj_Control_Var_02(A1)                     ; $002E
                beq.s   loc_23234
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                bne.s   loc_23234
                bclr    #$05, Obj_Control_Var_02(A1)                     ; $002E
                bset    #$03, Obj_Control_Var_02(A1)                     ; $002E
                bset    #$04, Obj_Control_Var_02(A1)                     ; $002E
loc_23234:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_23252
                neg.w   D0
loc_23252:
                add.w   D0, Obj_X(A0)                                    ; $0008
                lea     (loc_23C32), A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322
loc_23268:
                move.b  #$0A, Obj_Routine_2(A0)                          ; $0025
                bra.s   loc_23234   
;-------------------------------------------------------------------------------  
loc_23270:
                move.l  D7, -(A7)
                move.b  #$1E, Obj_Control_Var_04(A0)                     ; $0030
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                subi.w  #$0038, Obj_Y(A0)                                ; $000C
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_2329C
                neg.w   D0
loc_2329C:
                add.w   D0, Obj_X(A0)                                    ; $0008
                move.b  #$20, Obj_Map_Id(A0)                             ; $001A
                move.b  #$10, Obj_Routine(A0)                            ; $0024
                jsr     (PseudoRandomNumber)                   ; loc_325C
                asr.w   #$08, D0
                asr.w   #$06, D0
                move.w  D0, Obj_Speed(A0)                                ; $0010
                move.w  #$FC80, Obj_Speed_Y(A0)                          ; $0012
                moveq   #$00, D7
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                addi.w  #$0018, D0
                bge.s   loc_232DE
                addi.w  #$0018, D0
                bge.s   loc_232DC
                addi.w  #$0018, D0
                bge.s   loc_232DA
                addq.w  #$01, D7
loc_232DA:
                addq.w  #$01, D7
loc_232DC:
                addq.w  #$01, D7
loc_232DE:
                subq.w  #$01, D7
                bmi     loc_2336E
loc_232E4:
                jsr     (SingleObjectLoad)                     ; loc_E6FE
                bne     Jmp_1C_To_DeleteObject                 ; loc_23F5A
                move.b  #$57, Obj_Id(A1)                                 ; $0000
                move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
                move.b  #$21, Obj_Map_Id(A1)                             ; $001A
                move.b  #$10, Obj_Routine(A1)                            ; $0024
                move.w  #$2460, Obj_Art_VRAM(A1)                         ; $0002
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$02, Obj_Priority(A1)                           ; $0018
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0008, Obj_Y(A1)                                ; $000C
                move.w  D7, D2
                add.w   D2, D2
                move.w  loc_23374(PC, D2), D3
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_23344
                neg.w   D3
loc_23344:
                add.w   D3, Obj_X(A1)                                    ; $0008
                jsr     (PseudoRandomNumber)                   ; loc_325C
                asr.w   #$08, D0
                asr.w   #$06, D0
                move.w  D0, Obj_Speed(A1)                                ; $0010
                move.w  #$FC80, Obj_Speed_Y(A1)                          ; $0012
                swap.w  D0
                addi.b  #$1E, D0
                andi.w  #$007F, D0
                move.b  D0, Obj_Control_Var_04(A1)                       ; $0030
                dbra    D7, loc_232E4
loc_2336E:
                move.l  (A7)+, D7
                bra     Jmp_18_To_DisplaySprite                ; loc_23F54  
;-------------------------------------------------------------------------------  
loc_23374:
                dc.w    $0018, $0030, $0048                           
;-------------------------------------------------------------------------------  
loc_2337A:
                btst    #$03, Obj_Control_Var_02(A1)                     ; $002E
                bne     loc_23454
                btst    #$04, Obj_Control_Var_02(A1)                     ; $002E
                bne     loc_23454
                cmpi.w  #$FFEC, Obj_Control_Var_02(A0)                   ; $002E
                blt.s   loc_233AE
                btst    #$01, Obj_Control_Var_01(A1)                     ; $002D
                beq     loc_23454
                bclr    #$01, Obj_Control_Var_01(A1)                     ; $002D
                bset    #$02, Obj_Control_Var_01(A1)                     ; $002D
                bra.s   loc_233EC
loc_233AE:
                cmpi.w  #$FFC0, Obj_Control_Var_02(A0)                   ; $002E
                bge     loc_23454
                move.w  (Player_One_Position_X).w, D1                ; $FFFFB008
                subi.w  #$0008, D1
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_233DC
                add.w   Obj_Control_Var_02(A0), D1                       ; $002E
                sub.w   Obj_X(A0), D1                                    ; $0008
                bgt     loc_23454
                cmpi.w  #$FFE8, D1
                bge.s   loc_233EC
                rts
loc_233DC:
                sub.w   Obj_Control_Var_02(A0), D1                       ; $002E
                sub.w   Obj_X(A0), D1                                    ; $0008
                blt.s   loc_23454
                cmpi.w  #$0018, D1
                bgt.s   loc_23454
loc_233EC:
                bset    #$05, Obj_Control_Var_02(A1)                     ; $002E
                bclr    #$02, Obj_Control_Var_02(A1)                     ; $002E
                move.w  #$0012, Obj_Timer(A0)                            ; $002A
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne.s   loc_23454
                move.b  #$57, Obj_Id(A1)                                 ; $0000
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.b  #$0C, Obj_Routine(A1)                            ; $0024
                move.b  #$08, Obj_Routine_2(A1)                          ; $0025
                move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
                move.w  #$2460, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$05, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$0B, Obj_Ani_Number(A1)                         ; $001C
                move.w  #$0024, Obj_Timer(A1)                            ; $002A
loc_23454:
                rts
loc_23456:
                moveq   #$01, D0
                btst    #$04, Obj_Control_Var_02(A1)                     ; $002E
                bne.s   loc_23462
                moveq   #-$01, D0
loc_23462:
                cmpi.w  #$FFF0, Obj_Control_Var_02(A0)                   ; $002E
                bne.s   loc_234D4
                bclr    #$04, Obj_Control_Var_02(A1)                     ; $002E
                beq.s   loc_234D4
                bclr    #$02, Obj_Control_Var_02(A1)                     ; $002E
                clr.b   Obj_Routine_2(A0)                                ; $0025
                move.l  A1, A2
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne.s   loc_234D2
                move.b  #$57, Obj_Id(A1)                                 ; $0000
                subq.b  #$01, Obj_Control_Var_03(A2)                     ; $002F
                bne.s   loc_234C6
                move.l  Obj_Control_Var_08(A0), Obj_Control_Var_08(A1); $0034, $0034
                move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
                move.w  #$2460, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                bra.s   loc_234D2
loc_234C6:
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.l  Obj_Control_Var_08(A0), Obj_Control_Var_08(A1); $0034, $0034
loc_234D2:
                rts
loc_234D4:
                move.w  Obj_Control_Var_02(A0), D1                       ; $002E
                cmpi.w  #$FFD8, D1
                bge.s   loc_2351E
                cmpi.w  #$FFC0, D1
                bge.s   loc_23516
                move.b  #$08, Obj_Ani_Number(A0)                         ; $001C
                cmpi.w  #$FFA8, D1
                blt.s   loc_23500
                bgt.s   loc_234FA
                btst    #$04, Obj_Control_Var_02(A1)                     ; $002E
                beq.s   loc_234FE
loc_234FA:
                add.w   D0, Obj_Control_Var_02(A0)                       ; $002E
loc_234FE:
                rts
loc_23500:
                move.w  #$FFA8, Obj_Control_Var_02(A0)                   ; $002E
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_234FA
                move.w  #$0058, Obj_Control_Var_02(A0)                   ; $002E
                bra.s   loc_234FA
loc_23516:
                move.b  #$07, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_234FA
loc_2351E:
                move.b  #$06, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_234FA                   
;-------------------------------------------------------------------------------  
loc_23526:
                btst    #$07, Obj_Status(A0)                             ; $0022
                bne     Jmp_1C_To_DeleteObject                 ; loc_23F5A
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_Control_Var_08(A1), D0                       ; $0034
                beq     Jmp_1C_To_DeleteObject                 ; loc_23F5A
                move.l  D0, A1
                bclr    #$03, Obj_Control_Var_02(A1)                     ; $002E
                beq.s   loc_23554
                move.b  #$08, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Routine_2(A0)                          ; $0025
                bra.s   loc_235B4
loc_23554:
                bclr    #$01, Obj_Control_Var_02(A1)                     ; $002E
                bne.s   loc_23564
                tst.b   Obj_Ani_Number(A0)                               ; $001C
                bne.s   loc_235B4
                rts
loc_23564:
                tst.b   Obj_Ani_Number(A0)                               ; $001C
                bne.s   loc_23570
                move.b  #$0B, Obj_Ani_Number(A0)                         ; $001C
loc_23570:
                addi.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                cmpi.b  #$17, Obj_Ani_Number(A0)                         ; $001C
                blt.s   loc_235B4
                bclr    #$00, Obj_Control_Var_02(A1)                     ; $002E
                bset    #$02, Obj_Control_Var_02(A1)                     ; $002E
                bra.s   loc_235B4           
;-------------------------------------------------------------------------------  
loc_2358C:
                btst    #$07, Obj_Status(A0)                             ; $0022
                bne     Jmp_1C_To_DeleteObject                 ; loc_23F5A
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_Control_Var_08(A1), A1                       ; $0034
                btst    #$05, Obj_Control_Var_02(A1)                     ; $002E
                beq.s   loc_235B4
                cmpi.b  #$09, Obj_Ani_Number(A0)                         ; $001C
                bne.s   loc_235B4
                move.b  #$0A, Obj_Ani_Number(A0)                         ; $001C
loc_235B4:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                lea     (loc_23C32), A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322
;-------------------------------------------------------------------------------  
loc_235E2:
                btst    #$07, Obj_Status(A0)                             ; $0022
                bne     Jmp_1C_To_DeleteObject                 ; loc_23F5A
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                beq     Jmp_1C_To_DeleteObject                 ; loc_23F5A
                bra.s   loc_235B4          
;-------------------------------------------------------------------------------  
loc_235F6:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_23604(PC, D0), D1
                jmp     loc_23604(PC, D1)     
;-------------------------------------------------------------------------------
loc_23604:
                dc.w    loc_2360E-loc_23604
                dc.w    loc_23646-loc_23604
                dc.w    loc_23744-loc_23604
                dc.w    loc_236BA-loc_23604
                dc.w    loc_23704-loc_23604    
;-------------------------------------------------------------------------------  
loc_2360E:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$20, Obj_Height_2(A0)                           ; $0016
                move.b  #$19, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_Control_Var_08(A1), A1                       ; $0034
                btst    #$02, Obj_Control_Var_01(A1)                     ; $002D
                beq.s   loc_23646
                bclr    #$02, Obj_Control_Var_01(A1)                     ; $002D
                move.b  #$06, Obj_Routine_2(A0)                          ; $0025
                move.w  #$0009, Obj_Timer(A0)                            ; $002A    
;-------------------------------------------------------------------------------  
loc_23646:
                bsr     Jmp_0A_To_ObjectFall                   ; loc_23F6C
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bmi.s   loc_2366E
                cmpi.w  #$0600, Obj_Y(A0)                                ; $000C
                bge.s   loc_2369C
                lea     (loc_23C32), A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322
loc_2366E:
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_Control_Var_08(A1), A1                       ; $0034
                bset    #$02, Obj_Control_Var_02(A1)                     ; $002E
                bset    #$04, Obj_Control_Var_02(A1)                     ; $002E
                move.b  #$02, Obj_Routine_2(A1)                          ; $0025
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$00, Obj_Subtype(A0)                            ; $0028
                jmp     (DisplaySprite)                        ; loc_D322
loc_2369C:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_Control_Var_08(A1), A1                       ; $0034
                bset    #$02, Obj_Control_Var_02(A1)                     ; $002E
                bset    #$04, Obj_Control_Var_02(A1)                     ; $002E
                move.b  #$02, Obj_Routine_2(A1)                          ; $0025
                bra     Jmp_1C_To_DeleteObject                 ; loc_23F5A                    
;-------------------------------------------------------------------------------  
loc_236BA:
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bpl.s   loc_236EE
                move.b  #$02, Obj_Priority(A0)                           ; $0018
                move.b  #$25, Obj_Map_Id(A0)                             ; $001A
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_Control_Var_08(A1), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$08, Obj_Ani_Time(A0)                           ; $001E
                bra.s   loc_23704
loc_236EE:
                bsr     Jmp_15_To_SpeedToPos                   ; loc_23F72
                lea     (loc_23C32), A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322     
;-------------------------------------------------------------------------------  
loc_23704:
                subi.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_2372A
                addi.b  #$01, Obj_Map_Id(A0)                             ; $001A
                move.b  #$08, Obj_Ani_Time(A0)                           ; $001E
                cmpi.b  #$27, Obj_Map_Id(A0)                             ; $001A
                bgt     loc_2369C
                blt.s   loc_2372A
                addi.b  #$0C, Obj_Ani_Time(A0)                           ; $001E     
loc_2372A:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_Control_Var_08(A1), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                jmp     (DisplaySprite)                        ; loc_D322 
;-------------------------------------------------------------------------------  
loc_23744:
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                bne     loc_23836
                addi.w  #$0018, Obj_Y(A0)                                ; $000C
                addi.w  #$000C, Obj_X(A0)                                ; $0008
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_23768
                subi.w  #$0018, Obj_X(A0)                                ; $0008
loc_23768:
                move.b  #$04, Obj_Height_2(A0)                           ; $0016
                move.b  #$04, Obj_Width_2(A0)                            ; $0017
                addq.b  #$01, Obj_Subtype(A0)                            ; $0028
                move.b  #$09, Obj_Map_Id(A0)                             ; $001A
                move.b  Obj_Speed_Y(A0), D0                              ; $0012
                lsr.b   #$01, D0
                move.b  D0, Obj_Speed_Y(A0)                              ; $0012
                neg.w   Obj_Speed_Y(A0)                                  ; $0012
                jsr     (PseudoRandomNumber)                   ; loc_325C
                asr.w   #$06, D0
                bmi.s   loc_2379A
                addi.w  #$0200, D0
loc_2379A:
                addi.w  #$FF00, D0
                move.w  D0, Obj_Speed(A0)                                ; $0010
                moveq   #$01, D3
loc_237A4:
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne     loc_23832
                move.b  #$57, Obj_Id(A1)                                 ; $0000
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
                move.w  #$6460, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$02, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$04, Obj_Height_2(A1)                           ; $0016
                move.b  #$04, Obj_Width_2(A1)                            ; $0017
                move.b  #$09, Obj_Map_Id(A1)                             ; $001A
                move.b  #$08, Obj_Routine(A1)                            ; $0024
                move.b  #$04, Obj_Routine_2(A1)                          ; $0025
                move.b  #$01, Obj_Subtype(A1)                            ; $0028
                move.w  Obj_Speed_Y(A0), Obj_Speed_Y(A1)          ; $0012, $0012
                jsr     (PseudoRandomNumber)                   ; loc_325C
                asr.w   #$06, D0
                bmi.s   loc_2381C
                addi.w  #$0200, D0
loc_2381C:
                addi.w  #$FF00, D0
                move.w  D0, Obj_Speed(A1)                                ; $0010
                swap.w  D0
                andi.w  #$0300, D0
                add.w   D0, Obj_Speed_Y(A1)                              ; $0012
                dbra    D3, loc_237A4
loc_23832:
                bra     Jmp_18_To_DisplaySprite                ; loc_23F54
loc_23836:
                bsr     Jmp_0A_To_ObjectFall                   ; loc_23F6C
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bmi.s   loc_23848
                bra     Jmp_23_To_MarkObjGone                  ; loc_23F60
loc_23848:
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  Obj_Speed_Y(A0), D0                              ; $0012
                lsr.b   #$01, D0
                move.b  D0, Obj_Speed_Y(A0)                              ; $0012
                neg.w   Obj_Speed_Y(A0)                                  ; $0012
                bra     Jmp_18_To_DisplaySprite                ; loc_23F54   
;===============================================================================
; Object - Partes do chefe da Chemical Plant
; [ End ]
;===============================================================================
;===============================================================================
; Routines referenced by the Green Hill boss
; [ Begin ]
;===============================================================================
loc_2385E:
		jsr     (SingleObjectLoad_2)                   ; loc_E714
		bne.s   loc_238A2
		move.b  #$57, Obj_Id(A1)                                 ; $0000
		move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
		move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
		move.w  #$2460, Obj_Art_VRAM(A1)                         ; $0002
		move.b  #$04, Obj_Flags(A1)                              ; $0001
		move.b  #$20, Obj_Width(A1)                              ; $0019
		move.b  #$02, Obj_Priority(A1)                           ; $0018
		move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		move.b  #$0E, Obj_Routine(A1)                            ; $0024
loc_238A2:
		jsr     (SingleObjectLoad_2)                   ; loc_E714
		bne.s   loc_238FE
		move.b  #$57, Obj_Id(A1)                                 ; $0000
		move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
		move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
		move.w  #$2460, Obj_Art_VRAM(A1)                         ; $0002
		move.b  #$04, Obj_Flags(A1)                              ; $0001
		move.b  #$20, Obj_Width(A1)                              ; $0019
		move.b  #$04, Obj_Priority(A1)                           ; $0018
		move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		subi.w  #$0038, Obj_Y(A1)                                ; $000C
		subi.w  #$0010, Obj_X(A1)                                ; $0008
		move.w  #$FFF0, Obj_Control_Var_02(A1)                   ; $002E
		addi.b  #$0C, Obj_Routine(A1)                            ; $0024
		move.b  #$06, Obj_Ani_Number(A1)                         ; $001C
loc_238FE:
		jsr     (SingleObjectLoad_2)                   ; loc_E714
		bne.s   loc_2393C
		move.b  #$57, Obj_Id(A1)                                 ; $0000
		move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
		move.l  #loc_23CD2, Obj_Map(A1)                    ; $0004
		move.w  #$2460, Obj_Art_VRAM(A1)                         ; $0002
		move.b  #$04, Obj_Flags(A1)                              ; $0001
		move.b  #$20, Obj_Width(A1)                              ; $0019
		move.b  #$04, Obj_Priority(A1)                           ; $0018
		move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
loc_2393C:
		rts
;===============================================================================

loc_2393E:
		bsr     loc_2395E
		moveq   #$00, D0
		move.b  Obj_Routine_2(A0), D0                            ; $0025
		move.w  loc_23950(PC, D0), D1
		jmp     loc_23950(PC, D1)
;-------------------------------------------------------------------------------
loc_23950:
		dc.w    loc_23A2A-loc_23950
		dc.w    loc_23B50-loc_23950
		dc.w    loc_23BD4-loc_23950
		dc.w    loc_23BE8-loc_23950
		dc.w    loc_23982-loc_23950
		dc.w    loc_239B2-loc_23950
		dc.w    loc_239F4-loc_23950
;-------------------------------------------------------------------------------
loc_2395E:
		cmpi.b  #$08, Obj_Routine_2(A0)                          ; $0025
		bge.s   loc_23976
		move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
		sub.w   Obj_X(A0), D0                                    ; $0008
		bgt.s   loc_23978
		bclr    #$00, Obj_Status(A0)                             ; $0022
loc_23976:
		rts
loc_23978:
		bset    #$00, Obj_Status(A0)                             ; $0022
		rts
;-------------------------------------------------------------------------------
; loc_23980:
		rts
;-------------------------------------------------------------------------------
loc_23982:
		subq.w  #$01, Obj_Control_Var_10(A0)                     ; $003C
		bpl     Boss_Defeated                          ; loc_23AEC
		bset    #$00, Obj_Status(A0)                             ; $0022
		bclr    #$07, Obj_Status(A0)                             ; $0022
		clr.w   Obj_Speed(A0)                                    ; $0010
		addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
		move.w  #$FFDA, Obj_Control_Var_10(A0)                   ; $003C
		tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
		bne.s   loc_239B0
		move.b  #$01, (Boss_Defeated_Flag).w                 ; $FFFFF7A7
loc_239B0:
		rts
;-------------------------------------------------------------------------------
loc_239B2:
		addq.w  #$01, Obj_Control_Var_10(A0)                     ; $003C
		beq.s   loc_239C2
		bpl.s   loc_239C8
		addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
		bra.s   loc_239EC
loc_239C2:
		clr.w   Obj_Speed_Y(A0)                                  ; $0012
		bra.s   loc_239EC
loc_239C8:
		cmpi.w  #$0030, Obj_Control_Var_10(A0)                   ; $003C
		bcs.s   loc_239E0
		beq.s   loc_239E8
		cmpi.w  #$0038, Obj_Control_Var_10(A0)                   ; $003C
		bcs.s   loc_239EC
		addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
		bra.s   loc_239EC
loc_239E0:
		subi.w  #$0008, Obj_Speed_Y(A0)                          ; $0012
		bra.s   loc_239EC
loc_239E8:
		clr.w   Obj_Speed_Y(A0)                                  ; $0012
loc_239EC:
		bsr     loc_23AC6
		bra     loc_23A46
;-------------------------------------------------------------------------------
loc_239F4:
		bset    #$06, Obj_Control_Var_02(A0)                     ; $002E
		move.w  #$0400, Obj_Speed(A0)                            ; $0010
		move.w  #$FFC0, Obj_Speed_Y(A0)                          ; $0012
		cmpi.w  #$2AC0, (Sonic_Level_Limits_Max_X).w         ; $FFFFEECA
		beq.s   loc_23A14
		addq.w  #$02, (Sonic_Level_Limits_Max_X).w           ; $FFFFEECA
		bra.s   loc_23A1A
loc_23A14:
		tst.b   Obj_Flags(A0)                                    ; $0001
		bpl.s   loc_23A22
loc_23A1A:
		bsr     loc_23AC6
		bra     loc_23A46
loc_23A22:
		addq.l  #$04, A7
		jmp     (DeleteObject)                         ; loc_D314
;-------------------------------------------------------------------------------
loc_23A2A:
		move.w  #$0100, Obj_Speed_Y(A0)                          ; $0012
		bsr     loc_23AC6
		cmpi.w  #$05A0, Obj_Control_Var_0C(A0)                   ; $0038
		bne.s   loc_23A46
		move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
		addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
loc_23A46:
		move.b  Obj_Control_Var_13(A0), D0                       ; $003F
		jsr     (CalcSine)                             ; loc_3282
		asr.w   #$06, D0
		add.w   Obj_Control_Var_0C(A0), D0                       ; $0038
		move.w  D0, Obj_Y(A0)                                    ; $000C
		move.w  Obj_Control_Var_04(A0), Obj_X(A0)         ; $0008, $0030
		addq.b  #$02, Obj_Control_Var_13(A0)                     ; $003F
		cmpi.b  #$08, Obj_Routine_2(A0)                          ; $0025
		bcc.s   loc_23AB0
		tst.b   Obj_Status(A0)                                   ; $0022
		bmi.s   loc_23AB2
		tst.b   Obj_Col_Flags(A0)                                ; $0020
		bne.s   loc_23AB0
		tst.b   Obj_Control_Var_12(A0)                           ; $003E
		bne.s   loc_23A8E
		move.b  #$20, Obj_Control_Var_12(A0)                     ; $003E
		move.w  #$00AC, D0
		jsr     (Play_Sfx)                             ; loc_1512
loc_23A8E:
		lea     ($FFFFFB22).w, A1
		moveq   #$00, D0
		tst.w   (A1)
		bne.s   loc_23A9C
		move.w  #$0EEE, D0
loc_23A9C:
		move.w  D0, (A1)
		subq.b  #$01, Obj_Control_Var_12(A0)                     ; $003E
		bne.s   loc_23AB0
		move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
		bclr    #$01, Obj_Control_Var_01(A0)                     ; $002D
loc_23AB0:
		rts
loc_23AB2:
		moveq   #$64, D0
		bsr     Jmp_01_To_AddPoints                    ; loc_23F66
		move.b  #$08, Obj_Routine_2(A0)                          ; $0025
		move.w  #$00B3, Obj_Control_Var_10(A0)                   ; $003C
		rts
loc_23AC6:
		move.l  Obj_Control_Var_04(A0), D2                       ; $0030
		move.l  Obj_Control_Var_0C(A0), D3                       ; $0038
		move.w  Obj_Speed(A0), D0                                ; $0010
		ext.l   D0
		asl.l   #$08, D0
		add.l   D0, D2
		move.w  Obj_Speed_Y(A0), D0                              ; $0012
		ext.l   D0
		asl.l   #$08, D0
		add.l   D0, D3
		move.l  D2, Obj_Control_Var_04(A0)                       ; $0030
		move.l  D3, Obj_Control_Var_0C(A0)                       ; $0038
		rts
;-------------------------------------------------------------------------------
; Rotina utilizada ap s os chefes de fase serem derrotados
; [ Begin ]
;-------------------------------------------------------------------------------
Boss_Defeated:                                                 ; loc_23AEC
		move.b  ($FFFFFE0F).w, D0
		andi.b  #$07, D0
		bne.s   Exit_Boss_Defeated                     ; loc_23B32
		jsr     (SingleObjectLoad)                     ; loc_E6FE
		bne.s   Exit_Boss_Defeated                     ; loc_23B32
		move.b  #$58, Obj_Id(A1)                                 ; $0000
		move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		jsr     (PseudoRandomNumber)                   ; loc_325C
		move.w  D0, D1
		moveq   #$00, D1
		move.b  D0, D1
		lsr.b   #$02, D1
		subi.w  #$0020, D1
		add.w   D1, Obj_X(A1)                                    ; $0008
		lsr.w   #$08, D0
		lsr.b   #$02, D0
		subi.w  #$0020, D0
		add.w   D0, Obj_Y(A1)                                    ; $000C
Exit_Boss_Defeated:                                            ; loc_23B32
		rts
;-------------------------------------------------------------------------------
; Rotina utilizada ap s os chefes de fase serem derrotados
; [ End ]
;-------------------------------------------------------------------------------
loc_23B34:
		jsr     (SingleObjectLoad)                     ; loc_E6FE
		bne.s   loc_23B4E
		move.b  #$58, Obj_Id(A1)                                 ; $0000
		move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
loc_23B4E:
		rts
;-------------------------------------------------------------------------------
loc_23B50:
		cmpi.w  #$0600, Obj_Control_Var_04(A0)                   ; $0030
		blt.s   loc_23B6C
		cmpi.w  #$0700, Obj_Control_Var_04(A0)                   ; $0030
		blt.s   loc_23B66
		move.w  #$0780, D0
		bra.s   loc_23B70
loc_23B66:
		move.w  #$0680, D0
		bra.s   loc_23B70
loc_23B6C:
		move.w  #$0580, D0
loc_23B70:
		move.w  #$0038, D1
		btst    #$00, Obj_Flags(A0)                              ; $0001
		beq.s   loc_23B7E
		neg.w   D1
loc_23B7E:
		add.w   D1, D0
		cmp.w   Obj_Control_Var_04(A0), D0                       ; $0030
		beq.s   loc_23B9E
		bgt.s   loc_23B90
		move.w  #$FF80, Obj_Speed(A0)                            ; $0010
		bra.s   loc_23B96
loc_23B90:
		move.w  #$0080, Obj_Speed(A0)                            ; $0010
loc_23B96:
		bsr     loc_23AC6
		bra     loc_23A46
loc_23B9E:
		cmpi.w  #$05A0, Obj_Control_Var_0C(A0)                   ; $0038
		bne     loc_23A46
		move.w  #$0000, Obj_Speed(A0)                            ; $0010
		move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
		addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
		btst    #$02, Obj_Control_Var_02(A0)                     ; $002E
		beq.s   loc_23BCA
		bclr    #$00, Obj_Control_Var_02(A0)                     ; $002E
		bra     loc_23A46
loc_23BCA:
		bset    #$00, Obj_Control_Var_02(A0)                     ; $002E
		bra     loc_23A46
;-------------------------------------------------------------------------------
loc_23BD4:
		btst    #$00, Obj_Control_Var_02(A0)                     ; $002E
		beq.s   loc_23BE0
		bra     loc_23A46
loc_23BE0:
		addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
		bra     loc_23A46
;-------------------------------------------------------------------------------
loc_23BE8:
		move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
		addi.w  #$004C, D0
		cmp.w   Obj_Control_Var_04(A0), D0                       ; $0030
		bgt.s   loc_23C16
		beq     loc_23A46
		subi.l  #$00008000, Obj_Control_Var_04(A0)               ; $0030
		cmpi.w  #$0558, Obj_Control_Var_04(A0)                   ; $0030
		bgt     loc_23A46
		move.w  #$0558, Obj_Control_Var_04(A0)                   ; $0030
		bra     loc_23A46
loc_23C16:
		addi.l  #$00008000, Obj_Control_Var_04(A0)               ; $0030
		cmpi.w  #$07C0, Obj_Control_Var_04(A0)                   ; $0030
		blt     loc_23A46
		move.w  #$07C0, Obj_Control_Var_04(A0)                   ; $0030
		bra     loc_23A46
;-------------------------------------------------------------------------------
loc_23C32:
		dc.w    loc_23C68-loc_23C32
		dc.w    loc_23C6B-loc_23C32
		dc.w    loc_23C6E-loc_23C32
		dc.w    loc_23C73-loc_23C32
		dc.w    loc_23C77-loc_23C32
		dc.w    loc_23C7E-loc_23C32
		dc.w    loc_23C81-loc_23C32
		dc.w    loc_23C84-loc_23C32
		dc.w    loc_23C87-loc_23C32
		dc.w    loc_23C8A-loc_23C32
		dc.w    loc_23C8D-loc_23C32
		dc.w    loc_23C99-loc_23C32
		dc.w    loc_23CA4-loc_23C32
		dc.w    loc_23CA7-loc_23C32
		dc.w    loc_23CAA-loc_23C32
		dc.w    loc_23CAD-loc_23C32
		dc.w    loc_23CB0-loc_23C32
		dc.w    loc_23CB3-loc_23C32
		dc.w    loc_23CB6-loc_23C32
		dc.w    loc_23CB9-loc_23C32
		dc.w    loc_23CBC-loc_23C32
		dc.w    loc_23CBF-loc_23C32
		dc.w    loc_23CC2-loc_23C32
		dc.w    loc_23CC5-loc_23C32
		dc.w    loc_23CC8-loc_23C32
		dc.w    loc_23CCB-loc_23C32
		dc.w    loc_23CCF-loc_23C32
loc_23C68:
		dc.b    $0F, $00, $FF
loc_23C6B:
		dc.b    $0F, $01, $FF
loc_23C6E:
		dc.b    $05, $02, $03, $02, $FF
loc_23C73:
		dc.b    $05, $02, $03, $FF
loc_23C77:
		dc.b    $02, $04, $05, $06, $07, $08, $FF
loc_23C7E:
		dc.b    $03, $09, $FF
loc_23C81:
		dc.b    $0F, $0A, $FF
loc_23C84:
		dc.b    $0F, $1C, $FF
loc_23C87:
		dc.b    $0F, $1E, $FF
loc_23C8A:
		dc.b    $0F, $0B, $FF
loc_23C8D:
		dc.b    $03, $0C, $0C, $0D, $0D, $0D, $0D, $0D
		dc.b    $0C, $0C, $FD, $09
loc_23C99:
		dc.b    $03, $0E, $0E, $0F, $0F, $0F, $0F, $0F
		dc.b    $0E, $0E, $FF
loc_23CA4:
		dc.b    $0F, $10, $FF
loc_23CA7:
		dc.b    $0F, $11, $FF
loc_23CAA:
		dc.b    $0F, $12, $FF
loc_23CAD:
		dc.b    $0F, $13, $FF
loc_23CB0:
		dc.b    $0F, $14, $FF
loc_23CB3:
		dc.b    $0F, $15, $FF
loc_23CB6:
		dc.b    $0F, $16, $FF
loc_23CB9:
		dc.b    $0F, $17, $FF
loc_23CBC:
		dc.b    $0F, $18, $FF
loc_23CBF:
		dc.b    $0F, $19, $FF
loc_23CC2:
		dc.b    $0F, $1A, $FF
loc_23CC5:
		dc.b    $0F, $1B, $FF
loc_23CC8:
		dc.b    $0F, $1C, $FF
loc_23CCB:
		dc.b    $01, $1D, $1F, $FF
loc_23CCF:
		dc.b    $0F, $1E, $FF
;-------------------------------------------------------------------------------
loc_23CD2:
		dc.w    loc_23D22-loc_23CD2
		dc.w    loc_23D3C-loc_23CD2
		dc.w    loc_23D46-loc_23CD2
		dc.w    loc_23D50-loc_23CD2
		dc.w    loc_23D5A-loc_23CD2
		dc.w    loc_23D64-loc_23CD2
		dc.w    loc_23D6E-loc_23CD2
		dc.w    loc_23D78-loc_23CD2
		dc.w    loc_23D82-loc_23CD2
		dc.w    loc_23D8C-loc_23CD2
		dc.w    loc_23D96-loc_23CD2
		dc.w    loc_23DA8-loc_23CD2
		dc.w    loc_23DB2-loc_23CD2
		dc.w    loc_23DBC-loc_23CD2
		dc.w    loc_23DC6-loc_23CD2
		dc.w    loc_23DD0-loc_23CD2
		dc.w    loc_23DDA-loc_23CD2
		dc.w    loc_23DE4-loc_23CD2
		dc.w    loc_23DEE-loc_23CD2
		dc.w    loc_23DF8-loc_23CD2
		dc.w    loc_23E02-loc_23CD2
		dc.w    loc_23E14-loc_23CD2
		dc.w    loc_23E26-loc_23CD2
		dc.w    loc_23E38-loc_23CD2
		dc.w    loc_23E4A-loc_23CD2
		dc.w    loc_23E64-loc_23CD2
		dc.w    loc_23E7E-loc_23CD2
		dc.w    loc_23E98-loc_23CD2
		dc.w    loc_23EB2-loc_23CD2
		dc.w    loc_23ECC-loc_23CD2
		dc.w    loc_23ED6-loc_23CD2
		dc.w    loc_23EF8-loc_23CD2
		dc.w    loc_23F02-loc_23CD2
		dc.w    loc_23F0C-loc_23CD2
		dc.w    loc_23F16-loc_23CD2
		dc.w    loc_23F20-loc_23CD2
		dc.w    loc_23F2A-loc_23CD2
		dc.w    loc_23F34-loc_23CD2
		dc.w    loc_23F3E-loc_23CD2
		dc.w    loc_23F48-loc_23CD2
loc_23D22:
		dc.w    $0003
		dc.l    $B80D0000, $0000FFF8
		dc.l    $C80A0008, $00040008
		dc.l    $E0050011, $00080010
loc_23D3C:
		dc.w    $0001
		dc.l    $FC000024, $0012FFFC
loc_23D46:
		dc.w    $0001
		dc.l    $FC040025, $0012FFF5
loc_23D50:
		dc.w    $0001
		dc.l    $FC040027, $0013FFF6
loc_23D5A:
		dc.w    $0001
		dc.l    $C4000036, $001BFFFB
loc_23D64:
		dc.w    $0001
		dc.l    $C4000037, $001BFFFB
loc_23D6E:
		dc.w    $0001
		dc.l    $C4000038, $001CFFFB
loc_23D78:
		dc.w    $0001
		dc.l    $C4010039, $001CFFFB
loc_23D82:
		dc.w    $0001
		dc.l    $C401003B, $001DFFFB
loc_23D8C:
		dc.w    $0001
		dc.l    $FC00003D, $001EFFFC
loc_23D96:
		dc.w    $0002
		dc.l    $000E0015, $000A0000
		dc.l    $08080021, $00100018
loc_23DA8:
		dc.w    $0001
		dc.l    $18080029, $00140000
loc_23DB2:
		dc.w    $0001
		dc.l    $1808002C, $00160000
loc_23DBC:
		dc.w    $0001
		dc.l    $1808002F, $00170008
loc_23DC6:
		dc.w    $0001
		dc.l    $18040032, $0019FFFC
loc_23DD0:
		dc.w    $0001
		dc.l    $18040034, $001AFFFC
loc_23DDA:
		dc.w    $0001
		dc.l    $10080063, $00310000
loc_23DE4:
		dc.w    $0001
		dc.l    $10080066, $00330000
loc_23DEE:
		dc.w    $0001
		dc.l    $10080069, $00340000
loc_23DF8:
		dc.w    $0001
		dc.l    $1008006C, $00360000
loc_23E02:
		dc.w    $0002
		dc.l    $1008006C, $00360000
		dc.l    $08080063, $00310000
loc_23E14:
		dc.w    $0002
		dc.l    $1008006C, $00360000
		dc.l    $08080066, $00330000
loc_23E26:
		dc.w    $0002
		dc.l    $1008006C, $00360000
		dc.l    $08080069, $00340000
loc_23E38:
		dc.w    $0002
		dc.l    $1008006C, $00360000
		dc.l    $0808006C, $00360000
loc_23E4A:
		dc.w    $0003
		dc.l    $1008006C, $00360000
		dc.l    $0808006C, $00360000
		dc.l    $00080063, $00310000
loc_23E64:
		dc.w    $0003
		dc.l    $1008006C, $00360000
		dc.l    $0808006C, $00360000
		dc.l    $00080066, $00330000
loc_23E7E:
		dc.w    $0003
		dc.l    $1008006C, $00360000
		dc.l    $0808006C, $00360000
		dc.l    $00080069, $00340000
loc_23E98:
		dc.w    $0003
		dc.l    $1008006C, $00360000
		dc.l    $0808006C, $00360000
		dc.l    $0008006C, $00360000
loc_23EB2:
		dc.w    $0003
		dc.l    $000E0015, $000A0000
		dc.l    $08080021, $00100018
		dc.l    $08080021, $00100030
loc_23ECC:
		dc.w    $0001
		dc.l    $000B003E, $001F0000
loc_23ED6:
		dc.w    $0004
		dc.l    $000E0015, $000A0000
		dc.l    $08080021, $00100018
		dc.l    $08080021, $00100030
		dc.l    $08080021, $00100048
loc_23EF8:
		dc.w    $0001
		dc.l    $000B083E, $081F0000
loc_23F02:
		dc.w    $0001
		dc.l    $000E0015, $000A0000
loc_23F0C:
		dc.w    $0001
		dc.l    $00080021, $00100000
loc_23F16:
		dc.w    $0001
		dc.l    $B80D0000, $0000FFF8
loc_23F20:
		dc.w    $0001
		dc.l    $C80A0008, $00040008
loc_23F2A:
		dc.w    $0001
		dc.l    $E0050011, $00080010
loc_23F34:
		dc.w    $0001
		dc.l    $E00A004A, $0025FFF0
loc_23F3E:
		dc.w    $0001
		dc.l    $E80D0053, $0029FFF0
loc_23F48:
		dc.w    $0001
		dc.l    $E80D005B, $002DFFF0
;===============================================================================
; Routines referenced by the Green Hill boss
; [ End ]
;===============================================================================
		dc.w    $0000
Jmp_18_To_DisplaySprite:                                       ; loc_23F54
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_1C_To_DeleteObject:                                        ; loc_23F5A
		jmp     (DeleteObject)                         ; loc_D314
Jmp_23_To_MarkObjGone:                                         ; loc_23F60
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_01_To_AddPoints:                                           ; loc_23F66
		jmp     (AddPoints)                            ; loc_2D2D4
Jmp_0A_To_ObjectFall:                                          ; loc_23F6C
		jmp     (ObjectFall)                           ; loc_D1AE
Jmp_15_To_SpeedToPos:                                          ; loc_23F72
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
Obj4B_Buzzer:                                               ; loc_23F78
;===============================================================================
; Object 0x4B - Buzzer Enemy from Green Hill
; [ Begin ] 
;===============================================================================   
; loc_23F78:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_23F86(PC, D0), D1
                jmp     loc_23F86(PC, D1)
;-------------------------------------------------------------------------------
loc_23F86:
                dc.w    loc_23FD8-loc_23F86
                dc.w    loc_24084-loc_23F86
                dc.w    loc_23FA0-loc_23F86
                dc.w    loc_23F8E-loc_23F86   
;-------------------------------------------------------------------------------
loc_23F8E:
                bsr     Jmp_16_To_SpeedToPos                   ; loc_2428C
                lea     (Buzzer_AnimateData), A1               ; loc_241CE
                bsr     Jmp_12_To_AnimateSprite                ; loc_24274
                bra     Jmp_01_To_MarkObjGone_4                ; loc_24280   
;-------------------------------------------------------------------------------
loc_23FA0:
                move.l  Obj_Timer(A0), A1                                ; $002A
                tst.b   (A1)
                beq     Jmp_1D_To_DeleteObject                 ; loc_24268
                tst.w   Obj_Control_Var_04(A1)                           ; $0030
                bmi.s   loc_23FB2
                rts
loc_23FB2:
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                lea     (Buzzer_AnimateData), A1               ; loc_241CE
                bsr     Jmp_12_To_AnimateSprite                ; loc_24274
                bra     Jmp_01_To_MarkObjGone_4                ; loc_24280   
;-------------------------------------------------------------------------------
loc_23FD8:
                move.l  #Buzzer_Mappings, Obj_Map(A0)   ; loc_241EA, $0004
                move.w  #$03D2, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_2B_To_ModifySpriteAttr_2P          ; loc_24286
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$0A, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.b  #$10, Obj_Height_2(A0)                           ; $0016
                move.b  #$18, Obj_Width_2(A0)                            ; $0017
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     Jmp_13_To_SingleObjectLoad_2           ; loc_2426E
                bne.s   loc_24082
                move.b  #$4B, Obj_Id(A1)                                 ; $0000
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.l  #Buzzer_Mappings, Obj_Map(A1)   ; loc_241EA, $0004
                move.w  #$03D2, Obj_Art_VRAM(A1)                         ; $0002
                bsr     Jmp_06_To_ModifySpriteAttr_2P_A1       ; loc_2427A
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  #$01, Obj_Ani_Number(A1)                         ; $001C
                move.l  A0, Obj_Timer(A1)                                ; $002A
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  #$0100, Obj_Control_Var_02(A0)                   ; $002E
                move.w  #$FF00, Obj_Speed(A0)                            ; $0010
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_24082
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_24082:
                rts  
;-------------------------------------------------------------------------------
loc_24084:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_240A0(PC, D0), D1
                jsr     loc_240A0(PC, D1)
                lea     (Buzzer_AnimateData), A1               ; loc_241CE
                bsr     Jmp_12_To_AnimateSprite                ; loc_24274
                bra     Jmp_01_To_MarkObjGone_4                ; loc_24280          
;-------------------------------------------------------------------------------
loc_240A0:
                dc.w    loc_240A4-loc_240A0
                dc.w    loc_24134-loc_240A0              
;-------------------------------------------------------------------------------
loc_240A4:
                bsr     loc_240E6
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                cmpi.w  #$000F, D0
                beq.s   loc_240CA
                tst.w   D0
                bpl.s   loc_240C8
                subq.w  #$01, Obj_Control_Var_02(A0)                     ; $002E
                bgt     Jmp_16_To_SpeedToPos                   ; loc_2428C
                move.w  #$001E, Obj_Control_Var_04(A0)                   ; $0030
loc_240C8:
                rts
loc_240CA:
                sf      Obj_Control_Var_06(A0)                           ; $0032
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Flags(A0)                               ; $0001
                bchg    #00, Obj_Status(A0)                              ; $0022
                move.w  #$0100, Obj_Control_Var_02(A0)                   ; $002E
                rts
loc_240E6:
                tst.b   Obj_Control_Var_06(A0)                           ; $0032
                bne     loc_24132
                move.w  Obj_X(A0), D0                                    ; $0008
                sub.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                move.w  D0, D1
                bpl.s   loc_240FC
                neg.w   D0
loc_240FC:
                cmpi.w  #$0028, D0
                blt.s   loc_24132
                cmpi.w  #$0030, D0
                bgt.s   loc_24132
                tst.w   D1
                bpl.s   loc_24116
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_24132
                bra.s   loc_2411E
loc_24116:
                btst    #$00, Obj_Flags(A0)                              ; $0001
                bne.s   loc_24132
loc_2411E:
                st      Obj_Control_Var_06(A0)                           ; $0032
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$03, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$0032, Obj_Control_Var_08(A0)                   ; $0034
loc_24132:
                rts     
;-------------------------------------------------------------------------------
loc_24134:
                move.w  Obj_Control_Var_08(A0), D0                       ; $0034
                subq.w  #$01, D0
                blt.s   loc_24148
                move.w  D0, Obj_Control_Var_08(A0)                       ; $0034
                cmpi.w  #$0014, D0
                beq.s   loc_2414E
                rts
loc_24148:
                subq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                rts
loc_2414E:
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne.s   loc_241C8
                move.b  #$4B, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.l  #Buzzer_Mappings, Obj_Map(A1)   ; loc_241EA, $0004
                move.w  #$03D2, Obj_Art_VRAM(A1)                         ; $0002
                bsr     Jmp_06_To_ModifySpriteAttr_2P_A1       ; loc_2427A
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$98, Obj_Col_Flags(A1)                          ; $0020
                move.b  #$10, Obj_Width(A1)                              ; $0019
                move.b  Obj_Status(A0), Obj_Status(A1)            ; $0022, $0022
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  #$02, Obj_Ani_Number(A1)                         ; $001C
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0018, Obj_Y(A1)                                ; $000C
                move.w  #$000D, D0
                move.w  #$0180, Obj_Speed_Y(A1)                          ; $0012
                move.w  #$FE80, Obj_Speed(A1)                            ; $0010
                btst    #$00, Obj_Flags(A1)                              ; $0001
                beq.s   loc_241C8
                neg.w   Obj_Speed(A1)                                    ; $0010
                neg.w   D0
loc_241C8:
                add.w   D0, Obj_X(A1)                                    ; $0008
                rts                                   
;-------------------------------------------------------------------------------   
Buzzer_AnimateData:                                            ; loc_241CE
                dc.w    loc_241D6-Buzzer_AnimateData
                dc.w    loc_241D9-Buzzer_AnimateData
                dc.w    loc_241DD-Buzzer_AnimateData
                dc.w    loc_241E1-Buzzer_AnimateData
loc_241D6:
                dc.b    $0F, $00, $FF
loc_241D9:
                dc.b    $02, $03, $04, $FF
loc_241DD:
                dc.b    $03, $05, $06, $FF
loc_241E1:
                dc.b    $09, $01, $01, $01, $01, $01, $FD, $00
                dc.b    $00                   
;-------------------------------------------------------------------------------
Buzzer_Mappings:                                               ; loc_241EA
                include 'mappings/sprite/obj4B.asm'
;===============================================================================
; Object 0x4B - Buzzer Enemy from Green Hill
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
		dc.w    $0000
Jmp_1D_To_DeleteObject:                                        ; loc_24268
		jmp     (DeleteObject)                         ; loc_D314
Jmp_13_To_SingleObjectLoad_2:                                  ; loc_2426E
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_12_To_AnimateSprite:                                       ; loc_24274
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_06_To_ModifySpriteAttr_2P_A1:                              ; loc_2427A
		jmp     (ModifySpriteAttr_2P_A1)               ; loc_DBDA
Jmp_01_To_MarkObjGone_4:                                       ; loc_24280
		jmp     (MarkObjGone_4)                        ; loc_D2A0
Jmp_2B_To_ModifySpriteAttr_2P:                                 ; loc_24286
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_16_To_SpeedToPos:                                          ; loc_2428C
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj5C_Masher:                                               ; loc_24294
;===============================================================================
; Object 0x5C - Masher (Piranha) Enemy from Green Hill
; [ Begin ] 
;===============================================================================   
; loc_24294:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_242A6(PC, D0), D1
                jsr     loc_242A6(PC, D1)
                bra     Jmp_24_To_MarkObjGone                  ; loc_2437C
;------------------------------------------------------------------------------- 
loc_242A6:
                dc.w    loc_242AA-loc_242A6
                dc.w    loc_242E4-loc_242A6              
;-------------------------------------------------------------------------------  
loc_242AA:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.l  #Masher_Mappings, Obj_Map(A0)   ; loc_24342, $0004
                move.w  #$0414, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_2C_To_ModifySpriteAttr_2P          ; loc_24388
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$09, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$10, Obj_Width(A0)                              ; $0019
                move.w  #$FC00, Obj_Speed_Y(A0)                          ; $0012
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030  
;------------------------------------------------------------------------------- 
loc_242E4:
                lea     (Masher_Animate_Data), A1              ; loc_24330
                bsr     Jmp_13_To_AnimateSprite                ; loc_24382
                bsr     Jmp_17_To_SpeedToPos                   ; loc_2438E
                addi.w  #$0018, Obj_Speed_Y(A0)                          ; $0012
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcc.s   loc_2430C
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.w  #$FB00, Obj_Speed_Y(A0)                          ; $0012
loc_2430C:
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                subi.w  #$00C0, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcc.s   loc_2432E
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                tst.w   Obj_Speed_Y(A0)                                  ; $0012
                bmi.s   loc_2432E
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
loc_2432E:
                rts             
;------------------------------------------------------------------------------- 
Masher_Animate_Data:                                           ; loc_24330
                dc.w    loc_24336-Masher_Animate_Data
                dc.w    loc_2433A-Masher_Animate_Data
                dc.w    loc_2433E-Masher_Animate_Data
loc_24336:
                dc.b    $07, $00, $01, $FF
loc_2433A:
                dc.b    $03, $00, $01, $FF
loc_2433E:
                dc.b    $07, $00, $FF, $00    
;-------------------------------------------------------------------------------    
Masher_Mappings:                                               ; loc_24342
                include 'mappings/sprite/obj5C.asm'
;===============================================================================
; Object 0x5C - Masher (Piranha) Enemy from Green Hill
; [ End ] 
;===============================================================================		
;-------------------------------------------------------------------------------
		dc.w    $0000
Jmp_24_To_MarkObjGone:                                         ; loc_2437C
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_13_To_AnimateSprite:                                       ; loc_24382
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_2C_To_ModifySpriteAttr_2P:                                 ; loc_24388
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_17_To_SpeedToPos:                                          ; loc_2438E
		jmp     (SpeedToPos)                           ; loc_D1DA
;-------------------------------------------------------------------------------
;===============================================================================
; Object 0x5D - CPZ Boss (Unused)
; [ Begin ] 
;===============================================================================
; loc_24394:
Obj5D:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_243A2(PC, D0), D1
                jmp     loc_243A2(PC, D1)
;-------------------------------------------------------------------------------
loc_243A2:
                dc.w    loc_243B0-loc_243A2
                dc.w    loc_244A0-loc_243A2
                dc.w    loc_24620-loc_243A2
                dc.w    loc_2464E-loc_243A2
                dc.w    loc_24A12-loc_243A2      
                dc.w    loc_243A2-loc_243A2
                dc.w    loc_246FA-loc_243A2                             
;------------------------------------------------------------------------------- 
loc_243B0:
                move.l  #loc_24AB4, Obj_Map(A0)                    ; $0004
                move.w  #$0400, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$20, Obj_Width(A0)                              ; $0019
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$08, Obj_Boss_Hit(A0)                           ; $0021
                move.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  Obj_X(A0), (Boss_Move_Buffer).w              ; $FFFFF750; $0008
                move.w  Obj_Y(A0), (Boss_Move_Buffer+$04).w          ; $FFFFF754; $000C
                move.b  #$10, Obj_Map_Id(A0)                             ; $001A
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                bsr     Jmp_2D_To_ModifySpriteAttr_2P          ; loc_2584C
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne     loc_2449E
                move.b  #$5D, Obj_Id(A1)                                 ; $0000
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.l  A1, Obj_Control_Var_08(A0)                       ; $0034
                move.l  #loc_24AB4, Obj_Map(A1)                    ; $0004
                move.w  #$0400, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$04, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                bsr     Jmp_07_To_ModifySpriteAttr_2P_A1       ; loc_25840
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne     loc_2449E
                move.b  #$5D, Obj_Id(A1)                                 ; $0000
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.l  #loc_24DAE, Obj_Map(A1)                    ; $0004
                move.w  #$0400, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
loc_2449E:
                rts  
;-------------------------------------------------------------------------------
loc_244A0:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_244AE(PC, D0), D1
                jmp     loc_244AE(PC, D1)
;-------------------------------------------------------------------------------   
loc_244AE:
                dc.w    loc_244B6-loc_244AE
                dc.w    loc_244EC-loc_244AE
                dc.w    loc_24514-loc_244AE
                dc.w    loc_24564-loc_244AE  
;-------------------------------------------------------------------------------      
loc_244B6:
                move.w  #$0100, Obj_Speed_Y(A0)                          ; $0012
                bsr     Boss_Move                              ; loc_245FA
                cmpi.w  #$0400, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bne.s   loc_244DE
                move.w  #$0400, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bsr     loc_24A54
loc_244DE:
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)   ; $FFFFF754, $000C
                bsr     loc_24580
                bra     Jmp_19_To_DisplaySprite                ; loc_25834  
;-------------------------------------------------------------------------------
loc_244EC:
                bclr    #$04, Obj_Control_Var_00(A0)                     ; $002C
                beq.s   loc_2450C
                addi.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$FF00, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_24508
                neg.w   D0
loc_24508:
                move.w  D0, Obj_Speed(A0)                                ; $0010
loc_2450C:
                bsr     loc_24580
                bra     Jmp_19_To_DisplaySprite                ; loc_25834  
;-------------------------------------------------------------------------------
loc_24514:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_24580
                bsr     loc_24526
                jmp     (DisplaySprite)                        ; loc_D322
loc_24526:
                btst    #$05, Obj_Control_Var_00(A0)                     ; $002C
                bne.s   loc_24552
                move.w  Obj_X(A0), D0                                    ; $0008
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_24546
                addi.w  #$0034, D0
                sub.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                bpl.s   loc_24552
                rts
loc_24546:
                subi.w  #$0034, D0
                sub.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                bmi.s   loc_24552
                rts
loc_24552:
                bset    #$01, Obj_Control_Var_00(A0)                     ; $002C
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                rts    
;-------------------------------------------------------------------------------
loc_24564:
                btst    #$04, Obj_Control_Var_00(A0)                     ; $002C
                beq.s   loc_24576
                move.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bra     loc_244EC
loc_24576:
                bsr     loc_24580
                jmp     (DisplaySprite)                        ; loc_D322
loc_24580:
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                jsr     (CalcSine)                             ; loc_3282
                asr.w   #$06, D0
                add.w   (Boss_Move_Buffer+$04).w, D0                 ; $FFFFF754
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                addq.b  #$02, Obj_Map_Id(A0)                             ; $001A
;-------------------------------------------------------------------------------                
Boss_Hit:	; Referenced by Hill Top boss               
                cmpi.b  #$08, Obj_Ani_Boss_Routine(A0)                   ; $0026
                bcc.s   loc_245E4
                tst.b   Obj_Control_Var_06(A0)                           ; $0032
                beq.s   loc_245E6
                tst.b   Obj_Col_Flags(A0)                                ; $0020
                bne.s   loc_245E4
                tst.b   Obj_Inertia(A0)                                  ; $0014
                bne.s   loc_245C8
                move.b  #$20, Obj_Inertia(A0)                            ; $0014
                move.w  #$00AC, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_245C8:
                lea     ($FFFFFB22).w, A1
                moveq   #$00, D0
                tst.w   (A1)
                bne.s   loc_245D6
                move.w  #$0EEE, D0
loc_245D6:
                move.w  D0, (A1)
                subq.b  #$01, Obj_Inertia(A0)                            ; $0014
                bne.s   loc_245E4
                move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
loc_245E4:
                rts
loc_245E6:
                moveq   #$64, D0
                bsr     Jmp_02_To_AddPoints                    ; loc_25846
                move.w  #$00B3, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                move.b  #$08, Obj_Ani_Boss_Routine(A0)                   ; $0026
                rts
;-------------------------------------------------------------------------------    
Boss_Move:                                                     ; loc_245FA
                move.l  (Boss_Move_Buffer).w, D2                     ; $FFFFF750
                move.l  (Boss_Move_Buffer+$04).w, D3                 ; $FFFFF754
                move.w  (Boss_Move_Buffer+$08).w, D0                 ; $FFFFF758
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  (Boss_Move_Buffer+$0A).w, D0                 ; $FFFFF75A
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, (Boss_Move_Buffer).w                     ; $FFFFF750
                move.l  D3, (Boss_Move_Buffer+$04).w                 ; $FFFFF754
                rts  
;-------------------------------------------------------------------------------
loc_24620:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.l  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                move.l  #loc_24AA2, A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322 
;-------------------------------------------------------------------------------
loc_2464E:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.l  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_24678(PC, D0), D1
                jmp     loc_24678(PC, D1)
;-------------------------------------------------------------------------------   
loc_24678:
                dc.w    loc_2467E-loc_24678
                dc.w    loc_246AA-loc_24678
                dc.w    loc_246CE-loc_24678       
;------------------------------------------------------------------------------- 
loc_2467E:
                bclr    #$00, Obj_Control_Var_00(A1)                     ; $002C
                beq     Jmp_19_To_DisplaySprite                ; loc_25834
                bset    #$02, Obj_Control_Var_00(A1)                     ; $002C
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
                addi.b  #$02, Obj_Routine_2(A0)                          ; $0025
                lea     (loc_24D80), A1
                jsr     (AnimateSprite)                        ; loc_D372
                bra     Jmp_19_To_DisplaySprite                ; loc_25834     
;-------------------------------------------------------------------------------
loc_246AA:
                bclr    #$01, Obj_Control_Var_00(A1)                     ; $002C
                beq.s   loc_246BE
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                bset    #$03, Obj_Control_Var_00(A1)                     ; $002C
loc_246BE:
                lea     (loc_24D80), A1
                jsr     (AnimateSprite)                        ; loc_D372
                bra     Jmp_19_To_DisplaySprite                ; loc_25834  
;-------------------------------------------------------------------------------
loc_246CE:
                addq.b  #$01, Obj_Control_Var_00(A1)                     ; $002C
                andi.b  #$03, Obj_Control_Var_00(A1)                     ; $002C
                bne.s   loc_246E6
                move.l  A0, A2
                move.l  A1, A0
                bsr     loc_24A54
                move.l  A2, A0
                bra.s   loc_246EA
loc_246E6:
                bsr     loc_24964
loc_246EA:
                move.b  #$00, Obj_Routine_2(A0)                          ; $0025
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                bra     Jmp_19_To_DisplaySprite                ; loc_25834                                
;-------------------------------------------------------------------------------
loc_246FA:
                move.l  Obj_X(A0), D5                                    ; $0008
                move.l  Obj_Y(A0), D6                                    ; $000C
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_2472C(PC, D0), D1
                jmp     loc_2472C(PC, D1)  
;-------------------------------------------------------------------------------
loc_2472C:
                dc.w    loc_2473C-loc_2472C
                dc.w    loc_2474E-loc_2472C
                dc.w    loc_2477E-loc_2472C
                dc.w    loc_247AE-loc_2472C
                dc.w    loc_247BC-loc_2472C
                dc.w    loc_2481A-loc_2472C
                dc.w    loc_2492C-loc_2472C
                dc.w    loc_2480A-loc_2472C  
;-------------------------------------------------------------------------------
loc_2473C:
                move.l  #loc_24F76, A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322   
;-------------------------------------------------------------------------------
loc_2474E:
                bset    #$00, Obj_Control_Var_00(A1)                     ; $002C
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A1), D0                                    ; $0008
                bmi.s   loc_2476E
                bset    #$00, Obj_Status(A1)                             ; $0022
                bset    #$00, Obj_Flags(A1)                              ; $0001
                bra     Jmp_1E_To_DeleteObject                 ; loc_2583A
loc_2476E:
                bclr    #$00, Obj_Status(A1)                             ; $0022
                bclr    #$00, Obj_Flags(A1)                              ; $0001
                bra     Jmp_1E_To_DeleteObject                 ; loc_2583A                 
;-------------------------------------------------------------------------------
loc_2477E:
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                ble.s   loc_24788
                rts
loc_24788:
                bclr    #$02, Obj_Control_Var_00(A1)                     ; $002C
                beq.s   loc_24796
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
loc_24796:
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.l  #loc_24F76, A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322  
;-------------------------------------------------------------------------------
loc_247AE:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bset    #$04, Obj_Control_Var_00(A1)                     ; $002C
                bra     Jmp_19_To_DisplaySprite                ; loc_25834             
;-------------------------------------------------------------------------------
loc_247BC:
                bclr    #$03, Obj_Control_Var_00(A1)                     ; $002C
                beq     Jmp_19_To_DisplaySprite                ; loc_25834
                move.w  #$000B, Obj_Timer(A0)                            ; $002A
                move.w  #$0400, Obj_Speed_Y(A0)                          ; $0012
                move.b  #$0C, Obj_Height_2(A0)                           ; $0016
                move.b  #$0C, Obj_Width_2(A0)                            ; $0017
                move.b  #$1A, Obj_Col_Flags(A0)                          ; $0020
                subi.w  #$0018, Obj_Y(A0)                                ; $000C
                move.w  #$0034, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_247F8
                neg.w   D0
loc_247F8:
                sub.w   D0, Obj_X(A0)                                    ; $0008
                addi.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$03, Obj_Ani_Number(A0)                         ; $001C
                rts          
;-------------------------------------------------------------------------------
loc_2480A:
                move.l  #loc_24F76, A1
                jsr     (AnimateSprite)                        ; loc_D372
                bra     Jmp_19_To_DisplaySprite                ; loc_25834     
;-------------------------------------------------------------------------------
loc_2481A:
                move.l  D5, Obj_X(A0)                                    ; $0008
                move.l  D6, Obj_Y(A0)                                    ; $000C
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                ble.s   loc_2482C
                rts
loc_2482C:
                bclr    #$05, Obj_Control_Var_00(A1)                     ; $002C
                beq.s   loc_24842
                move.b  #$0E, Obj_Routine_2(A0)                          ; $0025
                move.b  #$04, Obj_Ani_Number(A0)                         ; $001C
                bra.s   loc_2480A
loc_24842:
                bsr     Jmp_18_To_SpeedToPos                   ; loc_25858
                cmpi.w  #$0460, Obj_Y(A0)                                ; $000C
                bgt     Jmp_1E_To_DeleteObject                 ; loc_2583A
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_24866
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                bra.s   loc_24878
loc_24866:
                move.l  #loc_24F76, A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322
loc_24878:
                moveq   #$02, D2
                move.l  A0, A1
                addi.w  #$0008, Obj_Y(A1)                                ; $000C
                bra.s   loc_2488E   
;-------------------------------------------------------------------------------   
loc_24884:
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne     loc_24926             
;------------------------------------------------------------------------------- 
loc_2488E:
                move.b  #$5D, Obj_Id(A1)                                 ; $0000
                move.l  #loc_2500C, Obj_Map(A1)                    ; $0004
                move.w  #$0400, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$0C, Obj_Routine(A1)                            ; $0024
                move.b  #$0C, Obj_Routine_2(A1)                          ; $0025
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.l  Obj_Control_Var_08(A0), Obj_Control_Var_08(A1); $0034, $0034
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                jsr     (PseudoRandomNumber)                   ; loc_325C
                asr.b   #$04, D1
                ext.w   D1
                add.w   D1, Obj_X(A1)                                    ; $0008
                asr.b   #$04, D0
                bset    #$02, D0
                ext.w   D0
                asl.w   #$06, D0
                move.w  D0, Obj_Speed_Y(A1)                              ; $0012
                swap.w  D0
                asr.b   #$04, D0
                bset    #$02, D0
                ext.w   D0
                asl.w   #$06, D0
                move.w  D0, Obj_Speed(A1)                                ; $0010
                move.b  #$1A, Obj_Map_Id(A1)                             ; $001A
                move.b  #$04, Obj_Height_2(A1)                           ; $0016
                move.b  #$04, Obj_Width_2(A1)                            ; $0017
                move.b  #$18, Obj_Col_Flags(A1)                          ; $0020
                move.w  #$005A, Obj_Timer(A1)                            ; $002A
                dbra    D2, loc_24884
loc_24926:
                jmp     (DisplaySprite)                        ; loc_D322  
;-------------------------------------------------------------------------------
loc_2492C:
                move.l  D5, Obj_X(A0)                                    ; $0008
                move.l  D6, Obj_Y(A0)                                    ; $000C
                subi.w  #$0001, Obj_Timer(A0)                            ; $002A
                bmi     Jmp_1E_To_DeleteObject                 ; loc_2583A
                bsr     Jmp_0B_To_ObjectFall                   ; loc_25852
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl     Jmp_19_To_DisplaySprite                ; loc_25834
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  Obj_Speed_Y(A0), D0                              ; $0012
                lsr.b   #$01, D0
                move.b  D0, Obj_Speed_Y(A0)                              ; $0012
                neg.w   Obj_Speed_Y(A0)                                  ; $0012
                bra     Jmp_19_To_DisplaySprite                ; loc_25834
loc_24964:
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne     loc_249B2
                move.b  #$5D, Obj_Id(A1)                                 ; $0000
                move.l  Obj_Control_Var_08(A0), Obj_Control_Var_08(A1); $0034, $0034
                move.l  #loc_2500C, Obj_Map(A1)                    ; $0004
                move.w  #$0400, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$0C, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
loc_249B2:
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne.s   loc_24A10
                move.b  #$5D, Obj_Id(A1)                                 ; $0000
                move.l  Obj_Control_Var_08(A0), Obj_Control_Var_08(A1); $0034, $0034
                move.l  #loc_2500C, Obj_Map(A1)                    ; $0004
                move.w  #$0400, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$0C, Obj_Routine(A1)                            ; $0024
                move.b  #$04, Obj_Routine_2(A1)                          ; $0025
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.w  #$0018, Obj_Timer(A1)                            ; $002A
                move.b  #$01, Obj_Ani_Number(A1)                         ; $001C
loc_24A10:
                rts
loc_24A12:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_24A20(PC, D0), D1
                jmp     loc_24A20(PC, D1)       
;-------------------------------------------------------------------------------
loc_24A20:
                dc.w    loc_24A24-loc_24A20
                dc.w    loc_24A4C-loc_24A20          
;-------------------------------------------------------------------------------
loc_24A24:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.b  Obj_Status(A1), Obj_Status(A0)            ; $0022, $0022
                move.b  Obj_Flags(A1), Obj_Flags(A0)              ; $0001, $0001
                move.l  #loc_25234, A1
                jsr     (AnimateSprite)                        ; loc_D372
                jmp     (DisplaySprite)                        ; loc_D322  
;-------------------------------------------------------------------------------
loc_24A4C:
                bsr     loc_24964
                bra     Jmp_1E_To_DeleteObject                 ; loc_2583A
loc_24A54:
                jsr     (SingleObjectLoad_2)                   ; loc_E714
                bne     loc_24AA0
                move.b  #$5D, Obj_Id(A1)                                 ; $0000
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.l  #loc_252B2, Obj_Map(A1)                    ; $0004
                move.w  #$0400, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$20, Obj_Width(A1)                              ; $0019
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.l  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.l  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$08, Obj_Routine(A1)                            ; $0024
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
loc_24AA0:
                rts                            
;-------------------------------------------------------------------------------
loc_24AA2:
                dc.w    loc_24AA6-loc_24AA2
                dc.w    loc_24AB0-loc_24AA2
loc_24AA6:
                dc.b    $01, $00, $01, $00, $02, $03, $04, $03
                dc.b    $05, $FF
loc_24AB0:
                dc.b    $0F, $10, $FF, $00              
;-------------------------------------------------------------------------------
loc_24AB4:
                dc.w    loc_24AD6-loc_24AB4
                dc.w    loc_24AF8-loc_24AB4
                dc.w    loc_24B22-loc_24AB4
                dc.w    loc_24B4C-loc_24AB4
                dc.w    loc_24B6E-loc_24AB4
                dc.w    loc_24B98-loc_24AB4
                dc.w    loc_24BC2-loc_24AB4
                dc.w    loc_24BE4-loc_24AB4
                dc.w    loc_24C0E-loc_24AB4
                dc.w    loc_24C38-loc_24AB4
                dc.w    loc_24C5A-loc_24AB4
                dc.w    loc_24C84-loc_24AB4
                dc.w    loc_24CAE-loc_24AB4
                dc.w    loc_24CD0-loc_24AB4
                dc.w    loc_24CFA-loc_24AB4
                dc.w    loc_24D24-loc_24AB4
                dc.w    loc_24D46-loc_24AB4
loc_24AD6:
                dc.w    $0004
                dc.l    $E8050028, $0014FFE0
                dc.l    $E80D0030, $0018FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
loc_24AF8:
                dc.w    $0005
                dc.l    $E8050028, $0014FFE0
                dc.l    $E80D0030, $0018FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
                dc.l    $000500D0, $0068001C
loc_24B22:
                dc.w    $0005
                dc.l    $E8050028, $0014FFE0
                dc.l    $E80D0030, $0018FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
                dc.l    $000500D4, $006A001C
loc_24B4C:
                dc.w    $0004
                dc.l    $E8050028, $0014FFE0
                dc.l    $E80D0038, $001CFFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
loc_24B6E:
                dc.w    $0005
                dc.l    $E8050028, $0014FFE0
                dc.l    $E80D0038, $001CFFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
                dc.l    $000500D0, $0068001C
loc_24B98:
                dc.w    $0005
                dc.l    $E8050028, $0014FFE0
                dc.l    $E80D0038, $001CFFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
                dc.l    $000500D4, $006A001C
loc_24BC2:
                dc.w    $0004
                dc.l    $E805002C, $0016FFE0
                dc.l    $E80D0040, $0020FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
loc_24BE4:
                dc.w    $0005
                dc.l    $E805002C, $0016FFE0
                dc.l    $E80D0040, $0020FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
                dc.l    $000500D0, $0068001C
loc_24C0E:
                dc.w    $0005
                dc.l    $E805002C, $0016FFE0
                dc.l    $E80D0040, $0020FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
                dc.l    $000500D4, $006A001C
loc_24C38:
                dc.w    $0004
                dc.l    $E805002C, $0016FFE0
                dc.l    $E80D0048, $0024FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
loc_24C5A:
                dc.w    $0005
                dc.l    $E805002C, $0016FFE0
                dc.l    $E80D0048, $0024FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
                dc.l    $000500D0, $0068001C
loc_24C84:
                dc.w    $0005
                dc.l    $E805002C, $0016FFE0
                dc.l    $E80D0048, $0024FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
                dc.l    $000500D4, $006A001C
loc_24CAE:
                dc.w    $0004
                dc.l    $E805002C, $0016FFE0
                dc.l    $E80D0050, $0028FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
loc_24CD0:
                dc.w    $0005
                dc.l    $E805002C, $0016FFE0
                dc.l    $E80D0050, $0028FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
                dc.l    $000500D0, $0068001C
loc_24CFA:
                dc.w    $0005
                dc.l    $E805002C, $0016FFE0
                dc.l    $E80D0050, $0028FFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
                dc.l    $000500D4, $006A001C
loc_24D24:
                dc.w    $0004
                dc.l    $E805002C, $0016FFE0
                dc.l    $E80D0058, $002CFFF0
                dc.l    $E8050024, $00120010
                dc.l    $D8050020, $00100002
loc_24D46:
                dc.w    $0007
                dc.l    $F8052000, $2000FFE0
                dc.l    $08052004, $2002FFE0
                dc.l    $F80F2008, $2004FFF0
                dc.l    $F8072018, $200C0010
                dc.l    $B80D2060, $2030FFF8
                dc.l    $C80A2068, $20340008
                dc.l    $E0052071, $20380010
;-------------------------------------------------------------------------------
loc_24D80:
                dc.w    loc_24D88-loc_24D80
                dc.w    loc_24D8B-loc_24D80
                dc.w    loc_24D99-loc_24D80
                dc.w    loc_24DA5-loc_24D80
loc_24D88:
                dc.b    $0F, $00, $FF
loc_24D8B:
                dc.b    $02, $00, $00, $00, $00, $00, $01, $02
                dc.b    $03, $04, $05, $06, $FE, $01
loc_24D99:
                dc.b    $03, $07, $08, $09, $0A, $0A, $0A, $0A
                dc.b    $0B, $0B, $FD, $03
loc_24DA5:
                dc.b    $02, $06, $05, $04, $03, $02, $01, $FA
                dc.b    $00        
;-------------------------------------------------------------------------------   
loc_24DAE:
                dc.w    loc_24DC6-loc_24DAE
                dc.w    loc_24DD8-loc_24DAE
                dc.w    loc_24DF2-loc_24DAE
                dc.w    loc_24E0C-loc_24DAE
                dc.w    loc_24E26-loc_24DAE
                dc.w    loc_24E48-loc_24DAE
                dc.w    loc_24E6A-loc_24DAE
                dc.w    loc_24E8C-loc_24DAE
                dc.w    loc_24EBE-loc_24DAE
                dc.w    loc_24EF0-loc_24DAE
                dc.w    loc_24F22-loc_24DAE
                dc.w    loc_24F4C-loc_24DAE
loc_24DC6:
                dc.w    $0002
                dc.l    $C80E2075, $203AFFF0
                dc.l    $E0082089, $2044FFF0
loc_24DD8:
                dc.w    $0003
                dc.l    $C80E2075, $203AFFE8
                dc.l    $E0082089, $2044FFE8
                dc.l    $D0082081, $20400000
loc_24DF2:
                dc.w    $0003
                dc.l    $C80E2075, $203AFFE0
                dc.l    $E0082089, $2044FFE0
                dc.l    $D0082081, $2040FFF8
loc_24E0C:
                dc.w    $0003
                dc.l    $C80E2075, $203AFFD8
                dc.l    $E0082089, $2044FFD8
                dc.l    $D0082081, $2040FFF0
loc_24E26:
                dc.w    $0004
                dc.l    $C80E2075, $203AFFD0
                dc.l    $E0082089, $2044FFD0
                dc.l    $D0082081, $2040FFE8
                dc.l    $D0082081, $20400000
loc_24E48:
                dc.w    $0004
                dc.l    $C80E2075, $203AFFC8
                dc.l    $E0082089, $2044FFC8
                dc.l    $D0082081, $2040FFE0
                dc.l    $D0082081, $2040FFF8
loc_24E6A:
                dc.w    $0004
                dc.l    $C80E2075, $203AFFC0
                dc.l    $E0082089, $2044FFC0
                dc.l    $D0082081, $2040FFD8
                dc.l    $D0082081, $2040FFF0
loc_24E8C:
                dc.w    $0006
                dc.l    $C80E2075, $203AFFC0
                dc.l    $D0082081, $2040FFD8
                dc.l    $D0082081, $2040FFF0
                dc.l    $E008208C, $2046FFC0
                dc.l    $CC0B609E, $604FFFC0
                dc.l    $E0042092, $2049FFBC
loc_24EBE:
                dc.w    $0006
                dc.l    $C80E2075, $203AFFC0
                dc.l    $D0082081, $2040FFD8
                dc.l    $D0082081, $2040FFF0
                dc.l    $E008208C, $2046FFC0
                dc.l    $D00B609E, $604FFFC0
                dc.l    $E0042092, $2049FFBC
loc_24EF0:
                dc.w    $0006
                dc.l    $C80E2075, $203AFFC0
                dc.l    $D0082081, $2040FFD8
                dc.l    $D0082081, $2040FFF0
                dc.l    $E008208F, $2047FFC8
                dc.l    $D40B609E, $604FFFC0
                dc.l    $E0042094, $204AFFBC
loc_24F22:
                dc.w    $0005
                dc.l    $C80E2075, $203AFFC0
                dc.l    $D0082081, $2040FFD8
                dc.l    $D0082081, $2040FFF0
                dc.l    $E008208F, $2047FFC8
                dc.l    $E0042094, $204AFFBC
loc_24F4C:
                dc.w    $0005
                dc.l    $C80E2075, $203AFFC0
                dc.l    $D0082081, $2040FFD8
                dc.l    $D0082081, $2040FFF0
                dc.l    $E008208C, $2046FFC0
                dc.l    $E0042092, $2049FFBC
;-------------------------------------------------------------------------------  
loc_24F76:
                dc.w    loc_24F80-loc_24F76
                dc.w    loc_24FBA-loc_24F76
                dc.w    loc_24FF0-loc_24F76
                dc.w    loc_24FFD-loc_24F76
                dc.w    loc_25001-loc_24F76
loc_24F80:
                dc.b    $03, $00, $01, $02, $03, $04, $05, $00
                dc.b    $01, $02, $03, $04, $05, $00, $01, $02
                dc.b    $03, $04, $05, $00, $01, $02, $03, $04
                dc.b    $05, $00, $01, $02, $03, $04, $00, $01
                dc.b    $02, $03, $04, $00, $01, $02, $03, $04
                dc.b    $00, $01, $02, $03, $04, $00, $01, $02
                dc.b    $03, $00, $01, $02, $00, $01, $02, $00
                dc.b    $01, $FA
loc_24FBA:
                dc.b    $03, $06, $06, $06, $06, $06, $06, $07
                dc.b    $07, $07, $07, $07, $07, $08, $08, $08
                dc.b    $08, $08, $08, $09, $09, $09, $09, $09
                dc.b    $0A, $0A, $0A, $0A, $0A, $0B, $0B, $0B
                dc.b    $0B, $0B, $0C, $0C, $0C, $0C, $0C, $0D
                dc.b    $0D, $0D, $0D, $0E, $0E, $0E, $0F, $0F
                dc.b    $0F, $10, $10, $11, $FE, $01
loc_24FF0:
                dc.b    $02, $11, $11, $11, $11, $11, $12, $13
                dc.b    $14, $15, $16, $17, $FA
loc_24FFD:
                dc.b    $01, $18, $19, $FF
loc_25001:
                dc.b    $03, $1B, $1B, $1C, $1C, $1D, $1D, $1D
                dc.b    $1D, $1D, $FF      
;-------------------------------------------------------------------------------    
loc_2500C:
                dc.w    loc_25048-loc_2500C
                dc.w    loc_25052-loc_2500C
                dc.w    loc_2505C-loc_2500C
                dc.w    loc_25066-loc_2500C
                dc.w    loc_25070-loc_2500C
                dc.w    loc_2507A-loc_2500C
                dc.w    loc_25084-loc_2500C
                dc.w    loc_2508E-loc_2500C
                dc.w    loc_25098-loc_2500C
                dc.w    loc_250A2-loc_2500C
                dc.w    loc_250AC-loc_2500C
                dc.w    loc_250BE-loc_2500C
                dc.w    loc_250D0-loc_2500C
                dc.w    loc_250E2-loc_2500C
                dc.w    loc_250F4-loc_2500C
                dc.w    loc_2510E-loc_2500C
                dc.w    loc_25128-loc_2500C
                dc.w    loc_25142-loc_2500C
                dc.w    loc_2515C-loc_2500C
                dc.w    loc_25176-loc_2500C
                dc.w    loc_25190-loc_2500C
                dc.w    loc_251AA-loc_2500C
                dc.w    loc_251C4-loc_2500C
                dc.w    loc_251DE-loc_2500C
                dc.w    loc_251F8-loc_2500C
                dc.w    loc_25202-loc_2500C
                dc.w    loc_2520C-loc_2500C
                dc.w    loc_25216-loc_2500C
                dc.w    loc_25220-loc_2500C
                dc.w    loc_2522A-loc_2500C
loc_25048:
                dc.w    $0001
                dc.l    $C4006096, $604BFFFB
loc_25052:
                dc.w    $0001
                dc.l    $C4006097, $604BFFFB
loc_2505C:
                dc.w    $0001
                dc.l    $C4006098, $604CFFFB
loc_25066:
                dc.w    $0001
                dc.l    $C4016099, $604CFFFB
loc_25070:
                dc.w    $0001
                dc.l    $C401609B, $604DFFFB
loc_2507A:
                dc.w    $0001
                dc.l    $D400609D, $604EFFFB
loc_25084:
                dc.w    $0001
                dc.l    $D70860C3, $6061FFF0
loc_2508E:
                dc.w    $0001
                dc.l    $D80860C6, $6063FFF0
loc_25098:
                dc.w    $0001
                dc.l    $D80860C9, $6064FFF0
loc_250A2:
                dc.w    $0001
                dc.l    $D80860CC, $6066FFF0
loc_250AC:
                dc.w    $0002
                dc.l    $D80860CC, $6066FFF0
                dc.l    $D00860C3, $6061FFF0
loc_250BE:
                dc.w    $0002
                dc.l    $D80860CC, $6066FFF0
                dc.l    $D00860C6, $6063FFF0
loc_250D0:
                dc.w    $0002
                dc.l    $D80860CC, $6066FFF0
                dc.l    $D00860C9, $6064FFF0
loc_250E2:
                dc.w    $0002
                dc.l    $D80860CC, $6066FFF0
                dc.l    $D00860CC, $6066FFF0
loc_250F4:
                dc.w    $0003
                dc.l    $D80860CC, $6066FFF0
                dc.l    $D00860CC, $6066FFF0
                dc.l    $C80860C3, $6061FFF0
loc_2510E:
                dc.w    $0003
                dc.l    $D80860CC, $6066FFF0
                dc.l    $D00860CC, $6066FFF0
                dc.l    $C80860C6, $6063FFF0
loc_25128:
                dc.w    $0003
                dc.l    $D80860CC, $6066FFF0
                dc.l    $D00860CC, $6066FFF0
                dc.l    $C80860C9, $6064FFF0
loc_25142:
                dc.w    $0003
                dc.l    $D80860CC, $6066FFF0
                dc.l    $D00860CC, $6066FFF0
                dc.l    $C80860CC, $6066FFF0
loc_2515C:
                dc.w    $0003
                dc.l    $D80860CC, $6066FFE8
                dc.l    $D00860CC, $6066FFE8
                dc.l    $C80860CC, $6066FFE8
loc_25176:
                dc.w    $0003
                dc.l    $D80860CC, $6066FFE0
                dc.l    $D00860CC, $6066FFE0
                dc.l    $C80860CC, $6066FFE0
loc_25190:
                dc.w    $0003
                dc.l    $D80860CC, $6066FFD8
                dc.l    $D00860CC, $6066FFD8
                dc.l    $C80860CC, $6066FFD8
loc_251AA:
                dc.w    $0003
                dc.l    $D80860CC, $6066FFD0
                dc.l    $D00860CC, $6066FFD0
                dc.l    $C80860CC, $6066FFD0
loc_251C4:
                dc.w    $0003
                dc.l    $D80860CC, $6066FFC8
                dc.l    $D00860CC, $6066FFC8
                dc.l    $C80860CC, $6066FFC8
loc_251DE:
                dc.w    $0003
                dc.l    $D80860CC, $6066FFC0
                dc.l    $D00860CC, $6066FFC0
                dc.l    $C80860CC, $6066FFC0
loc_251F8:
                dc.w    $0001
                dc.l    $F00B609E, $604FFFF4
loc_25202:
                dc.w    $0001
                dc.l    $F00B689E, $684FFFF4
loc_2520C:
                dc.w    $0001
                dc.l    $FC00609D, $604EFFFC
loc_25216:
                dc.w    $0001
                dc.l    $F40A004A, $0025FFF4
loc_25220:
                dc.w    $0001
                dc.l    $F80D0053, $0029FFF0
loc_2522A:
                dc.w    $0001
                dc.l    $F80D005B, $002DFFF0           
;-------------------------------------------------------------------------------
loc_25234:
                dc.w    loc_2523A-loc_25234
                dc.w    loc_25245-loc_25234
                dc.w    loc_252A8-loc_25234
loc_2523A:
                dc.b    $02, $00, $01, $02, $03, $04, $05, $06
                dc.b    $07, $FD, $01
loc_25245:
                dc.b    $03, $08, $09, $08, $0A, $0B, $0A, $0C
                dc.b    $0D, $0C, $0E, $0F, $0E, $10, $11, $10
                dc.b    $12, $13, $12, $14, $15, $14, $16, $17
                dc.b    $16, $08, $09, $08, $0A, $0B, $0A, $0C
                dc.b    $0D, $0C, $0E, $0F, $0E, $10, $11, $10
                dc.b    $12, $13, $12, $14, $15, $14, $16, $17
                dc.b    $16, $08, $09, $08, $0A, $0B, $0A, $0C
                dc.b    $0D, $0C, $0E, $0F, $0E, $10, $11, $10
                dc.b    $12, $13, $12, $14, $15, $14, $16, $17
                dc.b    $16, $08, $09, $08, $0A, $0B, $0A, $0C
                dc.b    $0D, $0C, $0E, $0F, $0E, $10, $11, $10
                dc.b    $12, $13, $12, $14, $15, $14, $16, $17
                dc.b    $16, $FD, $02
loc_252A8:
                dc.b    $02, $07, $06, $05, $04, $03, $02, $01
                dc.b    $00, $FA              
;-------------------------------------------------------------------------------   
loc_252B2:
                dc.w    loc_252E2-loc_252B2
                dc.w    loc_252EC-loc_252B2
                dc.w    loc_252FE-loc_252B2
                dc.w    loc_25318-loc_252B2
                dc.w    loc_2533A-loc_252B2
                dc.w    loc_25364-loc_252B2
                dc.w    loc_25396-loc_252B2
                dc.w    loc_253D0-loc_252B2
                dc.w    loc_25412-loc_252B2
                dc.w    loc_25454-loc_252B2
                dc.w    loc_25496-loc_252B2
                dc.w    loc_254D8-loc_252B2
                dc.w    loc_2551A-loc_252B2
                dc.w    loc_2555C-loc_252B2
                dc.w    loc_2559E-loc_252B2
                dc.w    loc_255E0-loc_252B2
                dc.w    loc_25622-loc_252B2
                dc.w    loc_25664-loc_252B2
                dc.w    loc_256A6-loc_252B2
                dc.w    loc_256E8-loc_252B2
                dc.w    loc_2572A-loc_252B2
                dc.w    loc_2576C-loc_252B2
                dc.w    loc_257AE-loc_252B2
                dc.w    loc_257F0-loc_252B2
loc_252E2:
                dc.w    $0001
                dc.l    $10002084, $20420000
loc_252EC:
                dc.w    $0002
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
loc_252FE:
                dc.w    $0003
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
loc_25318:
                dc.w    $0004
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
loc_2533A:
                dc.w    $0005
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
loc_25364:
                dc.w    $0006
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
loc_25396:
                dc.w    $0007
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
loc_253D0:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_25412:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48042085, $2042FFF9
loc_25454:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48042087, $2043FFFA
loc_25496:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40042085, $2042FFF9
                dc.l    $48002084, $20420000
loc_254D8:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40042087, $2043FFFA
                dc.l    $48002084, $20420000
loc_2551A:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38042085, $2042FFF9
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_2555C:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38042087, $2043FFFA
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_2559E:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30042085, $2042FFF9
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_255E0:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30042087, $2043FFFA
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_25622:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28042085, $2042FFF9
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_25664:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28042087, $2043FFFA
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_256A6:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20042085, $2042FFF9
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_256E8:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18002084, $20420000
                dc.l    $20042087, $2043FFFA
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_2572A:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18042085, $2042FFF9
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_2576C:
                dc.w    $0008
                dc.l    $10002084, $20420000
                dc.l    $18042087, $2043FFFA
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_257AE:
                dc.w    $0008
                dc.l    $10042085, $2042FFF9
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
loc_257F0:
                dc.w    $0008
                dc.l    $10042087, $2043FFFA
                dc.l    $18002084, $20420000
                dc.l    $20002084, $20420000
                dc.l    $28002084, $20420000
                dc.l    $30002084, $20420000
                dc.l    $38002084, $20420000
                dc.l    $40002084, $20420000
                dc.l    $48002084, $20420000
;===============================================================================
; Object 0x5D - CPZ Boss (Unused)
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_19_To_DisplaySprite:                                       ; loc_25834
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_1E_To_DeleteObject:                                        ; loc_2583A
		jmp     (DeleteObject)                         ; loc_D314
Jmp_07_To_ModifySpriteAttr_2P_A1:                              ; loc_25840
		jmp     (ModifySpriteAttr_2P_A1)               ; loc_DBDA
Jmp_02_To_AddPoints:                                           ; loc_25846
		jmp     (AddPoints)                            ; loc_2D2D4
Jmp_2D_To_ModifySpriteAttr_2P:                                 ; loc_2584C
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_0B_To_ObjectFall:                                          ; loc_25852
		jmp     (ObjectFall)                           ; loc_D1AE
Jmp_18_To_SpeedToPos:                                          ; loc_25858
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj52_HTz_Boss:                                             ; loc_25860
;===============================================================================
; Object 0x52 - Robotnik na Hill Top
; [ Begin ]
;===============================================================================
; loc_25860:
                moveq   #$00, D0
                move.b  Obj_Boss_Routine(A0), D0                         ; $000A
                move.w  loc_2586E(PC, D0), D1
                jmp     loc_2586E(PC, D1)
;-------------------------------------------------------------------------------
loc_2586E:
                dc.w    loc_25878-loc_2586E
                dc.w    loc_25906-loc_2586E
                dc.w    loc_25AF4-loc_2586E
                dc.w    loc_25B6A-loc_2586E
                dc.w    loc_25D90-loc_2586E          
;-------------------------------------------------------------------------------
loc_25878:
                move.l  #HTz_Boss_Mappings, Obj_Map(A0) ; loc_25E3C, $0004
                move.w  #$03C1, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$90, $000E(A0)
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.w  #$30A0, Obj_X(A0)                                ; $0008
                move.w  #$0580, Obj_Y(A0)                                ; $000C
                move.b  #$01, Obj_Control_Var_00(A0)                     ; $002C
                move.b  #$01, Obj_Boss_Ani_Map(A0)                       ; $000B
                addq.b  #$02, Obj_Boss_Routine(A0)                       ; $000A
                bset    #$06, Obj_Flags(A0)                              ; $0001
                move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$08, Obj_Boss_Hit_2(A0)                         ; $0032
                move.w  #$FF20, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                move.w  Obj_X(A0), (Boss_Move_Buffer).w              ; $FFFFF750; $0008
                move.w  Obj_Y(A0), (Boss_Move_Buffer+$04).w          ; $FFFFF754; $000C
                move.w  Obj_X(A0), HTz_Robotnik_Pos_X(A0)         ; $0008, $0010
                move.w  Obj_Y(A0), HTz_Robotnik_Pos_Y(A0)         ; $000C, $0012
                move.b  #$02, Obj_Ani_Boss_Frame(A0)                     ; $0015
                bsr     loc_258F0
                rts
loc_258F0:
                lea     (Boss_Animate_Buffer).w, A2                  ; $FFFFF740
                move.b  #$06, (A2)+
                move.b  #$00, (A2)+
                move.b  #$10, (A2)+
                move.b  #$00, (A2)+
                rts 
;-------------------------------------------------------------------------------
loc_25906:
                moveq   #$00, D0
                move.b  Obj_Ani_Boss_Routine(A0), D0                     ; $0026
                move.w  loc_25914(PC, D0), D1
                jmp     loc_25914(PC, D1)                                 
;-------------------------------------------------------------------------------
loc_25914:
                dc.w    loc_2591E-loc_25914
                dc.w    loc_2596A-loc_25914
                dc.w    loc_259E6-loc_25914
                dc.w    loc_25A1A-loc_25914
                dc.w    loc_25C9E-loc_25914  
;-------------------------------------------------------------------------------
loc_2591E:
                move.b  #$00, ($FFFFF73F).w
                bsr     Boss_Move                              ; loc_245FA
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_2593E
                cmpi.w  #$0520, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bgt.s   loc_2595C
                move.w  #$0520, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bra.s   loc_2594C
loc_2593E:
                cmpi.w  #$04D8, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bgt.s   loc_2595C
                move.w  #$04D8, (Boss_Move_Buffer+$04).w             ; $FFFFF754
loc_2594C:
                move.w  #$0000, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.b  #$3C, Obj_Control_Var_12(A0)                     ; $003E
loc_2595C:
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                bsr     Boss_Hit                               ; loc_2459E
                bra     Jmp_1A_To_DisplaySprite                ; loc_25FB0   
;-------------------------------------------------------------------------------
loc_2596A:
                subi.b  #$01, Obj_Control_Var_12(A0)                     ; $003E
                bpl.s   loc_259CC
                move.b  #$01, ($FFFFF73F).w
                move.b  #$01, Obj_Ani_Boss_Cnt(A0)                       ; $000F
                cmpi.b  #$E8, Obj_Control_Var_12(A0)                     ; $003E
                bne.s   loc_259CC
                bsr     Jmp_0B_To_SingleObjectLoad             ; loc_25FBC
                bne.s   loc_259B6
                move.b  #$52, Obj_Id(A1)                                 ; $0000
                move.b  #$04, Obj_Boss_Routine(A1)                       ; $000A
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                andi.b  #$01, Obj_Flags(A1)                              ; $0001
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.b  #$2F, Obj_Control_Var_12(A0)                     ; $003E
loc_259B6:
                bsr     Boss_Hit                               ; loc_2459E
                bsr     loc_25AE2
                lea     (HTz_Boss_Animate_Data), A1            ; loc_25E08
                bsr     Boss_AnimateSprite                     ; loc_26312
                bra     Jmp_1A_To_DisplaySprite                ; loc_25FB0
loc_259CC:
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                jsr     (CalcSine)                             ; loc_3282
                asr.w   #$07, D0
                add.w   (Boss_Move_Buffer+$04).w, D0                 ; $FFFFF754
                move.w  D0, Obj_Y(A0)                                    ; $000C
                addq.b  #$04, Obj_Map_Id(A0)                             ; $001A
                bra.s   loc_259B6    
;-------------------------------------------------------------------------------
loc_259E6:
                move.b  #$00, ($FFFFF73F).w
                move.b  #$00, Obj_Ani_Boss_Cnt(A0)                       ; $000F
                move.b  #$10, (Boss_Animate_Buffer+$02).w            ; $FFFFF742
                move.b  #$00, (Boss_Animate_Buffer+$03).w            ; $FFFFF743
                subi.b  #$01, Obj_Control_Var_12(A0)                     ; $003E
                bne     loc_259CC
                move.w  #$00E0, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                bsr     loc_25AE2
                bra     Jmp_1A_To_DisplaySprite                ; loc_25FB0 
;-------------------------------------------------------------------------------
loc_25A1A:
                bsr     Boss_Move                              ; loc_245FA
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_25A2E
                cmpi.w  #$0540, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                blt.s   loc_25A5C
                bra.s   loc_25A36
loc_25A2E:
                cmpi.w  #$04F0, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                blt.s   loc_25A5C
loc_25A36:
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                bne.s   loc_25A5C
                st      Obj_Control_Var_0C(A0)                           ; $0038
                bsr     Jmp_0B_To_SingleObjectLoad             ; loc_25FBC
                bne.s   loc_25A5C
                move.b  #$52, (A1)
                move.b  #$06, Obj_Boss_Routine(A1)                       ; $000A
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
loc_25A5C:
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_25A72
                cmpi.w  #$05D0, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                blt.s   loc_25AD4
                move.w  #$05D0, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bra.s   loc_25A80
loc_25A72:
                cmpi.w  #$0580, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                blt.s   loc_25AD4
                move.w  #$0580, (Boss_Move_Buffer+$04).w             ; $FFFFF754
loc_25A80:
                move.w  #$FF20, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                move.b  #$00, Obj_Ani_Boss_Routine(A0)                   ; $0026
                sf      Obj_Control_Var_0C(A0)                           ; $0038
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                subi.w  #$2FEC, D0
                bmi.s   loc_25AAC
                move.w  #$0580, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                move.w  #$30A0, Obj_X(A0)                                ; $0008
                st      Obj_Control_Var_00(A0)                           ; $002C
                bra.s   loc_25ABC
loc_25AAC:
                move.w  #$2F38, Obj_X(A0)                                ; $0008
                move.w  #$05D0, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                sf      Obj_Control_Var_00(A0)                           ; $002C
loc_25ABC:
                move.w  Obj_X(A0), D0                                    ; $0008
                cmp.w   (Player_One_Position_X).w, D0                ; $FFFFB008
                bgt.s   loc_25ACE
                bset    #$00, Obj_Flags(A0)                              ; $0001
                bra.s   loc_25AD4
loc_25ACE:
                bclr    #$00, Obj_Flags(A0)                              ; $0001
loc_25AD4:
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)   ; $FFFFF754, $000C
                bsr     Boss_Hit                               ; loc_2459E
                bra     Jmp_1A_To_DisplaySprite                ; loc_25FB0
loc_25AE2:
                move.w  Obj_X(A0), D0                                    ; $0008
                move.w  Obj_Y(A0), D1                                    ; $000C
                move.w  D0, HTz_Robotnik_Pos_X(A0)                       ; $0010
                move.w  D1, HTz_Robotnik_Pos_Y(A0)                       ; $0012
                rts      
;-------------------------------------------------------------------------------
loc_25AF4:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_25B02(PC, D0), D1
                jmp     loc_25B02(PC, D1)   
;-------------------------------------------------------------------------------
loc_25B02:
                dc.w    loc_25B06-loc_25B02
                dc.w    loc_25B54-loc_25B02         
;-------------------------------------------------------------------------------
loc_25B06:
                move.l  #HTz_Boss_Mappings, Obj_Map(A0) ; loc_25E3C, $0004
                move.w  #$0421, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$05, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$98, Obj_Col_Flags(A0)                          ; $0020
                subi.w  #$001C, Obj_Y(A0)                                ; $000C
                move.w  #$FF90, D0
                move.w  #$FFFC, D1
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_25B4A
                neg.w   D0
                neg.w   D1
loc_25B4A:
                add.w   D0, Obj_X(A0)                                    ; $0008
                move.w  D1, HTz_Robotnik_Pos_X(A0)                       ; $0010
                rts    
;-------------------------------------------------------------------------------
loc_25B54:
                move.w  HTz_Robotnik_Pos_X(A0), D1                       ; $0010
                add.w   D1, Obj_X(A0)                                    ; $0008
                lea     (HTz_Boss_Animate_Data), A1            ; loc_25E08
                bsr     Jmp_14_To_AnimateSprite                ; loc_25FC8
                bra     Jmp_25_To_MarkObjGone                  ; loc_25FC2         
;-------------------------------------------------------------------------------
loc_25B6A:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_25B78(PC, D0), D1
                jmp     loc_25B78(PC, D1)  
;-------------------------------------------------------------------------------
loc_25B78:
                dc.w    loc_25B7C-loc_25B78
                dc.w    loc_25C0A-loc_25B78    
;-------------------------------------------------------------------------------
loc_25B7C:
                move.l  A0, A1
                moveq   #$00, D2
                moveq   #$01, D1
                bra.s   loc_25B96 
;-------------------------------------------------------------------------------
loc_25B84:
                bsr     Jmp_0B_To_SingleObjectLoad             ; loc_25FBC
                bne.s   loc_25C08
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C    
;-------------------------------------------------------------------------------
loc_25B96:
                move.b  #$52, (A1)
                move.b  #$06, Obj_Boss_Routine(A1)                       ; $000A
                move.l  #HTz_Boss_Mappings, Obj_Map(A1) ; loc_25E3C, $0004
                move.w  #$0421, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                addq.b  #$02, Obj_Routine_2(A1)                          ; $0025
                move.b  #$07, Obj_Ani_Number(A1)                         ; $001C
                move.b  #$8B, Obj_Col_Flags(A1)                          ; $0020
                move.b  D2, Obj_Control_Var_02(A1)                       ; $002E
                move.b  #$08, Obj_Height_2(A1)                           ; $0016
                move.b  #$08, Obj_Width_2(A1)                            ; $0017
                move.w  Obj_X(A1), Obj_Timer(A1)                  ; $0008, $002A
                move.w  #$1C00, D0
                tst.w   D2
                bne.s   loc_25BEA
                neg.w   D0
loc_25BEA:
                move.w  D0, Obj_Speed(A1)                                ; $0010
                move.w  #$AC00, Obj_Speed_Y(A1)                          ; $0012
                cmpi.w  #$2F38, Obj_X(A1)                                ; $0008
                beq.s   loc_25C02
                move.w  #$9C00, Obj_Speed_Y(A1)                          ; $0012
loc_25C02:
                addq.w  #$01, D2
                dbra    D1, loc_25B84
loc_25C08:
                rts     
;-------------------------------------------------------------------------------
loc_25C0A:
                bsr     loc_25C6C
                bsr     Jmp_05_To_ObjHitFloor                  ; loc_25FCE
                tst.w   D1
                bpl.s   loc_25C5E
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.b  #$20, (A0)
                move.b  #$0A, Obj_Routine(A0)                            ; $0024
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                move.b  #$04, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
                move.l  #Fireball_Mappings, Obj_Map(A0) ; loc_180D0, $0004
                move.w  #$839E, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_2E_To_ModifySpriteAttr_2P          ; loc_25FDA
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0009, Obj_Boss_Hit_2(A0)                       ; $0032
                move.b  #$03, Obj_Control_Var_0A(A0)                     ; $0036
                bra     Jmp_00_To_Obj20_HTz_Boss_FireBall   ; loc_25FD4
loc_25C5E:
                lea     (HTz_Boss_Animate_Data), A1            ; loc_25E08
                bsr     Jmp_14_To_AnimateSprite                ; loc_25FC8
                bra     Jmp_25_To_MarkObjGone                  ; loc_25FC2
loc_25C6C:
                move.l  Obj_Timer(A0), D2                                ; $002A
                move.l  Obj_Y(A0), D3                                    ; $000C
                move.w  Obj_Speed(A0), D0                                ; $0010
                ext.l   D0
                asl.l   #$04, D0
                add.l   D0, D2
                move.w  Obj_Speed_Y(A0), D0                              ; $0012
                addi.w  #$0380, Obj_Speed_Y(A0)                          ; $0012
                ext.l   D0
                asl.l   #$04, D0
                add.l   D0, D3
                move.l  D2, Obj_Timer(A0)                                ; $002A
                move.l  D3, Obj_Y(A0)                                    ; $000C
                move.w  Obj_Timer(A0), Obj_X(A0)                  ; $0008, $002A
                rts     
;-------------------------------------------------------------------------------
loc_25C9E:
                move.b  #$00, Obj_Ani_Boss_Cnt(A0)                       ; $000F
                subi.w  #$0001, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bmi.s   loc_25CDA
                cmpi.w  #$001E, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bgt.s   loc_25CD2
                move.b  #$10, Obj_Boss_Ani_Map(A0)                       ; $000B
                bsr     Boss_Defeated                          ; loc_23AEC
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$1F, D0
                bne     Jmp_1A_To_DisplaySprite                ; loc_25FB0
                bsr     loc_25D34
                bra     Jmp_1A_To_DisplaySprite                ; loc_25FB0
loc_25CD2:
                bsr     Boss_Defeated                          ; loc_23AEC
                bra     Jmp_1A_To_DisplaySprite                ; loc_25FB0
loc_25CDA:
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$1F, D0
                bne     loc_25CEA
                bsr     loc_25D34
loc_25CEA:
                cmpi.w  #$FFC4, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bgt     Jmp_1A_To_DisplaySprite                ; loc_25FB0
                addq.w  #$02, Obj_Y(A0)                                  ; $000C
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_25D0C
                cmpi.w  #$0540, Obj_Y(A0)                                ; $000C
                bgt     loc_25D1A
                bra     Jmp_1A_To_DisplaySprite                ; loc_25FB0
loc_25D0C:
                cmpi.w  #$04F0, Obj_Y(A0)                                ; $000C
                bgt     loc_25D1A
                bra     Jmp_1A_To_DisplaySprite                ; loc_25FB0
loc_25D1A:
                tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
                bne.s   loc_25D30
                move.b  #$01, (Boss_Defeated_Flag).w                 ; $FFFFF7A7
                move.w  ($FFFFEEC2).w, (Sonic_Level_Limits_Max_X).w  ; $FFFFEECA
                bra     Jmp_1F_To_DeleteObject                 ; loc_25FB6
loc_25D30:
                bra     Jmp_1A_To_DisplaySprite                ; loc_25FB0
loc_25D34:
                bsr     Jmp_0B_To_SingleObjectLoad             ; loc_25FBC
                bne.s   loc_25D8E
                move.b  #$52, (A1)
                move.b  #$08, Obj_Boss_Routine(A1)                       ; $000A
                move.l  #HTz_Boss_Defeated_Smoke_Mappings, Obj_Map(A1) ; loc_25DD8, $0004
                move.w  #$05E4, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$01, Obj_Priority(A1)                           ; $0018
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  Obj_X(A0), Obj_Timer(A1)                  ; $0008, $002A
                subi.w  #$0028, Obj_Y(A1)                                ; $000C
                move.w  #$FFA0, Obj_Speed(A1)                            ; $0010
                move.w  #$FF40, Obj_Speed_Y(A1)                          ; $0012
                move.b  #$00, Obj_Map_Id(A1)                             ; $001A
                move.b  #$11, Obj_Ani_Time(A1)                           ; $001E
loc_25D8E:
                rts 
;-------------------------------------------------------------------------------
loc_25D90:
                subq.b  #$01, Obj_Ani_Time(A0)                           ; $001E
                bpl.s   loc_25DAA
                move.b  #$11, Obj_Ani_Time(A0)                           ; $001E
                addq.b  #$01, Obj_Map_Id(A0)                             ; $001A
                cmpi.b  #$04, Obj_Map_Id(A0)                             ; $001A
                beq     Jmp_1F_To_DeleteObject                 ; loc_25FB6
loc_25DAA:
                move.l  Obj_Timer(A0), D2                                ; $002A
                move.l  Obj_Y(A0), D3                                    ; $000C
                move.w  Obj_Speed(A0), D0                                ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  Obj_Speed_Y(A0), D0                              ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, Obj_Timer(A0)                                ; $002A
                move.w  Obj_Timer(A0), Obj_X(A0)                  ; $0008, $002A
                move.l  D3, Obj_Y(A0)                                    ; $000C
                bra     Jmp_1A_To_DisplaySprite                ; loc_25FB0
;-------------------------------------------------------------------------------
HTz_Boss_Defeated_Smoke_Mappings:                              ; loc_25DD8
                dc.w    loc_25DE0-HTz_Boss_Defeated_Smoke_Mappings
                dc.w    loc_25DEA-HTz_Boss_Defeated_Smoke_Mappings
                dc.w    loc_25DF4-HTz_Boss_Defeated_Smoke_Mappings
                dc.w    loc_25DFE-HTz_Boss_Defeated_Smoke_Mappings
loc_25DE0:
                dc.w    $0001
                dc.l    $F8052000, $2000FFF8
loc_25DEA:
                dc.w    $0001
                dc.l    $F8052004, $2002FFF8
loc_25DF4:
                dc.w    $0001
                dc.l    $F8052008, $2004FFF8
loc_25DFE:
                dc.w    $0001
                dc.l    $F805200C, $2006FFF8
;-------------------------------------------------------------------------------
HTz_Boss_Animate_Data:                                         ; loc_25E08
                dc.w    loc_25E18-HTz_Boss_Animate_Data
                dc.w    loc_25E1D-HTz_Boss_Animate_Data
                dc.w    loc_25E22-HTz_Boss_Animate_Data
                dc.w    loc_25E27-HTz_Boss_Animate_Data
                dc.w    loc_25E2C-HTz_Boss_Animate_Data
                dc.w    loc_25E30-HTz_Boss_Animate_Data
                dc.w    loc_25E34-HTz_Boss_Animate_Data
                dc.w    loc_25E37-HTz_Boss_Animate_Data
loc_25E18:
                dc.b    $01, $02, $03, $FD, $01
loc_25E1D:
                dc.b    $02, $04, $05, $FD, $02
loc_25E22:
                dc.b    $03, $06, $07, $FD, $03
loc_25E27:
                dc.b    $04, $08, $09, $FD, $04
loc_25E2C:
                dc.b    $05, $0A, $0B, $FE
loc_25E30:
                dc.b    $03, $0C, $0D, $FF
loc_25E34:
                dc.b    $0F, $01, $FF
loc_25E37:
                dc.b    $03, $0E, $0F, $FF, $00   
;-------------------------------------------------------------------------------
HTz_Boss_Mappings:                                             ; loc_25E3C
                dc.w    HTz_Boss_Mappings-HTz_Boss_Mappings
                dc.w    loc_25E5E-HTz_Boss_Mappings
                dc.w    loc_25EA0-HTz_Boss_Mappings
                dc.w    loc_25EAA-HTz_Boss_Mappings
                dc.w    loc_25EB4-HTz_Boss_Mappings
                dc.w    loc_25EBE-HTz_Boss_Mappings
                dc.w    loc_25ED0-HTz_Boss_Mappings
                dc.w    loc_25EE2-HTz_Boss_Mappings
                dc.w    loc_25EFC-HTz_Boss_Mappings
                dc.w    loc_25F16-HTz_Boss_Mappings
                dc.w    loc_25F30-HTz_Boss_Mappings
                dc.w    loc_25F42-HTz_Boss_Mappings
                dc.w    loc_25F4C-HTz_Boss_Mappings
                dc.w    loc_25F56-HTz_Boss_Mappings
                dc.w    loc_25F60-HTz_Boss_Mappings
                dc.w    loc_25F6A-HTz_Boss_Mappings
                dc.w    loc_25F74-HTz_Boss_Mappings
loc_25E5E:
                dc.w    $0008
                dc.l    $04052000, $2000FFE0
                dc.l    $14052004, $2002FFE0
                dc.l    $040F2008, $2004FFF0
                dc.l    $04072018, $200C0010
                dc.l    $F40D0060, $0030FFE0
                dc.l    $F40D0068, $00340000
                dc.l    $DC0A2070, $2038FFE8
                dc.l    $DC062079, $203C0000
loc_25EA0:
                dc.w    $0001
                dc.l    $DF040083, $0041FFD8
loc_25EAA:
                dc.w    $0001
                dc.l    $DF040085, $0042FFD8
loc_25EB4:
                dc.w    $0001
                dc.l    $DF080087, $0043FFD0
loc_25EBE:
                dc.w    $0002
                dc.l    $DF0C008A, $0045FFC0
                dc.l    $DF00008E, $0047FFE0
loc_25ED0:
                dc.w    $0002
                dc.l    $DF0C008F, $0047FFB0
                dc.l    $DF080093, $0049FFD0
loc_25EE2:
                dc.w    $0003
                dc.l    $DF0C0096, $004BFFA0
                dc.l    $DF0C009A, $004DFFC0
                dc.l    $DF00009E, $004FFFE0
loc_25EFC:
                dc.w    $0003
                dc.l    $DF0C009F, $004FFF90
                dc.l    $DF0C00A3, $0051FFB0
                dc.l    $DF0800A7, $0053FFD0
loc_25F16:
                dc.w    $0003
                dc.l    $DF0C00AA, $0055FF88
                dc.l    $DF0C00AE, $0057FFA8
                dc.l    $DF0800B2, $0059FFC8
loc_25F30:
                dc.w    $0002
                dc.l    $DF0C00B5, $005AFF88
                dc.l    $DF0C00B9, $005CFFA8
loc_25F42:
                dc.w    $0001
                dc.l    $DF0C00BD, $005EFF88
loc_25F4C:
                dc.w    $0001
                dc.l    $FC000061, $0030FFFC
loc_25F56:
                dc.w    $0001
                dc.l    $FC000062, $0031FFFC
loc_25F60:
                dc.w    $0001
                dc.l    $F8050063, $0031FFF8
loc_25F6A:
                dc.w    $0001
                dc.l    $F8050067, $0033FFF8
loc_25F74:
                dc.w    $0007
                dc.l    $04052000, $2000FFE0
                dc.l    $14052004, $2002FFE0
                dc.l    $040F2008, $2004FFF0
                dc.l    $04072018, $200C0010
                dc.l    $F40D0060, $0030FFE0
                dc.l    $F40D0068, $00340000
                dc.l    $EC0C007F, $003FFFF0
;===============================================================================
; Object 0x52 - Robotnik na Hill Top
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		dc.w    $0000
Jmp_1A_To_DisplaySprite:                                       ; loc_25FB0
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_1F_To_DeleteObject:                                        ; loc_25FB6
		jmp     (DeleteObject)                         ; loc_D314
Jmp_0B_To_SingleObjectLoad:                                    ; loc_25FBC
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_25_To_MarkObjGone:                                         ; loc_25FC2
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_14_To_AnimateSprite:                                       ; loc_25FC8
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_05_To_ObjHitFloor:                                         ; loc_25FCE
		jmp     (ObjHitFloor)                          ; loc_14204
Jmp_00_To_Obj20_HTz_Boss_FireBall:                          ; loc_25FD4
		jmp     (Obj20_HTz_Boss_FireBall)           ; loc_17E34
Jmp_2E_To_ModifySpriteAttr_2P:                                 ; loc_25FDA
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
;-------------------------------------------------------------------------------
Obj89_NGHz_Boss:                                            ; loc_25FE0
;===============================================================================
; Object 0x89 - Robotnik na Neo Green Hill
; [ Begin ] 
;===============================================================================
; loc_25FE0:
                moveq   #$00, D0
                move.b  Obj_Boss_Routine(A0), D0                         ; $000A
                move.w  loc_25FEE(PC, D0), D1
                jmp     loc_25FEE(PC, D1)
;-------------------------------------------------------------------------------  
loc_25FEE:
                dc.w    loc_25FF4-loc_25FEE
                dc.w    loc_26152-loc_25FEE
                dc.w    loc_264C8-loc_25FEE           
;-------------------------------------------------------------------------------  
loc_25FF4:
                cmpi.w  #$2A40, (Sonic_Level_Limits_Min_X).w         ; $FFFFEEC8
                bne     loc_26126
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                cmpi.w  #$2A68, D0
                blt     loc_26126
                cmpi.w  #$2B48, D0
                bgt     loc_26126
                move.b  #$01, ($FFFFEEBD).w
                move.w  #$03E0, Obj_Art_VRAM(A0)                         ; $0002
                move.l  #NGHz_Boss_Ship_Mappings, Obj_Map(A0) ; loc_26824, $0004
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$20, $000E(A0)
                move.b  #$02, Obj_Priority(A0)                           ; $0018
                move.b  #$02, Obj_Boss_Routine(A0)                       ; $000A
                move.w  #$2AD8, Obj_X(A0)                                ; $0008
                move.w  #$0388, Obj_Y(A0)                                ; $000C
                move.w  #$2AD8, (Boss_Move_Buffer).w                 ; $FFFFF750
                move.w  #$0388, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bset    #$06, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Ani_Boss_Cnt(A0)                       ; $000F
                move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$08, Obj_Control_Var_06(A0)                     ; $0032
                move.b  #$08, Obj_Boss_Ani_Map(A0)                       ; $000B
                move.w  #$FC80, Obj_Control_Var_02(A0)                   ; $002E
                move.w  #$2AD8, NGHz_Robotnik_Pos_X(A0)                  ; $0010
                move.w  #$0488, NGHz_Robotnik_Pos_Y(A0)                  ; $0012
                move.b  #$00, Obj_Ani_Boss_Frame(A0)                     ; $0015
                move.w  #$2AD8, NGHz_Hammer_Pos_X(A0)                    ; $0016
                move.w  #$0488, NGHz_Hammer_Pos_Y(A0)                    ; $0018
                move.b  #$09, Obj_Ani_Frame(A0)                          ; $001B
                move.w  #$2AD8, NGHz_Ship_Boost_Pos_X(A0)                ; $001C
                move.w  #$0488, NGHz_Ship_Boost_Pos_Y(A0)                ; $001E
                move.b  #$06, Obj_Col_Prop(A0)                           ; $0021
                move.w  #$0100, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                bsr     Jmp_0C_To_SingleObjectLoad             ; loc_26978
                bne     loc_26126
                move.b  #$89, (A1)
                move.l  #NGHz_Boss_Arrows_Launcher_Mappings, Obj_Map(A1) ; loc_26752, $0004
                move.w  #$03E0, Obj_Art_VRAM(A1)                         ; $0002
                move.b  #$90, $000E(A1)
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.w  #$2AD8, Obj_X(A1)                                ; $0008
                move.w  #$0488, Obj_Y(A1)                                ; $000C
                move.b  #$00, Obj_Boss_Ani_Map(A1)                       ; $000B
                addq.b  #$04, Obj_Boss_Routine(A1)                       ; $000A
                bset    #$06, Obj_Flags(A1)                              ; $0001
                move.b  #$02, Obj_Ani_Boss_Cnt(A1)                       ; $000F
                move.w  #$2A58, NGHz_Robotnik_Pos_X(A1)                  ; $0010
                move.w  #$0510, NGHz_Robotnik_Pos_Y(A1)                  ; $0012
                move.b  #$00, Obj_Ani_Boss_Frame(A1)                     ; $0015
                move.w  #$2B58, NGHz_Hammer_Pos_X(A1)                    ; $0016
                move.w  #$0510, NGHz_Hammer_Pos_Y(A1)                    ; $0018
                move.b  #$01, Obj_Ani_Frame(A1)                          ; $001B
                move.l  A0, Obj_Timer(A1)                                ; $002A
loc_26126:
                bsr     loc_2612C
                rts
loc_2612C:
                lea     (Boss_Animate_Buffer).w, A2                  ; $FFFFF740
                move.b  #$04, (A2)+
                move.b  #$00, (A2)+
                move.b  #$10, (A2)+
                move.b  #$00, (A2)+
                move.b  #$02, (A2)+
                move.b  #$00, (A2)+
                move.b  #$01, (A2)+
                move.b  #$00, (A2)+
                rts       
;-------------------------------------------------------------------------------  
loc_26152:
                moveq   #$00, D0
                move.b  Obj_Ani_Boss_Routine(A0), D0                     ; $0026
                move.w  loc_26160(PC, D0), D1
                jmp     loc_26160(PC, D1)       
;------------------------------------------------------------------------------- 
loc_26160:
                dc.w    loc_2616E-loc_26160
                dc.w    loc_261AC-loc_26160
                dc.w    loc_26206-loc_26160
                dc.w    loc_2623A-loc_26160
                dc.w    loc_263DA-loc_26160
                dc.w    loc_26422-loc_26160
                dc.w    loc_26478-loc_26160   
;------------------------------------------------------------------------------- 
loc_2616E:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_2628C
                bsr     loc_262AA
                cmpi.w  #$0430, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                blt.s   loc_2619E
                move.w  #$0430, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                addi.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.w  #$0000, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                move.w  #$FF9C, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                st      Obj_Control_Var_0C(A0)                           ; $0038
loc_2619E:
                lea     (NGHz_Boss_Animate_Data), A1           ; loc_267E6
                bsr     Boss_AnimateSprite                     ; loc_26312
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C  
;-------------------------------------------------------------------------------  
loc_261AC:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_2628C
                bsr     loc_262AA
                tst.b   Obj_Control_Var_0C(A0)                           ; $0038
                bne.s   loc_261D4
                cmpi.w  #$2B08, (Boss_Move_Buffer).w                 ; $FFFFF750
                blt.s   loc_261F8
                addi.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.w  #$0000, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                bra.s   loc_261E8
loc_261D4:
                cmpi.w  #$2AA8, (Boss_Move_Buffer).w                 ; $FFFFF750
                bgt.s   loc_261F8
                addi.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.w  #$0000, (Boss_Move_Buffer+$08).w             ; $FFFFF758
loc_261E8:
                lea     (Boss_Animate_Buffer).w, A1                  ; $FFFFF740
                andi.b  #$F0, $0002(A1) 
                ori.b   #$05, $0002(A1) 
loc_261F8:
                lea     (NGHz_Boss_Animate_Data), A1           ; loc_267E6
                bsr     Boss_AnimateSprite                     ; loc_26312
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C  
;-------------------------------------------------------------------------------  
loc_26206:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_2628C
                bsr     loc_262AA
                move.b  Obj_Map_Id(A0), D0                               ; $001A
                cmpi.b  #$C0, D0
                bne.s   loc_2622C
                lea     (Boss_Animate_Buffer).w, A1                  ; $FFFFF740
                andi.b  #$F0, $0004(A1) 
                ori.b   #$03, $0004(A1) 
loc_2622C:
                lea     (NGHz_Boss_Animate_Data), A1           ; loc_267E6
                bsr     Boss_AnimateSprite                     ; loc_26312
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C 
;-------------------------------------------------------------------------------  
loc_2623A:
                lea     (Boss_Animate_Buffer).w, A1                  ; $FFFFF740
                andi.b  #$F0, $0004(A1) 
                ori.b   #$02, $0004(A1) 
                bset    #$00, Obj_Control_Var_12(A0)                     ; $003E
                move.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                bchg    #00, Obj_Flags(A0)                               ; $0001
                eori.b  #$FF, Obj_Control_Var_0C(A0)                     ; $0038
                beq.s   loc_2626C
                move.w  #$FF9C, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                bra.s   loc_26272
loc_2626C:
                move.w  #$0064, (Boss_Move_Buffer+$08).w             ; $FFFFF758
loc_26272:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_2628C
                bsr     loc_262AA
                lea     (NGHz_Boss_Animate_Data), A1           ; loc_267E6
                bsr     Boss_AnimateSprite                     ; loc_26312
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C
loc_2628C:
                bsr     loc_24580
                cmpi.b  #$1F, Obj_Inertia(A0)                            ; $0014
                bne.s   loc_262A8
                lea     (Boss_Animate_Buffer).w, A1                  ; $FFFFF740
                andi.b  #$F0, $0002(A1) 
                ori.b   #$06, $0002(A1) 
loc_262A8:
                rts
loc_262AA:
                move.w  Obj_X(A0), D0                                    ; $0008
                move.w  Obj_Y(A0), D1                                    ; $000C
                move.w  D0, NGHz_Robotnik_Pos_X(A0)                      ; $0010
                move.w  D1, NGHz_Robotnik_Pos_Y(A0)                      ; $0012
                move.w  D0, NGHz_Ship_Boost_Pos_X(A0)                    ; $001C
                move.w  D1, NGHz_Ship_Boost_Pos_Y(A0)                    ; $001E
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_262D6
                move.w  D0, NGHz_Hammer_Pos_X(A0)                        ; $0016
                move.w  D1, NGHz_Hammer_Pos_Y(A0)                        ; $0018
                move.w  D1, Obj_Control_Var_0E(A0)                       ; $003A
                rts
loc_262D6:
                cmpi.w  #$0078, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bgt.s   loc_26310
                subi.w  #$0001, NGHz_Hammer_Pos_X(A0)                    ; $0016
                move.l  Obj_Control_Var_0E(A0), D0                       ; $003A
                move.w  Obj_Control_Var_02(A0), D1                       ; $002E
                addi.w  #$0038, Obj_Control_Var_02(A0)                   ; $002E
                ext.l   D1
                asl.l   #$08, D1
                add.l   D1, D0
                move.l  D0, Obj_Control_Var_0E(A0)                       ; $003A
                move.w  Obj_Control_Var_0E(A0), NGHz_Hammer_Pos_Y(A0) ; $003A, $0018
                cmpi.w  #$0540, NGHz_Hammer_Pos_Y(A0)                    ; $0018
                blt.s   loc_26310
                move.w  #$0000, Obj_Control_Var_02(A0)                   ; $002E
loc_26310:
                rts
;-------------------------------------------------------------------------------  
; Boss_AnimateSprite               
; [ Begin ]>
;-------------------------------------------------------------------------------  
Boss_AnimateSprite:                                            ; loc_26312
                moveq   #$00, D6
                move.l  A1, A4
                lea     (Boss_Animate_Buffer).w, A2                  ; $FFFFF740
                lea     Obj_Boss_Ani_Map(A0), A3                         ; $000B
                tst.b   (A3)
                bne.s   loc_26326
                addq.w  #$02, A2
                bra.s   loc_2632A
loc_26326:
                bsr     loc_26338
loc_2632A:
                moveq   #$00, D6
                move.b  Obj_Ani_Boss_Cnt(A0), D6                         ; $000F
                subq.w  #$01, D6
                bmi.s   loc_2639E
                lea     Obj_Ani_Boss_Frame(A0), A3                       ; $0015
loc_26338:
                move.l  A4, A1
                moveq   #$00, D0
                moveq   #$00, D1
                moveq   #$00, D2
                moveq   #$00, D4
                move.b  (A2)+, D0
                move.b  D0, D1
                lsr.b   #$04, D1
                andi.b  #$0F, D0
                move.b  D0, D2
                cmp.b   D0, D1
                beq.s   loc_26354
                st      D4
loc_26354:
                move.b  D0, D5
                lsl.b   #$04, D5
                or.b    D0, D5
                move.b  (A2)+, D0
                move.b  D0, D1
                lsr.b   #$04, D1
                tst.b   D4
                beq.s   loc_26368
                moveq   #$00, D0
                moveq   #$00, D1
loc_26368:
                andi.b  #$0F, D0
                subi.b  #$01, D0
                bpl.s   loc_2638A
                add.w   D2, D2
                adda.w  $00(A1, D2), A1
                move.b  (A1), D0
                move.b  $01(A1, D1), D2
                bmi.s   loc_263A0
loc_26380:
                andi.b  #$7F, D2
                move.b  D2, (A3)
                addi.b  #$01, D1
loc_2638A:
                lsl.b   #$04, D1
                or.b    D1, D0
                move.b  D0, $FFFFFFFF(A2)
                move.b  D5, $FFFFFFFE(A2)
                adda.w  #$0006, A3
                dbra    D6, loc_26338
loc_2639E:
                rts
loc_263A0:
                addq.b  #$01, D2
                bne.s   loc_263AE
                move.b  #$00, D1
                move.b  $0001(A1), D2                                ; 
                bra.s   loc_26380
loc_263AE:
                addq.b  #$01, D2
                bne.s   loc_263BA
                addi.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                rts
loc_263BA:
                addq.b  #$01, D2
                bne.s   loc_263C8
                andi.b  #$F0, D5
                or.b    $02(A1, D1), D5
                bra.s   loc_2638A
loc_263C8:
                addq.b  #$01, D2
                bne.s   loc_263D8
                moveq   #$00, D3
                move.b  $02(A1, D1), D1
                move.b  $01(A1, D1), D2
                bra.s   loc_26380
loc_263D8:
                rts
;-------------------------------------------------------------------------------
; Boss_AnimateSprite
; [ End ]                                                                                
;-------------------------------------------------------------------------------                
loc_263DA:
                st      Obj_Control_Var_00(A0)                           ; $002C
                subq.w  #$01, (Boss_Move_Buffer+$0C).w               ; $FFFFF75C
                bmi.s   loc_263EA
                bsr     Boss_Defeated                          ; loc_23AEC
                bra.s   loc_2640E
loc_263EA:
                move.b  #$02, Obj_Ani_Boss_Cnt(A0)                       ; $000F
                move.b  #$05, Obj_Ani_Boss_Frame(A0)                     ; $0015
                bset    #$00, Obj_Flags(A0)                              ; $0001
                clr.w   (Boss_Move_Buffer+$08).w                     ; $FFFFF758
                clr.w   (Boss_Move_Buffer+$0A).w                     ; $FFFFF75A
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.w  #$FFEE, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
loc_2640E:
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_262AA
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C  
;-------------------------------------------------------------------------------  
loc_26422:
                addq.w  #$01, (Boss_Move_Buffer+$0C).w               ; $FFFFF75C
                beq.s   loc_26432
                bpl.s   loc_26438
                addi.w  #$0018, ($FFFFF75A).w
                bra.s   loc_2645C
loc_26432:
                clr.w   (Boss_Move_Buffer+$0A).w                     ; $FFFFF75A
                bra.s   loc_2645C
loc_26438:
                cmpi.w  #$0018, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bcs.s   loc_26450
                beq.s   loc_26458
                cmpi.w  #$0020, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bcs.s   loc_2645C
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                bra.s   loc_2645C
loc_26450:
                subi.w  #$0008, ($FFFFF75A).w
                bra.s   loc_2645C
loc_26458:
                clr.w   (Boss_Move_Buffer+$0A).w                     ; $FFFFF75A
loc_2645C:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_24580
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_262AA
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C   
;-------------------------------------------------------------------------------  
loc_26478:
                move.w  #$0400, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                move.w  #$FFC0, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                cmpi.w  #$2180, (Sonic_Level_Limits_Max_X).w         ; $FFFFEECA
                beq.s   loc_26492
                addq.w  #$02, (Sonic_Level_Limits_Max_X).w           ; $FFFFEECA
                bra.s   loc_26498
loc_26492:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_264B4
loc_26498:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_24580
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_262AA
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C
loc_264B4:
                tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
                bne.s   loc_264C0
                move.b  #$01, (Boss_Defeated_Flag).w                 ; $FFFFF7A7
loc_264C0:
                addq.l  #$04, A7
                jmp     (DeleteObject)                         ; loc_D314 
;-------------------------------------------------------------------------------  
loc_264C8:
                moveq   #$00, D0
                move.l  Obj_Timer(A0), A1                                ; $002A
                cmpi.b  #$08, Obj_Ani_Boss_Routine(A1)                   ; $0026
                blt.s   loc_264DC
                move.b  #$08, Obj_Ani_Boss_Routine(A0)                   ; $0026
loc_264DC:
                move.b  Obj_Ani_Boss_Routine(A0), D0                     ; $0026
                move.w  loc_264E8(PC, D0), D1
                jmp     loc_264E8(PC, D1)         
;-------------------------------------------------------------------------------   
loc_264E8:
                dc.w    loc_264F2-loc_264E8
                dc.w    loc_26518-loc_264E8
                dc.w    loc_26530-loc_264E8
                dc.w    loc_2660A-loc_264E8
                dc.w    loc_265B4-loc_264E8     
;-------------------------------------------------------------------------------  
loc_264F2:
                bsr     loc_265DC
                subi.w  #$0002, NGHz_Robotnik_Pos_Y(A0)                  ; $0012
                subi.w  #$0002, NGHz_Hammer_Pos_Y(A0)                    ; $0018
                cmpi.w  #$0488, NGHz_Robotnik_Pos_Y(A0)                  ; $0012
                bgt.s   loc_26514
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.b  #$00, ($FFFFEEBD).w
loc_26514:
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C  
;-------------------------------------------------------------------------------  
loc_26518:
                bsr     loc_265DC
                move.l  Obj_Timer(A0), A1                                ; $002A
                bclr    #$00, Obj_Control_Var_12(A1)                     ; $003E
                beq.s   loc_2652C
                bsr     loc_2654C
loc_2652C:
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C  
;-------------------------------------------------------------------------------  
loc_26530:
                bsr     loc_265DC
                subi.w  #$0001, Obj_Control_Var_04(A0)                   ; $0030
                bpl.s   loc_26548
                move.b  #$00, Obj_Boss_Ani_Map(A0)                       ; $000B
                move.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
loc_26548:
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C
loc_2654C:
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                moveq   #$00, D6
                tst.b   Obj_Control_Var_0C(A1)                           ; $0038
                bne.s   loc_26566
                move.b  #$02, Obj_Boss_Ani_Map(A0)                       ; $000B
                move.w  #$2A62, Obj_X(A0)                                ; $0008
                bra.s   loc_26574
loc_26566:
                st      D6
                move.b  #$03, Obj_Boss_Ani_Map(A0)                       ; $000B
                move.w  #$2B4E, Obj_X(A0)                                ; $0008
loc_26574:
                bsr     Jmp_0C_To_SingleObjectLoad             ; loc_26978
                bne.s   loc_26594
                move.b  #$89, Obj_Id(A1)                                 ; $0000
                move.b  #$04, Obj_Boss_Routine(A1)                       ; $000A
                move.b  #$06, Obj_Ani_Boss_Routine(A1)                   ; $0026
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
                move.b  D6, Obj_Subtype(A1)                              ; $0028
loc_26594:
                move.w  #$0028, Obj_Control_Var_04(A0)                   ; $0030
                bsr     Jmp_02_To_PseudoRandomNumber           ; loc_26984
                andi.w  #$0003, D0
                add.w   D0, D0
                move.w  Arrows_Target(PC, D0), Obj_Y(A0) ; loc_265AC, $000C
                rts
;-------------------------------------------------------------------------------
Arrows_Target:                                                 ; loc_265AC
                dc.w    $0458, $0478, $0498, $04B8      
;-------------------------------------------------------------------------------  
loc_265B4:
                move.b  #$01, ($FFFFEEBD).w
                addi.w  #$0002, NGHz_Robotnik_Pos_Y(A0)                  ; $0012
                addi.w  #$0002, NGHz_Hammer_Pos_Y(A0)                    ; $0018
                cmpi.w  #$0510, NGHz_Robotnik_Pos_Y(A0)                  ; $0012
                blt.s   loc_265D8
                move.b  #$00, ($FFFFEEBD).w
                bra     Jmp_20_To_DeleteObject                 ; loc_26972
loc_265D8:
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C
loc_265DC:
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0011, D3
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                move.w  Obj_Y(A0), -(A7)                                 ; $000C
                move.w  #$2A68, Obj_X(A0)                                ; $0008
                move.w  #$0498, Obj_Y(A0)                                ; $000C
                bsr     Jmp_15_To_SolidObject                  ; loc_2698A
                move.w  (A7)+, Obj_Y(A0)                                 ; $000C
                move.w  (A7)+, Obj_X(A0)                                 ; $0008
                rts   
;-------------------------------------------------------------------------------  
loc_2660A:
                moveq   #$00, D0
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.l  Obj_Timer(A1), A1                                ; $002A
                cmpi.b  #$08, Obj_Ani_Boss_Routine(A1)                   ; $0026
                blt.s   loc_26620
                bra     Jmp_20_To_DeleteObject                 ; loc_26972
loc_26620:
                move.b  Obj_Timer(A0), D0                                ; $002A
                move.w  loc_2662C(PC, D0), D1
                jmp     loc_2662C(PC, D1)    
;-------------------------------------------------------------------------------
loc_2662C:
                dc.w    loc_26636-loc_2662C
                dc.w    loc_2669E-loc_2662C
                dc.w    loc_266DE-loc_2662C
                dc.w    loc_266FA-loc_2662C
                dc.w    loc_26712-loc_2662C   
;-------------------------------------------------------------------------------   
loc_26636:
                move.l  #NGHz_Boss_Arrows_Launcher_Mappings, Obj_Map(A0) ; loc_26752, $0004
                move.w  #$03E0, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$90, $000E(A0)
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                addq.b  #$02, Obj_Timer(A0)                              ; $002A
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.w  #$0004, NGHz_Robotnik_Pos_Y(A0)                  ; $0012
                move.b  #$04, Obj_Map_Id(A0)                             ; $001A
                addi.w  #$0005, Obj_Y(A0)                                ; $000C
                tst.b   Obj_Subtype(A0)                                  ; $0028
                beq.s   loc_26696
                bset    #$00, Obj_Status(A0)                             ; $0022
                bset    #$00, Obj_Flags(A0)                              ; $0001
                move.w  #$FFFC, NGHz_Robotnik_Pos_X(A0)                  ; $0010
                bra.s   loc_2669C
loc_26696:
                move.w  #$0004, NGHz_Robotnik_Pos_X(A0)                  ; $0010
loc_2669C:
                rts      
;-------------------------------------------------------------------------------  
loc_2669E:
                btst    #$07, Obj_Status(A0)                             ; $0022
                beq.s   loc_266AC
                move.b  #$08, Obj_Timer(A0)                              ; $002A
loc_266AC:
                move.w  Obj_X(A0), D0                                    ; $0008
                add.w   NGHz_Robotnik_Pos_X(A0), D0                      ; $0010
                tst.w   NGHz_Robotnik_Pos_X(A0)                          ; $0010
                bpl.s   loc_266C6
                cmpi.w  #$2A76, D0
                bgt.s   loc_266D6
                move.w  #$2A76, D0
                bra.s   loc_266D0
loc_266C6:
                cmpi.w  #$2B3A, D0
                blt.s   loc_266D6
                move.w  #$2B3A, D0
loc_266D0:
                addi.b  #$02, Obj_Timer(A0)                              ; $002A
loc_266D6:
                move.w  D0, Obj_X(A0)                                    ; $0008
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C    
;-------------------------------------------------------------------------------  
loc_266DE:
                btst    #$07, Obj_Status(A0)                             ; $0022
                beq.s   loc_266EC
                addi.b  #$02, Obj_Timer(A0)                              ; $002A
loc_266EC:
                lea     (Pillars_Animate_Data), A1             ; loc_26716
                bsr     Jmp_15_To_AnimateSprite                ; loc_2697E
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C 
;-------------------------------------------------------------------------------  
loc_266FA:
                move.w  Obj_Y(A0), D0                                    ; $000C
                add.w   NGHz_Robotnik_Pos_Y(A0), D0                      ; $0012
                cmpi.w  #$04F0, D0
                bgt     Jmp_20_To_DeleteObject                 ; loc_26972
                move.w  D0, Obj_Y(A0)                                    ; $000C
                bra     Jmp_1B_To_DisplaySprite                ; loc_2696C   
;-------------------------------------------------------------------------------  
loc_26712:
                bra     Jmp_20_To_DeleteObject                 ; loc_26972    
;-------------------------------------------------------------------------------
Pillars_Animate_Data:                                          ; loc_26716
                dc.w    loc_2671A-Pillars_Animate_Data
                dc.w    loc_26731-Pillars_Animate_Data
loc_2671A:
                dc.b    $01, $04, $06, $05, $04, $06, $04, $05
                dc.b    $04, $06, $04, $04, $06, $05, $04, $06
                dc.b    $04, $05, $04, $06, $04, $FD, $01
loc_26731:
                dc.b    $0F, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $04
                dc.b    $04, $04, $04, $04, $04, $04, $04, $F9
                dc.b    $00
;-------------------------------------------------------------------------------
NGHz_Boss_Arrows_Launcher_Mappings:                            ; loc_26752
                dc.w    loc_26760-NGHz_Boss_Arrows_Launcher_Mappings
                dc.w    loc_2678A-NGHz_Boss_Arrows_Launcher_Mappings
                dc.w    loc_267B4-NGHz_Boss_Arrows_Launcher_Mappings
                dc.w    loc_267BE-NGHz_Boss_Arrows_Launcher_Mappings
                dc.w    loc_267C8-NGHz_Boss_Arrows_Launcher_Mappings
                dc.w    loc_267D2-NGHz_Boss_Arrows_Launcher_Mappings
                dc.w    loc_267DC-NGHz_Boss_Arrows_Launcher_Mappings
loc_26760:
                dc.w    $0005
                dc.l    $280F208B, $2045FFF0
                dc.l    $080F208B, $2045FFF0
                dc.l    $E80F208B, $2045FFF0
                dc.l    $C80F208B, $2045FFF0
                dc.l    $C00C2087, $2043FFF0
loc_2678A:
                dc.w    $0005
                dc.l    $280F288B, $2845FFF0
                dc.l    $080F288B, $2845FFF0
                dc.l    $E80F288B, $2845FFF0
                dc.l    $C80F288B, $2845FFF0
                dc.l    $C00C2887, $2843FFF0
loc_267B4:
                dc.w    $0001
                dc.l    $FC04209B, $204DFFF8
loc_267BE:
                dc.w    $0001
                dc.l    $FC04289B, $284DFFF8
loc_267C8:
                dc.w    $0001
                dc.l    $FC0C209D, $204EFFF0
loc_267D2:
                dc.w    $0001
                dc.l    $FC0C20A1, $2050FFF0
loc_267DC:
                dc.w    $0001
                dc.l    $FC0C20A5, $2052FFF0     
;-------------------------------------------------------------------------------   
NGHz_Boss_Animate_Data:                                        ; loc_267E6
                dc.w    NGHz_Robotnik_Faces-NGHz_Boss_Animate_Data ; loc_267F4
                dc.w    NGHz_Ship_Boost-NGHz_Boss_Animate_Data     ; loc_267F8
                dc.w    NGHz_Hammer_Start-NGHz_Boss_Animate_Data   ; loc_267FC
                dc.w    NGHz_Hammer_Usage-NGHz_Boss_Animate_Data   ; loc_267FF
                dc.w    NGHz_Hammer_Fall-NGHz_Boss_Animate_Data    ; loc_2680A
                dc.w    loc_2680D-NGHz_Boss_Animate_Data
                dc.w    loc_26818-NGHz_Boss_Animate_Data
NGHz_Robotnik_Faces:                                           ; loc_267F4
                dc.b    $07, $00, $01, $FF
NGHz_Ship_Boost:                                               ; loc_267F8
                dc.b    $01, $06, $07, $FF
NGHz_Hammer_Start:                                             ; loc_267FC
                dc.b    $0F, $09, $FF
NGHz_Hammer_Usage:                                             ; loc_267FF
                dc.b    $02, $0A, $0A, $0B, $0B, $0B, $0B, $0B
                dc.b    $0A, $0A, $FE
NGHz_Hammer_Fall:                                              ; loc_2680A
                dc.b    $0F, $08, $FF
loc_2680D:
                dc.b    $07, $02, $03, $02, $03, $02, $03, $02
                dc.b    $03, $FD, $00
loc_26818:
                dc.b    $07, $00, $04, $00, $04, $00, $04, $00
                dc.b    $04, $FD, $00, $00   
;-------------------------------------------------------------------------------
NGHz_Boss_Ship_Mappings:                                       ; loc_26824
                dc.w    loc_2683C-NGHz_Boss_Ship_Mappings
                dc.w    loc_2684E-NGHz_Boss_Ship_Mappings
                dc.w    loc_26860-NGHz_Boss_Ship_Mappings
                dc.w    loc_26872-NGHz_Boss_Ship_Mappings
                dc.w    loc_26884-NGHz_Boss_Ship_Mappings
                dc.w    loc_26896-NGHz_Boss_Ship_Mappings
                dc.w    loc_268A8-NGHz_Boss_Ship_Mappings
                dc.w    loc_268BA-NGHz_Boss_Ship_Mappings
                dc.w    loc_268CC-NGHz_Boss_Ship_Mappings
                dc.w    loc_268FE-NGHz_Boss_Ship_Mappings
                dc.w    loc_26928-NGHz_Boss_Ship_Mappings
                dc.w    loc_26952-NGHz_Boss_Ship_Mappings
loc_2683C:
                dc.w    $0002
                dc.l    $E80D0150, $00A8FFE8
                dc.l    $E8050148, $00A4FFD8
loc_2684E:
                dc.w    $0002
                dc.l    $E80D0158, $00ACFFE8
                dc.l    $E8050148, $00A4FFD8
loc_26860:
                dc.w    $0002
                dc.l    $E80D0160, $00B0FFE8
                dc.l    $E805014C, $00A6FFD8
loc_26872:
                dc.w    $0002
                dc.l    $E80D0168, $00B4FFE8
                dc.l    $E805014C, $00A6FFD8
loc_26884:
                dc.w    $0002
                dc.l    $E80D0170, $00B8FFE8
                dc.l    $E805014C, $00A6FFD8
loc_26896:
                dc.w    $0002
                dc.l    $E80D0178, $00BCFFE8
                dc.l    $E805014C, $00A6FFD8
loc_268A8:
                dc.w    $0002
                dc.l    $18050081, $0040FFE8
                dc.l    $18050081, $00400008
loc_268BA:
                dc.w    $0002
                dc.l    $18040085, $0042FFE8
                dc.l    $18040085, $00420008
loc_268CC:
                dc.w    $0006
                dc.l    $D8050140, $00A0FFFA
                dc.l    $E8050144, $00A20008
                dc.l    $F80A2070, $2038FFD0
                dc.l    $F80F2128, $2094FFE8
                dc.l    $F8072079, $203CFFE8
                dc.l    $F8072079, $203C0008
loc_268FE:
                dc.w    $0005
                dc.l    $EA0F2000, $2000FF9C
                dc.l    $D20A2010, $2008FFA4
                dc.l    $D20B2019, $200CFFBC
                dc.l    $F2052025, $2012FFBC
                dc.l    $F8052064, $2032FFC0
loc_26928:
                dc.w    $0005
                dc.l    $F10F2029, $2014FF9D
                dc.l    $D90E2039, $201CFFA5
                dc.l    $E1022045, $2022FFC5
                dc.l    $F1032048, $2024FFBD
                dc.l    $F8052068, $2034FFC0
loc_26952:
                dc.w    $0003
                dc.l    $EC0F204C, $2026FFA0
                dc.l    $0C0D205C, $202EFFA0
                dc.l    $F805206C, $2036FFC0
;===============================================================================
; Object 0x89 - Robotnik na Neo Green Hill
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_1B_To_DisplaySprite:                                       ; loc_2696C
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_20_To_DeleteObject:                                        ; loc_26972
		jmp     (DeleteObject)                         ; loc_D314
Jmp_0C_To_SingleObjectLoad:                                    ; loc_26978
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_15_To_AnimateSprite:                                       ; loc_2697E
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_02_To_PseudoRandomNumber:                                  ; loc_26984
		jmp     (PseudoRandomNumber)                   ; loc_325C
Jmp_15_To_SolidObject:                                         ; loc_2698A
		jmp     (SolidObject)                          ; loc_F344
;-------------------------------------------------------------------------------
Obj57_DHz_Boss:                                             ; loc_26990
; Configuração dos movimentos do chefe    [$01=Broca (nº2) Diagonal]
;                                         [$02=Broca nave movendo]
;                                         [$03=Broca (nº2) Vertical]
;                                         [$04..$0B=Broca (nº2) Horizontal]
;                                         [$0C=Broca (nº2) Subindo]
; $FFFF742 => Configuração da broca nº 1
; $FFFF748 => Configuração da broca nº 2
; $FFFF750 => Posição da tela
; $FFFF75A => Movimento Cima / Baixo
; $FFFF758 => Movimento Esquerda / Direita
; (A0) + 32 => Contagem de toques no chefe
;===============================================================================
; Object 0x57 - Robotnik na Dust Hill
; [ Begin ] 
;=============================================================================== 
; loc_26990:
                moveq   #$00, D0
                move.b  Obj_Boss_Routine(A0), D0                         ; $000A
                move.w  loc_2699E(PC, D0), D1
                jmp     loc_2699E(PC, D1)
;-------------------------------------------------------------------------------
loc_2699E:
                dc.w    loc_269A4-loc_2699E
                dc.w    loc_26A92-loc_2699E
                dc.w    loc_26F1C-loc_2699E    
;------------------------------------------------------------------------------- 
loc_269A4:
                move.l  #DHz_Boss_Mappings, Obj_Map(A0) ; loc_27016, $0004
                move.w  #$03C0, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.w  #$21A0, Obj_X(A0)                                ; $0008
                move.w  #$0678, Obj_Y(A0)                                ; $000C
                move.b  #$05, Obj_Boss_Ani_Map(A0)                       ; $000B
                addq.b  #$02, Obj_Boss_Routine(A0)                       ; $000A
                bset    #$06, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Ani_Boss_Cnt(A0)                       ; $000F
                move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$08, Obj_Boss_Hit_2(A0)                         ; $0032
                move.w  Obj_X(A0), (Boss_Move_Buffer).w              ; $FFFFF750; $0008
                move.w  Obj_Y(A0), (Boss_Move_Buffer+$04).w          ; $FFFFF754; $000C
                move.w  #$FF40, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                move.w  Obj_X(A0), DHz_Front_Drill_Pos_X(A0)      ; $0008, $0010
                move.w  Obj_Y(A0), DHz_Front_Drill_Pos_Y(A0)      ; $000C, $0012
                move.b  #$02, Obj_Ani_Boss_Frame(A0)                     ; $0015
                move.w  Obj_X(A0), DHz_Ship_Boost_Pos_X(A0)       ; $0008, $0016
                move.w  Obj_Y(A0), DHz_Ship_Boost_Pos_Y(A0)       ; $000C, $0018
                move.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
                move.w  Obj_X(A0), DHz_Robotnik_Pos_X(A0)         ; $0008, $001C
                move.w  Obj_Y(A0), DHz_Robotnik_Pos_Y(A0)         ; $000C, $001E
                move.b  #$0E, Obj_Col_Prop(A0)                           ; $0021
                move.w  Obj_X(A0), DHz_Back_Drill_Pos_X(A0)       ; $0008, $0022
                move.w  Obj_Y(A0), DHz_Back_Drill_Pos_Y(A0)       ; $000C, $0024
                move.b  #$02, Obj_Flip_Angle(A0)                         ; $0027
                subi.w  #$0028, DHz_Back_Drill_Pos_X(A0)                 ; $0022
                move.w  #$0028, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                move.w  #$FC80, Obj_Control_Var_02(A0)                   ; $002E
                move.w  #$FC80, Obj_Control_Var_04(A0)                   ; $0030
                bsr     loc_26A64
                rts
loc_26A64:
                lea     (Boss_Animate_Buffer).w, A2                  ; $FFFFF740
                move.b  #$02, (A2)+
                move.b  #$00, (A2)+
                move.b  #$03, (A2)+
                move.b  #$00, (A2)+
                move.b  #$10, (A2)+
                move.b  #$00, (A2)+
                move.b  #$0D, (A2)+
                move.b  #$00, (A2)+
                move.b  #$03, (A2)+
                move.b  #$00, (A2)+
                rts 
;-------------------------------------------------------------------------------
loc_26A92:
                moveq   #$00, D0
                move.b  Obj_Ani_Boss_Routine(A0), D0                     ; $0026
                move.w  loc_26AA0(PC, D0), D1
                jmp     loc_26AA0(PC, D1)  
;-------------------------------------------------------------------------------
loc_26AA0:
                dc.w    loc_26AAE-loc_26AA0
                dc.w    loc_26B2A-loc_26AA0
                dc.w    loc_26B9A-loc_26AA0
                dc.w    loc_26C1A-loc_26AA0
                dc.w    loc_26E28-loc_26AA0
                dc.w    loc_26E76-loc_26AA0
                dc.w    loc_26ECC-loc_26AA0   
;-------------------------------------------------------------------------------
loc_26AAE:
                subi.w  #$0001, ($FFFFF75C).w
                bpl.s   loc_26AF6
                bsr     Boss_Move                              ; loc_245FA
                cmpi.w  #$0560, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bgt.s   loc_26AF6
                move.w  #$0100, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                move.w  (Player_One_Position_X).w, D3                ; $FFFFB008
                bsr     Jmp_03_To_PseudoRandomNumber           ; loc_271BE
                andi.w  #$00FF, D0
                ext.w   D0
                add.w   D0, D3
                cmpi.w  #$2100, D3
                bgt.s   loc_26AE4
                move.w  #$2100, D3
                bra.s   loc_26AEE
loc_26AE4:
                cmpi.w  #$2218, D3
                blt.s   loc_26AEE
                move.w  #$2218, D3
loc_26AEE:
                move.w  D3, (Boss_Move_Buffer).w                     ; $FFFFF750
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
loc_26AF6:
                cmpi.w  #$0620, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bge.s   loc_26B08
                move.b  #$01, ($FFFFEEBD).w
                bsr     loc_26DB0
loc_26B08:
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_26E0A
                lea     (DHz_Boss_Animate_Data), A1            ; loc_26F34
                bsr     Boss_AnimateSprite                     ; loc_26312
                bsr     loc_26CF4
                bra     Jmp_1C_To_DisplaySprite                ; loc_271AC   
;-------------------------------------------------------------------------------
loc_26B2A:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_26DB0
                cmpi.w  #$0620, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                blt.s   loc_26B78
                lea     (Boss_Animate_Buffer).w, A1                  ; $FFFFF740
                andi.b  #$F0, $0002(A1) 
                ori.b   #$06, $0002(A1) 
                andi.b  #$F0, $0008(A1) 
                ori.b   #$06, $0008(A1) 
                andi.b  #$F0, $0006(A1)
                ori.b   #$0D, $0006(A1)
                move.b  #$30, $0007(A1)
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.w  #$00C8, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                move.b  #$00, ($FFFFEEBD).w
loc_26B78:
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_26E0A
                lea     (DHz_Boss_Animate_Data), A1            ; loc_26F34
                bsr     Boss_AnimateSprite                     ; loc_26312
                bsr     loc_26CF4
                bra     Jmp_1C_To_DisplaySprite                ; loc_271AC     
;-------------------------------------------------------------------------------
loc_26B9A:
                subi.w  #$0001, ($FFFFF75C).w
                bgt.s   loc_26BF8
                bmi.s   loc_26BCA
                lea     (Boss_Animate_Buffer).w, A1                  ; $FFFFF740
                move.b  #$30, Obj_Flags(A1)                              ; $0001
                move.w  #$0400, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                bclr    #$00, Obj_Flags(A0)                              ; $0001
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   ($FFFFF750).w, D0
                bmi.s   loc_26BCA
                bset    #$00, Obj_Flags(A0)                              ; $0001
loc_26BCA:
                bsr     Boss_Move                              ; loc_245FA
                cmpi.w  #$0650, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                blt.s   loc_26BF8
                move.w  #$0650, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.w  #$FE00, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                move.w  #$0000, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_26BF8
                neg.w   (Boss_Move_Buffer+$08).w                     ; $FFFFF758
loc_26BF8:
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_26E0A
                lea     (DHz_Boss_Animate_Data), A1            ; loc_26F34
                bsr     Boss_AnimateSprite                     ; loc_26312
                bsr     loc_26CF4
                bra     Jmp_1C_To_DisplaySprite                ; loc_271AC    
;-------------------------------------------------------------------------------
loc_26C1A:
                bsr     Boss_Move                              ; loc_245FA
                cmpi.w  #$2100, (Boss_Move_Buffer).w                 ; $FFFFF750
                bgt.s   loc_26C2E
                move.w  #$2100, (Boss_Move_Buffer).w                 ; $FFFFF750
                bra.s   loc_26C3C
loc_26C2E:
                cmpi.w  #$2218, (Boss_Move_Buffer).w                 ; $FFFFF750
                blt.s   loc_26C88
                move.w  #$2218, (Boss_Move_Buffer).w                 ; $FFFFF750
loc_26C3C:
                move.w  #$0000, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                move.b  #$00, Obj_Ani_Boss_Routine(A0)                   ; $0026
                lea     (Boss_Animate_Buffer).w, A1                  ; $FFFFF740
                andi.b  #$F0, $0002(A1) 
                ori.b   #$0B, $0002(A1) 
                andi.b  #$F0, $0008(A1) 
                ori.b   #$0B, $0008(A1) 
                move.b  #$00, $0001(A1) 
                andi.b  #$F0, $0006(A1)
                ori.b   #$0D, $0006(A1)
                move.b  #$30, $0007(A1)
                move.w  #$00C8, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                move.w  #$FF40, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
loc_26C88:
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_26E0A
                lea     (DHz_Boss_Animate_Data), A1            ; loc_26F34
                bsr     Boss_AnimateSprite                     ; loc_26312
                bsr     loc_26CF4
                bra     Jmp_1C_To_DisplaySprite                ; loc_271AC     
;-------------------------------------------------------------------------------   
; loc_26CAA:
                move.w  (Boss_Move_Buffer).w, D0                     ; $FFFFF750
                subi.w  #$1E00, D0
                bmi.s   loc_26CEC
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_26CD4
                cmpi.w  #$0660, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bgt.s   loc_26CCC
                move.w  #$0660, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bra.s   loc_26CEC
loc_26CCC:
                move.w  #$FF40, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                rts
loc_26CD4:
                cmpi.w  #$0690, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                blt.s   loc_26CE4
                move.w  #$0690, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bra.s   loc_26CEC
loc_26CE4:
                move.w  #$00C0, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                rts
loc_26CEC:
                move.w  #$0000, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                rts
;-------------------------------------------------------------------------------                
loc_26CF4:
                move.w  Obj_X(A0), D0                                    ; $0008
                move.w  Obj_Y(A0), D1                                    ; $000C
                move.w  D0, DHz_Ship_Boost_Pos_X(A0)                     ; $0016
                move.w  D1, DHz_Ship_Boost_Pos_Y(A0)                     ; $0018
                move.w  D0, DHz_Robotnik_Pos_X(A0)                       ; $001C
                move.w  D1, DHz_Robotnik_Pos_Y(A0)                       ; $001E
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_26D42
                move.w  D0, DHz_Back_Drill_Pos_X(A0)                     ; $0022
                move.w  D1, DHz_Back_Drill_Pos_Y(A0)                     ; $0024
                move.w  D0, DHz_Front_Drill_Pos_X(A0)                    ; $0010
                move.w  D1, DHz_Front_Drill_Pos_Y(A0)                    ; $0012
                move.w  D1, Obj_Control_Var_0E(A0)                       ; $003A
                move.w  D1, Obj_Control_Var_08(A0)                       ; $0034
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_26D3A
                addi.w  #$0028, DHz_Back_Drill_Pos_X(A0)                 ; $0022
                rts
loc_26D3A:
                subi.w  #$0028, DHz_Back_Drill_Pos_X(A0)                 ; $0022
                rts
loc_26D42:
                cmpi.w  #$0078, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bgt.s   loc_26DAE
                subi.w  #$0001, DHz_Back_Drill_Pos_X(A0)                 ; $0022
                move.l  Obj_Control_Var_0E(A0), D0                       ; $003A
                move.w  Obj_Control_Var_02(A0), D1                       ; $002E
                addi.w  #$0038, Obj_Control_Var_02(A0)                   ; $002E
                ext.l   D1
                asl.l   #$08, D1
                add.l   D1, D0
                move.l  D0, Obj_Control_Var_0E(A0)                       ; $003A
                move.w  Obj_Control_Var_0E(A0), DHz_Back_Drill_Pos_Y(A0); $0024, $003A
                cmpi.w  #$06F0, DHz_Back_Drill_Pos_Y(A0)                 ; $0024
                blt.s   loc_26D7C
                move.w  #$0000, Obj_Control_Var_02(A0)                   ; $002E
loc_26D7C:
                addi.w  #$0001, DHz_Front_Drill_Pos_X(A0)                ; $0010
                move.l  Obj_Control_Var_08(A0), D0                       ; $0034
                move.w  Obj_Control_Var_04(A0), D1                       ; $0030
                addi.w  #$0038, Obj_Control_Var_04(A0)                   ; $0030
                ext.l   D1
                asl.l   #$08, D1
                add.l   D1, D0
                move.l  D0, Obj_Control_Var_08(A0)                       ; $0034
                move.w  Obj_Control_Var_08(A0), DHz_Front_Drill_Pos_Y(A0); $0012, $0034
                cmpi.w  #$06F0, DHz_Front_Drill_Pos_Y(A0)                ; $0012
                blt.s   loc_26DAE
                move.w  #$0000, Obj_Control_Var_04(A0)                   ; $0030
loc_26DAE:
                rts
loc_26DB0:
                move.b  ($FFFFFE0F).w, D1
                andi.w  #$0007, D1
                bne.s   loc_26E08
loc_26DBA:
                bsr     Jmp_03_To_PseudoRandomNumber           ; loc_271BE
                swap.w  D1
                andi.w  #$01FF, D1
                addi.w  #$20F0, D1
                cmpi.w  #$2228, D1
                bgt.s   loc_26DBA
                bsr     Jmp_0D_To_SingleObjectLoad             ; loc_271B8
                bne.s   loc_26E08
                move.b  #$57, (A1)
                move.b  #$04, Obj_Boss_Routine(A1)                       ; $000A
                move.w  D1, Obj_X(A1)                                    ; $0008
                move.w  #$05F0, Obj_Y(A1)                                ; $000C
                move.l  #DHz_Boss_Mappings, Obj_Map(A1) ; loc_27016, $0004
                move.w  #$0560, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                move.b  #$0D, Obj_Map_Id(A1)                             ; $001A
loc_26E08:
                rts
loc_26E0A:
                bsr     Boss_Hit                               ; loc_2459E
                cmpi.b  #$1F, Obj_Inertia(A0)                            ; $0014
                bne.s   loc_26E26
                lea     (Boss_Animate_Buffer).w, A1                  ; $FFFFF740
                andi.b  #$F0, $0006(A1)
                ori.b   #$0E, $0006(A1)
loc_26E26:
                rts   
;------------------------------------------------------------------------------- 
loc_26E28:
                st      Obj_Control_Var_00(A0)                           ; $002C
                move.b  #$00, ($FFFFEEBD).w
                subq.w  #$01, (Boss_Move_Buffer+$0C).w               ; $FFFFF75C
                bmi.s   loc_26E3E
                bsr     Boss_Defeated                          ; loc_23AEC
                bra.s   loc_26E62
loc_26E3E:
                move.b  #$07, Obj_Boss_Ani_Map(A0)                       ; $000B
                move.b  #$13, Obj_Col_Prop(A0)                           ; $0021
                bset    #$00, Obj_Flags(A0)                              ; $0001
                clr.w   (Boss_Move_Buffer+$08).w                     ; $FFFFF758
                clr.w   (Boss_Move_Buffer+$0A).w                     ; $FFFFF75A
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.w  #$FFEE, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
loc_26E62:
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_26CF4
                bra     Jmp_1C_To_DisplaySprite                ; loc_271AC             
;------------------------------------------------------------------------------- 
loc_26E76:
                addq.w  #$01, (Boss_Move_Buffer+$0C).w               ; $FFFFF75C
                beq.s   loc_26E86
                bpl.s   loc_26E8C
                addi.w  #$0018, ($FFFFF75A).w
                bra.s   loc_26EB0
loc_26E86:
                clr.w   (Boss_Move_Buffer+$0A).w                     ; $FFFFF75A
                bra.s   loc_26EB0
loc_26E8C:
                cmpi.w  #$0018, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bcs.s   loc_26EA4
                beq.s   loc_26EAC
                cmpi.w  #$0020, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bcs.s   loc_26EB0
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                bra.s   loc_26EB0
loc_26EA4:
                subi.w  #$0008, ($FFFFF75A).w
                bra.s   loc_26EB0
loc_26EAC:
                clr.w   (Boss_Move_Buffer+$0A).w                     ; $FFFFF75A
loc_26EB0:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_24580
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_26CF4
                bra     Jmp_1C_To_DisplaySprite                ; loc_271AC     
;------------------------------------------------------------------------------- 
loc_26ECC:
                move.w  #$0400, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                move.w  #$FFC0, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                cmpi.w  #$2180, (Sonic_Level_Limits_Max_X).w         ; $FFFFEECA
                beq.s   loc_26EE6
                addq.w  #$02, (Sonic_Level_Limits_Max_X).w           ; $FFFFEECA
                bra.s   loc_26EEC
loc_26EE6:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_26F08
loc_26EEC:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_24580
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)   ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)       ; $FFFFF750; $0008
                bsr     loc_26CF4
                bra     Jmp_1C_To_DisplaySprite                ; loc_271AC
loc_26F08:
                tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
                bne.s   loc_26F14
                move.b  #$01, (Boss_Defeated_Flag).w                 ; $FFFFF7A7
loc_26F14:
                addq.l  #$04, A7
                jmp     (DeleteObject)                         ; loc_D314 
;------------------------------------------------------------------------------- 
loc_26F1C:
                bsr     Jmp_0C_To_ObjectFall                   ; loc_271C4
                subi.w  #$0014, DHz_Front_Drill_Pos_Y(A0)                ; $0012
                cmpi.w  #$06F0, Obj_Y(A0)                                ; $000C
                bgt     Jmp_21_To_DeleteObject                 ; loc_271B2
                bra     Jmp_1C_To_DisplaySprite                ; loc_271AC         
;-------------------------------------------------------------------------------
DHz_Boss_Animate_Data:                                         ; loc_26F34
                dc.w    loc_26F54-DHz_Boss_Animate_Data
                dc.w    loc_26F57-DHz_Boss_Animate_Data
                dc.w    loc_26F5A-DHz_Boss_Animate_Data
                dc.w    loc_26F61-DHz_Boss_Animate_Data
                dc.w    loc_26F72-DHz_Boss_Animate_Data
                dc.w    loc_26F83-DHz_Boss_Animate_Data
                dc.w    loc_26F8A-DHz_Boss_Animate_Data
                dc.w    loc_26F9C-DHz_Boss_Animate_Data
                dc.w    loc_26FAD-DHz_Boss_Animate_Data
                dc.w    loc_26FBE-DHz_Boss_Animate_Data
                dc.w    loc_26FCF-DHz_Boss_Animate_Data
                dc.w    loc_26FD6-DHz_Boss_Animate_Data
                dc.w    loc_26FE8-DHz_Boss_Animate_Data
                dc.w    loc_26FFA-DHz_Boss_Animate_Data
                dc.w    loc_27007-DHz_Boss_Animate_Data
                dc.w    loc_27012-DHz_Boss_Animate_Data
loc_26F54:
                dc.b    $0F, $01, $FF
loc_26F57:
                dc.b    $05, $08, $FF
loc_26F5A:
                dc.b    $01, $05, $06, $FF, $07, $FC, $03
loc_26F61:
                dc.b    $01, $02, $02, $02, $02, $02, $03, $03
                dc.b    $03, $03, $03, $04, $04, $04, $04, $FD
                dc.b    $04
loc_26F72:
                dc.b    $01, $02, $02, $02, $02, $03, $03, $03
                dc.b    $04, $04, $04, $02, $02, $03, $03, $FD
                dc.b    $05
loc_26F83:
                dc.b    $01, $04, $02, $03, $04, $FC, $01
loc_26F8A:
                dc.b    $01, $02, $03, $04, $04, $02, $02, $03
                dc.b    $03, $03, $04, $04, $04, $02, $02, $02
                dc.b    $FD, $07
loc_26F9C:
                dc.b    $01, $02, $03, $03, $03, $03, $04, $04
                dc.b    $04, $04, $04, $02, $08, $08, $08, $FD
                dc.b    $08
loc_26FAD:
                dc.b    $01, $09, $09, $09, $09, $09, $0A, $0A
                dc.b    $0A, $0A, $0A, $0B, $0B, $0B, $0B, $FD
                dc.b    $09
loc_26FBE:
                dc.b    $01, $09, $09, $09, $09, $0A, $0A, $0A
                dc.b    $0B, $0B, $0B, $09, $09, $0A, $0A, $FD
                dc.b    $0A
loc_26FCF:
                dc.b    $01, $0B, $09, $0A, $0B, $FC, $01
loc_26FD6:
                dc.b    $01, $09, $0A, $0B, $0B, $09, $09, $0A
                dc.b    $0A, $0A, $0B, $0B, $0B, $09, $09, $09
                dc.b    $FD, $0C
loc_26FE8:
                dc.b    $01, $09, $0A, $0A, $0A, $0A, $0B, $0B
                dc.b    $0B, $0B, $0B, $09, $08, $08, $08, $08
                dc.b    $FD, $03
loc_26FFA:
                dc.b    $07, $0E, $0F, $FF, $10, $11, $10, $11
                dc.b    $10, $11, $10, $11, $FF
loc_27007:
                dc.b    $07, $0E, $12, $0E, $12, $0E, $12, $0E
                dc.b    $12, $FD, $0D
loc_27012:
                dc.b    $0F, $0C, $FF, $00     
;-------------------------------------------------------------------------------    
DHz_Boss_Mappings:                                             ; loc_27016
                dc.w    DHz_Boss_Mappings-DHz_Boss_Mappings
                dc.w    loc_2703E-DHz_Boss_Mappings
                dc.w    loc_27068-DHz_Boss_Mappings
                dc.w    loc_2707A-DHz_Boss_Mappings
                dc.w    loc_2708C-DHz_Boss_Mappings
                dc.w    loc_2709E-DHz_Boss_Mappings
                dc.w    loc_270B0-DHz_Boss_Mappings
                dc.w    loc_270C2-DHz_Boss_Mappings
                dc.w    loc_270CC-DHz_Boss_Mappings
                dc.w    loc_270F6-DHz_Boss_Mappings
                dc.w    loc_27108-DHz_Boss_Mappings
                dc.w    loc_2711A-DHz_Boss_Mappings
                dc.w    loc_2712C-DHz_Boss_Mappings
                dc.w    loc_27136-DHz_Boss_Mappings
                dc.w    loc_27140-DHz_Boss_Mappings
                dc.w    loc_27152-DHz_Boss_Mappings
                dc.w    loc_27164-DHz_Boss_Mappings
                dc.w    loc_27176-DHz_Boss_Mappings
                dc.w    loc_27188-DHz_Boss_Mappings
                dc.w    loc_2719A-DHz_Boss_Mappings
loc_2703E:
                dc.w    $0005
                dc.l    $F80F2148, $20A4FFF0
                dc.l    $F8072158, $20AC0010
                dc.l    $E8050164, $00B20010
                dc.l    $F80A2000, $2000FFD8
                dc.l    $D8090021, $0010FFF8
loc_27068:
                dc.w    $0002
                dc.l    $D0072027, $2013000C
                dc.l    $F00B203F, $201F0008
loc_2707A:
                dc.w    $0002
                dc.l    $D007202F, $2017000C
                dc.l    $F00B204B, $20250008
loc_2708C:
                dc.w    $0002
                dc.l    $D0072037, $201B000C
                dc.l    $F00B2057, $202B0008
loc_2709E:
                dc.w    $0002
                dc.l    $12080012, $0009FFF8
                dc.l    $1A080015, $000AFFF8
loc_270B0:
                dc.w    $0002
                dc.l    $12080012, $0009FFF8
                dc.l    $1A0A0018, $000CFFF8
loc_270C2:
                dc.w    $0001
                dc.l    $12080012, $0009FFF8
loc_270CC:
                dc.w    $0005
                dc.l    $E0092063, $2031FFF8
                dc.l    $F0012069, $20340000
                dc.l    $F00F206B, $20350008
                dc.l    $F802207B, $203D0028
                dc.l    $1004207E, $203F0018
loc_270F6:
                dc.w    $0002
                dc.l    $FC0D2080, $2040FFF0
                dc.l    $F80E2098, $204C0010
loc_27108:
                dc.w    $0002
                dc.l    $FC0D2088, $2044FFF0
                dc.l    $F80E20A4, $20520010
loc_2711A:
                dc.w    $0002
                dc.l    $FC0D2090, $2048FFF0
                dc.l    $F80E20B0, $20580010
loc_2712C:
                dc.w    $0001
                dc.l    $F00F40BC, $405EFFF0
loc_27136:
                dc.w    $0001
                dc.l    $F8054000, $4000FFF8
loc_27140:
                dc.w    $0002
                dc.l    $E80D0170, $00B8FFF0
                dc.l    $E8050168, $00B4FFE0
loc_27152:
                dc.w    $0002
                dc.l    $E80D0178, $00BCFFF0
                dc.l    $E8050168, $00B4FFE0
loc_27164:
                dc.w    $0002
                dc.l    $E80D0180, $00C0FFF0
                dc.l    $E805016C, $00B6FFE0
loc_27176:
                dc.w    $0002
                dc.l    $E80D0188, $00C4FFF0
                dc.l    $E805016C, $00B6FFE0
loc_27188:
                dc.w    $0002
                dc.l    $E80D0190, $00C8FFF0
                dc.l    $E805016C, $00B6FFE0
loc_2719A:
                dc.w    $0002
                dc.l    $E80D0198, $00CCFFF0
                dc.l    $E805016C, $00B6FFE0 
;===============================================================================
; Object 0x57 - Robotnik na Dust Hill
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_1C_To_DisplaySprite:                                       ; loc_271AC
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_21_To_DeleteObject:                                        ; loc_271B2
		jmp     (DeleteObject)                         ; loc_D314
Jmp_0D_To_SingleObjectLoad:                                    ; loc_271B8
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_03_To_PseudoRandomNumber:                                  ; loc_271BE
		jmp     (PseudoRandomNumber)                   ; loc_325C
Jmp_0C_To_ObjectFall:                                          ; loc_271C4
		jmp     (ObjectFall)                           ; loc_D1AE
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj51_CNz_Boss:                                             ; loc_271CC
;===============================================================================
; Object 0x51 - Robotnik na Casino Night
; [ Begin ]
;===============================================================================
; loc_271CC:
                bsr     loc_272C0
                moveq   #$00, D0
                move.b  Obj_Boss_Routine(A0), D0                         ; $000A
                move.w  loc_271DE(PC, D0), D1
                jmp     loc_271DE(PC, D1)
;-------------------------------------------------------------------------------
loc_271DE:
                dc.w    loc_271E4-loc_271DE
                dc.w    loc_27384-loc_271DE
                dc.w    loc_2773C-loc_271DE     
;-------------------------------------------------------------------------------
loc_271E4:
                move.l  #CNz_Boss_Mappings, Obj_Map(A0) ; loc_2792C, $0004
                move.w  #$03A7, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.w  #$2850, Obj_X(A0)                                ; $0008
                move.w  #$0600, Obj_Y(A0)                                ; $000C
                move.b  #$00, Obj_Boss_Ani_Map(A0)                       ; $000B
                addq.b  #$02, Obj_Boss_Routine(A0)                       ; $000A
                bset    #$06, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Ani_Boss_Cnt(A0)                       ; $000F
                move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$08, Obj_Boss_Hit_2(A0)                         ; $0032
                move.w  Obj_X(A0), (Boss_Move_Buffer).w              ; $FFFFF750; $0008
                move.w  Obj_Y(A0), (Boss_Move_Buffer+$04).w          ; $FFFFF754; $000C
                move.w  Obj_X(A0), CNz_R_Catcher_Pos_X(A0)        ; $0008, $0010
                move.w  Obj_Y(A0), CNz_R_Catcher_Pos_Y(A0)        ; $000C, $0012
                move.b  #$05, Obj_Ani_Boss_Frame(A0)                     ; $0015
                move.w  Obj_X(A0), CNz_Boss_Ship_Pos_X(A0)        ; $0008, $0016
                move.w  Obj_Y(A0), CNz_Boss_Ship_Pos_Y(A0)        ; $000C, $0018
                move.b  #$01, Obj_Ani_Frame(A0)                          ; $001B
                move.w  Obj_X(A0), CNz_Robotnik_Pos_X(A0)         ; $0008, $001C
                move.w  Obj_Y(A0), CNz_Robotnik_Pos_Y(A0)         ; $000C, $001E
                move.b  #$06, Obj_Col_Prop(A0)                           ; $0021
                move.w  Obj_X(A0), CNz_L_Catcher_Pos_X(A0)        ; $0008, $0022
                move.w  Obj_Y(A0), CNz_L_Catcher_Pos_Y(A0)        ; $000C, $0024
                move.b  #$02, Obj_Flip_Angle(A0)                         ; $0027
                move.b  #$02, Obj_Control_Var_0C(A0)                     ; $0038
                move.w  #$E800, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                bsr     loc_27292
                rts
loc_27292:
                lea     (Boss_Animate_Buffer).w, A2                  ; $FFFFF740
                move.b  #$04, (A2)+
                move.b  #$00, (A2)+
                move.b  #$01, (A2)+
                move.b  #$00, (A2)+
                move.b  #$10, (A2)+
                move.b  #$00, (A2)+
                move.b  #$03, (A2)+
                move.b  #$00, (A2)+
                move.b  #$02, (A2)+
                move.b  #$00, (A2)+
                rts
loc_272C0:
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$03, D0
                beq.s   loc_272CC
                rts
loc_272CC:
                lea     ($FFFFFB20).w, A1
                move.w  Obj_Map(A1), D0                                  ; $0004
                move.w  $0006(A1), $0004(A1) 
                move.w  $0008(A1), $0006(A1) 
                move.w  D0, Obj_Map(A1)                                  ; $0004
                move.b  ($FFFFF75E).w, D0
                andi.w  #$007F, D0
                move.w  loc_2730E(PC, D0), CNz_Robotnik_Pos_X(A1)  ; $001C
                move.b  ($FFFFF75E).w, D0
                bmi.s   loc_2731A
                addi.b  #$02, ($FFFFF75E).w
                cmpi.b  #$0C, ($FFFFF75E).w
                blt.s   loc_27334
                move.b  #$88, ($FFFFF75E).w
                bra.s   loc_27334     
;-------------------------------------------------------------------------------
loc_2730E:
                dc.w    $0A0E, $0C0C, $0EA0, $00AE, $00EA, $0AE0  
;-------------------------------------------------------------------------------
loc_2731A:
                andi.b  #$7F, D0
                subi.b  #$02, D0
                bpl.s   loc_2732C
                move.b  #$02, ($FFFFF75E).w
                bra.s   loc_27334
loc_2732C:
                ori.b   #$80, D0
                move.b  D0, ($FFFFF75E).w
loc_27334:
                move.b  ($FFFFF75F).w, D0
                andi.w  #$007F, D0
                move.w  loc_2735E(PC, D0), CNz_Robotnik_Pos_Y(A1)  ; $001E
                move.b  ($FFFFF75F).w, D0
                bmi.s   loc_27368
                addi.b  #$02, ($FFFFF75F).w
                cmpi.b  #$0A, ($FFFFF75F).w
                blt.s   loc_27382
                move.b  #$86, ($FFFFF75F).w
                rts           
;-------------------------------------------------------------------------------
loc_2735E:
                dc.w    $000E, $000C, $000A, $0008, $0006 
;-------------------------------------------------------------------------------
loc_27368:
                andi.b  #$7F, D0
                subi.b  #$02, D0
                bpl.s   loc_2737A
                move.b  #$02, ($FFFFF75F).w
                rts
loc_2737A:
                ori.b   #$80, D0
                move.b  D0, ($FFFFF75F).w
;------------------------------------------------------------------------------- 
loc_27382:               
                rts        
;-------------------------------------------------------------------------------
loc_27384:
                moveq   #$00, D0
                move.b  Obj_Ani_Boss_Routine(A0), D0                     ; $0026
                move.w  loc_27392(PC, D0), D1
                jmp     loc_27392(PC, D1)  
;-------------------------------------------------------------------------------
loc_27392:
                dc.w    loc_273A0-loc_27392
                dc.w    loc_273BE-loc_27392
                dc.w    loc_273FC-loc_27392
                dc.w    loc_27464-loc_27392
                dc.w    loc_274C2-loc_27392
                dc.w    loc_27510-loc_27392
                dc.w    loc_27566-loc_27392    
;-------------------------------------------------------------------------------
loc_273A0:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_24580
                bsr     loc_275B6
                bsr     loc_2768E
                lea     (CNz_Boss_Animate_Data), A1            ; loc_278EA
                bsr     Boss_AnimateSprite                     ; loc_26312
                bra     Jmp_1D_To_DisplaySprite                ; loc_27A78
;-------------------------------------------------------------------------------
loc_273BE:
                move.b  Obj_Control_Var_12(A0), D0                       ; $003E
                andi.b  #$01, D0
                beq.s   loc_273E4
                subi.b  #$01, Obj_Control_Var_12(A0)                     ; $003E
                move.b  #$00, Obj_Boss_Ani_Map(A0)                       ; $000B
                addq.b  #$04, Obj_Ani_Boss_Routine(A0)                   ; $0026
                bsr     loc_274AC
                move.w  #$00DC, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bra.s   loc_273A0
loc_273E4:
                addi.b  #$01, Obj_Control_Var_12(A0)                     ; $003E
                move.b  #$0C, Obj_Boss_Ani_Map(A0)                       ; $000B
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.w  #$00C8, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bra.s   loc_273A0        
;-------------------------------------------------------------------------------
loc_273FC:
                subi.w  #$0001, ($FFFFF75C).w
                bmi.s   loc_2744A
                beq.s   loc_27434
                cmpi.w  #$004B, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bne.s   loc_273A0
loc_2740E:
                move.b  #$20, (Boss_Animate_Buffer+$03).w            ; $FFFFF743
                move.b  #$20, (Boss_Animate_Buffer+$09).w            ; $FFFFF749
                move.b  #$40, (Boss_Animate_Buffer+$01).w            ; $FFFFF741
                lea     (Boss_Animate_Buffer).w, A1                  ; $FFFFF740
                andi.b  #$F0, $0006(A1)
                ori.b   #$05, $0006(A1)
                bra     loc_273A0
loc_27434:
                move.b  #$00, (Boss_Animate_Buffer+$03).w            ; $FFFFF743
                move.b  #$00, (Boss_Animate_Buffer+$09).w            ; $FFFFF749
                move.b  #$00, (Boss_Animate_Buffer+$01).w            ; $FFFFF741
                bra     loc_273A0
loc_2744A:
                cmpi.w  #$FFB5, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                beq.s   loc_2740E
                cmpi.w  #$FF6A, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bne     loc_273A0
                move.b  #$00, Obj_Ani_Boss_Routine(A0)                   ; $0026
                bra.s   loc_27434  
;-------------------------------------------------------------------------------
loc_27464:
                subi.w  #$0001, ($FFFFF75C).w
                bne.s   loc_2748C
                move.b  #$20, (Boss_Animate_Buffer+$03).w            ; $FFFFF743
                move.b  #$20, (Boss_Animate_Buffer+$09).w            ; $FFFFF749
                lea     (Boss_Animate_Buffer).w, A1                  ; $FFFFF740
                andi.b  #$F0, $0006(A1)
                ori.b   #$05, $0006(A1)
                bra     loc_273A0
loc_2748C:
                cmpi.w  #$FFEC, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bgt     loc_273A0
                move.b  #$00, (Boss_Animate_Buffer+$03).w            ; $FFFFF743
                move.b  #$00, (Boss_Animate_Buffer+$09).w            ; $FFFFF749
                move.b  #$00, Obj_Ani_Boss_Routine(A0)                   ; $0026
                bra     loc_273A0
loc_274AC:
                bsr     Jmp_0E_To_SingleObjectLoad             ; loc_27A84
                bne.s   loc_274C0
                move.b  #$51, (A1)
                move.b  #$04, Obj_Boss_Routine(A1)                       ; $000A
                move.l  A0, CNz_R_Catcher_Fall_Y(A1)                     ; $0034
loc_274C0:
                rts    
;-------------------------------------------------------------------------------
loc_274C2:
                st      Obj_Control_Var_00(A0)                           ; $002C
                move.b  #$00, ($FFFFEEBD).w
                subq.w  #$01, (Boss_Move_Buffer+$0C).w               ; $FFFFF75C
                bmi.s   loc_274D8
                bsr     Boss_Defeated                          ; loc_23AEC
                bra.s   loc_274FC
loc_274D8:
                move.b  #$0B, Obj_Col_Prop(A0)                           ; $0021
                move.b  #$00, Obj_Boss_Ani_Map(A0)                       ; $000B
                bset    #$00, Obj_Flags(A0)                              ; $0001
                clr.w   (Boss_Move_Buffer+$08).w                     ; $FFFFF758
                clr.w   (Boss_Move_Buffer+$0A).w                     ; $FFFFF75A
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                move.w  #$FFEE, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
loc_274FC:
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_2768E
                bra     Jmp_1D_To_DisplaySprite                ; loc_27A78  
;-------------------------------------------------------------------------------
loc_27510:
                addq.w  #$01, (Boss_Move_Buffer+$0C).w               ; $FFFFF75C
                beq.s   loc_27520
                bpl.s   loc_27526
                addi.w  #$0018, ($FFFFF75A).w
                bra.s   loc_2754A
loc_27520:
                clr.w   (Boss_Move_Buffer+$0A).w                     ; $FFFFF75A
                bra.s   loc_2754A
loc_27526:
                cmpi.w  #$0018, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bcs.s   loc_2753E
                beq.s   loc_27546
                cmpi.w  #$0020, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bcs.s   loc_2754A
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
                bra.s   loc_2754A
loc_2753E:
                subi.w  #$0008, ($FFFFF75A).w
                bra.s   loc_2754A
loc_27546:
                clr.w   (Boss_Move_Buffer+$0A).w                     ; $FFFFF75A
loc_2754A:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_24580
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_2768E
                bra     Jmp_1D_To_DisplaySprite                ; loc_27A78     
;-------------------------------------------------------------------------------
loc_27566:
                move.w  #$0400, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                move.w  #$FFC0, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                cmpi.w  #$2980, (Sonic_Level_Limits_Max_X).w         ; $FFFFEECA
                beq.s   loc_27580
                addq.w  #$02, (Sonic_Level_Limits_Max_X).w           ; $FFFFEECA
                bra.s   loc_27586
loc_27580:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl.s   loc_275A2
loc_27586:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_24580
                move.w  (Boss_Move_Buffer+$04).w, Obj_Y(A0)          ; $FFFFF754; $000C
                move.w  (Boss_Move_Buffer).w, Obj_X(A0)              ; $FFFFF750; $0008
                bsr     loc_2768E
                bra     Jmp_1D_To_DisplaySprite                ; loc_27A78
loc_275A2:
                tst.b   (Boss_Defeated_Flag).w                       ; $FFFFF7A7
                bne.s   loc_275AE
                move.b  #$01, (Boss_Defeated_Flag).w                 ; $FFFFF7A7
loc_275AE:
                addq.l  #$04, A7
                jmp     (DeleteObject)                         ; loc_D314
loc_275B6:
                moveq   #$00, D0
                move.b  Obj_Control_Var_0C(A0), D0                       ; $0038
                move.w  loc_275C4(PC, D0), D0
                jmp     loc_275C4(PC, D0)          
;-------------------------------------------------------------------------------
loc_275C4:
                dc.w    loc_275CC-loc_275C4
                dc.w    loc_275EE-loc_275C4
                dc.w    loc_27624-loc_275C4
                dc.w    loc_2765E-loc_275C4    
;-------------------------------------------------------------------------------
loc_275CC:
                cmpi.w  #$2850, (Boss_Move_Buffer).w                 ; $FFFFF750
                blt.s   loc_275EC
                move.w  #$2850, (Boss_Move_Buffer).w                 ; $FFFFF750
                move.w  #$0000, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                move.w  #$FE80, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                move.b  #$02, Obj_Control_Var_0C(A0)                     ; $0038
loc_275EC:
                rts      
;-------------------------------------------------------------------------------
loc_275EE:
                cmpi.w  #$05D0, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bgt.s   loc_27622
                bclr    #$00, Obj_Flags(A0)                              ; $0001
                cmpi.w  #$05A0, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                bgt.s   loc_27622
                move.w  #$05A0, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                move.w  #$0000, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                move.w  #$FE80, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                move.b  #$04, Obj_Control_Var_0C(A0)                     ; $0038
                andi.b  #$7F, Obj_Control_Var_12(A0)                     ; $003E
loc_27622:
                rts    
;-------------------------------------------------------------------------------
loc_27624:
                cmpi.w  #$27C0, (Boss_Move_Buffer).w                 ; $FFFFF750
                bgt.s   loc_2765C
                tst.b   Obj_Control_Var_12(A0)                           ; $003E
                bmi.s   loc_2763C
                ori.b   #$80, Obj_Control_Var_12(A0)                     ; $003E
                addq.b  #$02, Obj_Ani_Boss_Routine(A0)                   ; $0026
loc_2763C:
                cmpi.w  #$2730, (Boss_Move_Buffer).w                 ; $FFFFF750
                bgt.s   loc_2765C
                move.w  #$2730, (Boss_Move_Buffer).w                 ; $FFFFF750
                move.w  #$0000, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                move.w  #$0180, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                move.b  #$06, Obj_Control_Var_0C(A0)                     ; $0038
loc_2765C:
                rts    
;-------------------------------------------------------------------------------
loc_2765E:
                cmpi.w  #$05D0, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                blt.s   loc_2768C
                bset    #$00, Obj_Flags(A0)                              ; $0001
                cmpi.w  #$0600, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                blt.s   loc_2768C
                move.w  #$0600, (Boss_Move_Buffer+$04).w             ; $FFFFF754
                move.w  #$0000, (Boss_Move_Buffer+$0A).w             ; $FFFFF75A
                move.w  #$0180, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                move.b  #$00, Obj_Control_Var_0C(A0)                     ; $0038
loc_2768C:
                rts
loc_2768E:
                move.w  Obj_X(A0), D0                                    ; $0008
                move.w  Obj_Y(A0), D1                                    ; $000C
                move.w  D0, CNz_Boss_Ship_Pos_X(A0)                      ; $0016
                move.w  D1, CNz_Boss_Ship_Pos_Y(A0)                      ; $0018
                move.w  D0, CNz_Robotnik_Pos_X(A0)                       ; $001C
                move.w  D1, CNz_Robotnik_Pos_Y(A0)                       ; $001E
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_276C6
                move.w  D0, CNz_L_Catcher_Pos_X(A0)                      ; $0022
                move.w  D1, CNz_L_Catcher_Pos_Y(A0)                      ; $0024
                move.w  D0, CNz_R_Catcher_Pos_X(A0)                      ; $0010
                move.w  D1, CNz_R_Catcher_Pos_Y(A0)                      ; $0012
                move.w  D1, CNz_L_Catcher_Fall_Y(A0)                     ; $003A
                move.w  D1, CNz_R_Catcher_Fall_Y(A0)                     ; $0034
                rts
loc_276C6:
                cmpi.w  #$0078, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bgt.s   loc_2773A
                subi.w  #$0001, CNz_L_Catcher_Pos_X(A0)                  ; $0022
                move.l  CNz_L_Catcher_Fall_Y(A0), D0                     ; $003A
                move.w  CNz_L_Catcher_Pos_Y_1(A0), D1                    ; $002E
                addi.w  #$0038, CNz_L_Catcher_Pos_Y_1(A0)                ; $002E
                ext.l   D1
                asl.l   #$08, D1
                add.l   D1, D0
                move.l  D0, CNz_L_Catcher_Fall_Y(A0)                     ; $003A
                move.w  CNz_L_Catcher_Fall_Y(A0), CNz_L_Catcher_Pos_Y(A0); $0024, $003A
                cmpi.w  #$06F0, CNz_L_Catcher_Pos_Y(A0)                  ; $0024
                blt.s   loc_27700
                move.w  #$0000, CNz_L_Catcher_Pos_Y_1(A0)                ; $002E
loc_27700:
                cmpi.w  #$003C, (Boss_Move_Buffer+$0C).w             ; $FFFFF75C
                bgt.s   loc_2773A
                addi.w  #$0001, CNz_R_Catcher_Pos_X(A0)                  ; $0010
                move.l  CNz_R_Catcher_Fall_Y(A0), D0                     ; $0034
                move.w  Obj_Control_Var_04(A0), D1                       ; $0030
                addi.w  #$0038, Obj_Control_Var_04(A0)                   ; $0030
                ext.l   D1
                asl.l   #$08, D1
                add.l   D1, D0
                move.l  D0, CNz_R_Catcher_Fall_Y(A0)                     ; $0034
                move.w  CNz_R_Catcher_Fall_Y(A0), CNz_R_Catcher_Pos_Y(A0); $0012, $0034
                cmpi.w  #$06F0, CNz_R_Catcher_Pos_Y(A0)                  ; $0012
                blt.s   loc_2773A
                move.w  #$0000, Obj_Control_Var_04(A0)                   ; $0030
loc_2773A:
                rts         
;-------------------------------------------------------------------------------
loc_2773C:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_2774A(PC, D0), D1
                jmp     loc_2774A(PC, D1)   
;-------------------------------------------------------------------------------
loc_2774A:
                dc.w    loc_27754-loc_2774A
                dc.w    loc_277A2-loc_2774A
                dc.w    loc_277EE-loc_2774A
                dc.w    loc_27816-loc_2774A
                dc.w    loc_2786A-loc_2774A   
;-------------------------------------------------------------------------------
loc_27754:
                move.l  #CNz_Boss_Mappings, Obj_Map(A0) ; loc_2792C, $0004
                move.w  #$03A7, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$05, Obj_Priority(A0)                           ; $0018
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.l  CNz_R_Catcher_Fall_Y(A0), A1                     ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_X(A1), Obj_Timer(A0)                  ; $0008, $002A
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                addi.w  #$0030, Obj_Y(A0)                                ; $000C
                move.b  #$08, CNz_Boss_Ship_Pos_X(A0)                    ; $0016
                move.b  #$08, Obj_Width_2(A0)                            ; $0017
                move.b  #$12, Obj_Map_Id(A0)                             ; $001A
                rts       
;-------------------------------------------------------------------------------
loc_277A2:
                move.l  CNz_R_Catcher_Fall_Y(A0), A1                     ; $0034
                move.w  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.w  Obj_X(A1), Obj_Timer(A0)                  ; $0008, $002A
                move.w  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.w  Obj_Subtype(A0), D0                              ; $0028
                add.w   D0, Obj_Y(A0)                                    ; $000C
                addi.w  #$0001, D0
                cmpi.w  #$002E, D0
                blt.s   loc_277CE
                move.w  #$002E, D0
loc_277CE:
                move.w  D0, Obj_Subtype(A0)                              ; $0028
                tst.w   (Boss_Move_Buffer+$0C).w                     ; $FFFFF75C
                bne     Jmp_1D_To_DisplaySprite                ; loc_27A78
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  (Boss_Move_Buffer+$08).w, CNz_R_Catcher_Pos_X(A0)          ; $FFFFF758; $0010
                move.w  #$0258, Obj_Control_Var_04(A0)                   ; $0030
                bra     Jmp_1D_To_DisplaySprite                ; loc_27A78  
;-------------------------------------------------------------------------------
loc_277EE:
                bsr     loc_278B8
                subi.w  #$0008, CNz_R_Catcher_Pos_X(A0)                  ; $0010
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl     Jmp_1D_To_DisplaySprite                ; loc_27A78
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  #$0000, CNz_R_Catcher_Pos_Y(A0)                  ; $0012
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bra     Jmp_1D_To_DisplaySprite                ; loc_27A78    
;-------------------------------------------------------------------------------
loc_27816:
                subi.w  #$0001, Obj_Control_Var_04(A0)                   ; $0030
                bpl.s   loc_27822
                bra     Jmp_22_To_DeleteObject                 ; loc_27A7E
loc_27822:
                move.b  ($FFFFFE0F).w, D0
                andi.b  #$0F, D0
                bne     Jmp_1D_To_DisplaySprite                ; loc_27A78
                bsr     Jmp_04_To_PseudoRandomNumber           ; loc_27A8A
                andi.w  #$0007, D0
                add.w   D0, D0
                move.w  loc_2785A(PC, D0), CNz_R_Catcher_Pos_X(A0) ; $0010
                swap.w  D0
                andi.w  #$0007, D0
                add.w   D0, D0
                move.w  loc_2785A(PC, D0), D0
                bmi.s   loc_2784E
                neg.w   D0
loc_2784E:
                move.w  D0, CNz_R_Catcher_Pos_Y(A0)                      ; $0012
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bra     Jmp_1D_To_DisplaySprite                ; loc_27A78    
;-------------------------------------------------------------------------------
loc_2785A:
                dc.w    $0100, $FCE0, $FF40, $0240, $FF80, $0320, $FEE0, $0210  
;-------------------------------------------------------------------------------
loc_2786A:
                subi.w  #$0001, Obj_Control_Var_04(A0)                   ; $0030
                bpl.s   loc_27876
                bra     Jmp_22_To_DeleteObject                 ; loc_27A7E
loc_27876:
                bsr     loc_278B8
                bsr     loc_2789C
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl     Jmp_1D_To_DisplaySprite                ; loc_27A78
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  #$0000, CNz_R_Catcher_Pos_Y(A0)                  ; $0012
                subq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                bra     Jmp_1D_To_DisplaySprite                ; loc_27A78
loc_2789C:
                cmpi.w  #$2700, Obj_X(A0)                                ; $0008
                bgt.s   loc_278AA
                neg.w   CNz_R_Catcher_Pos_X(A0)                          ; $0010
                rts
loc_278AA:
                cmpi.w  #$2880, Obj_X(A0)                                ; $0008
                blt.s   loc_278B6
                neg.w   CNz_R_Catcher_Pos_X(A0)                          ; $0010
loc_278B6:
                rts
loc_278B8:
                move.l  Obj_Timer(A0), D2                                ; $002A
                move.l  Obj_Y(A0), D3                                    ; $000C
                move.w  CNz_R_Catcher_Pos_X(A0), D0                      ; $0010
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D2
                move.w  CNz_R_Catcher_Pos_Y(A0), D0                      ; $0012
                addi.w  #$0038, CNz_R_Catcher_Pos_Y(A0)                  ; $0012
                ext.l   D0
                asl.l   #$08, D0
                add.l   D0, D3
                move.l  D2, Obj_Timer(A0)                                ; $002A
                move.w  Obj_Timer(A0), Obj_X(A0)                  ; $0008, $002A
                move.l  D3, Obj_Y(A0)                                    ; $000C
                rts                                       
;-------------------------------------------------------------------------------
CNz_Boss_Animate_Data:                                         ; loc_278EA
                dc.w    loc_278F8-CNz_Boss_Animate_Data
                dc.w    loc_278FB-CNz_Boss_Animate_Data
                dc.w    loc_27901-CNz_Boss_Animate_Data
                dc.w    loc_27907-CNz_Boss_Animate_Data
                dc.w    loc_2790B-CNz_Boss_Animate_Data
                dc.w    loc_27915-CNz_Boss_Animate_Data
                dc.w    loc_27920-CNz_Boss_Animate_Data
loc_278F8:
                dc.b    $0F, $01, $FF
loc_278FB:
                dc.b    $0F, $04, $FF, $05, $FC, $02
loc_27901:
                dc.b    $0F, $02, $FF, $03, $FC, $02
loc_27907:
                dc.b    $07, $06, $07, $FF
loc_2790B:
                dc.b    $01, $0C, $0D, $0E, $FF, $0F, $10, $11
                dc.b    $FC, $04
loc_27915:
                dc.b    $07, $08, $09, $08, $09, $08, $09, $08
                dc.b    $09, $FD, $03
loc_27920:
                dc.b    $07, $06, $0A, $06, $0A, $06, $0A, $06
                dc.b    $0A, $FD, $03, $00 
;-------------------------------------------------------------------------------
CNz_Boss_Mappings:                                             ; loc_2792C
                dc.w    CNz_Boss_Mappings-CNz_Boss_Mappings
                dc.w    loc_27952-CNz_Boss_Mappings
                dc.w    loc_2797C-CNz_Boss_Mappings
                dc.w    loc_27986-CNz_Boss_Mappings
                dc.w    loc_27990-CNz_Boss_Mappings
                dc.w    loc_2799A-CNz_Boss_Mappings
                dc.w    loc_279AC-CNz_Boss_Mappings
                dc.w    loc_279BE-CNz_Boss_Mappings
                dc.w    loc_279D0-CNz_Boss_Mappings
                dc.w    loc_279E2-CNz_Boss_Mappings
                dc.w    loc_279F4-CNz_Boss_Mappings
                dc.w    loc_27A06-CNz_Boss_Mappings
                dc.w    loc_27A18-CNz_Boss_Mappings
                dc.w    loc_27A22-CNz_Boss_Mappings
                dc.w    loc_27A2C-CNz_Boss_Mappings
                dc.w    loc_27A36-CNz_Boss_Mappings
                dc.w    loc_27A48-CNz_Boss_Mappings
                dc.w    loc_27A5A-CNz_Boss_Mappings
                dc.w    loc_27A6C-CNz_Boss_Mappings
loc_27952:
                dc.w    $0005
                dc.l    $F0050024, $00120010
                dc.l    $D80E2060, $2030FFF9
                dc.l    $000F206C, $2036FFD8
                dc.l    $000F207C, $203EFFF8
                dc.l    $0006208C, $20460018
loc_2797C:
                dc.w    $0001
                dc.l    $180620AA, $2055FFE4
loc_27986:
                dc.w    $0001
                dc.l    $100620B0, $2058FFDB
loc_27990:
                dc.w    $0001
                dc.l    $100B2092, $20490008
loc_2799A:
                dc.w    $0002
                dc.l    $1009209E, $204F0008
                dc.l    $100620A4, $20520020
loc_279AC:
                dc.w    $0002
                dc.l    $F00D0030, $0018FFF0
                dc.l    $F0050028, $0014FFE0
loc_279BE:
                dc.w    $0002
                dc.l    $F00D0038, $001CFFF0
                dc.l    $F0050028, $0014FFE0
loc_279D0:
                dc.w    $0002
                dc.l    $F00D0040, $0020FFF0
                dc.l    $F005002C, $0016FFE0
loc_279E2:
                dc.w    $0002
                dc.l    $F00D0048, $0024FFF0
                dc.l    $F005002C, $0016FFE0
loc_279F4:
                dc.w    $0002
                dc.l    $F00D0050, $0028FFF0
                dc.l    $F005002C, $0016FFE0
loc_27A06:
                dc.w    $0002
                dc.l    $F00D0058, $002CFFF0
                dc.l    $F005002C, $0016FFE0
loc_27A18:
                dc.w    $0001
                dc.l    $280C20B6, $205BFFF0
loc_27A22:
                dc.w    $0001
                dc.l    $280C20BA, $205DFFF0
loc_27A2C:
                dc.w    $0001
                dc.l    $280C20BE, $205FFFF0
loc_27A36:
                dc.w    $0002
                dc.l    $200C20C2, $2061FFE4
                dc.l    $200C20C6, $20630004
loc_27A48:
                dc.w    $0002
                dc.l    $200C20CA, $2065FFE4
                dc.l    $200C20CE, $20670004
loc_27A5A:
                dc.w    $0002
                dc.l    $200C20D2, $2069FFE4
                dc.l    $200C20D6, $206B0004
loc_27A6C:
                dc.w    $0001
                dc.l    $F40A00DA, $006DFFF4 
;===============================================================================
; Object 0x51 - Robotnik na Casino Night
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		dc.w    $0000
Jmp_1D_To_DisplaySprite:                                       ; loc_27A78
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_22_To_DeleteObject:                                        ; loc_27A7E
		jmp     (DeleteObject)                         ; loc_D314
Jmp_0E_To_SingleObjectLoad:                                    ; loc_27A84
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_04_To_PseudoRandomNumber:                                  ; loc_27A8A
		jmp     (PseudoRandomNumber)                   ; loc_325C
;-------------------------------------------------------------------------------
Obj54_Mz_Boss:                                              ; loc_27A90
Obj55_Mz_Boss:                                              ; loc_27A90
;===============================================================================
; Object 0x54 - Robotnik na Metropolis
; [ Begin ]          Rotinas adicionais deste Object no Object 0x53 ( Obj53.asm )
;===============================================================================
; loc_27A90:
                moveq   #$00, D0
                move.b  Obj_Boss_Routine(A0), D0                         ; $000A
                move.w  loc_27A9E(PC, D0), D1
                jmp     loc_27A9E(PC, D1)
;-------------------------------------------------------------------------------
loc_27A9E:
                dc.w    loc_27AA2-loc_27A9E
                dc.w    loc_27B36-loc_27A9E     
;-------------------------------------------------------------------------------
loc_27AA2:
                move.l  #Mz_Boss_Mappings, Obj_Map(A0)  ; loc_27DAA, $0004
                move.w  #$038C, Obj_Art_VRAM(A0)                         ; $0002
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$03, Obj_Priority(A0)                           ; $0018
                move.w  #$1EA0, Obj_X(A0)                                ; $0008
                move.w  #$0178, Obj_Y(A0)                                ; $000C
                move.b  #$02, Obj_Boss_Ani_Map(A0)                       ; $000B
                addq.b  #$02, Obj_Boss_Routine(A0)                       ; $000A
                bset    #$06, Obj_Flags(A0)                              ; $0001
                move.b  #$01, Obj_Ani_Boss_Cnt(A0)                       ; $000F
                move.b  #$0F, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$08, Obj_Control_Var_06(A0)                     ; $0032
                move.w  Obj_X(A0), (Boss_Move_Buffer).w       ; $FFFFF750; $0008
                move.w  Obj_Y(A0), (Boss_Move_Buffer+$04).w   ; $FFFFF754; $000C
                move.w  #$FE00, (Boss_Move_Buffer+$08).w             ; $FFFFF758
                move.w  Obj_X(A0), Obj_Speed(A0)                  ; $0008, $0010
                move.w  Obj_Y(A0), Obj_Speed_Y(A0)                ; $000C, $0012
                move.b  #$00, Obj_Ani_Boss_Frame(A0)                     ; $0015
                bsr     Jmp_0F_To_SingleObjectLoad             ; loc_27E92
                bne.s   loc_27B1C
                move.b  #$53, (A1)
                move.l  A0, Obj_Control_Var_08(A1)                       ; $0034
loc_27B1C:
                bsr     loc_27B22
                rts
loc_27B22:
                lea     (Boss_Animate_Buffer).w, A2                  ; $FFFFF740
                move.b  #$10, (A2)+
                move.b  #$00, (A2)+
                move.b  #$01, (A2)+
                move.b  #$00, (A2)+     
;-------------------------------------------------------------------------------
loc_27B36:
                moveq   #$00, D0
                move.b  Obj_Ani_Boss_Routine(A0), D0                     ; $0026
                move.w  loc_27B44(PC, D0), D1
                jmp     loc_27B44(PC, D1)    
;-------------------------------------------------------------------------------
loc_27B44:
                dc.w    loc_27B48-loc_27B44
                dc.w    Obj53_Mz_Boss_Balls_Robotniks-loc_27B44 ; loc_27B80   
;-------------------------------------------------------------------------------  
loc_27B48:
                bsr     Boss_Move                              ; loc_245FA
                bsr     loc_24580
                cmpi.b  #$1F, Obj_Inertia(A0)                            ; $0014
                bne.s   loc_27B5C
                st      Obj_Control_Var_0C(A0)                           ; $0038
loc_27B5C:
                lea     (Mz_Boss_Animate_Data), A1             ; loc_27D88
                bsr     Boss_AnimateSprite                     ; loc_26312
                bsr     loc_27B6E
                bra     Jmp_1E_To_DisplaySprite                ; loc_27E8C
loc_27B6E:
                move.w  Obj_X(A0), D0                                    ; $0008
                move.w  Obj_Y(A0), D1                                    ; $000C
                move.w  D0, Obj_Speed(A0)                                ; $0010
                move.w  D1, Obj_Speed_Y(A0)                              ; $0012
                rts
;===============================================================================
; Object 0x54 - Robotnik na Metropolis
; [ End ]          Rotinas adicionais deste Object no Object 0x53 ( Obj53.asm )
;===============================================================================
Obj53_Mz_Boss_Balls_Robotniks:                              ; loc_27B80
;===============================================================================
; Object 0x53 - Bolas e mini Robotniks a partir das bolas na Metropolis
; [ Begin ]
;===============================================================================
; loc_27B80:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_27B8E(PC, D0), D1
                jmp     loc_27B8E(PC, D1) 
;-------------------------------------------------------------------------------
loc_27B8E:
                dc.w    loc_27B96-loc_27B8E
                dc.w    loc_27C08-loc_27B8E
                dc.w    loc_27D1E-loc_27B8E
                dc.w    loc_27D56-loc_27B8E      
;-------------------------------------------------------------------------------
loc_27B96:
                move.l  A0, A1
                moveq   #$06, D3
                moveq   #$00, D2
                bra.s   loc_27BA4     
;-------------------------------------------------------------------------------
loc_27B9E:
                bsr     Jmp_0F_To_SingleObjectLoad             ; loc_27E92
                bne.s   loc_27BFE   
;-------------------------------------------------------------------------------
loc_27BA4:
                move.l  Obj_Control_Var_08(A0), Obj_Control_Var_08(A1); $0034, $0034
                move.b  #$53, (A1)
                move.l  #Mz_Boss_Mappings, Obj_Map(A1)  ; loc_27DAA, $0004
                move.w  #$038C, Obj_Art_VRAM(A1)                         ; $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$03, Obj_Priority(A1)                           ; $0018
                addq.b  #$02, Obj_Routine(A1)                            ; $0024
                move.b  #$05, Obj_Map_Id(A1)                             ; $001A
                move.b  loc_27C00(PC, D2), Obj_Player_Flip_Flag(A1); $0029
                cmpi.b  #$02, D2
                ble.s   loc_27BEC
                move.b  #$01, Obj_Control_Var_0E(A1)                     ; $003A
                move.b  #$80, Obj_Subtype(A1)                            ; $0028
                bra.s   loc_27BF8
loc_27BEC:
                move.b  #$00, Obj_Control_Var_0E(A1)                     ; $003A
                move.b  #$00, Obj_Subtype(A1)                            ; $0028
loc_27BF8:
                addq.w  #$01, D2
                dbra    D3, loc_27B9E
loc_27BFE:
                rts
;-------------------------------------------------------------------------------
loc_27C00:
                dc.b    $24, $48, $6C, $70, $4C, $28, $04, $00 
;-------------------------------------------------------------------------------
loc_27C08:
                move.l  Obj_Control_Var_08(A0), A1                       ; $0034
                move.w  Obj_Y(A1), Obj_Timer(A0)                  ; $000C, $002A
                subi.w  #$0004, Obj_Timer(A0)                            ; $002A
                move.w  Obj_X(A1), Obj_Control_Var_0C(A0)         ; $0008, $0038
                tst.b   Obj_Control_Var_0C(A1)                           ; $0038
                beq.s   loc_27C46
                move.b  #$00, Obj_Control_Var_0C(A1)                     ; $0038
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                move.w  #$FE80, Obj_Speed_Y(A0)                          ; $0012
                move.w  #$FF80, Obj_Speed(A0)                            ; $0010
                move.b  #$06, Obj_Col_Flags(A0)                          ; $0020
loc_27C46:
                bsr     loc_27C54
                bsr     loc_27CD4
                bra     Jmp_1E_To_DisplaySprite                ; loc_27E8C  
;-------------------------------------------------------------------------------
; loc_27C52:
                rts  
;-------------------------------------------------------------------------------
loc_27C54:
                move.w  Obj_Control_Var_0C(A0), D2                       ; $0038
                move.w  Obj_Timer(A0), D3                                ; $002A
                move.b  Obj_Player_Flip_Flag(A0), D0                     ; $0029
                jsr     (CalcSine)                             ; loc_3282
                muls.w  #$0024, D1
                asr.w   #$08, D1
                move.w  D1, Obj_Y(A0)                                    ; $000C
                add.w   D3, Obj_Y(A0)                                    ; $000C
                muls.w  #$0024, D0
                move.l  D0, D5
                move.l  D0, D4
                move.b  Obj_Subtype(A0), D0                              ; $0028
                jsr     (CalcSine)                             ; loc_3282
                muls.w  D0, D5
                move.l  D5, Obj_Control_Var_00(A0)                       ; $002C
                add.w   D2, Obj_Control_Var_00(A0)                       ; $002C
                muls.w  D1, D4
                move.l  D4, Obj_Control_Var_04(A0)                       ; $0030
                move.w  Obj_Control_Var_00(A0), Obj_X(A0)         ; $0008, $002C
                addq.b  #$04, Obj_Subtype(A0)                            ; $0028
                tst.b   Obj_Control_Var_0E(A0)                           ; $003A
                beq.s   loc_27CBA
                subq.b  #$02, Obj_Player_Flip_Flag(A0)                   ; $0029
                bpl.s   loc_27CD2
                move.b  #$02, Obj_Player_Flip_Flag(A0)                   ; $0029
                move.b  #$00, Obj_Control_Var_0E(A0)                     ; $003A
                rts
loc_27CBA:
                addq.b  #$02, Obj_Player_Flip_Flag(A0)                   ; $0029
                cmpi.b  #$82, Obj_Player_Flip_Flag(A0)                   ; $0029
                bne.s   loc_27CD2
                move.b  #$7E, Obj_Player_Flip_Flag(A0)                   ; $0029
                move.b  #$01, Obj_Control_Var_0E(A0)                     ; $003A
loc_27CD2:
                rts
loc_27CD4:
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                bmi.s   loc_27CFC
                cmpi.w  #$000C, D0
                blt.s   loc_27CEE
                move.b  #$03, Obj_Map_Id(A0)                             ; $001A
                move.b  #$01, Obj_Priority(A0)                           ; $0018
                rts
loc_27CEE:
                move.b  #$04, Obj_Map_Id(A0)                             ; $001A
                move.b  #$02, Obj_Priority(A0)                           ; $0018
                rts
loc_27CFC:
                cmpi.w  #$FFF4, D0
                blt.s   loc_27D10
                move.b  #$04, Obj_Map_Id(A0)                             ; $001A
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                rts
loc_27D10:
                move.b  #$05, Obj_Map_Id(A0)                             ; $001A
                move.b  #$05, Obj_Priority(A0)                           ; $0018
                rts 
;-------------------------------------------------------------------------------
loc_27D1E:
                bsr     Jmp_0D_To_ObjectFall                   ; loc_27E9E
                subi.w  #$0030, Obj_Speed_Y(A0)                          ; $0012
                cmpi.w  #$0080, Obj_Speed_Y(A0)                          ; $0012
                blt.s   loc_27D36
                move.w  #$0080, Obj_Speed_Y(A0)                          ; $0012
loc_27D36:
                cmpi.w  #$01AC, Obj_Y(A0)                                ; $000C
                blt.s   loc_27D48
                move.w  #$01AC, Obj_Y(A0)                                ; $000C
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
loc_27D48:
                lea     (Mz_Boss_Animate_Data), A1             ; loc_27D88
                bsr     Jmp_16_To_AnimateSprite                ; loc_27E98
                bra     Jmp_1E_To_DisplaySprite                ; loc_27E8C   
;-------------------------------------------------------------------------------
loc_27D56:
                bsr     loc_27D6E
                moveq   #-$01, D0
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_27D66
                neg.w   D0
loc_27D66:
                add.w   D0, Obj_X(A0)                                    ; $0008
                bra     Jmp_1E_To_DisplaySprite                ; loc_27E8C
loc_27D6E:
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                bpl.s   loc_27D80
                bclr    #$00, Obj_Flags(A0)                              ; $0001
                rts
loc_27D80:
                bset    #$00, Obj_Flags(A0)                              ; $0001
                rts                            
;-------------------------------------------------------------------------------
Mz_Boss_Animate_Data:                                          ; loc_27D88
                dc.w    loc_27D8E-Mz_Boss_Animate_Data
                dc.w    loc_27D91-Mz_Boss_Animate_Data
                dc.w    loc_27D95-Mz_Boss_Animate_Data
loc_27D8E:
                dc.b    $0F, $02, $FF
loc_27D91:
                dc.b    $01, $00, $01, $FF
loc_27D95:
                dc.b    $03, $05, $05, $05, $05, $05, $05, $05
                dc.b    $05, $06, $07, $06, $07, $06, $07, $08
                dc.b    $09, $0A, $0B, $FE, $01     
;-------------------------------------------------------------------------------
Mz_Boss_Mappings:                                              ; loc_27DAA
                dc.w    loc_27DC2-Mz_Boss_Mappings
                dc.w    loc_27DCC-Mz_Boss_Mappings
                dc.w    loc_27DD6-Mz_Boss_Mappings
                dc.w    loc_27E18-Mz_Boss_Mappings
                dc.w    loc_27E22-Mz_Boss_Mappings
                dc.w    loc_27E2C-Mz_Boss_Mappings
                dc.w    loc_27E36-Mz_Boss_Mappings
                dc.w    loc_27E40-Mz_Boss_Mappings
                dc.w    loc_27E4A-Mz_Boss_Mappings
                dc.w    loc_27E54-Mz_Boss_Mappings
                dc.w    loc_27E5E-Mz_Boss_Mappings
                dc.w    loc_27E68-Mz_Boss_Mappings
loc_27DC2:
                dc.w    $0001
                dc.l    $00050174, $00BA001C
loc_27DCC:
                dc.w    $0001
                dc.l    $00050178, $00BC001C
loc_27DD6:
                dc.w    $0008
                dc.l    $D8050020, $00100002
                dc.l    $E8050028, $0014FFE0
                dc.l    $E80D0030, $0018FFF0
                dc.l    $E8050024, $00120010
                dc.l    $F80F0008, $0004FFF0
                dc.l    $F8070018, $000C0010
                dc.l    $F8020060, $0030FFE0
                dc.l    $F8020063, $0031FFE8
loc_27E18:
                dc.w    $0001
                dc.l    $F40A006E, $0037FFF4
loc_27E22:
                dc.w    $0001
                dc.l    $F40A00CF, $0067FFF4
loc_27E2C:
                dc.w    $0001
                dc.l    $F80500D8, $006CFFF8
loc_27E36:
                dc.w    $0001
                dc.l    $F4060077, $003BFFF8
loc_27E40:
                dc.w    $0001
                dc.l    $F809007D, $003EFFF4
loc_27E4A:
                dc.w    $0001
                dc.l    $F4060083, $0041FFF8
loc_27E54:
                dc.w    $0001
                dc.l    $F40A0089, $0044FFF4
loc_27E5E:
                dc.w    $0001
                dc.l    $F00F0092, $0049FFF0
loc_27E68:
                dc.w    $0004
                dc.l    $E80A00A2, $0051FFE8
                dc.l    $E80A00AB, $00550000
                dc.l    $000A00B4, $005AFFE8
                dc.l    $000A00BD, $005E0000 
;===============================================================================
; Object 0x53 - Bolas e mini Robotniks a partir das bolas na Metropolis
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		dc.w    $0000
Jmp_1E_To_DisplaySprite:                                       ; loc_27E8C
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_0F_To_SingleObjectLoad:                                    ; loc_27E92
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_16_To_AnimateSprite:                                       ; loc_27E98
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_0D_To_ObjectFall:                                          ; loc_27E9E
		jmp     (ObjectFall)                           ; loc_D1AE
;-------------------------------------------------------------------------------
; Rotina usada para inicializar o par metro de alguns Objects
; [ Begin ]
;-------------------------------------------------------------------------------
Object_Settings:                                               ; loc_27EA4
		moveq   #$00, D0
		move.b  Obj_Subtype(A0), D0                              ; $0028
		move.w  ObjSet_List(PC, D0), D0                ; loc_27ED6
		lea     ObjSet_List(PC, D0), A1                ; loc_27ED6
		move.l  (A1)+, Obj_Map(A0)                               ; $0004
		move.w  (A1)+, Obj_Art_VRAM(A0)                          ; $0002
		bsr     Jmp_2F_To_ModifySpriteAttr_2P          ; loc_2A7B2
		move.b  (A1)+, D0
		or.b    D0, Obj_Flags(A0)                                ; $0001
		move.b  (A1)+, Obj_Priority(A0)                          ; $0018
		move.b  (A1)+, Obj_Width(A0)                             ; $0019
		move.b  (A1), Obj_Col_Flags(A0)                          ; $0020
		addq.b  #$02, Obj_Routine(A0)                            ; $0024
		rts
;-------------------------------------------------------------------------------
ObjSet_List:                                                   ; loc_27ED6
		dc.w    Obj8C_Ptr-ObjSet_List               ; loc_28068
		dc.w    Obj8E_Ptr-ObjSet_List               ; loc_282D4
		dc.w    Obj8F_Ptr-ObjSet_List               ; loc_282DE
		dc.w    Obj90_Ptr-ObjSet_List               ; loc_282E8
		dc.w    Obj91_Ptr-ObjSet_List               ; loc_284F6
		dc.w    Obj92_Ptr-ObjSet_List               ; loc_28678
		dc.w    Obj96_Rexon_Body-ObjSet_List        ; loc_2891E
		dc.w    Obj96_Ptr-ObjSet_List               ; loc_28C6A
		dc.w    Rexon_Fireball_Map_Ptr-ObjSet_List     ; loc_28D52
		dc.w    Obj99_Ptr-ObjSet_List               ; loc_28E5A
		dc.w    Nebula_Bomb_Map_Ptr-ObjSet_List        ; loc_28D5C
		dc.w    Obj9A_Ptr-ObjSet_List               ; loc_29110
		dc.w    Obj9B_Ptr-ObjSet_List               ; loc_2911A
		dc.w    Obj9C_Ptr-ObjSet_List               ; loc_29124
		dc.w    Turtloid_Bullet_Map_Ptr-ObjSet_List    ; loc_28D66
		dc.w    Obj9D_Ptr-ObjSet_List               ; loc_2935C
		dc.w    Coconuts_Coconut_Map_Ptr-ObjSet_List   ; loc_28D70
		dc.w    Obj9E_Ptr-ObjSet_List               ; loc_2958E
		dc.w    loc_29842-ObjSet_List
		dc.w    loc_2984C-ObjSet_List
		dc.w    ObjA1_Ptr-ObjSet_List               ; loc_29AB6
		dc.w    ObjA2_Ptr-ObjSet_List               ; loc_29AC0
		dc.w    loc_29D76-ObjSet_List
		dc.w    ObjA4_Ptr-ObjSet_List               ; loc_29FA0
		dc.w    Asteron_Spikes_Map_Ptr-ObjSet_List     ; loc_28D7A
		dc.w    ObjA5_Ptr-ObjSet_List               ; loc_2A1C8
		dc.w    Spiny_Shot_Map_Ptr-ObjSet_List         ; loc_28D84
		dc.w    ObjA7_Ptr-ObjSet_List               ; loc_2A356
		dc.w    ObjA8_Ptr-ObjSet_List               ; loc_2A360
		dc.w    ObjA9_Ptr-ObjSet_List               ; loc_2A36A
		dc.w    Grabber_Unk_Map_Ptr-ObjSet_List        ; loc_28D8E
		dc.w    ObjAC_Ptr-ObjSet_List               ; loc_2A424
		dc.w    ObjAD_Ptr-ObjSet_List               ; loc_2A5DE
		dc.w    ObjAE_Ptr-ObjSet_List               ; loc_2A5E8
		dc.w    Clucker_Bullet_Map_Ptr-ObjSet_List     ; loc_28D98
;-------------------------------------------------------------------------------
Object_Check_Player_Position:                                  ; loc_27F1C
		moveq   #$00, D0
		moveq   #$00, D1
		lea     (Player_One).w, A1                           ; $FFFFB000
		move.w  Obj_X(A0), D2                                    ; $0008
		sub.w   Obj_X(A1), D2                                    ; $0008
		bcc.s   loc_27F30
		addq.w  #$02, D0
loc_27F30:
		move.w  Obj_Y(A0), D3                                    ; $000C
		sub.w   Obj_Y(A1), D3                                    ; $000C
		bcc.s   loc_27F3C
		addq.w  #$02, D1
loc_27F3C:
		rts
;-------------------------------------------------------------------------------
loc_27F3E:
		move.w  Obj_Speed(A0), D2                                ; $0010
		bpl.s   loc_27F50
		neg.w   D0
		cmp.w   D0, D2
		bcc.s   loc_27F56
		move.w  D0, D2
		bra     loc_27F56
loc_27F50:
		cmp.w   D0, D2
		bls.s   loc_27F56
		move.w  D0, D2
loc_27F56:
		move.w  Obj_Speed_Y(A0), D3                              ; $0012
		bpl.s   loc_27F68
		neg.w   D1
		cmp.w   D1, D3
		bcc.s   loc_27F6E
		move.w  D1, D3
		bra     loc_27F6E
loc_27F68:
		cmp.w   D1, D3
		bls.s   loc_27F6E
		move.w  D1, D3
loc_27F6E:
		move.w  D2, Obj_Speed(A0)                                ; $0010
		move.w  D3, Obj_Speed_Y(A0)                              ; $0012
		rts
;-------------------------------------------------------------------------------
loc_27F78:
		moveq   #$00, D0
		move.w  D0, Obj_Speed(A0)                                ; $0010
		move.w  D0, Obj_Speed_Y(A0)                              ; $0012
		rts
;-------------------------------------------------------------------------------
; Rotina usada para inicializar o par metro de alguns Objects
; [ End ]
;-------------------------------------------------------------------------------
Obj8C_NGHz_Whisp:                                           ; loc_27F84
;===============================================================================
; Object 0x8C -> Moscas na Neo Green Hill
; [ Begin ]
;===============================================================================
; loc_27F84:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_27F92(PC, D0), D1
                jmp     loc_27F92(PC, D1)
;-------------------------------------------------------------------------------   
loc_27F92:
                dc.w    loc_27F9A-loc_27F92
                dc.w    loc_27FAC-loc_27F92
                dc.w    loc_27FF0-loc_27F92
                dc.w    loc_28056-loc_27F92   
;-------------------------------------------------------------------------------
loc_27F9A:
                bsr     Object_Settings                        ; loc_27EA4
                move.b  #$10, Obj_Timer(A0)                              ; $002A
                move.b  #$06, Obj_Player_Status(A0)                      ; $002B
                rts     
;-------------------------------------------------------------------------------
loc_27FAC:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_27FC0
                lea     (Whisp_Animate_Data), A1               ; loc_28072
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_27FC0:
                subq.b  #$01, Obj_Player_Status(A0)                      ; $002B
                bpl.s   loc_27FE0
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                bclr    #$00, Obj_Status(A0)                             ; $0022
                clr.w   Obj_Speed_Y(A0)                                  ; $0012
                move.w  #$FE00, Obj_Speed(A0)                            ; $0010
                bra     loc_28056
loc_27FE0:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$FF00, Obj_Speed_Y(A0)                          ; $0012
                move.b  #$60, Obj_Timer(A0)                              ; $002A 
;-------------------------------------------------------------------------------
loc_27FF0:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_2803A
                bsr     Object_Check_Player_Position           ; loc_27F1C
                bclr    #$00, Obj_Status(A0)                             ; $0022
                tst.w   D0
                beq.s   loc_2800A
                bset    #$00, Obj_Status(A0)                             ; $0022
loc_2800A:
                move.w  loc_28036(PC, D0), D2
                add.w   D2, Obj_Speed(A0)                                ; $0010
                move.w  loc_28036(PC, D1), D2
                add.w   D2, Obj_Speed_Y(A0)                              ; $0012
                move.w  #$0200, D0
                move.w  D0, D1
                bsr     loc_27F3E
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Whisp_Animate_Data), A1               ; loc_28072
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;------------------------------------------------------------------------------- 
loc_28036:
                dc.w    $FFF0, $0010          
;-------------------------------------------------------------------------------
loc_2803A:
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$10, Obj_Timer(A0)                              ; $002A
                bsr     loc_27F78
                lea     (Whisp_Animate_Data), A1               ; loc_28072
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------
loc_28056:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Whisp_Animate_Data), A1               ; loc_28072
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
Obj8C_Ptr:                                                  ; loc_28068
                dc.l    Whisp_Mappings                         ; loc_28078
                dc.w    $2500
                dc.b    $04, $04, $0C, $0B          
;-------------------------------------------------------------------------------      
Whisp_Animate_Data:                                            ; loc_28072
                dc.w    loc_28074-Whisp_Animate_Data
loc_28074:
                dc.b    $01, $00, $01, $FF     
;-------------------------------------------------------------------------------   
Whisp_Mappings:                                                ; loc_28078
                dc.w    loc_2807C-Whisp_Mappings
                dc.w    loc_2808E-Whisp_Mappings
loc_2807C:
                dc.w    $0002
                dc.l    $F8080000, $0000FFF4
                dc.l    $00080003, $0001FFF4
loc_2808E:
                dc.w    $0002
                dc.l    $F8080006, $0003FFF4
                dc.l    $00080003, $0001FFF4 
;===============================================================================
; Object 0x8C -> Moscas na Neo Green Hill
; [ End ]
;===============================================================================
Obj8D_Hidden_Grounder:                                      ; loc_280A0
Obj8E_Grounder:                                             ; loc_280A0
;===============================================================================
; Object 0x8E -> Grounder na Neo Green Hill
; [ Begin ]
;===============================================================================
; loc_280A0:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_280AE(PC, D0), D1
                jmp     loc_280AE(PC, D1)
;-------------------------------------------------------------------------------
loc_280AE:
                dc.w    loc_280BA-loc_280AE
                dc.w    loc_280F2-loc_280AE
                dc.w    loc_28116-loc_280AE
                dc.w    loc_28124-loc_280AE
                dc.w    loc_2814A-loc_280AE
                dc.w    loc_28180-loc_280AE     
;-------------------------------------------------------------------------------
loc_280BA:
                bsr     Object_Settings                        ; loc_27EA4
                move.b  #$14, Obj_Height_2(A0)                           ; $0016
                move.b  #$10, Obj_Width_2(A0)                            ; $0017
                jsr     (ObjHitFloor)                          ; loc_14204
                tst.w   D1
                bpl.s   loc_280DE
                add.w   D1, Obj_Y(A0)                                    ; $000C
                move.w  #$0000, Obj_Speed_Y(A0)                          ; $0012
loc_280DE:
                move.b  Obj_Id(A0), D0                                   ; $0000
                subi.b  #$8D, D0
                beq     loc_28274
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                rts   
;-------------------------------------------------------------------------------
loc_280F2:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                tst.w   D2
                bpl.s   loc_280FC
                neg.w   D2
loc_280FC:
                cmpi.w  #$0060, D2
                bls.s   loc_28106
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_28106:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                st      Obj_Player_Status(A0)                            ; $002B
                bsr     loc_2823C
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------
loc_28116:
                lea     (Grounder_AnimateData_01), A1          ; loc_282FA
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------
loc_28124:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     Object_Check_Player_Position           ; loc_27F1C
                move.w  loc_28146(PC, D0), Obj_Speed(A0)           ; $0010
                bclr    #$00, Obj_Status(A0)                             ; $0022
                tst.w   D0
                beq.s   loc_28142
                bset    #$00, Obj_Status(A0)                             ; $0022
loc_28142:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------
loc_28146:
                dc.w    $FF00, $0100 
;-------------------------------------------------------------------------------
loc_2814A:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                jsr     (ObjHitFloor)                          ; loc_14204
                cmpi.w  #$FFFE, D1
                blt.s   loc_28172
                cmpi.w  #$000C, D1
                bge.s   loc_28172
                add.w   D1, Obj_Y(A0)                                    ; $000C
                lea     (Grounder_AnimateData), A1             ; loc_282F2
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_28172:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$3B, Obj_Timer(A0)                              ; $002A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0    
;-------------------------------------------------------------------------------
loc_28180:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_2818A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2818A:
                move.b  #$08, Obj_Routine(A0)                            ; $0024
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Status(A0)                              ; $0022
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0       
;===============================================================================
; Object 0x8E -> Grounder na Neo Green Hill
; [ End ]
;===============================================================================
Obj8F_Wall_Hidden_Grounder:                                 ; loc_2819E
;===============================================================================
; Object 0x8F -> Parede que oculta o Grounder na Neo Green Hill
; [ Begin ]           Carregado a partir do Object 0x8D / 0x8E
;===============================================================================
; loc_2819E:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_281AC(PC, D0), D1
                jmp     loc_281AC(PC, D1)
;-------------------------------------------------------------------------------
loc_281AC:
                dc.w    loc_281B2-loc_281AC
                dc.w    loc_281B6-loc_281AC
                dc.w    loc_2822C-loc_281AC     
;-------------------------------------------------------------------------------
loc_281B2:
                bra     Object_Settings                        ; loc_27EA4  
;-------------------------------------------------------------------------------
loc_281B6:
                move.w  Obj_Timer(A0), A1                                ; $002A
                tst.b   Obj_Player_Status(A1)                            ; $002B
                bne.s   loc_281C4
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_281C4:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  Obj_Control_Var_00(A0), D0                       ; $002C
                move.b  loc_281DC(PC, D0), Obj_Speed(A0)           ; $0010
                move.b  loc_281DC+$01(PC, D0), Obj_Speed_Y(A0)     ; $0012
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_281DC:
                dc.b    $01, $FE, $01, $FF, $FF, $FE, $FF, $FF         
;===============================================================================
; Object 0x8F -> Parede que oculta o Grounder na Neo Green Hill
; [ End ]           Carregado a partir do Object 0x8D / 0x8E
;===============================================================================
Obj90_Rock_Hidden_Grounder:                                 ; loc_281E4
;===============================================================================
; Object 0x90 -> Pedras espirrando quando o Grounder sai da parede na
; [ Begin ]           Neo Green Hill, carregado a partir do Object 0x8D / 0x8E
;===============================================================================
; loc_281E4:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_281F2(PC, D0), D1
                jmp     loc_281F2(PC, D1)
;-------------------------------------------------------------------------------
loc_281F2:
                dc.w    loc_281F6-loc_281F2
                dc.w    loc_2822C-loc_281F2  
;-------------------------------------------------------------------------------
loc_281F6:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$4509, Obj_Art_VRAM(A0)                         ; $0002
                move.w  Obj_Control_Var_00(A0), D0                       ; $002C
                move.b  loc_28222(PC, D0), Obj_Speed(A0)           ; $0010
                move.b  loc_28222+$01(PC, D0), Obj_Speed_Y(A0)     ; $0012
                lsr.w   #$01, D0
                move.b  loc_2821C(PC, D0), Obj_Map_Id(A0)          ; $001A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------  
loc_2821C:
                dc.b    $00, $02, $00, $01, $00, $00      
;-------------------------------------------------------------------------------
loc_28222:
                dc.b    $FF, $FC, $04, $FD, $02, $00, $FD, $FF
                dc.b    $FD, $FD                    
;-------------------------------------------------------------------------------
loc_2822C:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     Jmp_23_To_DeleteObject                 ; loc_2A794
                bsr     Jmp_0E_To_ObjectFall                   ; loc_2A7BE
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2823C:
                moveq   #$00, D1
                moveq   #$04, D6
loc_28240:
                bsr     Jmp_10_To_SingleObjectLoad             ; loc_2A79A
                bne.s   loc_2824E
                bsr     loc_28250
                dbra    D6, loc_28240
loc_2824E:
                rts
loc_28250:
                move.b  #$90, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Subtype(A1)                            ; $0028
                move.w  A0, Obj_Timer(A1)                                ; $002A
                move.w  D1, Obj_Control_Var_00(A1)                       ; $002C
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addq.w  #$02, D1
                rts
loc_28274:
                moveq   #$00, D1
                moveq   #$03, D6
loc_28278:
                bsr     Jmp_10_To_SingleObjectLoad             ; loc_2A79A
                bne.s   loc_28286
                bsr     loc_28288
                dbra    D6, loc_28278
loc_28286:
                rts
loc_28288:
                move.b  #$8F, Obj_Id(A1)                                 ; $0000
                move.b  #$04, Obj_Subtype(A1)                            ; $0028
                move.w  A0, Obj_Timer(A1)                                ; $002A
                move.w  D1, Obj_Control_Var_00(A1)                       ; $002C
                move.l  Obj_X(A0), D0                                    ; $0008
                swap.w  D0
                moveq   #$00, D2
                move.b  loc_282CC(PC, D1), D2
                ext.w   D2
                add.w   D2, D0
                swap.w  D0
                move.l  D0, Obj_X(A1)                                    ; $0008
                move.l  Obj_Y(A0), D0                                    ; $000C
                swap.w  D0
                moveq   #$00, D2
                move.b  loc_282CC+$01(PC, D1), D2
                ext.w   D2
                add.w   D2, D0
                swap.w  D0
                move.l  D0, Obj_Y(A1)                                    ; $000C
                addq.w  #$02, D1
                rts
;------------------------------------------------------------------------------- 
loc_282CC:
                dc.b    $00, $EC, $10, $00, $00, $0C, $F0, $00      
;-------------------------------------------------------------------------------  
Obj8E_Ptr:                                                  ; loc_282D4
                dc.l    Grounder_Mappings                      ; loc_28300
                dc.w    $2509
                dc.b    $04, $05, $10, $02   
;-------------------------------------------------------------------------------
Obj8F_Ptr:                                                  ; loc_282DE
                dc.l    Grounder_Wall_Mappings                 ; loc_28310
                dc.w    $2434
                dc.b    $84, $04, $10, $00     
;-------------------------------------------------------------------------------
Obj90_Ptr:                                                  ; loc_282E8
                dc.l    Grounder_Rock_Mappings                 ; loc_2830A
                dc.w    $2509
                dc.b    $84, $04, $08, $00              
;-------------------------------------------------------------------------------       
Grounder_AnimateData:                                          ; loc_282F2
                dc.w    loc_282F4-Grounder_AnimateData
loc_282F4:
                dc.b    $03, $02, $03, $04, $FF, $00       
;-------------------------------------------------------------------------------  
Grounder_AnimateData_01:                                       ; loc_282FA
                dc.w    loc_282FC-Grounder_AnimateData_01
loc_282FC:
                dc.b    $07, $00, $01, $FC            
;-------------------------------------------------------------------------------    
Grounder_Mappings:                                             ; loc_28300
                dc.w    loc_28312-Grounder_Mappings
                dc.w    loc_28334-Grounder_Mappings
                dc.w    loc_28356-Grounder_Mappings
                dc.w    loc_28368-Grounder_Mappings
                dc.w    loc_2837A-Grounder_Mappings
Grounder_Rock_Mappings:                                        ; loc_2830A
                dc.w    loc_2838C-Grounder_Rock_Mappings
                dc.w    loc_28396-Grounder_Rock_Mappings
                dc.w    loc_283A0-Grounder_Rock_Mappings
Grounder_Wall_Mappings:                                        ; loc_28310
                dc.w    loc_283AA-Grounder_Wall_Mappings                
loc_28312:
                dc.w    $0004
                dc.l    $F4000000, $0000FFF8
                dc.l    $FC060001, $0000FFF0
                dc.l    $F4000800, $08000000
                dc.l    $FC060801, $08000000
loc_28334:
                dc.w    $0004
                dc.l    $EC000007, $0003FFF8
                dc.l    $F4070008, $0004FFF0
                dc.l    $EC000807, $08030000
                dc.l    $F4070808, $08040000
loc_28356:
                dc.w    $0002
                dc.l    $EC0F0010, $0008FFF0
                dc.l    $0C0C0020, $0010FFF0
loc_28368:
                dc.w    $0002
                dc.l    $EC0F0010, $0008FFF0
                dc.l    $0C0C0024, $0012FFF0
loc_2837A:
                dc.w    $0002
                dc.l    $EC0F0010, $0008FFF0
                dc.l    $0C0C0028, $0014FFF0    
loc_2838C:
                dc.w    $0001
                dc.l    $F805002C, $0016FFF8
loc_28396:
                dc.w    $0001
                dc.l    $FC000030, $0018FFFC
loc_283A0:
                dc.w    $0001
                dc.l    $FC000031, $0018FFFC
loc_283AA:
                dc.w    $0002
                dc.l    $F8050093, $0049FFF0
                dc.l    $F8050097, $004B0000
;===============================================================================
; Object 0x90 -> Pedras espirrando quando o Grounder sai da parede na
; [ End ]           Neo Green Hill, carregado a partir do Object 0x8D / 0x8E
;===============================================================================
Obj91_Chop_Chop:                                            ; loc_283BC
;===============================================================================
; Object 0x91 -> Inimigo Chop Chop na Neo Green Hill
; [ Begin ]
;===============================================================================
; loc_283BC:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_283CA(PC, D0), D1
                jmp     loc_283CA(PC, D1)
;-------------------------------------------------------------------------------
loc_283CA:
                dc.w    loc_283D2-loc_283CA
                dc.w    loc_283F4-loc_283CA
                dc.w    loc_28442-loc_283CA
                dc.w    loc_28476-loc_283CA    
;-------------------------------------------------------------------------------
loc_283D2:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$0200, Obj_Timer(A0)                            ; $002A
                move.w  #$0050, Obj_Control_Var_00(A0)                   ; $002C
                moveq   #$40, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                bne.s   loc_283EE
                neg.w   D0
loc_283EE:
                move.w  D0, Obj_Speed(A0)                                ; $0010
                rts   
;-------------------------------------------------------------------------------
loc_283F4:
                subq.b  #$01, Obj_Control_Var_00(A0)                     ; $002C
                bne.s   loc_283FE
                bsr     loc_28488
loc_283FE:
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                bpl.s   loc_2841A
                move.w  #$0200, Obj_Timer(A0)                            ; $002A
                bchg    #00, Obj_Status(A0)                              ; $0022
                bchg    #00, Obj_Flags(A0)                               ; $0001
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_2841A:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                bsr     Object_Check_Player_Position           ; loc_27F1C
                move.w  D2, D4
                move.w  D3, D5
                bsr     loc_284C2
                bne.s   loc_28430
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_28430:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$10, Obj_Timer(A0)                              ; $002A
                clr.w   Obj_Speed(A0)                                    ; $0010
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------
loc_28442:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_2844C
                bra     loc_2847A
loc_2844C:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     Object_Check_Player_Position           ; loc_27F1C
                lsr.w   #$01, D0
                move.b  loc_28472(PC, D0), Obj_Speed(A0)           ; $0010
                addi.w  #$0010, D3
                cmpi.w  #$0020, D3
                bcs.s   loc_2846E
                lsr.w   #$01, D1
                move.b  loc_28474(PC, D1), $0013(A0)
loc_2846E:
                bra     loc_2847A    
;-------------------------------------------------------------------------------
loc_28472:
                dc.b    $FE, $02         
;------------------------------------------------------------------------------- 
loc_28474:
                dc.b    $80, $80     
;-------------------------------------------------------------------------------
loc_28476:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
loc_2847A:
                lea     (Chop_Chop_Animate_Data), A1           ; loc_28500
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------
loc_28488:
                move.w  #$0050, Obj_Control_Var_00(A0)                   ; $002C
                bsr     Jmp_10_To_SingleObjectLoad             ; loc_2A79A
                bne.s   loc_284C0
                move.b  #$0A, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Subtype(A1)                            ; $0028
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                moveq   #$14, D0
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_284B2
                neg.w   D0
loc_284B2:
                add.w   D0, Obj_X(A1)                                    ; $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addq.w  #$06, Obj_Y(A1)                                  ; $000C
loc_284C0:
                rts
loc_284C2:
                addi.w  #$0020, D3
                cmpi.w  #$0040, D3
                bcc.s   loc_284EE
                tst.w   D2
                bmi.s   loc_284DA
                tst.w   Obj_Speed(A0)                                    ; $0010
                bpl.s   loc_284EE
                bra     loc_284E2
loc_284DA:
                tst.w   Obj_Speed(A0)                                    ; $0010
                bmi.s   loc_284EE
                neg.w   D2
loc_284E2:
                cmpi.w  #$0020, D2
                bcs.s   loc_284EE
                cmpi.w  #$00A0, D2
                bcs.s   loc_284F2
loc_284EE:
                moveq   #$00, D2
                rts
loc_284F2:
                moveq   #$01, D2
                rts                  
;-------------------------------------------------------------------------------  
Obj91_Ptr:                                                  ; loc_284F6
                dc.l    Chop_Chop_Mappings                     ; loc_28506
                dc.w    $253B
                dc.b    $04, $04, $10, $02        
;-------------------------------------------------------------------------------                      
Chop_Chop_Animate_Data:                                        ; loc_28500
                dc.w    loc_28502-Chop_Chop_Animate_Data
loc_28502:
                dc.b    $04, $00, $01, $FF   
;-------------------------------------------------------------------------------        
Chop_Chop_Mappings:                                            ; loc_28506
                dc.w    loc_2850A-Chop_Chop_Mappings
                dc.w    loc_28514-Chop_Chop_Mappings
loc_2850A:
                dc.w    $0001
                dc.l    $F40E0000, $0000FFF0
loc_28514:
                dc.w    $0001
                dc.l    $F40E000C, $0006FFF0 
;===============================================================================
; Object 0x91 -> Chop Chop Enemy from Neo Green Hill
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x92 - Spiker Enemy from Hill Top                              
; [ Begin ]
;===============================================================================
; loc_2851E:
Obj92_Spiker:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2852C(PC, D0), D1
                jmp     loc_2852C(PC, D1)
;-------------------------------------------------------------------------------
loc_2852C:
                dc.w    loc_28534-loc_2852C
                dc.w    loc_2854C-loc_2852C
                dc.w    loc_28576-loc_2852C
                dc.w    loc_2859C-loc_2852C      
;-------------------------------------------------------------------------------  
loc_28534:
                bsr     Object_Settings                        ; loc_27EA4
                move.b  #$40, Obj_Timer(A0)                              ; $002A
                move.w  #$0080, Obj_Speed(A0)                            ; $0010
                bchg    #00, Obj_Status(A0)                              ; $0022
                rts  
;------------------------------------------------------------------------------- 
loc_2854C:
                bsr     Spiker_Sub                             ; loc_2864A
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_28568
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Spiker_Animate_Data), A1              ; loc_28682
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_28568:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$10, Obj_Timer(A0)                              ; $002A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;------------------------------------------------------------------------------- 
loc_28576:
                bsr     Spiker_Sub                             ; loc_2864A
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_28584
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_28584:
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$40, Obj_Timer(A0)                              ; $002A
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Status(A0)                              ; $0022
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;------------------------------------------------------------------------------- 
loc_2859C:
                move.b  Obj_Control_Var_00(A0), D0                       ; $002C
                cmpi.b  #$08, D0
                beq.s   loc_285B0
                subq.b  #$01, D0
                move.b  D0, Obj_Control_Var_00(A0)                       ; $002C
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_285B0:
                bsr     Jmp_10_To_SingleObjectLoad             ; loc_2A79A
                bne.s   loc_285EE
                st      Obj_Player_Status(A0)                            ; $002B
                move.b  #$93, Obj_Id(A1)                                 ; $0000
                move.b  Obj_Subtype(A0), Obj_Subtype(A1)          ; $0028, $0028
                move.w  A0, Obj_Timer(A1)                                ; $002A
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                ori.b   #$80, Obj_Col_Flags(A1)                          ; $0020
                move.b  #$04, Obj_Map_Id(A1)                             ; $001A
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
loc_285EE:
                move.b  Obj_Control_Var_01(A0), Obj_Routine(A0)   ; $0024, $002D
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0        
;===============================================================================
; Object 0x92 - Spiker Enemy from Hill Top
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x93 - Drill thrown by Spiker Enemy from Hill Top
; [ Begin ]
;===============================================================================
; loc_285F8:
Obj93_Spiker_Drill:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_28606(PC, D0), D1
                jmp     loc_28606(PC, D1)   
;-------------------------------------------------------------------------------
loc_28606:
                dc.w    loc_2860A-loc_28606
                dc.w    loc_28634-loc_28606      
;-------------------------------------------------------------------------------
loc_2860A:
                bsr     Object_Settings                        ; loc_27EA4
                ori.b   #$80, Obj_Flags(A0)                              ; $0001
                move.w  Obj_Timer(A0), A1                                ; $002A
                move.b  Obj_Flags(A1), D0                                ; $0001
                andi.b  #$03, D0
                or.b    D0, Obj_Flags(A0)                                ; $0001
                moveq   #$02, D1
                btst    #$01, D0
                bne.s   loc_2862E
                neg.w   D1
loc_2862E:
                move.b  D1, Obj_Speed_Y(A0)                              ; $0012
                rts         
;-------------------------------------------------------------------------------
loc_28634:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     Jmp_23_To_DeleteObject                 ; loc_2A794
                bchg    #00, Obj_Flags(A0)                               ; $0001
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
;-------------------------------------------------------------------------------
Spiker_Sub: ; Used by Object 0x92 - Spiker
                tst.b   Obj_Player_Status(A0)                            ; $002B
                bne.s   loc_2865E
                bsr     Object_Check_Player_Position           ; loc_27F1C
                addi.w  #$0020, D2
                cmpi.w  #$0040, D2
                bcs.s   loc_28662
loc_2865E:
                moveq   #$00, D0
                rts
loc_28662:
                move.b  Obj_Routine(A0), Obj_Control_Var_01(A0)   ; $0024, $002D
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                move.b  #$10, Obj_Control_Var_00(A0)                     ; $002C
                moveq   #$01, D0
                rts                            
;-------------------------------------------------------------------------------  
Obj92_Ptr:                                                  ; loc_28678
                dc.l    Spiker_Mappings                        ; loc_2868E
                dc.w    $0000
                dc.b    $04, $04, $10, $12
;-------------------------------------------------------------------------------
Spiker_Animate_Data:                                           ; loc_28682
                dc.w    loc_28686-Spiker_Animate_Data
                dc.w    loc_2868A-Spiker_Animate_Data
loc_28686:
                dc.b    $09, $00, $01, $FF
loc_2868A:
                dc.b    $09, $02, $03, $FF           
;------------------------------------------------------------------------------- 
Spiker_Mappings:
		include 'mappings/sprite/obj92_93.asm'
;===============================================================================
; Object 0x93 - Drill thrown by Spiker Enemy from Hill Top
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x95 - Sol Enemy from Hill Top
; [ Begin ]
;===============================================================================
; loc_286FA:
Obj95_Sol:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_28708(PC, D0), D1
                jmp     loc_28708(PC, D1)   
;-------------------------------------------------------------------------------
loc_28708:
                dc.w    loc_28712-loc_28708
                dc.w    loc_287D8-loc_28708
                dc.w    loc_28820-loc_28708
                dc.w    loc_28838-loc_28708
                dc.w    loc_288B4-loc_28708   
;-------------------------------------------------------------------------------
loc_28712:
                move.l  #Sol_Mappings, Obj_Map(A0)      ; loc_288E2, $0004
                move.w  #$0000, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_2F_To_ModifySpriteAttr_2P          ; loc_2A7B2
                ori.b   #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$04, Obj_Priority(A0)                           ; $0018
                move.b  #$0B, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$0C, Obj_Width(A0)                              ; $0019
                move.w  #$FFC0, Obj_Speed(A0)                            ; $0010
                moveq   #$00, D2
                lea     Obj_Control_Var_0B(A0), A2                       ; $0037
                move.l  A2, A3
                addq.w  #$01, A2
                moveq   #$03, D1
loc_2874E:
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_287AA
                addq.b  #$01, (A3)
                move.w  A1, D5
                subi.w  #Obj_Memory_Address, D5                          ; $B000
                lsr.w   #$06, D5
                andi.w  #$007F, D5
                move.b  D5, (A2)+
                move.b  Obj_Id(A0), Obj_Id(A1)                    ; $0000, $0000
                move.b  #$06, Obj_Routine(A1)                            ; $0024
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                ori.b   #$04, Obj_Flags(A1)                              ; $0001
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.b  #$08, Obj_Width(A1)                              ; $0019
                move.b  #$03, Obj_Map_Id(A1)                             ; $001A
                move.b  #$98, Obj_Col_Flags(A1)                          ; $0020
                move.b  D2, Obj_Angle(A1)                                ; $0026
                addi.b  #$40, D2
                move.l  A0, Obj_Control_Var_10(A1)                       ; $003C
                dbra    D1, loc_2874E
loc_287AA:
                moveq   #$01, D0
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_287B6
                neg.w   D0
loc_287B6:
                move.b  D0, Obj_Control_Var_0A(A0)                       ; $0036
                move.b  Obj_Subtype(A0), Obj_Routine(A0)          ; $0024, $0028
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$FFC0, Obj_Speed(A0)                            ; $0010
                btst    #$00, Obj_Status(A0)                             ; $0022
                beq.s   loc_287D6
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_287D6:
                rts 
;-------------------------------------------------------------------------------
loc_287D8:
                move.w  (Player_One_Position_X).w, D0                ; $FFFFB008
                sub.w   Obj_X(A0), D0                                    ; $0008
                bcc.s   loc_287E4
                neg.w   D0
loc_287E4:
                cmpi.w  #$00A0, D0
                bcc.s   loc_28808
                move.w  (Player_One_Position_Y).w, D0                ; $FFFFB00C
                sub.w   Obj_Y(A0), D0                                    ; $000C
                bcc.s   loc_287F6
                neg.w   D0
loc_287F6:
                cmpi.w  #$0050, D0
                bcc.s   loc_28808
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                bne.s   loc_28808
                move.b  #$01, Obj_Ani_Number(A0)                         ; $001C
loc_28808:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Sol_Animate_Data), A1                 ; loc_288CE
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                andi.b  #$03, Obj_Map_Id(A0)                             ; $001A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------
loc_28820:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Sol_Animate_Data_01), A1              ; loc_288DC
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                andi.b  #$03, Obj_Map_Id(A0)                             ; $001A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
;-------------------------------------------------------------------------------
loc_28838:
                lea     (Sol_Animate_Data_01), A1              ; loc_288DC
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                move.l  Obj_Control_Var_10(A0), A1                       ; $003C
                cmpi.b  #$95, Obj_Id(A1)                                 ; $0000
                bne     Jmp_23_To_DeleteObject                 ; loc_2A794
                cmpi.b  #$02, Obj_Map_Id(A1)                             ; $001A
                bne.s   loc_2888A
                cmpi.b  #$40, Obj_Angle(A0)                              ; $0026
                bne.s   loc_2888A
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
                subq.b  #$01, Obj_Control_Var_0B(A1)                     ; $0037
                bne.s   loc_28874
                addq.b  #$02, Obj_Routine(A1)                            ; $0024
loc_28874:
                move.w  #$FE00, Obj_Speed(A0)                            ; $0010
                btst    #$00, Obj_Status(A1)                             ; $0022
                beq.s   loc_28886
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_28886:
                bra     Jmp_1F_To_DisplaySprite                ; loc_2A78E
loc_2888A:
                move.b  Obj_Angle(A0), D0                                ; $0026
                jsr     (CalcSine)                             ; loc_3282
                asr.w   #$04, D1
                add.w   Obj_X(A1), D1                                    ; $0008
                move.w  D1, Obj_X(A0)                                    ; $0008
                asr.w   #$04, D0
                add.w   Obj_Y(A1), D0                                    ; $000C
                move.w  D0, Obj_Y(A0)                                    ; $000C
                move.b  Obj_Control_Var_0A(A1), D0                       ; $0036
                add.b   D0, Obj_Angle(A0)                                ; $0026
                bra     Jmp_1F_To_DisplaySprite                ; loc_2A78E  
;-------------------------------------------------------------------------------
loc_288B4:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     Jmp_23_To_DeleteObject                 ; loc_2A794
                lea     (Sol_Animate_Data_01), A1              ; loc_288DC
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_1F_To_DisplaySprite                ; loc_2A78E   
;-------------------------------------------------------------------------------      
Sol_Animate_Data:                                              ; loc_288CE
                dc.w    loc_288D2-Sol_Animate_Data
                dc.w    loc_288D6-Sol_Animate_Data
loc_288D2:
                dc.b    $0F, $00, $FF, $00
loc_288D6:
                dc.b    $0F, $01, $02, $FE, $01, $00 
;-------------------------------------------------------------------------------  
Sol_Animate_Data_01:                                           ; loc_288DC
                dc.w    loc_288DE-Sol_Animate_Data_01
loc_288DE:
                dc.b    $05, $03, $04, $FF       
;------------------------------------------------------------------------------- 
Sol_Mappings:
		include 'mappings/sprite/obj95.asm'                   
;===============================================================================
; Object 0x95 - Sol Enemy from Hill Top
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x96 - Rexon Enemy's body from Hill Top
; [ Begin ]
;===============================================================================
; loc_2891E:
Obj94_Rexon_Body:
Obj96_Rexon_Body:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2892C(PC, D0), D1
                jmp     loc_2892C(PC, D1)   
;-------------------------------------------------------------------------------
loc_2892C:
                dc.w    loc_28934-loc_2892C
                dc.w    loc_2894C-loc_2892C
                dc.w    loc_28998-loc_2892C
                dc.w    loc_289C6-loc_2892C       
;-------------------------------------------------------------------------------
loc_28934:
                bsr     Object_Settings                        ; loc_27EA4
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
                move.w  #$FFE0, Obj_Speed(A0)                            ; $0010
                move.b  #$80, Obj_Timer(A0)                              ; $002A
                rts   
;-------------------------------------------------------------------------------
loc_2894C:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                addi.w  #$0060, D2
                cmpi.w  #$0100, D2
                bcc.s   loc_2895E
                bsr     Load_Rexon_Head_Obj                    ; loc_28BA8
loc_2895E:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     loc_2897C
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0011, D3
                move.w  (A7)+, D4
                bsr     Jmp_16_To_SolidObject                  ; loc_2A7B8
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2897C:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bpl.s   loc_28992
                move.b  #$80, Obj_Timer(A0)                              ; $002A
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Flags(A0)                               ; $0001
loc_28992:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                rts    
;-------------------------------------------------------------------------------
loc_28998:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                addi.w  #$0060, D2
                cmpi.w  #$0100, D2
                bcc.s   loc_289AA
                bsr     Load_Rexon_Head_Obj                    ; loc_28BA8
loc_289AA:
                bsr     loc_289B2
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_289B2:
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0008, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bra     Jmp_16_To_SolidObject                  ; loc_2A7B8  
;-------------------------------------------------------------------------------
loc_289C6:
                bsr.s   loc_289B2
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0         
;===============================================================================
; Object 0x96 - Rexon Enemy's body from Hill Top
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x97 - Rexon Enemy's head from Hill Top
; [ Begin ]
;===============================================================================
; loc_289CC:
Obj97_Rexon_Head:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_289DA(PC, D0), D1
                jmp     loc_289DA(PC, D1)
;-------------------------------------------------------------------------------   
loc_289DA:
                dc.w    loc_289E4-loc_289DA
                dc.w    loc_28A50-loc_289DA
                dc.w    loc_28A84-loc_289DA
                dc.w    loc_28ABE-loc_289DA
                dc.w    loc_28AF0-loc_289DA         
;------------------------------------------------------------------------------- 
loc_289E4:
                bsr     Object_Settings                        ; loc_27EA4
                move.b  #$08, Obj_Width(A0)                              ; $0019
                moveq   #$28, D0
                btst    #$00, Obj_Flags(A0)                              ; $0001
                bne.s   loc_289FA
                moveq   #-$18, D0
loc_289FA:
                add.w   D0, Obj_X(A0)                                    ; $0008
                addi.w  #$0010, Obj_Y(A0)                                ; $000C
                move.b  #$01, Obj_Control_Var_0C(A0)                     ; $0038
                move.w  Obj_Control_Var_00(A0), A1                       ; $002C
                lea     Obj_Control_Var_02(A1), A1                       ; $002E
                move.b  #$0B, Obj_Col_Flags(A0)                          ; $0020
                moveq   #$00, D0
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                cmpi.w  #$0008, D0
                beq.s   loc_28A36
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                move.b  #$8B, Obj_Col_Flags(A0)                          ; $0020
                move.w  $00(A1, D0), Obj_Control_Var_04(A0)              ; $0030
loc_28A36:
                move.w  $0006(A1), Obj_Control_Var_06(A0)                ; $0032
                lsr.w   #$01, D0
                move.b  loc_28A4A(PC, D0), Obj_Timer(A0)           ; $002A
                move.b  D0, Obj_Control_Var_0D(A0)                       ; $0039
                rts     
;-------------------------------------------------------------------------------
loc_28A4A:
                dc.b    $1E, $18, $12, $0C, $06, $00 
;-------------------------------------------------------------------------------
loc_28A50:
                bsr     loc_28B08
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_28A5E
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_28A5E:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$FEE0, Obj_Speed(A0)                            ; $0010
                move.w  #$FE00, Obj_Speed_Y(A0)                          ; $0012
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                subi.w  #$0008, D0
                neg.w   D0
                lsr.w   #$01, D0
                move.b  loc_28A4A(PC, D0), Obj_Timer(A0)           ; $002A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------  
loc_28A84:
                bsr     loc_28B08
                moveq   #$10, D0
                add.w   D0, Obj_Speed(A0)                                ; $0010
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_28A9C
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_28A9C:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     loc_27F78
                move.b  #$20, Obj_Timer(A0)                              ; $002A
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                lsr.w   #$01, D0
                move.b  loc_28ABA(PC, D0), Obj_Player_Status(A0)   ; $002B
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------  
loc_28ABA:
                dc.b    $24, $20, $1C, $1A       
;-------------------------------------------------------------------------------  
loc_28ABE:
                bsr     loc_28B08
                cmpi.w  #$0008, Obj_Control_Var_02(A0)                   ; $002E
                bne.s   loc_28AD4
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bpl.s   loc_28AD4
                bsr     Rexon_Load_Weapon                      ; loc_28B2E
loc_28AD4:
                move.b  Obj_Control_Var_0D(A0), D0                       ; $0039
                addq.b  #$01, D0
                move.b  D0, Obj_Control_Var_0D(A0)                       ; $0039
                andi.b  #$03, D0
                bne.s   loc_28AEC
                bsr     loc_28B86
                bsr     loc_28C00
loc_28AEC:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------  
loc_28AF0:
                move.w  (Sonic_Level_Limits_Max_Y).w, D0             ; $FFFFEECE
                addi.w  #$00E0, D0
                cmp.w   Obj_Y(A0), D0                                    ; $000C
                bcc     Jmp_23_To_DeleteObject                 ; loc_2A794
                bsr     Jmp_0E_To_ObjectFall                   ; loc_2A7BE
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_28B08:
                move.w  Obj_Control_Var_06(A0), A1                       ; $0032
                cmpi.b  #$97, (A1)
                beq.s   loc_28B22
                move.b  #$08, Obj_Routine(A0)                            ; $0024
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                move.w  loc_28B24(PC, D0), Obj_Speed(A0)           ; $0010
loc_28B22:
                rts  
;-------------------------------------------------------------------------------
loc_28B24:
                dc.w    $0080, $FF00, $0100, $FF80, $0080                   
;-------------------------------------------------------------------------------
Rexon_Load_Weapon:                                             ; loc_28B2E
                move.b  #$7F, Obj_Timer(A0)                              ; $002A
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_28B84
                move.b  #$98, Obj_Id(A1)                                 ; $0000
                move.b  #$03, Obj_Map_Id(A1)                             ; $001A
                move.b  #$10, Obj_Subtype(A1)                            ; $0028
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                lea     (SpeedToPos), A2                       ; loc_D1DA
                move.l  A2, Obj_Timer(A1)                                ; $002A
                moveq   #$01, D0
                moveq   #$10, D1
                btst    #$00, Obj_Flags(A0)                              ; $0001
                bne.s   loc_28B72
                neg.w   D0
                neg.w   D1
loc_28B72:
                move.b  D0, Obj_Speed(A1)                                ; $0010
                add.w   D1, Obj_X(A1)                                    ; $0008
                addq.w  #$04, Obj_Y(A1)                                  ; $000C
                move.b  #$80, $0013(A1)
loc_28B84:
                rts
loc_28B86:
                move.b  Obj_Player_Status(A0), D0                        ; $002B
                move.b  Obj_Control_Var_0C(A0), D1                       ; $0038
                add.b   D1, D0
                move.b  D0, Obj_Player_Status(A0)                        ; $002B
                subi.b  #$18, D0
                beq.s   loc_28BA2
                bcs.s   loc_28BA2
                cmpi.b  #$10, D0
                bcs.s   loc_28BA6
loc_28BA2:
                neg.b   Obj_Control_Var_0C(A0)                           ; $0038
loc_28BA6:
                rts
;-------------------------------------------------------------------------------                
Load_Rexon_Head_Obj                                            ; loc_28BA8
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                bclr    #$00, Obj_Flags(A0)                              ; $0001
                tst.w   D0
                beq.s   loc_28BBE
                bset    #$00, Obj_Flags(A0)                              ; $0001
loc_28BBE:
                bsr     loc_27F78
                lea     Obj_Control_Var_00(A0), A2                       ; $002C
                moveq   #$00, D1
                moveq   #$04, D6
loc_28BCA:
                bsr     Jmp_10_To_SingleObjectLoad             ; loc_2A79A
                bne.s   loc_28BFE
                move.b  #$97, Obj_Id(A1)                                 ; $0000
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                move.b  Obj_Subtype(A0), Obj_Subtype(A1)          ; $0028, $0028
                move.w  A0, Obj_Control_Var_00(A1)                       ; $002C
                move.w  A1, (A2)+
                move.w  D1, Obj_Control_Var_02(A1)                       ; $002E
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addq.w  #$02, D1
                dbra    D6, loc_28BCA
loc_28BFE:
                rts
loc_28C00:
                move.w  Obj_Control_Var_04(A0), D0                       ; $0030
                beq.s   loc_28C4C
                move.w  D0, A1
                lea     loc_28CA4(PC), A2
                moveq   #$00, D0
                move.b  Obj_Player_Status(A0), D0                        ; $002B
                andi.b  #$7F, D0
                move.w  D0, D1
                andi.w  #$001F, D0
                add.w   D0, D0
                move.b  $00(A2, D0), D2
                ext.w   D2
                move.b  $01(A2, D0), D3
                ext.w   D3
                lsr.w   #$04, D1
                andi.w  #$0006, D1
                move.w  loc_28C4E(PC, D1), D1
                jsr     loc_28C4E(PC, D1)
                move.w  Obj_X(A0), D4                                    ; $0008
                add.w   D2, D4
                move.w  D4, Obj_X(A1)                                    ; $0008
                move.b  $000D(A0), D5
                add.b   D3, D5
                move.b  D5, $000D(A1)
loc_28C4C:
                rts
;-------------------------------------------------------------------------------
loc_28C4E:
                dc.w    loc_28C56-loc_28C4E
                dc.w    loc_28C58-loc_28C4E
                dc.w    loc_28C5E-loc_28C4E
                dc.w    loc_28C64-loc_28C4E       
;-------------------------------------------------------------------------------
loc_28C56:
                rts  
;-------------------------------------------------------------------------------
loc_28C58:
                exg.l   D2, D3
                neg.w   D3
                rts    
;-------------------------------------------------------------------------------
loc_28C5E:
                neg.w   D2
                neg.w   D3
                rts   
;-------------------------------------------------------------------------------
loc_28C64:
                exg.l   D2, D3
                neg.w   D2
                rts               
;-------------------------------------------------------------------------------
Obj96_Ptr:
                dc.l    Rexon_Mappings
                dc.w    $637E
                dc.b    $04, $04, $10, $00         
;-------------------------------------------------------------------------------  
Rexon_Mappings:
		include 'mappings/sprite/obj96.asm'
;-------------------------------------------------------------------------------  
loc_28CA4:
                dc.b    $0F, $00, $0F, $FF, $0F, $FF, $0F, $FE
                dc.b    $0F, $FD, $0F, $FC, $0E, $FC, $0E, $FB
                dc.b    $0E, $FA, $0E, $FA, $0D, $F9, $0D, $F8
                dc.b    $0C, $F8, $0C, $F7, $0C, $F6, $0B, $F6
                dc.b    $0B, $F5, $0A, $F5, $0A, $F4, $09, $F4
                dc.b    $08, $F4, $08, $F3, $07, $F3, $06, $F2
                dc.b    $06, $F2, $05, $F2, $04, $F2, $04, $F1
                dc.b    $03, $F1, $02, $F1, $01, $F1, $01, $F1
;===============================================================================
; Object 0x97 - Rexon Enemy's head from Hill Top
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x98 - Projectiles used by enemies. e.g. Coconuts thrown by Coconuts
; [ Begin ]
;===============================================================================
; loc_28CE4:
Obj98_Enemies_Weapons:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_28CF2(PC, D0), D1
                jmp     loc_28CF2(PC, D1)        
;-------------------------------------------------------------------------------  
loc_28CF2:
                dc.w    loc_28CF6-loc_28CF2
                dc.w    loc_28CFA-loc_28CF2            
;-------------------------------------------------------------------------------
loc_28CF6:
                bra     Object_Settings                        ; loc_27EA4 
;-------------------------------------------------------------------------------
loc_28CFA:
                tst.b   Obj_Flags(A0)                                    ; $0001
                bpl     Jmp_23_To_DeleteObject                 ; loc_2A794
                move.l  Obj_Timer(A0), A1                                ; $002A
                jsr     (A1)
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------  
Nebula_Weapon:                                                 ; loc_28D0C
                bchg    #06, Obj_Art_VRAM(A0)                            ; $0002
                bra     Jmp_0E_To_ObjectFall                   ; loc_2A7BE     
;-------------------------------------------------------------------------------
Turtloid_Weapon:                                               ; loc_28D16
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Turtloid_Weapon_Animate_Data), A1     ; loc_2912E
                bra     Jmp_17_To_AnimateSprite                ; loc_2A7AC  
;-------------------------------------------------------------------------------   
Coconuts_Weapon:                                               ; loc_28D24
                addi.w  #$0020, Obj_Speed_Y(A0)                          ; $0012
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                rts             
;-------------------------------------------------------------------------------
Clucker_Weapon:                                                ; loc_28D30
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Clucker_Weapon_Animate_Data), A1      ; loc_2A610
                bra     Jmp_17_To_AnimateSprite                ; loc_2A7AC    
;-------------------------------------------------------------------------------                
Spiny_Weapon:                                                  ; loc_28D3E
                addi.w  #$0020, Obj_Speed_Y(A0)                          ; $0012
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Spiny_Weapon_Animate_Data), A1        ; loc_2A1DE
                bra     Jmp_17_To_AnimateSprite                ; loc_2A7AC  
;-------------------------------------------------------------------------------  
Rexon_Fireball_Map_Ptr:                                        ; loc_28D52
                dc.l    Rexon_Mappings                         ; loc_28C74
                dc.w    $237E
                dc.b    $84, $04, $04, $98
;------------------------------------------------------------------------------- 
Nebula_Bomb_Map_Ptr:                                           ; loc_28D5C
                dc.l    Nebula_Mappings                        ; loc_28E6C
                dc.w    $243C
                dc.b    $84, $04, $08, $8B                          
;-------------------------------------------------------------------------------  
Turtloid_Bullet_Map_Ptr:                                       ; loc_28D66
                dc.l    Turtloid_Mappings                      ; loc_29140
                dc.w    $2500
                dc.b    $84, $04, $04, $98      
;-------------------------------------------------------------------------------
Coconuts_Coconut_Map_Ptr:                                      ; loc_28D70
                dc.l    Coconuts_Mappings                      ; loc_29374
                dc.w    $03EE
                dc.b    $84, $04, $08, $8B  
;-------------------------------------------------------------------------------
Asteron_Spikes_Map_Ptr:                                        ; loc_28D7A
                dc.l    Asteron_Mappings                       ; loc_29FB0
                dc.w    $8368
                dc.b    $84, $05, $04, $98 
;-------------------------------------------------------------------------------
Spiny_Shot_Map_Ptr:                                            ; loc_28D84
                dc.l    Spiny_Mappings                         ; loc_2A1E4
                dc.w    $252D
                dc.b    $84, $05, $04, $98  
;-------------------------------------------------------------------------------
Grabber_Unk_Map_Ptr:                                           ; loc_28D8E
                dc.l    Grabber_Mappings                       ; loc_2A374
                dc.w    $2500
                dc.b    $84, $04, $04, $98  
;-------------------------------------------------------------------------------
Clucker_Bullet_Map_Ptr:                                        ; loc_28D98
                dc.l    Clucker_Mappings                       ; loc_2A61C
                dc.w    $23EE
                dc.b    $84, $05, $04, $98
;===============================================================================
; Object 0x98 - Projectiles used by enemies. e.g. Coconuts thrown by Coconuts.
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x99 - Nebula Enemy from Sky Chase
; [ Begin ]
;===============================================================================
; loc_28DA2:
Obj99_Nebula:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_28DB0(PC, D0), D1
                jmp     loc_28DB0(PC, D1)
;-------------------------------------------------------------------------------
loc_28DB0:
                dc.w    loc_28DB6-loc_28DB0
                dc.w    loc_28DC2-loc_28DB0
                dc.w    loc_28DF2-loc_28DB0         
;-------------------------------------------------------------------------------
loc_28DB6:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$FFC0, Obj_Speed(A0)                            ; $0010
                rts       
;-------------------------------------------------------------------------------
loc_28DC2:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                tst.w   D0
                bne.s   loc_28DD4
                cmpi.w  #$0080, D0
                bcc.s   loc_28DD4
                bsr     loc_28DE6
loc_28DD4:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Nebula_Animate_Data), A1              ; loc_28E64
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_28DE6:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$FF40, Obj_Speed_Y(A0)                          ; $0012
                rts    
;-------------------------------------------------------------------------------
loc_28DF2:
                tst.b   Obj_Timer(A0)                                    ; $002A
                bne.s   loc_28E0A
                bsr     Object_Check_Player_Position           ; loc_27F1C
                addi.w  #$0008, D2
                cmpi.w  #$0010, D2
                bcc.s   loc_28E0A
                bsr     loc_28E22
loc_28E0A:
                addi.w  #$0001, Obj_Speed_Y(A0)                          ; $0012
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Nebula_Animate_Data), A1              ; loc_28E64
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_28E22:
                st      Obj_Timer(A0)                                    ; $002A
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_28E58
                move.b  #$98, Obj_Id(A1)                                 ; $0000
                move.b  #$04, Obj_Map_Id(A1)                             ; $001A
                move.b  #$14, Obj_Subtype(A1)                            ; $0028
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$0018, Obj_Y(A1)                                ; $000C
                lea     Nebula_Weapon(PC), A2                  ; loc_28D0C
                move.l  A2, Obj_Timer(A1)                                ; $002A
loc_28E58:
                rts       
;-------------------------------------------------------------------------------
Obj99_Ptr:                                                  ; loc_28E5A
                dc.l    Nebula_Mappings                        ; loc_28E6C
                dc.w    $243C
                dc.b    $04, $04, $10, $06                           
;-------------------------------------------------------------------------------  
Nebula_Animate_Data:                                           ; loc_28E64
                dc.w    loc_28E66-Nebula_Animate_Data
loc_28E66:
                dc.b    $03, $00, $01, $02, $03, $FF     
;-------------------------------------------------------------------------------  
Nebula_Mappings:
		include 'mappings/sprite/obj99.asm'  
;===============================================================================
; Object 0x99 - Nebula Enemy from Sky Chase
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x9A - Turtloid Enemy from Sky Chase
; [ Begin ]
;===============================================================================   
; loc_28F08:
Obj9A_Turtloid:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_28F16(PC, D0), D1
                jmp     loc_28F16(PC, D1)
;-------------------------------------------------------------------------------
loc_28F16:
                dc.w    loc_28F1A-loc_28F16
                dc.w    loc_28F28-loc_28F16         
;-------------------------------------------------------------------------------
loc_28F1A:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$FF80, Obj_Speed(A0)                            ; $0010
                bra     Load_Turtloid_Sub_Obj9B             ; loc_29028     
;-------------------------------------------------------------------------------
loc_28F28:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_28F3E(PC, D0), D1
                jsr     loc_28F3E(PC, D1)
                bsr     loc_28F48
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_28F3E:
                dc.w    loc_28F62-loc_28F3E
                dc.w    loc_28F7E-loc_28F3E
                dc.w    loc_28FA8-loc_28F3E
                dc.w    loc_28FC8-loc_28F3E
                dc.w    loc_28FE2-loc_28F3E         
;-------------------------------------------------------------------------------
loc_28F48:
                move.w  Obj_X(A0), -(A7)                                 ; $0008
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                move.w  #$0023, D1
                move.w  #$0008, D2
                move.w  #$000E, D3
                move.w  (A7)+, D4
                bra     Jmp_16_To_SolidObject                  ; loc_2A7B8 
;-------------------------------------------------------------------------------
loc_28F62:
                cmpi.w  #$0240, Obj_X(A0)                                ; $0008
                bcc     Return_to_sub_routine                  ; loc_29026
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                lea     (Turtloid_Animate_Data), A1            ; loc_29134
                move.l  A1, Obj_Control_Var_02(A0)                       ; $002E
                bra     Load_Enemy_Boost_Sub_Obj9C          ; loc_2909C                     
;-------------------------------------------------------------------------------
loc_28F7E:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                tst.w   D0
                bmi     Return_to_sub_routine                  ; loc_29026
                cmpi.w  #$0080, D2
                bcc     Return_to_sub_routine                  ; loc_29026
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$0000, Obj_Speed(A0)                            ; $0010
                move.b  #$04, Obj_Timer(A0)                              ; $002A
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                rts               
;-------------------------------------------------------------------------------
loc_28FA8:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bpl     Return_to_sub_routine                  ; loc_29026
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$08, Obj_Timer(A0)                              ; $002A
                move.w  Obj_Control_Var_00(A0), A1                       ; $002C
                move.b  #$03, Obj_Map_Id(A1)                             ; $001A
                bra     Load_Turtloid_Weapon                   ; loc_290D0   
;-------------------------------------------------------------------------------
loc_28FC8:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bpl.s   loc_28FE0
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$FF80, Obj_Speed(A0)                            ; $0010
                clr.b   Obj_Map_Id(A0)                                   ; $001A
                move.w  Obj_Control_Var_00(A0), A1                       ; $002C
loc_28FE0:
                rts   
;-------------------------------------------------------------------------------
loc_28FE2:
                rts
;===============================================================================
; Object 0x9A - Turtloid Enemy from Sky Chase
; [ End ] 
;===============================================================================

;===============================================================================
; Object 0x9B - Turtloid rider Enemy from Sky Chase
; [ Begin ]	Object used by 0x9A
;===============================================================================
; loc_28FE4:
Obj9B_Turtloid_Rider:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_28FF2(PC, D0), D1
                jmp     loc_28FF2(PC, D1)
;-------------------------------------------------------------------------------
loc_28FF2:
                dc.w    loc_28FF6-loc_28FF2
                dc.w    loc_28FFA-loc_28FF2       
;-------------------------------------------------------------------------------
loc_28FF6:
                bra     Object_Settings                        ; loc_27EA4 
;-------------------------------------------------------------------------------
loc_28FFA:
                move.w  Obj_Timer(A0), A1                                ; $002A
                lea     loc_2900A(PC), A2
                bsr     loc_2900E
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;------------------------------------------------------------------------------- 
loc_2900A:
                dc.w    $0004, $FFE8                                          
;-------------------------------------------------------------------------------
loc_2900E:
                move.l  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.l  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.w  (A2)+, D0
                add.w   D0, Obj_X(A0)                                    ; $0008
                move.w  (A2)+, D0
                add.w   D0, Obj_Y(A0)                                    ; $000C
;-------------------------------------------------------------------------------                
Return_to_sub_routine: ; Usado por vários Objects              ; loc_29026
                rts                                                              
;-------------------------------------------------------------------------------  
Load_Turtloid_Sub_Obj9B:                                    ; loc_29028
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_2905E
                move.b  #$9B, Obj_Id(A1)                                 ; $0000
                move.b  #$02, Obj_Map_Id(A1)                             ; $001A
                move.b  #$18, Obj_Subtype(A1)                            ; $0028
                move.w  A0, Obj_Timer(A1)                                ; $002A
                move.w  A1, Obj_Control_Var_00(A0)                       ; $002C
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                addq.w  #$04, Obj_X(A1)                                  ; $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                subi.w  #$0018, Obj_Y(A1)                                ; $000C
loc_2905E:
                rts 
;===============================================================================
; Object 0x9B - Turtloid rider Enemy from Sky Chase
; [ End ]	Object used by 0x9A
;===============================================================================

;===============================================================================
; Object 0x9C - Fire from the turbine used by enemies Tutloid and Balkiry
; [ Begin ]	Object used by 0x9A and 0xAC
;===============================================================================
; loc_29060:
Obj9C_Enemy_Boost:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2906E(PC, D0), D1
                jmp     loc_2906E(PC, D1)
;-------------------------------------------------------------------------------
loc_2906E:
                dc.w    loc_29072-loc_2906E
                dc.w    loc_29076-loc_2906E        
;-------------------------------------------------------------------------------
loc_29072:
                bra     Object_Settings                        ; loc_27EA4 
;-------------------------------------------------------------------------------
loc_29076:
                move.w  Obj_Timer(A0), A1                                ; $002A
                move.b  Obj_Control_Var_06(A0), D0                       ; $0032
                cmp.b   (A1), D0
                bne     Jmp_23_To_DeleteObject                 ; loc_2A794
                move.l  Obj_X(A1), Obj_X(A0)                      ; $0008, $0008
                move.l  Obj_Y(A1), Obj_Y(A0)                      ; $000C, $000C
                move.l  Obj_Control_Var_02(A0), A1                       ; $002E
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
;-------------------------------------------------------------------------------
Load_Enemy_Boost_Sub_Obj9C:                                 ; loc_2909C
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_290CE
                move.b  #$9C, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Map_Id(A1)                             ; $001A
                move.b  #$1A, Obj_Subtype(A1)                            ; $0028
                move.w  A0, Obj_Timer(A1)                                ; $002A
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.l  Obj_Control_Var_02(A0), Obj_Control_Var_02(A1); $002E, $002E
                move.b  (A0), Obj_Control_Var_06(A1)                     ; $0032
loc_290CE:
                rts
;-------------------------------------------------------------------------------
Load_Turtloid_Weapon:                                          ; loc_290D0
                bsr     Jmp_10_To_SingleObjectLoad             ; loc_2A79A
                bne.s   loc_2910E
                move.b  #$98, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Map_Id(A1)                             ; $001A
                move.b  #$1C, Obj_Subtype(A1)                            ; $0028
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                subi.w  #$0014, Obj_X(A1)                                ; $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$000A, Obj_Y(A1)                                ; $000C
                move.w  #$FF00, Obj_Speed(A1)                            ; $0010
                lea     Turtloid_Weapon(PC), A2                ; loc_28D16
                move.l  A2, Obj_Timer(A1)                                ; $002A
loc_2910E:
                rts            
;-------------------------------------------------------------------------------  
Obj9A_Ptr:                                                  ; loc_29110
                dc.l    Turtloid_Mappings                      ; loc_29140
                dc.w    $2500
                dc.b    $04, $05, $18, $00
;-------------------------------------------------------------------------------  
Obj9B_Ptr:                                                  ; loc_2911A
                dc.l    Turtloid_Mappings                      ; loc_29140
                dc.w    $2500
                dc.b    $04, $04, $0C, $1A  
;-------------------------------------------------------------------------------  
Obj9C_Ptr:                                                  ; loc_29124
                dc.l    Turtloid_Mappings                      ; loc_29140
                dc.w    $2500
                dc.b    $04, $05, $08, $00     
;-------------------------------------------------------------------------------
Turtloid_Weapon_Animate_Data:                                  ; loc_2912E
                dc.w    loc_29130-Turtloid_Weapon_Animate_Data
loc_29130:
                dc.b    $01, $04, $05, $FF
;-------------------------------------------------------------------------------
Turtloid_Animate_Data:                                         ; loc_29134
                dc.w    loc_29136-Turtloid_Animate_Data
loc_29136:
                dc.b    $01, $06, $07, $FF    
;-------------------------------------------------------------------------------
Enemy_Boost_Animate_Data:                                      ; loc_2913A
                dc.w    loc_2913C-Enemy_Boost_Animate_Data
loc_2913C:
                dc.b    $01, $08, $09, $FF                      
;-------------------------------------------------------------------------------
Turtloid_Mappings:
		include 'mappings/sprite/obj9C.asm'
;===============================================================================
; Object 0x9C - Fire from the turbine used by enemies Tutloid and Balkiry
; [ End ]	Object used by 0x9A and 0xAC
;===============================================================================

;===============================================================================
; Object 0x9D - Coconuts Enemy from Green Hill
; [ Begin ]
;=============================================================================== 
; loc_291D8:
Obj9D_Coconuts:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_291E6(PC, D0), D1
                jmp     loc_291E6(PC, D1)
;-------------------------------------------------------------------------------
loc_291E6:
                dc.w    loc_291EE-loc_291E6
                dc.w    loc_291FA-loc_291E6
                dc.w    loc_2928C-loc_291E6
                dc.w    loc_292B2-loc_291E6       
;-------------------------------------------------------------------------------
loc_291EE:
                bsr     Object_Settings                        ; loc_27EA4
                move.b  #$10, Obj_Timer(A0)                              ; $002A
                rts  
;-------------------------------------------------------------------------------
loc_291FA:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                bclr    #$00, Obj_Flags(A0)                              ; $0001
                bclr    #$00, Obj_Status(A0)                             ; $0022
                tst.w   D0
                beq.s   loc_2921A
                bset    #$00, Obj_Flags(A0)                              ; $0001
                bset    #$00, Obj_Status(A0)                             ; $0022
loc_2921A:
                addi.w  #$0060, D2
                cmpi.w  #$00C0, D2
                bcc.s   loc_2922E
                tst.b   Obj_Control_Var_02(A0)                           ; $002E
                beq.s   loc_29244
                subq.b  #$01, Obj_Control_Var_02(A0)                     ; $002E
loc_2922E:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_29238
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_29238:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     loc_29260
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_29244:
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                move.b  #$01, Obj_Map_Id(A0)                             ; $001A
                move.b  #$08, Obj_Timer(A0)                              ; $002A
                move.b  #$20, Obj_Control_Var_02(A0)                     ; $002E
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_29260:
                move.w  Obj_Control_Var_00(A0), D0                       ; $002C
                cmpi.w  #$000C, D0
                bcs.s   loc_2926C
                moveq   #$00, D0
loc_2926C:
                lea     loc_29280(PC, D0), A1
                addq.w  #$02, D0
                move.w  D0, Obj_Control_Var_00(A0)                       ; $002C
                move.b  (A1)+, Obj_Speed_Y(A0)                           ; $0012
                move.b  (A1)+, Obj_Timer(A0)                             ; $002A
                rts    
;------------------------------------------------------------------------------- 
loc_29280:
                dc.b    $FF, $20, $01, $18, $FF, $10, $01, $28
                dc.b    $FF, $20, $01, $10      
;-------------------------------------------------------------------------------   
loc_2928C:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                beq.s   loc_292A4
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Coconuts_AnimateData), A1             ; loc_29366
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_292A4:
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$10, Obj_Timer(A0)                              ; $002A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0    
;-------------------------------------------------------------------------------
loc_292B2:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_292C4(PC, D0), D1
                jsr     loc_292C4(PC, D1)
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------   
loc_292C4:
                dc.w    loc_292C8-loc_292C4
                dc.w    loc_292E4-loc_292C4          
;-------------------------------------------------------------------------------   
loc_292C8:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_292D0
                rts
loc_292D0:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$08, Obj_Timer(A0)                              ; $002A
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
                bra     loc_29300        
;-------------------------------------------------------------------------------
loc_292E4:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_292EC
                rts
loc_292EC:
                clr.b   Obj_Routine_2(A0)                                ; $0025
                move.b  #$04, Obj_Routine(A0)                            ; $0024
                move.b  #$08, Obj_Timer(A0)                              ; $002A
                bra     loc_29260
loc_29300:
                bsr     Jmp_10_To_SingleObjectLoad             ; loc_2A79A
                bne.s   loc_29352
                move.b  #$98, Obj_Id(A1)                                 ; $0000
                move.b  #$03, Obj_Map_Id(A1)                             ; $001A
                move.b  #$20, Obj_Subtype(A1)                            ; $0028
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$FFF3, Obj_Y(A1)                                ; $000C
                ori.b   #$80, Obj_Col_Flags(A1)                          ; $0020
                moveq   #$00, D0
                btst    #$00, Obj_Flags(A0)                              ; $0001
                bne.s   loc_2933C
                moveq   #$04, D0
loc_2933C:
                lea     loc_29354(PC, D0), A2
                move.w  (A2)+, D0
                add.w   D0, Obj_X(A1)                                    ; $0008
                move.w  (A2)+, Obj_Speed(A1)                             ; $0010
                lea     Coconuts_Weapon(PC), A2                ; loc_28D24
                move.l  A2, Obj_Timer(A1)                                ; $002A
loc_29352:
                rts    
;-------------------------------------------------------------------------------  
loc_29354:
                dc.w    $FFF5, $0100, $000B, $FF00         
;------------------------------------------------------------------------------- 
Obj9D_Ptr:                                                  ; loc_2935C
                dc.l    Coconuts_Mappings                      ; loc_29374
                dc.w    $03EE
                dc.b    $04, $05, $0C, $09     
;-------------------------------------------------------------------------------                            
Coconuts_AnimateData:                                          ; loc_29366
                dc.w    loc_2936A-Coconuts_AnimateData
                dc.w    loc_2936E-Coconuts_AnimateData
loc_2936A:
                dc.b    $05, $00, $01, $FF
loc_2936E:
                dc.b    $09, $01, $02, $01, $FF, $00
;------------------------------------------------------------------------------- 
Coconuts_Mappings:
		include 'mappings/sprite/obj9D.asm'
;===============================================================================
; Object 0x9D - Coconuts Enemy from Green Hill
; [ End ]
;===============================================================================		

;===============================================================================
; Object 0x9E - Crawlton Enemy from Dust Hill
; [ Begin ]
;===============================================================================
; loc_293F4:
Obj9E_Crawlton:
                moveq   #$00, D0
                move.b  Obj_Control_Var_0F(A0), D0                       ; $003B
                move.w  loc_29402(PC, D0), D1
                jmp     loc_29402(PC, D1)
;-------------------------------------------------------------------------------
loc_29402:
                dc.w    loc_2940E-loc_29402
                dc.w    loc_2941A-loc_29402
                dc.w    loc_29470-loc_29402
                dc.w    loc_2948E-loc_29402
                dc.w    loc_294AC-loc_29402
                dc.w    loc_294D4-loc_29402  
;-------------------------------------------------------------------------------
loc_2940E:
                bsr     Object_Settings                        ; loc_27EA4
                addq.b  #$02, Obj_Control_Var_0F(A0)                     ; $003B
                bra     loc_29526   
;-------------------------------------------------------------------------------
loc_2941A:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                move.w  D2, D4
                addi.w  #$0080, D2
                cmpi.w  #$0100, D2
                bcc.s   loc_29436
                move.w  D3, D5
                addi.w  #$0080, D3
                cmpi.w  #$0100, D3
                bcs.s   loc_2943A
loc_29436:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2943A:
                addq.b  #$02, Obj_Control_Var_0F(A0)                     ; $003B
                move.b  #$10, Obj_Control_Var_0E(A0)                     ; $003A
                bclr    #$00, Obj_Flags(A0)                              ; $0001
                tst.w   D0
                beq.s   loc_29454
                bset    #$00, Obj_Flags(A0)                              ; $0001
loc_29454:
                neg.w   D4
                lsl.w   #$03, D4
                andi.w  #$FF00, D4
                move.w  D4, Obj_Speed(A0)                                ; $0010
                neg.w   D5
                lsl.w   #$03, D5
                andi.w  #$FF00, D5
                move.w  D5, Obj_Speed_Y(A0)                              ; $0012
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_29470:
                subq.b  #$01, Obj_Control_Var_0E(A0)                     ; $003A
                bmi.s   loc_2947A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2947A:
                addq.b  #$02, Obj_Control_Var_0F(A0)                     ; $003B
                move.b  #$08, Obj_Control_Var_0D(A0)                     ; $0039
                move.b  #$1C, Obj_Control_Var_0E(A0)                     ; $003A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------
loc_2948E:
                subq.b  #$01, Obj_Control_Var_0E(A0)                     ; $003A
                beq.s   loc_2949C
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_2949C:
                move.b  Obj_Control_Var_0D(A0), Obj_Control_Var_0F(A0); $0039, $003B
                move.b  #$20, Obj_Control_Var_0E(A0)                     ; $003A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_294AC:
                subq.b  #$01, Obj_Control_Var_0E(A0)                     ; $003A
                beq.s   loc_294B6
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_294B6:
                move.b  #$06, Obj_Control_Var_0F(A0)                     ; $003B
                move.b  #$02, Obj_Control_Var_0D(A0)                     ; $0039
                move.b  #$1C, Obj_Control_Var_0E(A0)                     ; $003A
                neg.w   Obj_Speed(A0)                                    ; $0010
                neg.w   Obj_Speed_Y(A0)                                  ; $0012
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_294D4:
                move.w  Obj_Control_Var_12(A0), A1                       ; $003E
                cmpi.b  #$9E, (A1)
                bne     Jmp_23_To_DeleteObject                 ; loc_2A794
                cmpi.b  #$06, Obj_Control_Var_0F(A1)                     ; $003B
                bne.s   loc_2951E
                move.w  Obj_Speed(A1), D2                                ; $0010
                asr.w   #$08, D2
                move.w  Obj_Speed_Y(A1), D3                              ; $0012
                asr.w   #$08, D3
                lea     Obj_Speed(A0), A2                                ; $0010
                move.b  Obj_Control_Var_0E(A1), D0                       ; $003A
                moveq   #$18, D1
                moveq   #$06, D6
loc_29500:
                move.w  (A2), D4
                move.w  $0002(A2), D5 
                cmp.b   D1, D0
                bcc.s   loc_2950E
                add.w   D2, D4
                add.w   D3, D5
loc_2950E:
                move.w  D4, (A2)+
                move.w  D5, (A2)+
                subi.b  #$04, D1
                bcs.s   loc_2951E
                addq.w  #$02, A2
                dbra    D6, loc_29500
loc_2951E:
                move.w  #$0280, D0
                bra     Jmp_03_To_DisplaySprite_Param          ; loc_2A788
loc_29526:
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_2958C
                move.b  #$9E, Obj_Id(A1)                                 ; $0000
                move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
                bset    #$06, Obj_Flags(A1)                              ; $0001
                move.l  Obj_Map(A0), Obj_Map(A1)                  ; $0004, $0004
                move.w  Obj_Art_VRAM(A0), Obj_Art_VRAM(A1)        ; $0002, $0002
                move.b  #$0A, Obj_Control_Var_0F(A1)                     ; $003B
                move.b  #$00, Obj_Boss_Ani_Map(A1)                       ; $000B
                move.b  (loc_040).w, $000E(A1)
                move.b  #$07, Obj_Ani_Boss_Cnt(A1)                       ; $000F
                move.w  A0, Obj_Control_Var_12(A1)                       ; $003E
                move.w  Obj_X(A0), D2                                    ; $0008
                move.w  D2, Obj_X(A1)                                    ; $0008
                move.w  Obj_Y(A0), D3                                    ; $000C
                move.w  D3, Obj_Y(A1)                                    ; $000C
                lea     Obj_Speed(A1), A2                                ; $0010
                moveq   #$06, D6
loc_2957C:
                move.w  D2, (A2)+
                move.w  D3, (A2)+
                move.w  #$0002, (A2)+
                addi.w  #$0010, D1
                dbra    D6, loc_2957C
loc_2958C:
                rts           
;-------------------------------------------------------------------------------
Obj9E_Ptr:                                                  ; loc_2958E
                dc.l    Crawlton_Mappings                      ; loc_29598
                dc.w    $23C0
                dc.b    $04, $04, $80, $0B
;------------------------------------------------------------------------------- 
Crawlton_Mappings:
		include 'mappings/sprite/obj9E.asm'                 
;===============================================================================
; Object 0x9E - Crawlton Enemy from Dust Hill
; [ End ]
;===============================================================================

;===============================================================================
; Object 0x9F - Shellcracker Enemy from Metropolis
; [ Begin ]
;===============================================================================
; loc_295B2:
Obj9F_Shellcracker:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_295C0(PC, D0), D1
                jmp     loc_295C0(PC, D1)
;-------------------------------------------------------------------------------
loc_295C0:
                dc.w    loc_295C8-loc_295C0
                dc.w    loc_295E6-loc_295C0
                dc.w    loc_29654-loc_295C0
                dc.w    loc_2967E-loc_295C0         
;-------------------------------------------------------------------------------
loc_295C8:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$FFC0, Obj_Speed(A0)                            ; $0010
                move.b  #$0C, Obj_Height_2(A0)                           ; $0016
                move.b  #$18, Obj_Width_2(A0)                            ; $0017
                move.w  #$0140, Obj_Timer(A0)                            ; $002A
                rts    
;-------------------------------------------------------------------------------
loc_295E6:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                tst.w   D0
                bne.s   loc_295F8
                addi.w  #$0060, D2
                cmpi.w  #$00C0, D2
                bcs.s   loc_2963E
loc_295F8:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                jsr     (ObjHitFloor)                          ; loc_14204
                cmpi.w  #$FFF8, D1
                blt.s   loc_29626
                cmpi.w  #$000C, D1
                bge.s   loc_29626
                add.w   D1, Obj_Y(A0)                                    ; $000C
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_2962A
                lea     (Shellcracker_Animate_Data), A1        ; loc_29856
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_29626:
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_2962A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.w  #$003B, Obj_Timer(A0)                            ; $002A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2963E:
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                move.b  #$00, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0008, Obj_Timer(A0)                            ; $002A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0   
;-------------------------------------------------------------------------------
loc_29654:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                tst.w   D0
                bne.s   loc_29666
                addi.w  #$0060, D2
                cmpi.w  #$00C0, D2
                bcs.s   loc_2963E
loc_29666:
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_29670
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_29670:
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0140, Obj_Timer(A0)                            ; $002A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------
loc_2967E:
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_29690(PC, D0), D1
                jsr     loc_29690(PC, D1)
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_29690:
                dc.w    loc_29696-loc_29690
                dc.w    loc_296AC-loc_29690
                dc.w    loc_296C0-loc_29690     
;-------------------------------------------------------------------------------
loc_29696:
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_2969E
                rts
loc_2969E:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$03, Obj_Map_Id(A0)                             ; $001A
                bra     Load_Sheelcracker_Craw_Obj             ; loc_297F8         
;-------------------------------------------------------------------------------
loc_296AC:
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                bne.s   loc_296B4
                rts
loc_296B4:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  #$0020, Obj_Timer(A0)                            ; $002A
                rts 
;-------------------------------------------------------------------------------
loc_296C0:
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_296C8
                rts
loc_296C8:
                clr.b   Obj_Routine_2(A0)                                ; $0025
                clr.b   Obj_Control_Var_00(A0)                           ; $002C
                move.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0140, Obj_Timer(A0)                            ; $002A
                rts
;===============================================================================
; Object 0x9F - Shellcracker Enemy from Metropolis
; [ End ]
;===============================================================================

;===============================================================================
; Object 0xA0 - Object 0x9F sub-object - Shellcracker's claw from Metropolis
; [ Begin ]
;===============================================================================
; loc_296DE:
ObjA0_Shellcracker_Craw:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_296EC(PC, D0), D1
                jmp     loc_296EC(PC, D1)
;-------------------------------------------------------------------------------
loc_296EC:
                dc.w    loc_296F2-loc_296EC
                dc.w    loc_2971E-loc_296EC
                dc.w    loc_297E6-loc_296EC      
;-------------------------------------------------------------------------------
loc_296F2:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  Obj_Control_Var_00(A0), D0                       ; $002C
                beq.s   loc_2970A
                move.b  #$04, Obj_Map_Id(A0)                             ; $001A
                addq.w  #$06, Obj_X(A0)                                  ; $0008
                addq.w  #$06, Obj_Y(A0)                                  ; $000C
loc_2970A:
                lsr.w   #$01, D0
                move.b  loc_29716(PC, D0), Obj_Control_Var_02(A0)  ; $002E
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0    
;-------------------------------------------------------------------------------  
loc_29716:
                dc.b    $00, $03, $05, $07, $09, $0B, $0D, $0F             
;-------------------------------------------------------------------------------
loc_2971E:
                move.w  Obj_Timer(A0), A1                                ; $002A
                cmpi.b  #$9F, (A1)
                bne.s   loc_29742
                moveq   #$00, D0
                move.b  Obj_Routine_2(A0), D0                            ; $0025
                move.w  loc_2973A(PC, D0), D1
                jsr     loc_2973A(PC, D1)
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_2973A:
                dc.w    loc_29752-loc_2973A
                dc.w    loc_29790-loc_2973A
                dc.w    loc_297AA-loc_2973A
                dc.w    loc_297BE-loc_2973A           
;-------------------------------------------------------------------------------
loc_29742:
                move.b  #$04, Obj_Routine(A0)                            ; $0024
                move.w  #$0100, Obj_Control_Var_02(A0)                   ; $002E
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0   
;-------------------------------------------------------------------------------
loc_29752:
                subq.b  #$01, Obj_Control_Var_02(A0)                     ; $002E
                beq.s   loc_2975C
                bmi.s   loc_2975C
                rts
loc_2975C:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.w  Obj_Control_Var_00(A0), D0                       ; $002C
                cmpi.w  #$000E, D0
                bcc.s   loc_29780
                move.w  #$FC00, Obj_Speed(A0)                            ; $0010
                lsr.w   #$01, D0
                move.b  loc_29788(PC, D0), D1
                move.b  D1, Obj_Control_Var_02(A0)                       ; $002E
                move.b  D1, Obj_Control_Var_03(A0)                       ; $002F
                rts
loc_29780:
                move.w  #$000B, Obj_Control_Var_02(A0)                   ; $002E
                rts     
;-------------------------------------------------------------------------------  
loc_29788:
                dc.b    $0D, $0C, $0A, $08, $06, $04, $02, $00      
;-------------------------------------------------------------------------------
loc_29790:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                subq.b  #$01, Obj_Control_Var_02(A0)                     ; $002E
                beq.s   loc_2979E
                bmi.s   loc_2979E
                rts
loc_2979E:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                move.b  #$08, Obj_Control_Var_02(A0)                     ; $002E
                rts  
;-------------------------------------------------------------------------------
loc_297AA:
                subq.b  #$01, Obj_Control_Var_02(A0)                     ; $002E
                beq.s   loc_297B4
                bmi.s   loc_297B4
                rts
loc_297B4:
                addq.b  #$02, Obj_Routine_2(A0)                          ; $0025
                neg.w   Obj_Speed(A0)                                    ; $0010
                rts   
;-------------------------------------------------------------------------------
loc_297BE:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                subq.b  #$01, Obj_Control_Var_03(A0)                     ; $002F
                beq.s   loc_297CC
                bmi.s   loc_297CC
                rts
loc_297CC:
                tst.w   Obj_Control_Var_00(A0)                           ; $002C
                bne     Jmp_23_To_DeleteObject                 ; loc_2A794
                move.w  Obj_Timer(A0), A1                                ; $002A
                move.b  #$00, Obj_Map_Id(A1)                             ; $001A
                st      Obj_Control_Var_00(A1)                           ; $002C
                bra     Jmp_23_To_DeleteObject                 ; loc_2A794  
;-------------------------------------------------------------------------------
loc_297E6:
                bsr     Jmp_0E_To_ObjectFall                   ; loc_2A7BE
                subi.w  #$0001, Obj_Control_Var_02(A0)                   ; $002E
                bmi     Jmp_23_To_DeleteObject                 ; loc_2A794
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
;-------------------------------------------------------------------------------                
Load_Sheelcracker_Craw_Obj:                                    ; loc_297F8
                moveq   #$00, D1
                moveq   #$07, D6
loc_297FC:
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_29840
                move.b  #$A0, Obj_Id(A1)                                 ; $0000
                move.b  #$26, Obj_Subtype(A1)                            ; $0028
                move.b  #$05, Obj_Map_Id(A1)                             ; $001A
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.w  A0, Obj_Timer(A1)                                ; $002A
                move.w  D1, Obj_Control_Var_00(A1)                       ; $002C
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                subi.w  #$0014, Obj_X(A1)                                ; $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                subi.w  #$0008, Obj_Y(A1)                                ; $000C
                addq.w  #$02, D1
                dbra    D6, loc_297FC
loc_29840:
                rts 
;-------------------------------------------------------------------------------  
loc_29842:
                dc.l    Shellcracker_Mappings                  ; loc_29866
                dc.w    $030F
                dc.b    $04, $05, $18, $0A
;-------------------------------------------------------------------------------  
loc_2984C:
                dc.l    Shellcracker_Mappings                  ; loc_29866
                dc.w    $030F
                dc.b    $04, $04, $0C, $9A          
;-------------------------------------------------------------------------------
Shellcracker_Animate_Data:                                     ; loc_29856
                dc.w    loc_2985A-Shellcracker_Animate_Data
                dc.w    loc_29860-Shellcracker_Animate_Data
loc_2985A:
                dc.b    $0E, $00, $01, $02, $FF, $00
loc_29860:
                dc.b    $0E, $00, $02, $01, $FF, $00   
;-------------------------------------------------------------------------------
Shellcracker_Mappings:                                         ; loc_29866
                include 'mappings/sprite/obj9F.asm' 
;===============================================================================
; Object 0xA0 - Object 0x9F sub-object - Shellcracker's claw from Metropolis
; [ End ]
;===============================================================================

;===============================================================================
; Object 0xA1 - Slicer Enemy from Metropolis
; [ Begin ]
;===============================================================================
; loc_29906:
ObjA1_Slicer:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_29914(PC, D0), D1
                jmp     loc_29914(PC, D1)
;-------------------------------------------------------------------------------
loc_29914:
                dc.w    loc_2991E-loc_29914
                dc.w    loc_29936-loc_29914
                dc.w    loc_29992-loc_29914
                dc.w    loc_299AE-loc_29914
                dc.w    loc_299CA-loc_29914       
;------------------------------------------------------------------------------- 
loc_2991E:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$FFC0, Obj_Speed(A0)                            ; $0010
                move.b  #$10, Obj_Height_2(A0)                           ; $0016
                move.b  #$10, Obj_Width_2(A0)                            ; $0017
                rts       
;------------------------------------------------------------------------------- 
loc_29936:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                tst.w   D0
                bne.s   loc_29948
                addi.w  #$0080, D2
                cmpi.w  #$0100, D2
                bcs.s   loc_2997E
loc_29948:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                jsr     (ObjHitFloor)                          ; loc_14204
                cmpi.w  #$FFF8, D1
                blt.s   loc_29970
                cmpi.w  #$000C, D1
                bge.s   loc_29970
                add.w   D1, Obj_Y(A0)                                    ; $000C
                lea     (Slicer_Animate_Data), A1              ; loc_29ACA
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_29970:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$3B, Obj_Timer(A0)                              ; $002A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2997E:
                addq.b  #$04, Obj_Routine(A0)                            ; $0024
                move.b  #$03, Obj_Map_Id(A0)                             ; $001A
                move.b  #$08, Obj_Timer(A0)                              ; $002A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0   
;------------------------------------------------------------------------------- 
loc_29992:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_2999C
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2999C:
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                neg.w   Obj_Speed(A0)                                    ; $0010
                bchg    #00, Obj_Status(A0)                              ; $0022
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;------------------------------------------------------------------------------- 
loc_299AE:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_299B8
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_299B8:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$04, Obj_Map_Id(A0)                             ; $001A
                bsr     Load_Slicer_Pincers_Obj                ; loc_29A78
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;------------------------------------------------------------------------------- 
loc_299CA:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0        
;===============================================================================
; Object 0xA1 - Slicer Enemy from Metropolis
; [ End ]
;===============================================================================
;===============================================================================
; Object 0xA2 - Slicer's Pincers from Metropolis
; [ Begin ]
;===============================================================================
; loc_299CE:
ObjA2_Slicer_Pincers:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_299DC(PC, D0), D1
                jmp     loc_299DC(PC, D1)
;-------------------------------------------------------------------------------
loc_299DC:
                dc.w    loc_299E2-loc_299DC
                dc.w    loc_29A10-loc_299DC
                dc.w    loc_29A5E-loc_299DC        
;-------------------------------------------------------------------------------
loc_299E2:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$FE00, Obj_Speed(A0)                            ; $0010
                move.w  #$0200, Obj_Control_Var_02(A0)                   ; $002E
                move.w  Obj_Control_Var_00(A0), D0                       ; $002C
                lea     loc_29A0C(PC, D0), A2
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D0, Obj_X(A0)                                    ; $0008
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D0, Obj_Y(A0)                                    ; $000C
                rts   
;-------------------------------------------------------------------------------
loc_29A0C:
                dc.w    $0600, $F000             
;-------------------------------------------------------------------------------  
loc_29A10:
                subq.w  #$01, Obj_Control_Var_02(A0)                     ; $002E
                bmi.s   loc_29A54
                move.w  Obj_Timer(A0), A1                                ; $002A
                cmpi.b  #$A1, (A1)
                bne.s   loc_29A54
                bsr     Object_Check_Player_Position           ; loc_27F1C
                move.w  loc_29A50(PC, D0), D2
                add.w   D2, Obj_Speed(A0)                                ; $0010
                move.w  loc_29A50(PC, D1), D2
                add.w   D2, Obj_Speed_Y(A0)                              ; $0012
                move.w  #$0200, D0
                move.w  D0, D1
                bsr     loc_27F3E
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Slicer_Pincers_Animate_Data), A1      ; loc_29AD0
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_29A50:
                dc.w    $FFF0, $0010                                      
;-------------------------------------------------------------------------------
loc_29A54:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0080, Obj_Control_Var_02(A0)                   ; $002E  
;-------------------------------------------------------------------------------
loc_29A5E:
                subq.w  #$01, Obj_Control_Var_02(A0)                     ; $002E
                bmi     Jmp_23_To_DeleteObject                 ; loc_2A794
                bsr     Jmp_0E_To_ObjectFall                   ; loc_2A7BE
                lea     (Slicer_Pincers_Animate_Data), A1      ; loc_29AD0
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
;-------------------------------------------------------------------------------                  
Load_Slicer_Pincers_Obj:                                       ; loc_29A78
                moveq   #$00, D1
                moveq   #$01, D6
loc_29A7C:
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_29AB4
                move.b  #$A2, Obj_Id(A1)                                 ; $0000
                move.b  #$2A, Obj_Subtype(A1)                            ; $0028
                move.b  #$05, Obj_Map_Id(A1)                             ; $001A
                move.b  #$04, Obj_Priority(A1)                           ; $0018
                move.w  A0, Obj_Timer(A1)                                ; $002A
                move.w  D1, Obj_Control_Var_00(A1)                       ; $002C
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addq.w  #$02, D1
                dbra    D6, loc_29A7C
loc_29AB4:
                rts     
;-------------------------------------------------------------------------------    
ObjA1_Ptr:                                                  ; loc_29AB6
                dc.l    Slicer_Mappings                        ; loc_29AD8
                dc.w    $243C
                dc.b    $04, $05, $10, $06         
;-------------------------------------------------------------------------------    
ObjA2_Ptr:                                                  ; loc_29AC0
                dc.l    Slicer_Mappings                        ; loc_29AD8
                dc.w    $243C
                dc.b    $04, $04, $10, $9A               
;-------------------------------------------------------------------------------
Slicer_Animate_Data:                                           ; loc_29ACA
                dc.w    loc_29ACC-Slicer_Animate_Data
loc_29ACC:
                dc.b    $13, $00, $02, $FF  
;-------------------------------------------------------------------------------
Slicer_Pincers_Animate_Data:                                   ; loc_29AD0
                dc.w    loc_29AD2-Slicer_Pincers_Animate_Data
loc_29AD2:
                dc.b    $03, $05, $06, $07, $08, $FF       
;------------------------------------------------------------------------------- 
Slicer_Mappings:
		include 'mappings/sprite/objA1_A2.asm'
;===============================================================================
; Object 0xA2 - Slicer's Pincers from Metropolis
; [ End ]
;===============================================================================

;===============================================================================
; Object 0xA3 - Flasher Enemy from Dust Hill
; [ Begin ]
;===============================================================================
; loc_29C34:
ObjA3_Flasher:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_29C42(PC, D0), D1
                jmp     loc_29C42(PC, D1)   
;-------------------------------------------------------------------------------
loc_29C42:
                dc.w    loc_29C50-loc_29C42
                dc.w    loc_29C5C-loc_29C42
                dc.w    loc_29C8A-loc_29C42
                dc.w    loc_29D28-loc_29C42
                dc.w    loc_29D36-loc_29C42
                dc.w    loc_29D52-loc_29C42
                dc.w    loc_29D60-loc_29C42    
;-------------------------------------------------------------------------------  
loc_29C50:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$0040, Obj_Timer(A0)                            ; $002A
                rts     
;-------------------------------------------------------------------------------
loc_29C5C:
                subq.w  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_29C66
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_29C66:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$FF00, Obj_Speed(A0)                            ; $0010
                move.w  #$0040, Obj_Speed_Y(A0)                          ; $0012
                move.w  #$0002, Obj_Control_Var_02(A0)                   ; $002E
                clr.w   Obj_Timer(A0)                                    ; $002A
                move.w  #$0080, Obj_Control_Var_04(A0)                   ; $0030
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0   
;-------------------------------------------------------------------------------
loc_29C8A:
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bmi.s   loc_29CF2
                move.w  Obj_Timer(A0), D0                                ; $002A
                bmi     Jmp_23_To_DeleteObject                 ; loc_2A794
                bclr    #$00, Obj_Flags(A0)                              ; $0001
                bclr    #$00, Obj_Status(A0)                             ; $0022
                tst.w   Obj_Speed(A0)                                    ; $0010
                bmi.s   loc_29CB6
                bset    #$00, Obj_Flags(A0)                              ; $0001
                bset    #$00, Obj_Status(A0)                             ; $0022
loc_29CB6:
                addq.w  #$01, D0
                move.w  D0, Obj_Timer(A0)                                ; $002A
                move.w  Obj_Control_Var_00(A0), D1                       ; $002C
                move.w  loc_29D06(PC, D1), D2
                cmp.w   D2, D0
                bcs.s   loc_29CE2
                addq.w  #$02, D1
                move.w  D1, Obj_Control_Var_00(A0)                       ; $002C
                lea     loc_29D16(PC, D1), A1
                tst.b   (A1)+
                beq.s   loc_29CDA
                neg.w   Obj_Control_Var_02(A0)                           ; $002E
loc_29CDA:
                tst.b   (A1)+
                beq.s   loc_29CE2
                neg.w   Obj_Speed_Y(A0)                                  ; $0012
loc_29CE2:
                move.w  Obj_Control_Var_02(A0), D0                       ; $002E
                add.w   D0, Obj_Speed(A0)                                ; $0010
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_29CF2:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0080, Obj_Control_Var_04(A0)                   ; $0030
                ori.b   #$80, Obj_Col_Flags(A0)                          ; $0020
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0   
;-------------------------------------------------------------------------------
loc_29D06:
                dc.w    $0100, $01A0, $0208, $0285, $0300, $0340, $0390, $0440  
;-------------------------------------------------------------------------------    
loc_29D16:
                dc.b    $F0, $00, $01, $01, $00, $01, $01, $01
                dc.b    $00, $01, $00, $01, $01, $00, $00, $01
                dc.b    $00, $01              
;-------------------------------------------------------------------------------
loc_29D28:
                lea     (Flasher_Animate_Data), A1             ; loc_29D80
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0 
;-------------------------------------------------------------------------------
loc_29D36:
                subq.w  #$01, Obj_Control_Var_04(A0)                     ; $0030
                bmi.s   loc_29D4A
                lea     (Flasher_Animate_Data_01), A1          ; loc_29DA4
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_29D4A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0      
;-------------------------------------------------------------------------------
loc_29D52:
                lea     (Flasher_Animate_Data_02), A1          ; loc_29DAA
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0   
;-------------------------------------------------------------------------------
loc_29D60:
                move.b  #$04, Obj_Routine(A0)                            ; $0024
                move.w  #$0080, Obj_Control_Var_04(A0)                   ; $0030
                andi.b  #$7F, Obj_Col_Flags(A0)                          ; $0020
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0   
;------------------------------------------------------------------------------- 
loc_29D76:
                dc.l    Flasher_Mappings                       ; loc_29DB4
                dc.w    $83A8
                dc.b    $04, $04, $10, $06      
;-------------------------------------------------------------------------------
Flasher_Animate_Data:                                          ; loc_29D80
                dc.w    loc_29D82-Flasher_Animate_Data
loc_29D82:
                dc.b    $01, $00, $01, $00, $00, $00, $00, $00
                dc.b    $01, $00, $00, $00, $01, $00, $00, $01
                dc.b    $00, $01, $00, $01, $00, $01, $00, $01
                dc.b    $00, $01, $00, $01, $00, $02, $03, $04
                dc.b    $05, $FC     
;-------------------------------------------------------------------------------
Flasher_Animate_Data_01:                                       ; loc_29DA4
                dc.w    loc_29DA6-Flasher_Animate_Data_01
loc_29DA6:
                dc.b    $01, $04, $05, $FF              
;-------------------------------------------------------------------------------
Flasher_Animate_Data_02:                                       ; loc_29DAA
                dc.w    loc_29DAC-Flasher_Animate_Data_02
loc_29DAC:
                dc.b    $03, $05, $04, $03, $02, $01, $00, $FC   
;-------------------------------------------------------------------------------
Flasher_Mappings:
		include 'mappings/sprite/objA3.asm'
;===============================================================================
; Object 0xA3 - Flasher Enemy from Dust Hill
; [ End ]
;===============================================================================

;===============================================================================
; Object 0xA4 - Asteron Enemy from Metropolis
; [ Begin ]
;===============================================================================
; loc_29E94:
ObjA4_Asteron:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_29EA2(PC, D0), D1
                jmp     loc_29EA2(PC, D1)
;-------------------------------------------------------------------------------
loc_29EA2:
                dc.w    loc_29EA8-loc_29EA2
                dc.w    loc_29EAC-loc_29EA2
                dc.w    loc_29EFE-loc_29EA2       
;-------------------------------------------------------------------------------
loc_29EA8:
                bra     Object_Settings                        ; loc_27EA4    
;-------------------------------------------------------------------------------
loc_29EAC:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                tst.w   D2
                bpl.s   loc_29EB6
                neg.w   D2
loc_29EB6:
                cmpi.w  #$0010, D2
                bcs.s   loc_29ECC
                cmpi.w  #$0060, D2
                bcc.s   loc_29ECC
                move.w  loc_29EEC(PC, D0), Obj_Speed(A0)           ; $0010
                bsr     loc_29EF0
loc_29ECC:
                tst.w   D3
                bpl.s   loc_29ED2
                neg.w   D3
loc_29ED2:
                cmpi.w  #$0010, D3
                bcs.s   loc_29EE8
                cmpi.w  #$0060, D3
                bcc.s   loc_29EE8
                move.w  loc_29EEC(PC, D1), Obj_Speed_Y(A0)         ; $0012
                bsr     loc_29EF0
loc_29EE8:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0   
;-------------------------------------------------------------------------------
loc_29EEC:
                dc.w    $FFC0, $0040                                           
;-------------------------------------------------------------------------------
loc_29EF0:
                move.b  #$04, Obj_Routine(A0)                            ; $0024
                move.b  #$40, Obj_Timer(A0)                              ; $002A
                rts      
;-------------------------------------------------------------------------------
loc_29EFE:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bmi.s   loc_29F16
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Asteron_Animate_Data), A1             ; loc_29FAA
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_29F16:
                move.b  #$27, Obj_Id(A0)                                 ; $0000
                move.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     Enemy_Weapon                           ; loc_29F2A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
;-------------------------------------------------------------------------------  
Enemy_Weapon:                                                  ; loc_29F2A
                moveq   #$00, D1
                moveq   #$04, D6
Loop_Load_Weapon:                                              ; loc_29F2E
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_29F80
                move.b  #$98, Obj_Id(A1)                                 ; $0000
                move.b  #$30, Obj_Subtype(A1)                            ; $0028
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                lea     (SpeedToPos), A2                       ; loc_D1DA
                move.l  A2, Obj_Timer(A1)                                ; $002A
                lea     Enemy_Weapon_Data(PC, D1), A2          ; loc_29F82
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D0, Obj_X(A1)                                    ; $0008
                move.b  (A2)+, D0
                ext.w   D0
                add.w   D0, Obj_Y(A1)                                    ; $000C
                move.b  (A2)+, Obj_Speed(A1)                             ; $0010
                move.b  (A2)+, Obj_Speed_Y(A1)                           ; $0012
                move.b  (A2)+, Obj_Map_Id(A1)                            ; $001A
                move.b  (A2)+, Obj_Flags(A1)                             ; $0001
                addq.w  #$06, D1
                dbra    D6, Loop_Load_Weapon                   ; loc_29F2E
loc_29F80:
                rts
;-------------------------------------------------------------------------------
Enemy_Weapon_Data:                                             ; loc_29F82
                dc.b    $00, $F8, $00, $FC, $02, $00
                dc.b    $08, $FC, $03, $FF, $03, $01
                dc.b    $08, $08, $03, $03, $04, $01
                dc.b    $F8, $08, $FD, $03, $04, $00
                dc.b    $F8, $FC, $FD, $FF, $03, $00     
;-------------------------------------------------------------------------------
ObjA4_Ptr:
                dc.l    Asteron_Mappings
                dc.w    $8368
                dc.b    $04, $04, $10, $0B
;-------------------------------------------------------------------------------
Asteron_Animate_Data:
                dc.w    loc_29FAC-Asteron_Animate_Data
loc_29FAC:
                dc.b    $01, $00, $01, $FF          
;-------------------------------------------------------------------------------
Asteron_Mappings:
		include 'mappings/sprite/objA4.asm'
;===============================================================================
; Object 0xA4 - Asteron Enemy from Metropolis
; [ End ]
;===============================================================================

;===============================================================================
; Object 0xA5 - Spiny (crawling badnik) Enemy from Chemical Plant
; [ Begin ]
;===============================================================================
; loc_2A004:
ObjA5_Horizontal_Spiny:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2A012(PC, D0), D1
                jmp     loc_2A012(PC, D1)
;-------------------------------------------------------------------------------
loc_2A012:
                dc.w    loc_2A018-loc_2A012
                dc.w    loc_2A02A-loc_2A012
                dc.w    loc_2A07C-loc_2A012   
;-------------------------------------------------------------------------------
loc_2A018:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$FFC0, Obj_Speed(A0)                            ; $0010
                move.w  #$0080, Obj_Timer(A0)                            ; $002A
                rts  
;-------------------------------------------------------------------------------
loc_2A02A:
                tst.b   Obj_Player_Status(A0)                            ; $002B
                beq.s   loc_2A038
                subq.b  #$01, Obj_Player_Status(A0)                      ; $002B
                bra     loc_2A046
loc_2A038:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                addi.w  #$0060, D2
                cmpi.w  #$00C0, D2
                bcs.s   loc_2A068
loc_2A046:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bne.s   loc_2A056
                move.w  #$0080, Obj_Timer(A0)                            ; $002A
                neg.w   Obj_Speed(A0)                                    ; $0010
loc_2A056:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Horizontal_Spiny_Animate_Data), A1    ; loc_2A1D2
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2A068:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$28, Obj_Player_Status(A0)                      ; $002B
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0    
;-------------------------------------------------------------------------------
loc_2A07C:
                subq.b  #$01, Obj_Player_Status(A0)                      ; $002B
                bmi.s   loc_2A092
                cmpi.b  #$14, Obj_Player_Status(A0)                      ; $002B
                bne.s   loc_2A08E
                bsr     Load_Spiny_Horizontal_Shot_Obj         ; loc_2A13C
loc_2A08E:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2A092:
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$40, Obj_Player_Status(A0)                      ; $002B
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0             
;===============================================================================
; Object 0xA5 - Spiny (crawling badnik) Enemy from Chemical Plant
; [ End ]
;===============================================================================
;===============================================================================
; Object 0xA6 - Spiny (on wall) Enemy from Chemical Plant
; [ Begin ]
;===============================================================================
; loc_2A0A0:
ObjA6_Vertical_Spiny:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2A0AE(PC, D0), D1
                jmp     loc_2A0AE(PC, D1)
;-------------------------------------------------------------------------------
loc_2A0AE:
                dc.w    loc_2A0B4-loc_2A0AE
                dc.w    loc_2A0C6-loc_2A0AE
                dc.w    loc_2A118-loc_2A0AE   
;-------------------------------------------------------------------------------
loc_2A0B4:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$FFC0, Obj_Speed_Y(A0)                          ; $0012
                move.w  #$0080, Obj_Timer(A0)                            ; $002A
                rts  
;-------------------------------------------------------------------------------
loc_2A0C6:
                tst.b   Obj_Player_Status(A0)                            ; $002B
                beq.s   loc_2A0D4
                subq.b  #$01, Obj_Player_Status(A0)                      ; $002B
                bra     loc_2A0E2
loc_2A0D4:
                bsr     Object_Check_Player_Position           ; loc_27F1C
                addi.w  #$0060, D2
                cmpi.w  #$00C0, D2
                bcs.s   loc_2A104
loc_2A0E2:
                subq.b  #$01, Obj_Timer(A0)                              ; $002A
                bne.s   loc_2A0F2
                move.w  #$0080, Obj_Timer(A0)                            ; $002A
                neg.w   Obj_Speed_Y(A0)                                  ; $0012
loc_2A0F2:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                lea     (Vertical_Spiny_Animate_Data), A1      ; loc_2A1D8
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2A104:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$28, Obj_Player_Status(A0)                      ; $002B
                move.b  #$05, Obj_Map_Id(A0)                             ; $001A
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0    
;-------------------------------------------------------------------------------
loc_2A118:
                subq.b  #$01, Obj_Player_Status(A0)                      ; $002B
                bmi.s   loc_2A12E
                cmpi.b  #$14, Obj_Player_Status(A0)                      ; $002B
                bne.s   loc_2A12A
                bsr     Load_Spiny_Vertical_Shot_Obj           ; loc_2A188
loc_2A12A:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2A12E:
                subq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$40, Obj_Player_Status(A0)                      ; $002B
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
;-------------------------------------------------------------------------------                
Load_Spiny_Horizontal_Shot_Obj:                                ; loc_2A13C
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_2A186
                move.b  #$98, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Map_Id(A1)                             ; $001A
                move.b  #$34, Obj_Subtype(A1)                            ; $0028
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  #$FD00, Obj_Speed_Y(A1)                          ; $0012
                move.w  #$0100, D1
                lea     (Player_One).w, A2                           ; $FFFFB000
                move.w  Obj_X(A0), D0                                    ; $0008
                cmp.w   Obj_X(A2), D0                                    ; $0008
                bcs.s   loc_2A17A
                neg.w   D1
loc_2A17A:
                move.w  D1, Obj_Speed(A1)                                ; $0010
                lea     Spiny_Weapon(PC), A2                   ; loc_28D3E
                move.l  A2, Obj_Timer(A1)                                ; $002A
loc_2A186:
                rts
;-------------------------------------------------------------------------------                
Load_Spiny_Vertical_Shot_Obj:                                  ; loc_2A188
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_2A1C6
                move.b  #$98, Obj_Id(A1)                                 ; $0000
                move.b  #$06, Obj_Map_Id(A1)                             ; $001A
                move.b  #$34, Obj_Subtype(A1)                            ; $0028
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                move.w  #$0300, D1
                btst    #$00, Obj_Flags(A0)                              ; $0001
                beq.s   loc_2A1BA
                neg.w   D1
loc_2A1BA:
                move.w  D1, Obj_Speed(A1)                                ; $0010
                lea     Spiny_Weapon(PC), A2                   ; loc_28D3E
                move.l  A2, Obj_Timer(A1)                                ; $002A
loc_2A1C6:
                rts     
;-------------------------------------------------------------------------------
ObjA5_Ptr:                                                  ; loc_2A1C8
                dc.l    Spiny_Mappings                         ; loc_2A1E4
                dc.w    $252D
                dc.b    $04, $04, $08, $0B       
;-------------------------------------------------------------------------------  
Horizontal_Spiny_Animate_Data:                                 ; loc_2A1D2
                dc.w    loc_2A1D4-Horizontal_Spiny_Animate_Data
loc_2A1D4:
                dc.b    $09, $00, $01, $FF    
;-------------------------------------------------------------------------------
Vertical_Spiny_Animate_Data:                                   ; loc_2A1D8
                dc.w    loc_2A1DA-Vertical_Spiny_Animate_Data
loc_2A1DA:
                dc.b    $09, $03, $04, $FF      
;------------------------------------------------------------------------------- 
Spiny_Weapon_Animate_Data:                                     ; loc_2A1DE
                dc.w    loc_2A1E0-Spiny_Weapon_Animate_Data
loc_2A1E0:
                dc.b    $03, $06, $07, $FF                  
;-------------------------------------------------------------------------------
Spiny_Mappings:
		include 'mappings/sprite/objA6.asm'
;===============================================================================
; Object 0xA6 - Spiny (on wall) Enemy from Chemical Plant
; [ End ]
;===============================================================================

;===============================================================================
; Object 0xA7 - Grabber Enemy (spider) from Chemical Plant
; [ Begin ]
;===============================================================================
; loc_2A2D4:
ObjA7_Grabber:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0
                move.w  loc_2A2E2(PC, D0), D1
                jmp     loc_2A2E2(PC, D1)
;-------------------------------------------------------------------------------
loc_2A2E2:
                dc.w    loc_2A2E6-loc_2A2E2
                dc.w    loc_2A2EA-loc_2A2E2       
;-------------------------------------------------------------------------------
loc_2A2E6:
                bra     Object_Settings
;-------------------------------------------------------------------------------
loc_2A2EA:
                bra     Jmp_26_To_MarkObjGone        
;===============================================================================
; Object 0xA7 - Grabber Enemy (spider) from Chemical Plant
; [ End ]
;===============================================================================
;===============================================================================
; Object 0xA8 - Grabber's legs from Chemical Plant
; [ Begin ]	Object linked to 0xA7	
;===============================================================================
; loc_2A2EE:
ObjA8_Grabber_Sub:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2A2FC(PC, D0), D1
                jmp     loc_2A2FC(PC, D1)
;-------------------------------------------------------------------------------
loc_2A2FC:
                dc.w    loc_2A300-loc_2A2FC
                dc.w    loc_2A304-loc_2A2FC  
;-------------------------------------------------------------------------------
loc_2A300:
                bra     Object_Settings                        ; loc_27EA4  
;-------------------------------------------------------------------------------
loc_2A304:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0              
;===============================================================================
; Object 0xA8 - Grabber's legs from Chemical Plant
; [ End ]	Object linked to 0xA7
;===============================================================================
;===============================================================================
; Object 0xA9 - The little hanger box thing a Grabber's string comes out of
; [ Begin ]	Object linked to 0xA7
;===============================================================================
; loc_2A308:
ObjA9_Grabber_Sub:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2A316(PC, D0), D1
                jmp     loc_2A316(PC, D1)
;-------------------------------------------------------------------------------
loc_2A316:
                dc.w    loc_2A31A-loc_2A316
                dc.w    loc_2A31E-loc_2A316     
;-------------------------------------------------------------------------------
loc_2A31A:
                bra     Object_Settings                        ; loc_27EA4   
;-------------------------------------------------------------------------------
loc_2A31E:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0           
;===============================================================================
; Object 0xA9 - The little hanger box thing a Grabber's string comes out of
; [ End ]	Object linked to 0xA7
;===============================================================================
;===============================================================================
; Object 0xAA - The thin white string a Grabber hangs from
; [ Begin ]	Object linked to 0xA7
;===============================================================================
; loc_2A322:
ObjAA_Grabber_Sub:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2A330(PC, D0), D1
                jmp     loc_2A330(PC, D1)
;-------------------------------------------------------------------------------
loc_2A330:
                dc.w    loc_2A334-loc_2A330
                dc.w    loc_2A338-loc_2A330     
;-------------------------------------------------------------------------------
loc_2A334:
                bra     Object_Settings                        ; loc_27EA4  
;-------------------------------------------------------------------------------
loc_2A338:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0           
;===============================================================================
; Object 0xAA - The thin white string a Grabber hangs from
; [ End ]	Object linked to 0xA7
;===============================================================================
;===============================================================================
; Object 0xAB - Grabber Enemy from Chemical Plant
; [ Begin ]	Object linked to 0xA7
;===============================================================================
; loc_2A33C:
ObjAB_Grabber_Sub:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2A34A(PC, D0), D1
                jmp     loc_2A34A(PC, D1)
;-------------------------------------------------------------------------------
loc_2A34A:
                dc.w    loc_2A34E-loc_2A34A
                dc.w    loc_2A352-loc_2A34A     
;-------------------------------------------------------------------------------
loc_2A34E:
                bra     Object_Settings                        ; loc_27EA4 
;-------------------------------------------------------------------------------
loc_2A352:
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;------------------------------------------------------------------------------- 
ObjA7_Ptr:                                                  ; loc_2A356
                dc.l    Grabber_Mappings                       ; loc_2A374
                dc.w    $2500
                dc.b    $04, $04, $10, $0B      
;-------------------------------------------------------------------------------
ObjA8_Ptr:                                                  ; loc_2A360
                dc.l    Grabber_Mappings                       ; loc_2A374
                dc.w    $2500
                dc.b    $04, $02, $10, $CB     
;-------------------------------------------------------------------------------
ObjA9_Ptr:                                                  ; loc_2A36A
                dc.l    Grabber_Mappings                       ; loc_2A374
                dc.w    $2500
                dc.b    $04, $04, $04, $00      
;------------------------------------------------------------------------------- 
Grabber_Mappings:
		include 'mappings/sprite/objA7_A8_A9.asm' 
;===============================================================================
; Object 0xAB - Grabber Enemy from Chemical Plant
; [ End ]	Object linked to 0xA7
;===============================================================================

;===============================================================================
; Object 0xAC - Balkiry Enemy from Sky Chase
; [ Begin ]
;===============================================================================
; loc_2A3F4:
ObjAC_Balkiry:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2A402(PC, D0), D1
                jmp     loc_2A402(PC, D1)
;-------------------------------------------------------------------------------
loc_2A402:
                dc.w    loc_2A406-loc_2A402
                dc.w    loc_2A41C-loc_2A402      
;-------------------------------------------------------------------------------
loc_2A406:
                bsr     Object_Settings                        ; loc_27EA4
                move.w  #$FFE0, Obj_Speed(A0)                            ; $0010
                lea     Enemy_Boost_Animate_Data(PC), A1       ; loc_2913A
                move.l  A1, Obj_Control_Var_02(A0)                       ; $002E
                bra     Load_Enemy_Boost_Sub_Obj9C          ; loc_2909C 
;-------------------------------------------------------------------------------
loc_2A41C:
                bsr     Jmp_19_To_SpeedToPos                   ; loc_2A7C4
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
ObjAC_Ptr:                                                  ; loc_2A424
                dc.l    Balkiry_Mappings                       ; loc_2A42E
                dc.w    $2500
                dc.b    $04, $04, $20, $08
;-------------------------------------------------------------------------------
Balkiry_Mappings:
		include 'mappings/sprite/objAC.asm'
;===============================================================================
; Object 0xAC - Balkiry Enemy from Sky Chase
; [ End ]
;===============================================================================

;===============================================================================
; Object 0xAD - Platform underneath the Clucker Enemy from Sky Fortress
; [ Begin ]
;===============================================================================
; loc_2A47E:
ObjAD_Clucker_Platform:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2A48C(PC, D0), D1
                jmp     loc_2A48C(PC, D1)
;-------------------------------------------------------------------------------
loc_2A48C:
                dc.w    loc_2A492-loc_2A48C
                dc.w    loc_2A49E-loc_2A48C
                dc.w    loc_2A4CA-loc_2A48C     
;-------------------------------------------------------------------------------
loc_2A492:
                bsr     Object_Settings                        ; loc_27EA4
                move.b  #$0C, Obj_Map_Id(A0)                             ; $001A
                rts      
;-------------------------------------------------------------------------------
loc_2A49E:
                bsr     loc_2A4B6
                bsr     Object_Check_Player_Position           ; loc_27F1C
                addi.w  #$0060, D2
                cmpi.w  #$00C0, D2
                bcs     loc_2A572
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2A4B6:
                move.w  #$001B, D1
                move.w  #$0008, D2
                move.w  #$0008, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                bra     Jmp_16_To_SolidObject                  ; loc_2A7B8  
;-------------------------------------------------------------------------------
loc_2A4CA:
                bsr.s   loc_2A4B6
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0           
;===============================================================================
; Object 0xAD - Platform underneath the Clucker Enemy from Sky Fortress
; [ End ]
;===============================================================================
;===============================================================================
; Object 0xAE - Enemy Clucker Rooster from Sky Fortress
; [ Begin ]
;===============================================================================
; loc_2A4D0:
ObjAE_Clucker:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2A4DE(PC, D0), D1
                jmp     loc_2A4DE(PC, D1)
;-------------------------------------------------------------------------------
loc_2A4DE:
                dc.w    loc_2A4EA-loc_2A4DE
                dc.w    loc_2A4EE-loc_2A4DE
                dc.w    loc_2A51E-loc_2A4DE
                dc.w    loc_2A52C-loc_2A4DE
                dc.w    loc_2A554-loc_2A4DE
                dc.w    loc_2A562-loc_2A4DE     
;-------------------------------------------------------------------------------
loc_2A4EA:
                bra     Object_Settings                        ; loc_27EA4   
;-------------------------------------------------------------------------------
loc_2A4EE:
                move.b  Obj_Routine(A0), D2                              ; $0024
                lea     (Clucker_Animate_Data), A1             ; loc_2A5F2
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                cmp.b   Obj_Routine(A0), D2                              ; $0024
                bne.s   loc_2A506
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2A506:
                lea     Obj_Map_Id(A0), A1                               ; $001A
                clr.l   (A1)
                clr.w   Obj_Map(A1)                                      ; $0004
                move.b  #$08, (A1)
                move.b  #$06, Obj_Col_Flags(A0)                          ; $0020
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0   
;-------------------------------------------------------------------------------
loc_2A51E:
                lea     (Clucker_Animate_Data_01), A1          ; loc_2A5FE
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_2A52C:
                tst.b   Obj_Control_Var_00(A0)                           ; $002C
                beq.s   loc_2A53A
                subq.b  #$01, Obj_Control_Var_00(A0)                     ; $002C
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2A53A:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                lea     Obj_Map_Id(A0), A1                               ; $001A
                clr.l   (A1)
                clr.w   Obj_Map(A1)                                      ; $0004
                move.b  #$0B, (A1)
                bsr     Load_Clucker_Weapon                    ; loc_2A5A0
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_2A554:
                lea     (Clucker_Animate_Data_02), A1          ; loc_2A60A
                bsr     Jmp_17_To_AnimateSprite                ; loc_2A7AC
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0  
;-------------------------------------------------------------------------------
loc_2A562:
                move.b  #$06, Obj_Routine(A0)                            ; $0024
                move.b  #$20, Obj_Control_Var_00(A0)                     ; $002C
                bra     Jmp_26_To_MarkObjGone                  ; loc_2A7A0
loc_2A572:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_2A59E
                move.b  #$AE, Obj_Id(A1)                                 ; $0000
                move.b  #$42, Obj_Subtype(A1)                            ; $0028
                move.w  A0, Obj_Timer(A1)                                ; $002A
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                subi.w  #$0018, Obj_Y(A1)                                ; $000C
loc_2A59E:
                rts
;-------------------------------------------------------------------------------
Load_Clucker_Weapon:                                           ; loc_2A5A0
                bsr     Jmp_14_To_SingleObjectLoad_2           ; loc_2A7A6
                bne.s   loc_2A5DC
                move.b  #$98, Obj_Id(A1)                                 ; $0000
                move.b  #$0D, Obj_Map_Id(A1)                             ; $001A
                move.b  #$44, Obj_Subtype(A1)                            ; $0028
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                subq.w  #$08, Obj_X(A1)                                  ; $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                addi.w  #$000B, Obj_Y(A1)                                ; $000C
                move.w  #$FE00, Obj_Speed(A1)                            ; $0010
                lea     Clucker_Weapon(PC), A2                 ; loc_28D30
                move.l  A2, Obj_Timer(A1)                                ; $002A
loc_2A5DC:
                rts                             
;-------------------------------------------------------------------------------
ObjAD_Ptr:                                                  ; loc_2A5DE
                dc.l    Clucker_Mappings                       ; loc_2A61C
                dc.w    $23EE
                dc.b    $04, $04, $18, $00    
;-------------------------------------------------------------------------------
ObjAE_Ptr:                                                  ; loc_2A5E8
                dc.l    Clucker_Mappings                       ; loc_2A61C
                dc.w    $23EE
                dc.b    $04, $05, $10, $00
;-------------------------------------------------------------------------------
Clucker_Animate_Data:                                          ; loc_2A5F2
                dc.w    loc_2A5F4-Clucker_Animate_Data
loc_2A5F4:
                dc.b    $01, $01, $02, $03, $04, $05, $06, $07
                dc.b    $FC, $00           
;-------------------------------------------------------------------------------
Clucker_Animate_Data_01:                                       ; loc_2A5FE
                dc.w    loc_2A600-Clucker_Animate_Data_01
loc_2A600:
                dc.b    $01, $08, $09, $0A, $0B, $0B, $0B, $0B
                dc.b    $FC, $00
;-------------------------------------------------------------------------------
Clucker_Animate_Data_02:                                       ; loc_2A60A
                dc.w    loc_2A60C-Clucker_Animate_Data_02
loc_2A60C:
                dc.b    $03, $0A, $0B, $FC                  
;------------------------------------------------------------------------------- 
Clucker_Weapon_Animate_Data:                                   ; loc_2A610
                dc.w    loc_2A612-Clucker_Weapon_Animate_Data
loc_2A612:
                dc.b    $03, $0D, $0E, $0F, $10, $11, $12, $13
                dc.b    $14, $FF                              
;-------------------------------------------------------------------------------    
Clucker_Mappings:
		include 'mappings/sprite/objAE.asm'
;===============================================================================
; Object 0xAE - Enemy Clucker Rooster from Sky Fortress
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_03_To_DisplaySprite_Param:                                 ; loc_2A788
		jmp     (DisplaySprite_Param)                  ; loc_D35E
Jmp_1F_To_DisplaySprite:                                       ; loc_2A78E
		jmp     (DisplaySprite)                        ; loc_D322
Jmp_23_To_DeleteObject:                                        ; loc_2A794
		jmp     (DeleteObject)                         ; loc_D314
Jmp_10_To_SingleObjectLoad:                                    ; loc_2A79A
		jmp     (SingleObjectLoad)                     ; loc_E6FE
Jmp_26_To_MarkObjGone:                                         ; loc_2A7A0
		jmp     (MarkObjGone)                          ; loc_D200
Jmp_14_To_SingleObjectLoad_2:                                  ; loc_2A7A6
		jmp     (SingleObjectLoad_2)                   ; loc_E714
Jmp_17_To_AnimateSprite:                                       ; loc_2A7AC
		jmp     (AnimateSprite)                        ; loc_D372
Jmp_2F_To_ModifySpriteAttr_2P:                                 ; loc_2A7B2
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
Jmp_16_To_SolidObject:                                         ; loc_2A7B8
		jmp     (SolidObject)                          ; loc_F344
Jmp_0E_To_ObjectFall:                                          ; loc_2A7BE
		jmp     (ObjectFall)                           ; loc_D1AE
Jmp_19_To_SpeedToPos:                                          ; loc_2A7C4
		jmp     (SpeedToPos)                           ; loc_D1DA
		dc.w    $0000
;-------------------------------------------------------------------------------
;===============================================================================
; Object 0x8A - Sonic 1 Credits
; [ Begin ]
;===============================================================================
; loc_2A7CC:
Obj8A_S1_Credits:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0
                move.w  loc_2A7DA(PC, D0), D1
                jmp     loc_2A7DA(PC, D1)   
;-------------------------------------------------------------------------------
loc_2A7DA:
                dc.w    loc_2A7DE-loc_2A7DA
                dc.w    loc_2A84C-loc_2A7DA    
;-------------------------------------------------------------------------------  
loc_2A7DE:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0120, Obj_X(A0)                                ; $0008
                move.w  #$00F0, Obj_Sub_Y(A0)                            ; $000A
                move.l  #S1_Credits_Mappings, Obj_Map(A0) ; loc_2A852, $0004
                move.w  #$05A0, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_30_To_ModifySpriteAttr_2P          ; loc_2AEE0
                move.w  ($FFFFFFF4).w, D0
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                move.b  #$00, Obj_Flags(A0)                              ; $0001
                move.b  #$00, Obj_Priority(A0)                           ; $0018
                cmpi.b  #gm_TitleScreen, (Game_Mode).w          ; $04, $FFFFF600
                bne.s   loc_2A84C
                move.w  #$0300, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_30_To_ModifySpriteAttr_2P          ; loc_2AEE0
                move.b  #$0A, Obj_Map_Id(A0)                             ; $001A
                tst.b   ($FFFFFFD3).w
                beq.s   loc_2A84C
                cmpi.b  #$72, (Control_Ports_Buffer_Data).w          ; $FFFFF604
                bne.s   loc_2A84C
                move.w  #$0EEE, (Palette_Buffer+$00C0).w             ; $FFFFFBC0
                move.w  #$0880, (Palette_Buffer+$00C2).w             ; $FFFFFBC2
                jmp     (DeleteObject)                         ; loc_D314 
;-------------------------------------------------------------------------------  
loc_2A84C:
                jmp     (DisplaySprite)                        ; loc_D322 
;-------------------------------------------------------------------------------    
S1_Credits_Mappings:                                           ; loc_2A852
                dc.w    loc_2A868-S1_Credits_Mappings
                dc.w    loc_2A8DA-S1_Credits_Mappings
                dc.w    loc_2A95C-S1_Credits_Mappings
                dc.w    loc_2A9AE-S1_Credits_Mappings
                dc.w    loc_2AA70-S1_Credits_Mappings
                dc.w    loc_2AB12-S1_Credits_Mappings
                dc.w    loc_2ABE4-S1_Credits_Mappings
                dc.w    loc_2AC9E-S1_Credits_Mappings
                dc.w    loc_2AD98-S1_Credits_Mappings
                dc.w    loc_2AE12-S1_Credits_Mappings
                dc.w    loc_2AE54-S1_Credits_Mappings
loc_2A868:  ; "SONIC TEAM STAFF"
                dc.w    $000E
                dc.l    $F805002E, $0017FF88  ; S
                dc.l    $F8050026, $0013FF98  ; O
                dc.l    $F805001A, $000DFFA8  ; N
                dc.l    $F8010046, $0023FFB8  ; I
                dc.l    $F805001E, $000FFFC0  ; C
                dc.l    $F805003E, $001FFFD8  ; T
                dc.l    $F805000E, $0007FFE8  ; E
                dc.l    $F8050004, $0002FFF8  ; A
                dc.l    $F8090008, $00040008  ; M
                dc.l    $F805002E, $00170028  ; S
                dc.l    $F805003E, $001F0038  ; T
                dc.l    $F8050004, $00020048  ; A
                dc.l    $F805005C, $002E0058  ; F
                dc.l    $F805005C, $002E0068  ; F
loc_2A8DA:  ; "GAME PLAN CAROL YAS"
                dc.w    $0010
                dc.l    $D8050000, $0000FF80
                dc.l    $D8050004, $0002FF90
                dc.l    $D8090008, $0004FFA0
                dc.l    $D805000E, $0007FFB4
                dc.l    $D8050012, $0009FFD0
                dc.l    $D8050016, $000BFFE0
                dc.l    $D8050004, $0002FFF0
                dc.l    $D805001A, $000D0000
                dc.l    $0805001E, $000FFFC8
                dc.l    $08050004, $0002FFD8
                dc.l    $08050022, $0011FFE8
                dc.l    $08050026, $0013FFF8
                dc.l    $08050016, $000B0008
                dc.l    $0805002A, $00150020
                dc.l    $08050004, $00020030
                dc.l    $0805002E, $00170044
loc_2A95C:  ; "PROGRAM YU 2"
                dc.w    $000A
                dc.l    $D8050012, $0009FF80
                dc.l    $D8050022, $0011FF90
                dc.l    $D8050026, $0013FFA0
                dc.l    $D8050000, $0000FFB0
                dc.l    $D8050022, $0011FFC0
                dc.l    $D8050004, $0002FFD0
                dc.l    $D8090008, $0004FFE0
                dc.l    $0805002A, $0015FFE8
                dc.l    $08050032, $0019FFF8
                dc.l    $08050036, $001B0008
loc_2A9AE:  ; "CHARACTER DESIGN BIGISLAND"
                dc.w    $0018
                dc.l    $D805001E, $000FFF88
                dc.l    $D805003A, $001DFF98
                dc.l    $D8050004, $0002FFA8
                dc.l    $D8050022, $0011FFB8
                dc.l    $D8050004, $0002FFC8
                dc.l    $D805001E, $000FFFD8
                dc.l    $D805003E, $001FFFE8
                dc.l    $D805000E, $0007FFF8
                dc.l    $D8050022, $00110008
                dc.l    $D8050042, $00210020
                dc.l    $D805000E, $00070030
                dc.l    $D805002E, $00170040
                dc.l    $D8010046, $00230050
                dc.l    $D8050000, $00000058
                dc.l    $D805001A, $000D0068
                dc.l    $08050048, $0024FFC0
                dc.l    $08010046, $0023FFD0
                dc.l    $08050000, $0000FFD8
                dc.l    $08010046, $0023FFE8
                dc.l    $0805002E, $0017FFF0
                dc.l    $08050016, $000B0000
                dc.l    $08050004, $00020010
                dc.l    $0805001A, $000D0020
                dc.l    $08050042, $00210030
loc_2AA70:  ; "DESIGN JINYA PHENIX RIE"
                dc.w    $0014
                dc.l    $D0050042, $0021FFA0
                dc.l    $D005000E, $0007FFB0
                dc.l    $D005002E, $0017FFC0
                dc.l    $D0010046, $0023FFD0
                dc.l    $D0050000, $0000FFD8
                dc.l    $D005001A, $000DFFE8
                dc.l    $0005004C, $0026FFE8
                dc.l    $00010046, $0023FFF8
                dc.l    $0005001A, $000D0004
                dc.l    $0005002A, $00150014
                dc.l    $00050004, $00020024
                dc.l    $20050012, $0009FFD0
                dc.l    $2005003A, $001DFFE0
                dc.l    $2005000E, $0007FFF0
                dc.l    $2005001A, $000D0000
                dc.l    $20010046, $00230010
                dc.l    $20050050, $00280018
                dc.l    $20050022, $00110030
                dc.l    $20010046, $00230040
                dc.l    $2005000E, $00070048
loc_2AB12:  ; "SOUND PRODUCE MASATO NAKAMURA"
                dc.w    $001A
                dc.l    $D805002E, $0017FF98
                dc.l    $D8050026, $0013FFA8
                dc.l    $D8050032, $0019FFB8
                dc.l    $D805001A, $000DFFC8
                dc.l    $D8050054, $002AFFD8
                dc.l    $D8050012, $0009FFF8
                dc.l    $D8050022, $00110008
                dc.l    $D8050026, $00130018
                dc.l    $D8050042, $00210028
                dc.l    $D8050032, $00190038
                dc.l    $D805001E, $000F0048
                dc.l    $D805000E, $00070058
                dc.l    $08090008, $0004FF88
                dc.l    $08050004, $0002FF9C
                dc.l    $0805002E, $0017FFAC
                dc.l    $08050004, $0002FFBC
                dc.l    $0805003E, $001FFFCC
                dc.l    $08050026, $0013FFDC
                dc.l    $0805001A, $000DFFF8
                dc.l    $08050004, $00020008
                dc.l    $08050058, $002C0018
                dc.l    $08050004, $00020028
                dc.l    $08090008, $00040038
                dc.l    $08050032, $0019004C
                dc.l    $08050022, $0011005C
                dc.l    $08050004, $0002006C
loc_2ABE4:  ; "SOUND PROGRAM JIMITA MACKY"
                dc.w    $0017
                dc.l    $D005002E, $0017FF98
                dc.l    $D0050026, $0013FFA8
                dc.l    $D0050032, $0019FFB8
                dc.l    $D005001A, $000DFFC8
                dc.l    $D0050054, $002AFFD8
                dc.l    $D0050012, $0009FFF8
                dc.l    $D0050022, $00110008
                dc.l    $D0050026, $00130018
                dc.l    $D0050000, $00000028
                dc.l    $D0050022, $00110038
                dc.l    $D0050004, $00020048
                dc.l    $D0090008, $00040058
                dc.l    $0005004C, $0026FFD0
                dc.l    $00010046, $0023FFE0
                dc.l    $00090008, $0004FFE8
                dc.l    $00010046, $0023FFFC
                dc.l    $0005003E, $001F0004
                dc.l    $00050004, $00020014
                dc.l    $20090008, $0004FFD0
                dc.l    $20050004, $0002FFE4
                dc.l    $2005001E, $000FFFF4
                dc.l    $20050058, $002C0004
                dc.l    $2005002A, $00150014
loc_2AC9E:  ; "SPECIAL TANKS FUJIO MINEGISHI PAPA"
                dc.w    $001F
                dc.l    $D805002E, $0017FF80
                dc.l    $D8050012, $0009FF90
                dc.l    $D805000E, $0007FFA0
                dc.l    $D805001E, $000FFFB0
                dc.l    $D8010046, $0023FFC0
                dc.l    $D8050004, $0002FFC8
                dc.l    $D8050016, $000BFFD8
                dc.l    $D805003E, $001FFFF8
                dc.l    $D805003A, $001D0008
                dc.l    $D8050004, $00020018
                dc.l    $D805001A, $000D0028
                dc.l    $D8050058, $002C0038
                dc.l    $D805002E, $00170048
                dc.l    $0005005C, $002EFFB0
                dc.l    $00050032, $0019FFC0
                dc.l    $0005004C, $0026FFD0
                dc.l    $00010046, $0023FFE0
                dc.l    $00050026, $0013FFE8
                dc.l    $00090008, $00040000
                dc.l    $00010046, $00230014
                dc.l    $0005001A, $000D001C
                dc.l    $0005000E, $0007002C
                dc.l    $00050000, $0000003C
                dc.l    $00010046, $0023004C
                dc.l    $0005002E, $00170054
                dc.l    $0005003A, $001D0064
                dc.l    $00010046, $00230074
                dc.l    $20050012, $0009FFF8
                dc.l    $20050004, $00020008
                dc.l    $20050012, $00090018
                dc.l    $20050004, $00020028
loc_2AD98:  ; "PRESENTED BY SEGA"
                dc.w    $000F
                dc.l    $F8050012, $0009FF80
                dc.l    $F8050022, $0011FF90
                dc.l    $F805000E, $0007FFA0
                dc.l    $F805002E, $0017FFB0
                dc.l    $F805000E, $0007FFC0
                dc.l    $F805001A, $000DFFD0
                dc.l    $F805003E, $001FFFE0
                dc.l    $F805000E, $0007FFF0
                dc.l    $F8050042, $00210000
                dc.l    $F8050048, $00240018
                dc.l    $F805002A, $00150028
                dc.l    $F805002E, $00170040
                dc.l    $F805000E, $00070050
                dc.l    $F8050000, $00000060
                dc.l    $F8050004, $00020070
loc_2AE12:  ; "TRY AGAIN"
                dc.w    $0008
                dc.l    $3005003E, $001FFFC0
                dc.l    $30050022, $0011FFD0
                dc.l    $3005002A, $0015FFE0
                dc.l    $30050004, $0002FFF8
                dc.l    $30050000, $00000008
                dc.l    $30050004, $00020018
                dc.l    $30010046, $00230028
                dc.l    $3005001A, $000D0030
loc_2AE54:  ; "SONIC TEAM PRESENTS"
                dc.w    $0011
                dc.l    $E805002E, $0017FFB4
                dc.l    $E8050026, $0013FFC4
                dc.l    $E805001A, $000DFFD4
                dc.l    $E8010046, $0023FFE4
                dc.l    $E805001E, $000FFFEC
                dc.l    $E805003E, $001F0004
                dc.l    $E805000E, $00070014
                dc.l    $E8050004, $00020024
                dc.l    $E8090008, $00040034
                dc.l    $00050012, $0009FFC0
                dc.l    $00050022, $0011FFD0
                dc.l    $0005000E, $0007FFE0
                dc.l    $0005002E, $0017FFF0
                dc.l    $0005000E, $00070000
                dc.l    $0005001A, $000D0010
                dc.l    $0005003E, $001F0020
                dc.l    $0005002E, $00170030
;===============================================================================
; Object 0x8A - Sonic 1 Credits
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
		nop
Jmp_30_To_ModifySpriteAttr_2P:                                 ; loc_2AEE0
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
		dc.w    $0000
;-------------------------------------------------------------------------------
Obj3E_Egg_Prison:                                           ; loc_2AEE8
;===============================================================================
; Object 0x3E - Container of animals from the stages after bosses
; [ Begin ]
;===============================================================================
; loc_2AEE8:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2AF14(PC, D0), D1
                jsr     loc_2AF14(PC, D1)
                move.w  Obj_X(A0), D0                                    ; $0008
                andi.w  #$FF80, D0
                sub.w   ($FFFFF7DA).w, D0
                cmpi.w  #$0280, D0
                bhi.s   loc_2AF0E
                jmp     (DisplaySprite)                        ; loc_D322
loc_2AF0E:
                jmp     (DeleteObject)                         ; loc_D314
;------------------------------------------------------------------------------- 
loc_2AF14:
                dc.w    loc_2AF34-loc_2AF14
                dc.w    loc_2AF82-loc_2AF14
                dc.w    loc_2AFBE-loc_2AF14
                dc.w    loc_2B026-loc_2AF14
                dc.w    loc_2B026-loc_2AF14
                dc.w    loc_2B026-loc_2AF14
                dc.w    loc_2B0BE-loc_2AF14
                dc.w    loc_2B10E-loc_2AF14       
;-------------------------------------------------------------------------------  
loc_2AF24:
                dc.b    $02, $20, $04, $00
                dc.b    $04, $0C, $05, $01
                dc.b    $06, $10, $04, $03
                dc.b    $08, $10, $03, $05       
;-------------------------------------------------------------------------------
loc_2AF34:
                move.l  #Egg_Prison_Mappings, Obj_Map(A0) ; loc_2B138, $0004
                move.w  #$049D, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_31_To_ModifySpriteAttr_2P          ; loc_2B1E4
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.w  Obj_Y(A0), Obj_Control_Var_04(A0)         ; $000C, $0030
                moveq   #$00, D0
                move.b  Obj_Subtype(A0), D0                              ; $0028
                lsl.w   #$02, D0
                lea     loc_2AF24(PC, D0), A1
                move.b  (A1)+, Obj_Routine(A0)                           ; $0024
                move.b  (A1)+, Obj_Width(A0)                             ; $0019
                move.b  (A1)+, Obj_Priority(A0)                          ; $0018
                move.b  (A1)+, Obj_Map_Id(A0)                            ; $001A
                cmpi.w  #$0008, D0
                bne.s   loc_2AF80
                move.b  #$06, Obj_Col_Flags(A0)                          ; $0020
                move.b  #$08, Obj_Col_Prop(A0)                           ; $0021
loc_2AF80:
                rts   
;-------------------------------------------------------------------------------
loc_2AF82:
                cmpi.b  #$02, (Boss_Defeated_Flag).w                 ; $FFFFF7A7
                beq.s   loc_2AFA0
                move.w  #$002B, D1
                move.w  #$0018, D2
                move.w  #$0018, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                jmp     (SolidObject)                          ; loc_F344
loc_2AFA0:
                tst.b   Obj_Routine_2(A0)                                ; $0025
                beq.s   loc_2AFB6
                clr.b   Obj_Routine_2(A0)                                ; $0025
                bclr    #$03, ($FFFFB022).w
                bset    #$01, ($FFFFB022).w
loc_2AFB6:
                move.b  #$02, Obj_Map_Id(A0)                             ; $001A
                rts   
;-------------------------------------------------------------------------------
loc_2AFBE:
                move.w  #$0017, D1
                move.w  #$0008, D2
                move.w  #$0008, D3
                move.w  Obj_X(A0), D4                                    ; $0008
                jsr     (SolidObject)                          ; loc_F344
                lea     (Egg_Prison_Animate_Data), A1          ; loc_2B130
                jsr     (AnimateSprite)                        ; loc_D372
                move.w  Obj_Control_Var_04(A0), Obj_Y(A0)         ; $000C, $0030
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.b  #$18, D0
                beq.s   loc_2B024
                addq.w  #$08, Obj_Y(A0)                                  ; $000C
                move.b  #$0A, Obj_Routine(A0)                            ; $0024
                move.w  #$003C, Obj_Ani_Time(A0)                         ; $001E
                clr.b   (HUD_Timer_Refresh_Flag).w                   ; $FFFFFE1E
                clr.b   (Boss_Flag).w                                ; $FFFFF7AA
                move.b  #$01, ($FFFFF7CC).w
                move.w  #$0800, ($FFFFF602).w
                clr.b   Obj_Routine_2(A0)                                ; $0025
                bclr    #$03, ($FFFFB022).w
                bset    #$01, ($FFFFB022).w
loc_2B024:
                rts 
;-------------------------------------------------------------------------------
loc_2B026:
                moveq   #$07, D0
                and.b   ($FFFFFE0F).w, D0
                bne.s   loc_2B064
                jsr     (SingleObjectLoad)                     ; loc_E6FE
                bne.s   loc_2B064
                move.b  #$27, Obj_Id(A1)                                 ; $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                jsr     (PseudoRandomNumber)                   ; loc_325C
                moveq   #$00, D1
                move.b  D0, D1
                lsr.b   #$02, D1
                subi.w  #$0020, D1
                add.w   D1, Obj_X(A1)                                    ; $0008
                lsr.w   #$08, D0
                lsr.b   #$03, D0
                add.w   D0, Obj_Y(A1)                                    ; $000C
loc_2B064:
                subq.w  #$01, Obj_Ani_Time(A0)                           ; $001E
                beq.s   loc_2B06C
                rts
loc_2B06C:
                move.b  #$02, (Boss_Defeated_Flag).w                 ; $FFFFF7A7
                move.b  #$0C, Obj_Routine(A0)                            ; $0024
                move.b  #$06, Obj_Map_Id(A0)                             ; $001A
                move.w  #$0096, Obj_Ani_Time(A0)                         ; $001E
                addi.w  #$0020, Obj_Y(A0)                                ; $000C
                moveq   #$07, D6
                move.w  #$009A, D5
                moveq   #-$1C, D4
loc_2B092:
                jsr     (SingleObjectLoad)                     ; loc_E6FE
                bne.s   loc_2B0BC
                move.b  #$28, Obj_Id(A1)                                 ; $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                add.w   D4, Obj_X(A1)                                    ; $0008
                addq.w  #$07, D4
                move.w  D5, Obj_Control_Var_0A(A1)                       ; $0036
                subq.w  #$08, D5
                dbra    D6, loc_2B092
loc_2B0BC:
                rts  
;-------------------------------------------------------------------------------
loc_2B0BE:
                moveq   #$07, D0
                and.b   ($FFFFFE0F).w, D0
                bne.s   loc_2B0FC
                jsr     (SingleObjectLoad)                     ; loc_E6FE
                bne.s   loc_2B0FC
                move.b  #$28, Obj_Id(A1)                                 ; $0000
                move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
                move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
                jsr     (PseudoRandomNumber)                   ; loc_325C
                andi.w  #$001F, D0
                subq.w  #$06, D0
                tst.w   D1
                bpl.s   loc_2B0F2
                neg.w   D0
loc_2B0F2:
                add.w   D0, Obj_X(A1)                                    ; $0008
                move.w  #$000C, Obj_Control_Var_0A(A1)                   ; $0036
loc_2B0FC:
                subq.w  #$01, Obj_Ani_Time(A0)                           ; $001E
                bne.s   loc_2B10C
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$00B4, Obj_Ani_Time(A0)                         ; $001E
loc_2B10C:
                rts   
;-------------------------------------------------------------------------------
loc_2B10E:
                moveq   #$3E, D0
                moveq   #$28, D1
                moveq   #$40, D2
                lea     (Player_Two).w, A1                           ; $FFFFB040
loc_2B118:
                cmp.b   (A1), D1
                beq.s   loc_2B12E
                adda.w  D2, A1
                dbra    D0, loc_2B118
                jsr     (Load_Level_Results)                   ; loc_F1F6
                jmp     (DeleteObject)                         ; loc_D314
loc_2B12E:
                rts   
;------------------------------------------------------------------------------- 
Egg_Prison_Animate_Data:                                       ; loc_2B130
                dc.w    loc_2B134-Egg_Prison_Animate_Data
                dc.w    loc_2B134-Egg_Prison_Animate_Data
loc_2B134:
                dc.b    $02, $01, $03, $FF        
;-------------------------------------------------------------------------------
Egg_Prison_Mappings:
		include "mappings/sprite/obj3E.asm"
;===============================================================================
; Object 0x3E - Container of animals from the stages after bosses
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Jmp_31_To_ModifySpriteAttr_2P:                                 ; loc_2B1E4
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
		dc.w    $0000
;===============================================================================
; Routine used to respond when the player touches an object
; [ Begin ]
;===============================================================================
TouchResponse:                                                 ; loc_2B1EC
		nop
		bsr     Jmp_00_To_TouchRings                   ; loc_2B732
		tst.b   (Boss_Flag).w                                ; $FFFFF7AA
		bne     Touch_Boss                             ; loc_2B2DC
		move.w  Obj_X(A0), D2                                    ; $0008
		move.w  Obj_Y(A0), D3                                    ; $000C
		subi.w  #$0008, D2
		moveq   #$00, D5
		move.b  Obj_Height_2(A0), D5                             ; $0016
		subq.b  #$03, D5
		sub.w   D5, D3
		cmpi.b  #$4D, Obj_Map_Id(A0)                             ; $001A
		bne.s   Touch_NoDuck                           ; loc_2B21E
		addi.w  #$000C, D3
		moveq   #$0A, D5
Touch_NoDuck:                                                  ; loc_2B21E
		move.w  #$0010, D4
		add.w   D5, D5
		lea     ($FFFFB800).w, A1
		move.w  #$005F, D6
Touch_Loop:                                                    ; loc_2B22C
		move.b  Obj_Col_Flags(A1), D0                            ; $0020
		bne     Touch_Height                           ; loc_2B240
Touch_NextObject:                                              ; loc_2B234
		lea     Obj_Size(A1), A1                                 ; $0040
		dbra    D6, Touch_Loop                         ; loc_2B22C
		moveq   #$00, D0
		rts
;-------------------------------------------------------------------------------
Touch_Height:                                                  ; loc_2B240
		andi.w  #$003F, D0
		add.w   D0, D0
		lea     Touch_Sizes(PC, D0), A2                ; loc_2B28C
		moveq   #$00, D1
		move.b  (A2)+, D1
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   D1, D0
		sub.w   D2, D0
		bcc.s   loc_2B262
		add.w   D1, D1
		add.w   D1, D0
		bcs.s   loc_2B268
		bra     Touch_NextObject                       ; loc_2B234
loc_2B262:
		cmp.w   D4, D0
		bhi     Touch_NextObject                       ; loc_2B234
loc_2B268:
		moveq   #$00, D1
		move.b  (A2)+, D1
		move.w  Obj_Y(A1), D0                                    ; $000C
		sub.w   D1, D0
		sub.w   D3, D0
		bcc.s   loc_2B282
		add.w   D1, D1
		add.w   D1, D0
		bcs     loc_2B366
		bra     Touch_NextObject                       ; loc_2B234
loc_2B282:
		cmp.w   D5, D0
		bhi     Touch_NextObject                       ; loc_2B234
		bra     loc_2B366
;-------------------------------------------------------------------------------
Touch_Sizes:                                                   ; loc_2B28C
		dc.b    $04, $04, $14, $14, $0C, $14, $14, $0C
		dc.b    $04, $10, $0C, $12, $10, $10, $06, $06
		dc.b    $18, $0C, $0C, $10, $10, $0C, $08, $08
		dc.b    $14, $10, $14, $08, $0E, $0E, $18, $18
		dc.b    $28, $10, $10, $18, $08, $10, $20, $70
		dc.b    $40, $20, $80, $20, $20, $20, $08, $08
		dc.b    $04, $04, $20, $08, $0C, $0C, $08, $04
		dc.b    $18, $04, $28, $04, $04, $08, $04, $18
		dc.b    $04, $28, $04, $20, $18, $18, $0C, $18
		dc.b    $48, $08, $18, $28, $10, $04, $20, $02
;-------------------------------------------------------------------------------
Touch_Boss:                                                    ; loc_2B2DC
		lea     Touch_Sizes(PC), A3                    ; loc_2B28C
		move.w  Obj_X(A0), D2                                    ; $0008
		move.w  Obj_Y(A0), D3                                    ; $000C
		subi.w  #$0008, D2
		moveq   #$00, D5
		move.b  Obj_Height_2(A0), D5                             ; $0016
		subq.b  #$03, D5
		sub.w   D5, D3
		cmpi.b  #$4D, Obj_Map_Id(A0)                             ; $001A
		bne.s   Touch_NoDuck_Boss                      ; loc_2B304
		addi.w  #$000C, D3
		moveq   #$0A, D5
Touch_NoDuck_Boss:                                             ; loc_2B304
		move.w  #$0010, D4
		add.w   D5, D5
		lea     ($FFFFB800).w, A1
		move.w  #$005F, D6
loc_2B312:
		move.b  Obj_Col_Flags(A1), D0                            ; $0020
		bne.s   loc_2B324
loc_2B318:
		lea     Obj_Size(A1), A1                                 ; $0040
		dbra    D6, loc_2B312
		moveq   #$00, D0
		rts
loc_2B324:
		bsr     loc_2B65C
		andi.w  #$003F, D0
		add.w   D0, D0
		lea     $00(A3, D0), A2
		moveq   #$00, D1
		move.b  (A2)+, D1
		move.w  Obj_X(A1), D0                                    ; $0008
		sub.w   D1, D0
		sub.w   D2, D0
		bcc.s   loc_2B348
		add.w   D1, D1
		add.w   D1, D0
		bcs.s   loc_2B34C
		bra.s   loc_2B318
loc_2B348:
		cmp.w   D4, D0
		bhi.s   loc_2B318
loc_2B34C:
		moveq   #$00, D1
		move.b  (A2)+, D1
		move.w  Obj_Y(A1), D0                                    ; $000C
		sub.w   D1, D0
		sub.w   D3, D0
		bcc.s   loc_2B362
		add.w   D1, D1
		add.w   D1, D0
		bcs.s   loc_2B366
		bra.s   loc_2B318
loc_2B362:
		cmp.w   D5, D0
		bhi.s   loc_2B318
loc_2B366:
		move.b  Obj_Col_Flags(A1), D1                            ; $0020
		andi.b  #$C0, D1
		beq     loc_2B3E0
		cmpi.b  #$C0, D1
		beq     Touch_Special                          ; loc_2B5D4
		tst.b   D1
		bmi     loc_2B4CA
		move.b  Obj_Col_Flags(A1), D0                            ; $0020
		andi.b  #$3F, D0
		cmpi.b  #$06, D0
		beq.s   loc_2B3A0
		cmpi.w  #$005A, Obj_P_Invunerblt_Time(A0)                ; $0030
		bcc     loc_2B39E
		move.b  #$04, Obj_Routine(A1)                            ; $0024
loc_2B39E:
		rts
loc_2B3A0:
		tst.w   Obj_Speed_Y(A0)                                  ; $0012
		bpl.s   loc_2B3CC
		move.w  Obj_Y(A0), D0                                    ; $000C
		subi.w  #$0010, D0
		cmp.w   Obj_Y(A1), D0                                    ; $000C
		bcs.s   loc_2B3DE
		neg.w   Obj_Speed_Y(A0)                                  ; $0012
		move.w  #$FE80, Obj_Speed_Y(A1)                          ; $0012
		tst.b   Obj_Routine_2(A1)                                ; $0025
		bne.s   loc_2B3DE
		move.b  #$04, Obj_Routine_2(A1)                          ; $0025
		rts
loc_2B3CC:
		cmpi.b  #$02, Obj_Ani_Number(A0)                         ; $001C
		bne.s   loc_2B3DE
		neg.w   Obj_Speed_Y(A0)                                  ; $0012
		move.b  #$04, Obj_Routine(A1)                            ; $0024
loc_2B3DE:
		rts
loc_2B3E0:
		tst.b   (Invincibility_Flag).w                       ; $FFFFFE2D
		bne.s   loc_2B3F8
		cmpi.b  #$09, Obj_Ani_Number(A0)                         ; $001C
		beq.s   loc_2B3F8
		cmpi.b  #$02, Obj_Ani_Number(A0)                         ; $001C
		bne     loc_2B4CA
loc_2B3F8:
		btst    #$06, Obj_Flags(A1)                              ; $0001
		beq.s   loc_2B42A
		tst.b   Obj_P_Invcbility_Time(A1)                        ; $0032
		beq.s   loc_2B428
		neg.w   Obj_Speed(A0)                                    ; $0010
		neg.w   Obj_Speed_Y(A0)                                  ; $0012
		cmpi.b  #$03, (Boss_Flag).w                          ; $FFFFF7AA
		beq.s   loc_2B41E
		asr.w   Obj_Speed(A0)                                    ; $0010
		asr.w   Obj_Speed_Y(A0)                                  ; $0012
loc_2B41E:
		move.b  #$00, Obj_Col_Flags(A1)                          ; $0020
		subq.b  #$01, Obj_P_Invcbility_Time(A1)                  ; $0032
loc_2B428:
		rts
loc_2B42A:
		tst.b   Obj_Col_Prop(A1)                                 ; $0021
		beq.s   Touch_KillEnemy                        ; loc_2B454
		neg.w   Obj_Speed(A0)                                    ; $0010
		neg.w   Obj_Speed_Y(A0)                                  ; $0012
		asr.w   Obj_Speed(A0)                                    ; $0010
		asr.w   Obj_Speed_Y(A0)                                  ; $0012
		move.b  #$00, Obj_Col_Flags(A1)                          ; $0020
		subq.b  #$01, Obj_Col_Prop(A1)                           ; $0021
		bne.s   loc_2B452
		bset    #$07, Obj_Status(A1)                             ; $0022
loc_2B452:
		rts
;-------------------------------------------------------------------------------
Touch_KillEnemy:                                               ; loc_2B454
		bset    #$07, Obj_Status(A1)                             ; $0022
		moveq   #$00, D0
		move.w  ($FFFFF7D0).w, D0
		addq.w  #$02, ($FFFFF7D0).w
		cmpi.w  #$0006, D0
		bcs.s   loc_2B46C
		moveq   #$06, D0
loc_2B46C:
		move.w  D0, Obj_Player_Top_Solid(A1)                     ; $003E
		move.w  Enemy_Points(PC, D0), D0               ; loc_2B4BC
		cmpi.w  #$0020, ($FFFFF7D0).w
		bcs.s   loc_2B486
		move.w  #$03E8, D0
		move.w  #$000A, Obj_Player_Top_Solid(A1)                 ; $003E
loc_2B486:
		bsr     AddPoints                              ; loc_2D2D4
		move.b  #$27, Obj_Id(A1)                                 ; $0000
		move.b  #$00, Obj_Routine(A1)                            ; $0024
		tst.w   Obj_Speed_Y(A0)                                  ; $0012
		bmi.s   loc_2B4AC
		move.w  Obj_Y(A0), D0                                    ; $000C
		cmp.w   Obj_Y(A1), D0                                    ; $000C
		bcc.s   loc_2B4B4
		neg.w   Obj_Speed_Y(A0)                                  ; $0012
		rts
loc_2B4AC:
		addi.w  #$0100, Obj_Speed_Y(A0)                          ; $0012
		rts
loc_2B4B4:
		subi.w  #$0100, Obj_Speed_Y(A0)                          ; $0012
		rts
;-------------------------------------------------------------------------------
Enemy_Points:                                                  ; loc_2B4BC
		dc.w    $000A      ;  100
		dc.w    $0014      ;  200
		dc.w    $0032      ;  500
		dc.w    $0064      ; 1000
;-------------------------------------------------------------------------------
loc_2B4C4:
		bset    #$07, Obj_Status(A1)
loc_2B4CA:
		tst.b   (Invincibility_Flag).w                       ; $FFFFFE2D
		beq.s   Touch_Hurt                             ; loc_2B4D4
loc_2B4D0:
		moveq   #-$01, D0
		rts
;-------------------------------------------------------------------------------
Touch_Hurt:                                                    ; loc_2B4D4
		nop
		tst.w   Obj_P_Invunerblt_Time(A0)                        ; $0030
		bne.s   loc_2B4D0
		move.l  A1, A2
;-------------------------------------------------------------------------------
;Hurt_Player: HurtSonic:                                       ; loc_2B4DE
HurtCharacter:
		tst.b   (Shield_Flag).w                              ; $FFFFFE2C
		bne.s   Hurt_Shield                            ; loc_2B506
		tst.w   (Ring_Count).w                               ; $FFFFFE20
		beq     Hurt_NoRings                           ; loc_2B574
		jsr     (SingleObjectLoad)                     ; loc_E6FE
		bne.s   Hurt_Shield                            ; loc_2B506
		move.b  #$37, Obj_Id(A1)                                 ; $0000
		move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
Hurt_Shield:                                                   ; loc_2B506
		move.b  #$00, (Shield_Flag).w                        ; $FFFFFE2C
		move.b  #$04, Obj_Routine(A0)                            ; $0024
		bsr     Jmp_00_To_Sonic_ResetOnFloor           ; loc_2B72C
		bset    #$01, Obj_Status(A0)                             ; $0022
		move.w  #$FC00, Obj_Speed_Y(A0)                          ; $0012
		move.w  #$FE00, Obj_Speed(A0)                            ; $0010
		btst    #$06, Obj_Status(A0)                             ; $0022
		beq.s   Hurt_Reverse
		move.w  #$FE00, Obj_Speed_Y(A0)                          ; $0012
		move.w  #$FF00, Obj_Speed(A0)                            ; $0010
Hurt_Reverse:
		move.w  Obj_X(A0), D0                                    ; $0008
		cmp.w   Obj_X(A2), D0                                    ; $0008
		bcs.s   Hurt_ChkSpikes
		neg.w   Obj_Speed(A0)                                    ; $0010
Hurt_ChkSpikes:
		move.w  #$0, Obj_Inertia(A0)                             ; $0014
		move.b  #$1A, Obj_Ani_Number(A0)                         ; $001C
		move.w  #$0078, Obj_P_Invunerblt_Time(A0)                ; $0030
		move.w  #$A3, D0              ; play normal hurt sound
		cmpi.b  #$36, (A2)            ; was the damage caused by spikes?
		bne.s   Hurt_Sound            ; if not, branch
		move.w  #$A6, D0              ; play spikes hurt sound
Hurt_Sound:
		jsr     (Play_Sfx)                             ; loc_1512
		moveq   #-$01, D0
		rts
;-------------------------------------------------------------------------------
Hurt_NoRings:                                                  ; loc_2B574
		tst.w   (Debug_Mode_Active_Flag).w                   ; $FFFFFFFA
		bne     Hurt_Shield                            ; loc_2B506

;Kill_Player: KillSonic:                                       ; loc_2B57C
KillCharacter:
		tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
		bne.s   Kill_NoDeath                           ; loc_2B5D0
		move.b  #$00, (Invincibility_Flag).w                 ; $FFFFFE2D
		move.b  #$06, Obj_Routine(A0)                            ; $0024
		bsr     Jmp_00_To_Sonic_ResetOnFloor           ; loc_2B72C
		bset    #$01, Obj_Status(A0)                             ; $0022
		move.w  #$F900, Obj_Speed_Y(A0)                          ; $0012
		move.w  #$0000, Obj_Speed(A0)                            ; $0010
		move.w  #$0000, Obj_Inertia(A0)                          ; $0014
		move.w  Obj_Y(A0), Obj_Player_St_Convex(A0)       ; $000C, $0038
		move.b  #$18, Obj_Ani_Number(A0)                         ; $001C
		bset    #$07, Obj_Art_VRAM(A0)                           ; $0002
		move.w  #$00A3, D0
		cmpi.b  #$36, (A2)
		bne.s   loc_2B5CA
		move.w  #$A6, D0             ; play death sound
loc_2B5CA:
		jsr     (Play_Sfx)                             ; loc_1512
Kill_NoDeath:                                                  ; loc_2B5D0
		moveq   #-$01, D0
		rts
;-------------------------------------------------------------------------------
Touch_Special:                                                 ; loc_2B5D4:
		move.b  Obj_Col_Flags(A1), D1                            ; $0020
		andi.b  #$3F, D1
		cmpi.b  #$06, D1
		beq.s   loc_2B644
		cmpi.b  #$0B, D1
		beq.s   loc_2B60E
		cmpi.b  #$0C, D1
		beq.s   loc_2B612
		cmpi.b  #$14, D1
		beq.s   loc_2B644
		cmpi.b  #$15, D1
		beq.s   loc_2B644
		cmpi.b  #$16, D1
		beq.s   loc_2B644
		cmpi.b  #$17, D1
		beq.s   loc_2B644
		cmpi.b  #$21, D1
		beq.s   loc_2B656
		rts
loc_2B60E:
		bra     loc_2B4C4
loc_2B612:
		sub.w   D0, D5
		cmpi.w  #$0008, D5
		bcc.s   loc_2B640
		move.w  Obj_X(A1), D0                                    ; $0008
		subq.w  #$04, D0
		btst    #$00, Obj_Status(A1)                             ; $0022
		beq.s   loc_2B62C
		subi.w  #$0010, D0
loc_2B62C:
		sub.w   D2, D0
		bcc.s   loc_2B638
		addi.w  #$0018, D0
		bcs.s   loc_2B63C
		bra.s   loc_2B640
loc_2B638:
		cmp.w   D4, D0
		bhi.s   loc_2B640
loc_2B63C:
		bra     loc_2B4CA
loc_2B640:
		bra     loc_2B3E0
loc_2B644:
		move.w  A0, D1
		subi.w  #Obj_Memory_Address, D1                          ; $B000
		beq.s   loc_2B650
		addq.b  #$01, Obj_Col_Prop(A1)                           ; $0021
loc_2B650:
		addq.b  #$01, Obj_Col_Prop(A1)                           ; $0021
		rts
loc_2B656:
		addq.b  #$01, Obj_Col_Prop(A1)                           ; $0021
		rts
;-------------------------------------------------------------------------------
loc_2B65C:
		cmpi.b  #$0F, D0
		bne.s   loc_2B676
		moveq   #$00, D0
		move.b  (Boss_Flag).w, D0                            ; $FFFFF7AA
		beq.s   loc_2B676
		subq.w  #$01, D0
		add.w   D0, D0
		move.w  loc_2B678(PC, D0), D0
		jmp     loc_2B678(PC, D0)
loc_2B676:
		rts
;-------------------------------------------------------------------------------
loc_2B678:
		dc.w    loc_2B688-loc_2B678
		dc.w    loc_2B688-loc_2B678
		dc.w    loc_2B68E-loc_2B678
		dc.w    loc_2B6F6-loc_2B678
		dc.w    loc_2B6F6-loc_2B678
		dc.w    loc_2B6F6-loc_2B678
		dc.w    loc_2B6F6-loc_2B678
		dc.w    loc_2B6F6-loc_2B678
;-------------------------------------------------------------------------------
loc_2B688:
		move.b  Obj_Col_Flags(A1), D0                            ; $0020
		rts
;-------------------------------------------------------------------------------
loc_2B68E:
		tst.b   ($FFFFF73F).w
		bne.s   loc_2B696
		rts
loc_2B696:
		move.w  D7, -(A7)
		moveq   #$00, D1
		move.b  Obj_Ani_Boss_Frame(A1), D1                       ; $0015
		subq.b  #$02, D1
		cmpi.b  #$07, D1
		bgt.s   loc_2B6D6
		move.w  D1, D7
		add.w   D7, D7
		move.w  Obj_X(A1), D0                                    ; $0008
		btst    #$00, Obj_Flags(A1)                              ; $0001
		beq.s   loc_2B6BC
		add.w   loc_2B6DE(PC, D7), D0
		bra.s   loc_2B6C0
loc_2B6BC:
		sub.w   loc_2B6DE(PC, D7), D0
loc_2B6C0:
		move.b  loc_2B6EE(PC, D1), D1
		ori.l   #$00040000, D1
		move.w  Obj_Y(A1), D7                                    ; $000C
		subi.w  #$001C, D7
		bsr     loc_2B6FC
loc_2B6D6:
		move.w  (A7)+, D7
		move.b  Obj_Col_Flags(A1), D0                            ; $0020
		rts
;-------------------------------------------------------------------------------
loc_2B6DE:
		dc.w    $001C, $0020, $0028, $0034, $003C, $0044, $0060, $0070
;-------------------------------------------------------------------------------
loc_2B6EE:
		dc.b    $04, $04, $08, $0C, $14, $1C, $24, $08
;-------------------------------------------------------------------------------
loc_2B6F6:
		move.b  Obj_Col_Flags(A1), D0                            ; $0020
		rts
loc_2B6FC:
		sub.w   D1, D0
		sub.w   D2, D0
		bcc.s   loc_2B70A
		add.w   D1, D1
		add.w   D1, D0
		bcs.s   loc_2B70E
loc_2B708:
		rts
loc_2B70A:
		cmp.w   D4, D0
		bhi.s   loc_2B708
loc_2B70E:
		swap.w  D1
		sub.w   D1, D7
		sub.w   D3, D7
		bcc.s   loc_2B720
		add.w   D1, D1
		add.w   D1, D7
		bcs     loc_2B4CA
		bra.s   loc_2B708
loc_2B720:
		cmp.w   D5, D7
		bhi     loc_2B708
		bra     loc_2B4CA
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------
Jmp_00_To_Sonic_ResetOnFloor:                                  ; loc_2B72C
		jmp     (Sonic_ResetOnFloor)                   ; loc_10A46
Jmp_00_To_TouchRings:                                          ; loc_2B732
		jmp     (TouchRings)                           ; loc_DEFC

;===============================================================================
; Routine to show the layout of Special Stages - Leftover from Sonic 1
; [ Begin ]
;===============================================================================
Special_Stage_Show_Layout:                                     ; loc_2B738
		bsr     loc_2B87A
		bsr     loc_2BABA
		move.w  D5, -(A7)
		lea     (Level_Map_Buffer).w, A1                     ; $FFFF8000
		move.b  ($FFFFF750).w, D0
		andi.b  #$FC, D0
		jsr     (CalcSine)                             ; loc_3282
		move.w  D0, D4
		move.w  D1, D5
		muls.w  #$0018, D4
		muls.w  #$0018, D5
		moveq   #$00, D2
		move.w  (Camera_X).w, D2                             ; $FFFFEE00
		divu.w  #$0018, D2
		swap.w  D2
		neg.w   D2
		addi.w  #$FF4C, D2
		moveq   #$00, D3
		move.w  (Camera_Y).w, D3                             ; $FFFFEE04
		divu.w  #$0018, D3
		swap.w  D3
		neg.w   D3
		addi.w  #$FF4C, D3
		move.w  #$000F, D7
loc_2B788:
		movem.w D0-D2, -(A7)
		movem.w D0/D1, -(A7)
		neg.w   D0
		muls.w  D2, D1
		muls.w  D3, D0
		move.l  D0, D6
		add.l   D1, D6
		movem.w (A7)+, D0/D1
		muls.w  D2, D0
		muls.w  D3, D1
		add.l   D0, D1
		move.l  D6, D2
		move.w  #$000F, D6
loc_2B7AA:
		move.l  D2, D0
		asr.l   #$08, D0
		move.w  D0, (A1)+
		move.l  D1, D0
		asr.l   #$08, D0
		move.w  D0, (A1)+
		add.l   D5, D2
		add.l   D4, D1
		dbra    D6, loc_2B7AA
		movem.w (A7)+, D0-D2
		addi.w  #$0018, D3
		dbra    D7, loc_2B788
		move.w  (A7)+, D5
		lea     (M68K_RAM_Start), A0                         ; $FFFF0000
		moveq   #$00, D0
		move.w  (Camera_Y).w, D0                             ; $FFFFEE04
		divu.w  #$0018, D0
		mulu.w  #$0080, D0
		adda.l  D0, A0
		moveq   #$00, D0
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		divu.w  #$0018, D0
		adda.w  D0, A0
		lea     (Level_Map_Buffer).w, A4                     ; $FFFF8000
		move.w  #$000F, D7
loc_2B7F6:
		move.w  #$000F, D6
loc_2B7FA:
		moveq   #$00, D0
		move.b  (A0)+, D0
		beq.s   loc_2B852
		cmpi.b  #$4E, D0
		bhi.s   loc_2B852
		move.w  (A4), D3
		addi.w  #$0120, D3
		cmpi.w  #$0070, D3
		bcs.s   loc_2B852
		cmpi.w  #$01D0, D3
		bcc.s   loc_2B852
		move.w  $0002(A4), D2
		addi.w  #$00F0, D2
		cmpi.w  #$0070, D2
		bcs.s   loc_2B852
		cmpi.w  #$0170, D2
		bcc.s   loc_2B852
		lea     (SS_Ram_Layout_Address), A5                  ; $FFFF4000
		lsl.w   #$03, D0
		lea     $00(A5, D0), A5
		move.l  (A5)+, A1
		move.w  (A5)+, D1
		add.w   D1, D1
		adda.w  $00(A1, D1), A1
		move.w  (A5)+, A3
		moveq   #$00, D1
		move.b  (A1)+, D1
		subq.b  #$01, D1
		bmi.s   loc_2B852
		jsr     (Build_Sprite_Right)                   ; loc_D66E
loc_2B852:
		addq.w  #$04, A4
		dbra    D6, loc_2B7FA
		lea     $0070(A0), A0
		dbra    D7, loc_2B7F6
		move.b  D5, ($FFFFF62C).w
		cmpi.b  #$50, D5
		beq.s   loc_2B872
		move.l  #$00000000, (A2)
		rts
loc_2B872:
		move.b  #$00, $FFFFFFFB(a2)
		rts
loc_2B87A:
		lea     (SS_Ram_Layout_Address+$000C), A1            ; $FFFF400C
		moveq   #$00, D0
		move.b  ($FFFFF750).w, D0
		lsr.b   #$02, D0
		andi.w  #$000F, D0
		moveq   #$23, D1
loc_2B88E:
		move.w  D0, (A1)
		addq.w  #$08, A1
		dbra    D1, loc_2B88E
		lea     (SS_Ram_Layout_Address+$0005), A1            ; $FFFF4005
		subq.b  #$01, (Object_Frame_Buffer+$0002).w          ; $FFFFFEA2
		bpl.s   loc_2B8B2
		move.b  #$07, (Object_Frame_Buffer+$0002).w          ; $FFFFFEA2
		addq.b  #$01, (Object_Frame_Buffer+$0003).w          ; $FFFFFEA3
		andi.b  #$03, (Object_Frame_Buffer+$0003).w          ; $FFFFFEA3
loc_2B8B2:
		move.b  (Object_Frame_Buffer+$0003).w, $01D0(A1)     ; $FFFFFEA3
		subq.b  #$01, (Object_Frame_Buffer+$0004).w          ; $FFFFFEA4
		bpl.s   loc_2B8CE
		move.b  #$07, (Object_Frame_Buffer+$0004).w          ; $FFFFFEA4
		addq.b  #$01, (Object_Frame_Buffer+$0005).w          ; $FFFFFEA5
		andi.b  #$01, (Object_Frame_Buffer+$0005).w          ; $FFFFFEA5
loc_2B8CE:
		move.b  (Object_Frame_Buffer+$0005).w, D0            ; $FFFFFEA5
		move.b  D0, $0138(A1)
		move.b  D0, $0160(A1)
		move.b  D0, $0148(A1)
		move.b  D0, $0150(A1)
		move.b  D0, $01D8(A1)
		move.b  D0, $01E0(A1)
		move.b  D0, $01E8(A1)
		move.b  D0, $01F0(A1)
		move.b  D0, $01F8(A1)
		move.b  D0, $0200(A1)
		subq.b  #$01, (Object_Frame_Buffer+$0006).w          ; $FFFFFEA6
		bpl.s   loc_2B910
		move.b  #$04, (Object_Frame_Buffer+$0006).w          ; $FFFFFEA6
		addq.b  #$01, (Object_Frame_Buffer+$0007).w          ; $FFFFFEA7
		andi.b  #$03, (Object_Frame_Buffer+$0007).w          ; $FFFFFEA7
loc_2B910:
		move.b  (Object_Frame_Buffer+$0007).w, D0            ; $FFFFFEA7
		move.b  D0, $0168(A1)
		move.b  D0, $0170(A1)
		move.b  D0, $0178(A1)
		move.b  D0, $0180(A1)
		subq.b  #$01, (Object_Frame_Buffer).w                ; $FFFFFEA0
		bpl.s   loc_2B93A
		move.b  #$07, (Object_Frame_Buffer).w                ; $FFFFFEA0
		subq.b  #$01, (Object_Frame_Buffer+$0001).w          ; $FFFFFEA1
		andi.b  #$07, (Object_Frame_Buffer+$0001).w          ; $FFFFFEA1
loc_2B93A:
		lea     (SS_Ram_Layout_Address+$0016), A1            ; $FFFF4016
		lea     (SS_WaRiVramSet), A0                   ; loc_2BA24
		moveq   #$00, D0
		move.b  (Object_Frame_Buffer+$0001).w, D0            ; $FFFFFEA1
		add.w   D0, D0
		lea     $00(A0, D0), A0
		move.w  (A0), (A1)
		move.w  $0002(A0), $0008(A1)
		move.w  $0004(A0), $0010(A1)
		move.w  $0006(A0), $0018(A1)
		move.w  $0008(A0), $0020(A1)
		move.w  $000A(A0), $0028(A1)
		move.w  $000C(A0), $0030(A1)
		move.w  $000E(A0), $0038(A1)
		adda.w  #$0020, A0
		adda.w  #$0048, A1
		move.w  (A0), (A1)
		move.w  $0002(A0), $0008(A1)
		move.w  $0004(A0), $0010(A1)
		move.w  $0006(A0), $0018(A1)
		move.w  $0008(A0), $0020(A1)
		move.w  $000A(A0), $0028(A1)
		move.w  $000C(A0), $0030(A1)
		move.w  $000E(A0), $0038(A1)
		adda.w  #$0020, A0
		adda.w  #$0048, A1
		move.w  (A0), (A1)
		move.w  $0002(A0), $0008(A1)
		move.w  $0004(A0), $0010(A1)
		move.w  $0006(A0), $0018(A1)
		move.w  $0008(A0), $0020(A1)
		move.w  $000A(A0), $0028(A1)
		move.w  $000C(A0), $0030(A1)
		move.w  $000E(A0), $0038(A1)
		adda.w  #$0020, A0
		adda.w  #$0048, A1
		move.w  (A0), (A1)
		move.w  $0002(A0), $0008(A1)
		move.w  $0004(A0), $0010(A1)
		move.w  $0006(A0), $0018(A1)
		move.w  $0008(A0), $0020(A1)
		move.w  $000A(A0), $0028(A1)
		move.w  $000C(A0), $0030(A1)
		move.w  $000E(A0), $0038(A1)
		adda.w  #$0020, A0
		adda.w  #$0048, A1
		rts
;-------------------------------------------------------------------------------
SS_WaRiVramSet:                                                ; loc_2BA24
		dc.w    $0142, $6142, $0142, $0142, $0142, $0142, $0142, $6142
		dc.w    $0142, $6142, $0142, $0142, $0142, $0142, $0142, $6142
		dc.w    $2142, $0142, $2142, $2142, $2142, $2142, $2142, $0142
		dc.w    $2142, $0142, $2142, $2142, $2142, $2142, $2142, $0142
		dc.w    $4142, $2142, $4142, $4142, $4142, $4142, $4142, $2142
		dc.w    $4142, $2142, $4142, $4142, $4142, $4142, $4142, $2142
		dc.w    $6142, $4142, $6142, $6142, $6142, $6142, $6142, $4142
		dc.w    $6142, $4142, $6142, $6142, $6142, $6142, $6142, $4142
;-------------------------------------------------------------------------------
loc_2BAA4:
		lea     (SS_Ram_Layout_Address+$0400), A2            ; $FFFF4400
		move.w  #$001F, D0
loc_2BAAE:
		tst.b   (A2)
		beq.s   loc_2BAB8
		addq.w  #$08, A2
		dbra    D0, loc_2BAAE
loc_2BAB8:
		rts
;-------------------------------------------------------------------------------
loc_2BABA:
		lea     (SS_Ram_Layout_Address+$0400), A0            ; $FFFF4400
		move.w  #$001F, D7
loc_2BAC4:
		moveq   #$00, D0
		move.b  (A0), D0
		beq.s   loc_2BAD2
		lsl.w   #$02, D0
		move.l  SS_AniIndex-$04(PC, D0), A1            ; loc_2BAD6
		jsr     (A1)
loc_2BAD2:
		addq.w  #$08, A0
		dbra    D7, loc_2BAC4
		rts
;-------------------------------------------------------------------------------
SS_AniIndex:                                                   ; loc_2BADA
		dc.l    SS_1_Animate                           ; loc_2BAF2
		dc.l    SS_2_Animate                           ; loc_2BB22
		dc.l    SS_3_Animate                           ; loc_2BB58
		dc.l    SS_4_Animate                           ; loc_2BB88
		dc.l    SS_5_Animate                           ; loc_2BBBE
		dc.l    SS_6_Animate                           ; loc_2BBFE
;-------------------------------------------------------------------------------
SS_1_Animate:                                                  ; loc_2BAF2
		subq.b  #$01, $0002(A0)
		bpl.s   loc_2BB1A
		move.b  #$05, $0002(A0)
		moveq   #$00, D0
		move.b  $0003(A0), D0
		addq.b  #$01, $0003(A0)
		move.l  $0004(A0), A1
		move.b  SS_1_Animate_Data(PC, D0), D0          ; loc_2BB1C
		move.b  D0, (A1)
		bne.s   loc_2BB1A
		clr.l   (A0)
		clr.l   $0004(A0)
loc_2BB1A:
		rts
;-------------------------------------------------------------------------------
SS_1_Animate_Data:                                             ; loc_2BB1C
		dc.b    $42, $43, $44, $45, $00, $00
;-------------------------------------------------------------------------------
SS_2_Animate:                                                  ; loc_2BB22
		subq.b  #$01, $0002(A0)
		bpl.s   loc_2BB50
		move.b  #$07, $0002(A0)
		moveq   #$00, D0
		move.b  $0003(A0), D0
		addq.b  #$01, $0003(A0)
		move.l  $0004(A0), A1
		move.b  SS_2_Animate_Data(PC, D0), D0          ; loc_2BB52
		bne.s   loc_2BB4E
		clr.l   (A0)
		clr.l   $0004(A0)
		move.b  #$25, (A1)
		rts
loc_2BB4E:
		move.b  D0, (A1)
loc_2BB50:
		rts
;-------------------------------------------------------------------------------
SS_2_Animate_Data:                                             ; loc_2BB52
		dc.b    $32, $33, $32, $33, $00, $00
;-------------------------------------------------------------------------------
SS_3_Animate:                                                  ; loc_2BB58
		subq.b  #$01, $0002(A0)
		bpl.s   loc_2BB80
		move.b  #$05, $0002(A0)
		moveq   #$00, D0
		move.b  $0003(A0), D0
		addq.b  #$01, $0003(A0)
		move.l  $0004(A0), A1
		move.b  SS_3_Animate_Data(PC, D0), D0          ; loc_2BB82
		move.b  D0, (A1)
		bne.s   loc_2BB80
		clr.l   (A0)
		clr.l   $0004(A0)
loc_2BB80:
		rts
;-------------------------------------------------------------------------------
SS_3_Animate_Data:                                             ; loc_2BB82
		dc.b    $46, $47, $48, $49, $00, $00
;-------------------------------------------------------------------------------
SS_4_Animate:                                                  ; loc_2BB88
		subq.b  #$01, $0002(A0)
		bpl.s   loc_2BBB6
		move.b  #$07, $0002(A0)
		moveq   #$00, D0
		move.b  $0003(A0), D0
		addq.b  #$01, $0003(A0)
		move.l  $0004(A0), A1
		move.b  SS_4_Animate_Data(PC, D0), D0          ; loc_2BBB8
		bne.s   loc_2BBB4
		clr.l   (A0)
		clr.l   $0004(A0)
		move.b  #$2B, (A1)
		rts
loc_2BBB4:
		move.b  D0, (A1)
loc_2BBB6:
		rts
;-------------------------------------------------------------------------------
SS_4_Animate_Data:                                             ; loc_2BBB8
		dc.b    $2B, $31, $2B, $31, $00, $00
;-------------------------------------------------------------------------------
SS_5_Animate:                                                  ; loc_2BBBE
		subq.b  #$01, $0002(A0)
		bpl.s   loc_2BBF6
		move.b  #$05, $0002(A0)
		moveq   #$00, D0
		move.b  $0003(A0), D0
		addq.b  #$01, $0003(A0)
		move.l  $0004(A0), A1
		move.b  SS_5_Animate_Data(PC, D0), D0          ; loc_2BBF8
		move.b  D0, (A1)
		bne.s   loc_2BBF6
		clr.l   (A0)
		clr.l   $0004(A0)
		move.b  #$04, (Player_One+Obj_Routine).w             ; $FFFFB024
		move.w  #$00A8, D0
		jsr     (Play_Sfx)                             ; loc_1512
loc_2BBF6:
		rts
;-------------------------------------------------------------------------------
SS_5_Animate_Data:                                             ; loc_2BBF8
		dc.b    $46, $47, $48, $49, $00, $00
;-------------------------------------------------------------------------------
SS_6_Animate:                                                  ; loc_2BBFE
		subq.b  #$01, $0002(A0)
		bpl.s   loc_2BC2A
		move.b  #$01, $0002(A0)
		moveq   #$00, D0
		move.b  $0003(A0), D0
		addq.b  #$01, $0003(A0)
		move.l  $0004(A0), A1
		move.b  SS_6_Animate_Data(PC, D0), D0          ; loc_2BC2C
		move.b  D0, (A1)
		bne.s   loc_2BC2A
		move.b  $0004(A0), (A1)
		clr.l   (A0)
		clr.l   $0004(A0)
loc_2BC2A:
		rts
;-------------------------------------------------------------------------------
SS_6_Animate_Data:                                             ; loc_2BC2C
		dc.b    $4B, $4C, $4D, $4E, $4B, $4C, $4D, $4E
		dc.b    $00, $00
;===============================================================================
; Routine to show the layout of Special Stages - Leftover from Sonic 1
; [ End ]
;===============================================================================

;===============================================================================
; Routine to load the layout of the Special Stages - Leftover from Sonic 1
; [ Begin ]
;===============================================================================
Special_Stage_Layout_Index:                                    ; loc_2BC36
		dc.l    Special_Stage_1                        ; loc_3B3EA
		dc.l    Special_Stage_2                        ; loc_3B664
		dc.l    Special_Stage_3                        ; loc_3BA76
		dc.l    Special_Stage_4                        ; loc_3BDD2
		dc.l    Special_Stage_5                        ; loc_3C2AC
		dc.l    Special_Stage_6                        ; loc_3C75C
;-------------------------------------------------------------------------------
SS_Player_Start_Position_Array:                                ; loc_2BC4E
		dc.w    $03D0, $02E0   ; Special Stage 1
		dc.w    $0328, $0574   ; Special Stage 2
		dc.w    $04E4, $02E0   ; Special Stage 3
		dc.w    $03AD, $02E0   ; Special Stage 4
		dc.w    $0340, $06B8   ; Special Stage 5
		dc.w    $049B, $0358   ; Special Stage 6
;-------------------------------------------------------------------------------
Special_Stage_Load:                                            ; loc_2BC66
		moveq   #$00, D0
		move.b  (Special_Stage_Id).w, D0                     ; $FFFFFE16
		addq.b  #$01, (Special_Stage_Id).w                   ; $FFFFFE16
		cmpi.b  #$06, (Special_Stage_Id).w                   ; $FFFFFE16
		bcs.s   loc_2BC7E
		move.b  #$00, (Special_Stage_Id).w                   ; $FFFFFE16
loc_2BC7E:
		cmpi.b  #$06, (Emerald_Count).w                      ; $FFFFFE57
		beq.s   loc_2BCA0
		moveq   #$00, D1
		move.b  (Emerald_Count).w, D1                        ; $FFFFFE57
		subq.b  #$01, D1
		bcs.s   loc_2BCA0
		lea     (Emerald_Collected_Flag_List).w, A3          ; $FFFFFE58
loc_2BC94:
		cmp.b   $00(A3, D1), D0
		bne.s   loc_2BC9C
		bra.s   Special_Stage_Load                     ; loc_2BC66
loc_2BC9C:
		dbra    D1, loc_2BC94
loc_2BCA0:
		lsl.w   #$02, D0
		lea     SS_Player_Start_Position_Array(PC, D0), A1 ; loc_2BC4E
		move.w  (A1)+, (Player_One_Position_X).w             ; $FFFFB008
		move.w  (A1)+, (Player_One_Position_Y).w             ; $FFFFB00C
		move.l  Special_Stage_Layout_Index(PC, D0), A0 ; loc_2BC36
		lea     (SS_Ram_Layout_Address), A1                  ; $FFFF4000
		move.w  #$0000, D0
		jsr     (EniDec)                            ; loc_1932
		lea     (M68K_RAM_Start), A1                         ; $FFFF0000
		move.w  #$0FFF, D0
loc_2BCCC:
		clr.l   (A1)+
		dbra    D0, loc_2BCCC
		lea     ($FFFF1020), A1
		lea     (SS_Ram_Layout_Address), A0                  ; $FFFF4000
		moveq   #$3F, D1
loc_2BCE0:
		moveq   #$3F, D2
loc_2BCE2:
		move.b  (A0)+, (A1)+
		dbra    D2, loc_2BCE2
		lea     Obj_Size(A1), A1                                 ; $0040
		dbra    D1, loc_2BCE0
		lea     (SS_Ram_Layout_Address+$0008), A1            ; $FFFF4008
		lea     (SS_Obj_Mappings_Ptr), A0              ; loc_2BD22
		moveq   #$4D, D1
loc_2BCFE:
		move.l  (A0)+, (A1)+
		move.w  #$0000, (A1)+
		move.b  $FFFFFFFC(A0), $FFFFFFFF(A1)
		move.w  (A0)+, (A1)+
		dbra    D1, loc_2BCFE
		lea     (SS_Ram_Layout_Address+$0400), A1            ; $FFFF4400
		move.w  #$003F, D1
loc_2BD1A:
		clr.l   (A1)+
		dbra    D1, loc_2BD1A
		rts
;-------------------------------------------------------------------------------
SS_Obj_Mappings_Ptr:                                           ; loc_2BD22
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $2142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $2142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $2142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $2142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $2142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $2142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $2142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $2142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $2142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $4142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $4142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $4142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $4142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $4142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $4142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $4142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $4142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $4142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $6142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $6142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $6142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $6142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $6142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $6142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $6142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $6142
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $6142
		dc.l    Red_Ball_Bumper_Mappings               ; loc_14994
		dc.w    $023B
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0570
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0251
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0370
		dc.l    SS_Up_Mappings                         ; loc_2BF2A
		dc.w    $0263
		dc.l    SS_Down_Mappings                       ; loc_2BF3A
		dc.w    $0263
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $22F0
		dc.l    SS_Red_White_Ball_Mappings             ; loc_2BF0A
		dc.w    $0470
		dc.l    SS_Red_White_Ball_Mappings             ; loc_2BF0A
		dc.w    $05F0
		dc.l    SS_Red_White_Ball_Mappings             ; loc_2BF0A
		dc.w    $65F0
		dc.l    SS_Red_White_Ball_Mappings             ; loc_2BF0A
		dc.w    $25F0
		dc.l    SS_Red_White_Ball_Mappings             ; loc_2BF0A
		dc.w    $45F0
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $02F0
		dc.l    (($01<<$18)|Red_Ball_Bumper_Mappings)  ; loc_14994
		dc.w    $023B
		dc.l    (($02<<$18)|Red_Ball_Bumper_Mappings)  ; loc_14994
		dc.w    $023B
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0797
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $07A0
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $07A9
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $0797
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $07A0
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $07A9
		dc.l    Rings_Mappings                         ; loc_AEA0
		dc.w    $27B2
		dc.l    SS_Emerald_Mappings                    ; loc_2BF52
		dc.w    $0770
		dc.l    SS_Emerald_Mappings                    ; loc_2BF52
		dc.w    $2770
		dc.l    SS_Emerald_Mappings                    ; loc_2BF52
		dc.w    $4770
		dc.l    SS_Emerald_Mappings                    ; loc_2BF52
		dc.w    $6770
		dc.l    SS_Red_Emerald_Mappings                ; loc_2BF4A
		dc.w    $0770
		dc.l    SS_Gray_Emerald_Mappings               ; loc_2BF4E
		dc.w    $0770
		dc.l    SS_Reverse_Goal_Mappings               ; loc_2BEF6
		dc.w    $04F0
		dc.l    (($04<<$18)|Rings_Mappings)            ; loc_AEA0
		dc.w    $27B2
		dc.l    (($05<<$18)|Rings_Mappings)            ; loc_AEA0
		dc.w    $27B2
		dc.l    (($06<<$18)|Rings_Mappings)            ; loc_AEA0
		dc.w    $27B2
		dc.l    (($07<<$18)|Rings_Mappings)            ; loc_AEA0
		dc.w    $27B2
		dc.l    SS_Red_White_Ball_Mappings             ; loc_2BF0A
		dc.w    $23F0
		dc.l    (($01<<$18)|SS_Red_White_Ball_Mappings) ; loc_2BF0A
		dc.w    $23F0
		dc.l    (($02<<$18)|SS_Red_White_Ball_Mappings) ; loc_2BF0A
		dc.w    $23F0
		dc.l    (($03<<$18)|SS_Red_White_Ball_Mappings) ; loc_2BF0A
		dc.w    $23F0
		dc.l    (($02<<$18)|SS_Reverse_Goal_Mappings)  ; loc_2BEF6
		dc.w    $04F0
		dc.l    SS_Red_White_Ball_Mappings             ; loc_2BF0A
		dc.w    $05F0
		dc.l    SS_Red_White_Ball_Mappings             ; loc_2BF0A
		dc.w    $65F0
		dc.l    SS_Red_White_Ball_Mappings             ; loc_2BF0A
		dc.w    $25F0
		dc.l    SS_Red_White_Ball_Mappings             ; loc_2BF0A
		dc.w    $45F0
;-------------------------------------------------------------------------------
; Object mappings (Sonic 1 format)
; [ Begin ]
;-------------------------------------------------------------------------------
SS_Reverse_Goal_Mappings:                                      ; loc_2BEF6
		dc.w    loc_2BEFC-SS_Reverse_Goal_Mappings
		dc.w    loc_2BF02-SS_Reverse_Goal_Mappings
		dc.w    loc_2BF08-SS_Reverse_Goal_Mappings
loc_2BEFC:
		dc.b    $01
		dc.b    $F4, $0A, $00, $00, $F4
loc_2BF02:
		dc.b    $01
		dc.b    $F4, $0A, $00, $09, $F4
loc_2BF08:
		dc.w    $00
;-------------------------------------------------------------------------------
SS_Red_White_Ball_Mappings:                                    ; loc_2BF0A
		dc.w    loc_2BF12-SS_Red_White_Ball_Mappings
		dc.w    loc_2BF18-SS_Red_White_Ball_Mappings
		dc.w    loc_2BF1E-SS_Red_White_Ball_Mappings
		dc.w    loc_2BF24-SS_Red_White_Ball_Mappings
loc_2BF12:
		dc.b    $01
		dc.b    $F4, $0A, $00, $00, $F4
loc_2BF18:
		dc.b    $01
		dc.b    $F4, $0A, $08, $00, $F4
loc_2BF1E:
		dc.b    $01
		dc.b    $F4, $0A, $18, $00, $F4
loc_2BF24:
		dc.b    $01
		dc.b    $F4, $0A, $10, $00, $F4
;-------------------------------------------------------------------------------
SS_Up_Mappings:                                                ; loc_2BF2A
		dc.w    loc_2BF2E-SS_Up_Mappings
		dc.w    loc_2BF34-SS_Up_Mappings
loc_2BF2E:
		dc.b    $01
		dc.b    $F4, $0A, $00, $00, $F4
loc_2BF34:
		dc.b    $01
		dc.b    $F4, $0A, $00, $12, $F4
;-------------------------------------------------------------------------------
SS_Down_Mappings:                                              ; loc_2BF3A
		dc.w    loc_2BF3E-SS_Down_Mappings
		dc.w    loc_2BF44-SS_Down_Mappings
loc_2BF3E:
		dc.b    $01
		dc.b    $F4, $0A, $00, $09, $F4
loc_2BF44:
		dc.b    $01
		dc.b    $F4, $0A, $00, $12, $F4
;-------------------------------------------------------------------------------
SS_Red_Emerald_Mappings:                                       ; loc_2BF4A
		dc.w    loc_2BF56-SS_Red_Emerald_Mappings
		dc.w    loc_2BF68-SS_Red_Emerald_Mappings
SS_Gray_Emerald_Mappings:                                      ; loc_2BF4E
		dc.w    loc_2BF5C-SS_Gray_Emerald_Mappings
		dc.w    loc_2BF68-SS_Gray_Emerald_Mappings
SS_Emerald_Mappings:                                           ; loc_2BF52
		dc.w    loc_2BF62-SS_Emerald_Mappings
		dc.w    loc_2BF68-SS_Emerald_Mappings
loc_2BF56:
		dc.b    $01
		dc.b    $F8, $05, $00, $00, $F8
loc_2BF5C:
		dc.b    $01
		dc.b    $F8, $05, $00, $04, $F8
loc_2BF62:
		dc.b    $01
		dc.b    $F8, $05, $00, $08, $F8
loc_2BF68:
		dc.b    $01
		dc.b    $F8, $05, $00, $0C, $F8
;-------------------------------------------------------------------------------
; Object mappings (Sonic 1 format)
; [ End ]
;-------------------------------------------------------------------------------
		nop
;-------------------------------------------------------------------------------

;===============================================================================
; Object 0x09 - Sonic in Special Stage - Leftover from Sonic 1
; [ Begin ]
;===============================================================================
; loc_2BF70:
Obj09_Sonic_In_Special_Stage:
                tst.w   (Debug_Mode_Flag_Index).w                    ; $FFFFFE08
                beq.s   Player_In_SS_Normal                    ; loc_2BF7E
                bsr     S1SS_FixCamera                         ; loc_2C1A6
                bra     Debug_Mode                             ; loc_2DE64
;-------------------------------------------------------------------------------                
Player_In_SS_Normal:                                           ; loc_2BF7E
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  Player_In_SS_Idx(PC, D0), D1           ; loc_2BF8C
                jmp     Player_In_SS_Idx(PC, D1)               ; loc_2BF8C        
;-------------------------------------------------------------------------------
Player_In_SS_Idx:                                              ; loc_2BF8C
                dc.w    Player_In_SS_Main-Player_In_SS_Idx      ; loc_2BF94
                dc.w    Player_In_SS_Control-Player_In_SS_Idx   ; loc_2BFD4
                dc.w    Player_In_SS_Animate-Player_In_SS_Idx   ; loc_2C1D0
                dc.w    Player_In_SS_Exit_Test-Player_In_SS_Idx ; loc_2C224
;-------------------------------------------------------------------------------
Player_In_SS_Main:                                             ; loc_2BF94
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.b  #$0E, Obj_Height_2(A0)                           ; $0016
                move.b  #$07, Obj_Width_2(A0)                            ; $0017
                move.l  #Sonic_Mappings, Obj_Map(A0)    ; loc_6FBE0, $0004
                move.w  #$0780, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_32_To_ModifySpriteAttr_2P          ; loc_2C614
                move.b  #$04, Obj_Flags(A0)                              ; $0001
                move.b  #$00, Obj_Priority(A0)                           ; $0018
                move.b  #$02, Obj_Ani_Number(A0)                         ; $001C
                bset    #$02, Obj_Status(A0)                             ; $0022
                bset    #$01, Obj_Status(A0)                             ; $0022  
;-------------------------------------------------------------------------------                   
Player_In_SS_Control:                                          ; loc_2BFD4
                tst.w   (Debug_Mode_Active_Flag).w                   ; $FFFFFFFA
                beq.s   loc_2BFE8
                btst    #$04, (Control_Ports_Buffer_Data+$0001).w    ; $FFFFF605
                beq.s   loc_2BFE8
                move.w  #$0001, (Debug_Mode_Flag_Index).w            ; $FFFFFE08
loc_2BFE8:
                move.b  #$00, Obj_P_Invunerblt_Time(A0)                  ; $0030
                moveq   #$00, D0
                move.b  Obj_Status(A0), D0                               ; $0022
                andi.w  #$0002, D0
                move.w  Player_In_SS_Modes(PC, D0), D1         ; loc_2C00C
                jsr     Player_In_SS_Modes(PC, D1)             ; loc_2C00C
                jsr     (Load_Sonic_Dynamic_PLC)               ; loc_110D4
                jmp     (DisplaySprite)                        ; loc_D322  
;-------------------------------------------------------------------------------
Player_In_SS_Modes:                                            ; loc_2C00C
                dc.w    Player_In_SS_OnWall-Player_In_SS_Modes ; loc_2C010
                dc.w    Player_In_SS_InAir-Player_In_SS_Modes  ; loc_2C01E       
;-------------------------------------------------------------------------------
Player_In_SS_OnWall:                                           ; loc_2C010
                bsr     Player_In_SS_Jump                      ; loc_2C146
                bsr     Player_In_SS_Move                      ; loc_2C050
                bsr     Player_In_SS_Fall                      ; loc_2C246
                bra.s   Player_In_SS_Display                   ; loc_2C02A       
;-------------------------------------------------------------------------------
Player_In_SS_InAir                                             ; loc_2C01E
                bsr     Player_In_SS_Null                      ; loc_2C18A
                bsr     Player_In_SS_Move                      ; loc_2C050
                bsr     Player_In_SS_Fall                      ; loc_2C246      
;-------------------------------------------------------------------------------
Player_In_SS_Display:                                          ; loc_2C02A
                bsr     Player_In_SS_ChkItems                  ; loc_2C342
                bsr     Player_In_SS_ChkItems2                 ; loc_2C47E
                jsr     (SpeedToPos)                           ; loc_D1DA
                bsr     S1SS_FixCamera                         ; loc_2C1A6
                move.w  (Boss_Move_Buffer).w, D0                     ; $FFFFF750
                add.w   (Boss_Move_Buffer+$02).w, D0                 ; $FFFFF752
                move.w  D0, (Boss_Move_Buffer).w                     ; $FFFFF750
                jsr     (Sonic_Animate)                        ; loc_10BF2
                rts
;-------------------------------------------------------------------------------                
Player_In_SS_Move:                                             ; loc_2C050
                btst    #$02, ($FFFFF602).w
                beq.s   loc_2C05C
                bsr     Player_In_SS_MoveLeft                  ; loc_2C0E8
loc_2C05C:
                btst    #$03, ($FFFFF602).w
                beq.s   loc_2C068
                bsr     Player_In_SS_MoveRight                 ; loc_2C118
loc_2C068:
                move.b  ($FFFFF602).w, D0
                andi.b  #$0C, D0
                bne.s   loc_2C098
                move.w  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_2C098
                bmi.s   loc_2C08A
                subi.w  #$000C, D0
                bcc.s   loc_2C084
                move.w  #$0000, D0
loc_2C084:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                bra.s   loc_2C098
loc_2C08A:
                addi.w  #$000C, D0
                bcc.s   loc_2C094
                move.w  #$0000, D0
loc_2C094:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
loc_2C098:
                move.b  (Boss_Move_Buffer).w, D0                     ; $FFFFF750
                addi.b  #$20, D0
                andi.b  #$C0, D0
                neg.b   D0
                jsr     (CalcSine)                             ; loc_3282
                muls.w  Obj_Inertia(A0), D1                              ; $0014
                add.l   D1, Obj_X(A0)                                    ; $0008
                muls.w  Obj_Inertia(A0), D0                              ; $0014
                add.l   D0, Obj_Y(A0)                                    ; $000C
                movem.l D0/D1, -(A7)
                move.l  Obj_Y(A0), D2                                    ; $000C
                move.l  Obj_X(A0), D3                                    ; $0008
                bsr     Player_In_SS_Sub                       ; loc_2C2D8
                beq.s   loc_2C0E2
                movem.l (A7)+, D0/D1
                sub.l   D1, Obj_X(A0)                                    ; $0008
                sub.l   D0, Obj_Y(A0)                                    ; $000C
                move.w  #$0000, Obj_Inertia(A0)                          ; $0014
                rts
loc_2C0E2:
                movem.l (A7)+, D0/D1
                rts
;-------------------------------------------------------------------------------                
Player_In_SS_MoveLeft:                                         ; loc_2C0E8
                bset    #$00, Obj_Status(A0)                             ; $0022
                move.w  Obj_Inertia(A0), D0                              ; $0014
                beq.s   loc_2C0F6
                bpl.s   loc_2C10A
loc_2C0F6:
                subi.w  #$000C, D0
                cmpi.w  #$F800, D0
                bgt.s   loc_2C104
                move.w  #$F800, D0
loc_2C104:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                rts
loc_2C10A:
                subi.w  #$0040, D0
                bcc.s   loc_2C112
                nop
loc_2C112:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                rts
;-------------------------------------------------------------------------------                
Player_In_SS_MoveRight:                                        ; loc_2C118
                bclr    #$00, Obj_Status(A0)                             ; $0022
                move.w  Obj_Inertia(A0), D0                              ; $0014
                bmi.s   loc_2C138
                addi.w  #$000C, D0
                cmpi.w  #$0800, D0
                blt.s   loc_2C132
                move.w  #$0800, D0
loc_2C132:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
                bra.s   loc_2C144
loc_2C138:
                addi.w  #$0040, D0
                bcc.s   loc_2C140
                nop
loc_2C140:
                move.w  D0, Obj_Inertia(A0)                              ; $0014
loc_2C144:
                rts  
;-------------------------------------------------------------------------------  
Player_In_SS_Jump:                                             ; loc_2C146
                move.b  ($FFFFF603).w, D0
                andi.b  #$70, D0
                beq.s   loc_2C188
                move.b  (Boss_Move_Buffer).w, D0                     ; $FFFFF750
                andi.b  #$FC, D0
                neg.b   D0
                subi.b  #$40, D0
                jsr     (CalcSine)                             ; loc_3282
                muls.w  #$0680, D1
                asr.l   #$08, D1
                move.w  D1, Obj_Speed(A0)                                ; $0010
                muls.w  #$0680, D0
                asr.l   #$08, D0
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
                bset    #$01, Obj_Status(A0)                             ; $0022
                move.w  #$00A0, D0
                jsr     (Play_Sfx)                             ; loc_1512
loc_2C188:
                rts       
;-------------------------------------------------------------------------------
Player_In_SS_Null:                                             ; loc_2C18A
                rts   ; Routine disabled by this rts
; loc_2C18C:
                move.w  #$FC00, D1
                cmp.w   Obj_Speed_Y(A0), D1                              ; $0012
                ble.s   loc_2C1A4
                move.b  ($FFFFF602).w, D0
                andi.b  #$70, D0
                bne.s   loc_2C1A4
                move.w  D1, Obj_Speed_Y(A0)                              ; $0012
loc_2C1A4:
                rts    
;-------------------------------------------------------------------------------
S1SS_FixCamera:                                                ; loc_2C1A6
                move.w  Obj_Y(A0), D2                                    ; $000C
                move.w  Obj_X(A0), D3                                    ; $0008
                move.w  (Camera_X).w, D0                             ; $FFFFEE00
                subi.w  #$00A0, D3
                bcs.s   loc_2C1BE
                sub.w   D3, D0
                sub.w   D0, ($FFFFEE00).w
loc_2C1BE:
                move.w  (Camera_Y).w, D0                             ; $FFFFEE04
                subi.w  #$0070, D2
                bcs.s   loc_2C1CE
                sub.w   D2, D0
                sub.w   D0, ($FFFFEE04).w
loc_2C1CE:
                rts
;-------------------------------------------------------------------------------                
Player_In_SS_Animate:                                          ; loc_2C1D0
                addi.w  #$0040, (Boss_Move_Buffer+$02).w             ; $FFFFF752
                cmpi.w  #$1800, (Boss_Move_Buffer+$02).w             ; $FFFFF752
                bne.s   loc_2C1E4
                move.b  #gm_PlayMode, (Game_Mode).w             ; $0C, $FFFFF600
loc_2C1E4:
                cmpi.w  #$3000, (Boss_Move_Buffer+$02).w             ; $FFFFF752
                blt.s   loc_2C202
                move.w  #$0000, (Boss_Move_Buffer+$02).w             ; $FFFFF752
                move.w  #$4000, (Boss_Move_Buffer).w                 ; $FFFFF750
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$003C, Obj_Player_St_Convex(A0)                 ; $0038
loc_2C202:
                move.w  (Boss_Move_Buffer).w, D0                     ; $FFFFF750
                add.w   (Boss_Move_Buffer+$02).w, D0                 ; $FFFFF752
                move.w  D0, (Boss_Move_Buffer).w                     ; $FFFFF750
                jsr     (Sonic_Animate)                        ; loc_10BF2
                jsr     (Load_Sonic_Dynamic_PLC)               ; loc_110D4
                bsr     S1SS_FixCamera                         ; loc_2C1A6
                jmp     (DisplaySprite)                        ; loc_D322
;-------------------------------------------------------------------------------                 
Player_In_SS_Exit_Test:                                        ; loc_2C224
                subq.w  #$01, Obj_Player_St_Convex(A0)                   ; $0038
                bne.s   loc_2C230
                move.b  #gm_PlayMode, (Game_Mode).w             ; $0C, $FFFFF600
loc_2C230:
                jsr     (Sonic_Animate)                        ; loc_10BF2
                jsr     (Load_Sonic_Dynamic_PLC)               ; loc_110D4
                bsr     S1SS_FixCamera                         ; loc_2C1A6
                jmp     (DisplaySprite)                        ; loc_D322
;-------------------------------------------------------------------------------                
Player_In_SS_Fall:                                             ; loc_2C246
                move.l  Obj_Y(A0), D2                                    ; $000C
                move.l  Obj_X(A0), D3                                    ; $0008
                move.b  (Boss_Move_Buffer).w, D0                     ; $FFFFF750
                andi.b  #$FC, D0
                jsr     (CalcSine)                             ; loc_3282
                move.w  Obj_Speed(A0), D4                                ; $0010
                ext.l   D4
                asl.l   #$08, D4
                muls.w  #$002A, D0
                add.l   D4, D0
                move.w  Obj_Speed_Y(A0), D4                              ; $0012
                ext.l   D4
                asl.l   #$08, D4
                muls.w  #$002A, D1
                add.l   D4, D1
                add.l   D0, D3
                bsr     Player_In_SS_Sub                       ; loc_2C2D8
                beq.s   loc_2C2A0
                sub.l   D0, D3
                moveq   #$00, D0
                move.w  D0, Obj_Speed(A0)                                ; $0010
                bclr    #$01, Obj_Status(A0)                             ; $0022
                add.l   D1, D2
                bsr     Player_In_SS_Sub                       ; loc_2C2D8
                beq.s   loc_2C2B6
                sub.l   D1, D2
                moveq   #$00, D1
                move.w  D1, Obj_Speed_Y(A0)                              ; $0012
                rts
loc_2C2A0:
                add.l   D1, D2
                bsr     Player_In_SS_Sub                       ; loc_2C2D8
                beq.s   loc_2C2C4
                sub.l   D1, D2
                moveq   #$00, D1
                move.w  D1, Obj_Speed_Y(A0)                              ; $0012
                bclr    #$01, Obj_Status(A0)                             ; $0022
loc_2C2B6:
                asr.l   #$08, D0
                asr.l   #$08, D1
                move.w  D0, Obj_Speed(A0)                                ; $0010
                move.w  D1, Obj_Speed_Y(A0)                              ; $0012
                rts
loc_2C2C4:
                asr.l   #$08, D0
                asr.l   #$08, D1
                move.w  D0, Obj_Speed(A0)                                ; $0010
                move.w  D1, Obj_Speed_Y(A0)                              ; $0012
                bset    #$01, Obj_Status(A0)                             ; $0022
                rts  
;-------------------------------------------------------------------------------
Player_In_SS_Sub:                                              ; loc_2C2D8
                lea     (M68K_RAM_Start), A1                         ; $FFFF0000
                moveq   #$00, D4
                swap.w  D2
                move.w  D2, D4
                swap.w  D2
                addi.w  #$0044, D4
                divu.w  #$0018, D4
                mulu.w  #$0080, D4
                adda.l  D4, A1
                moveq   #$00, D4
                swap.w  D3
                move.w  D3, D4
                swap.w  D3
                addi.w  #$0014, D4
                divu.w  #$0018, D4
                adda.w  D4, A1
                moveq   #$00, D5
                move.b  (A1)+, D4
                bsr.s   loc_2C320
                move.b  (A1)+, D4
                bsr.s   loc_2C320
                adda.w  #$007E, A1
                move.b  (A1)+, D4
                bsr.s   loc_2C320
                move.b  (A1)+, D4
                bsr.s   loc_2C320
                tst.b   D5
                rts
loc_2C320:
                beq.s   loc_2C334
                cmpi.b  #$28, D4
                beq.s   loc_2C334
                cmpi.b  #$3A, D4
                bcs.s   loc_2C336
                cmpi.b  #$4B, D4
                bcc.s   loc_2C336
loc_2C334:
                rts
loc_2C336:
                move.b  D4, Obj_P_Invunerblt_Time(A0)                    ; $0030
                move.l  A1, Obj_P_Invcbility_Time(A0)                    ; $0032
                moveq   #-$01, D5
                rts
;-------------------------------------------------------------------------------                
Player_In_SS_ChkItems: ; Touch_Rings                           ; loc_2C342
                lea     (M68K_RAM_Start), A1                         ; $FFFF0000
                moveq   #$00, D4
                move.w  Obj_Y(A0), D4                                    ; $000C
                addi.w  #$0050, D4
                divu.w  #$0018, D4
                mulu.w  #$0080, D4
                adda.l  D4, A1
                moveq   #$00, D4
                move.w  Obj_X(A0), D4                                    ; $0008
                addi.w  #$0020, D4
                divu.w  #$0018, D4
                adda.w  D4, A1
                move.b  (A1), D4
                bne.s   loc_2C37C
                tst.b   Obj_Player_Spdsh_Cnt(A0)                         ; $003A
                bne     loc_2C44C
                moveq   #$00, D4
                rts
loc_2C37C:
                cmpi.b  #$3A, D4
                bne.s   loc_2C3B8
                bsr     loc_2BAA4
                bne.s   loc_2C390
                move.b  #$01, (A2)
                move.l  A1, Obj_Map(A2)                                  ; $0004
loc_2C390:
                jsr     (Add_Rings)                            ; loc_AB92
                cmpi.w  #$0032, (Ring_Count).w                       ; $FFFFFE20
                bcs.s   loc_2C3B4
                bset    #$00, (Ring_Life_Flag).w                     ; $FFFFFE1B
                bne.s   loc_2C3B4
                addq.b  #$01, ($FFFFFE18).w
                move.w  #$BF, D0                          ; play continue jingle
                jsr     (Play_Music)                           ; loc_150C
loc_2C3B4:
                moveq   #$00, D4
                rts
loc_2C3B8:
                cmpi.b  #$28, D4
                bne.s   loc_2C3E2
                bsr     loc_2BAA4
                bne.s   loc_2C3CC
                move.b  #$03, (A2)
                move.l  A1, Obj_Map(A2)                                  ; $0004
loc_2C3CC:
                addq.b  #$01, (Life_Count).w                         ; $FFFFFE12
                addq.b  #$01, (HUD_Life_Refresh_Flag).w              ; $FFFFFE1C
                move.w  #$88, D0                    ; play Casino Night 2P music
                jsr     (Play_Music)                           ; loc_150C
                moveq   #$00, D4
                rts
loc_2C3E2:
                cmpi.b  #$3B, D4
                bcs.s   loc_2C428
                cmpi.b  #$40, D4
                bhi.s   loc_2C428
                bsr     loc_2BAA4
                bne.s   loc_2C3FC
                move.b  #$05, (A2)
                move.l  A1, Obj_Map(A2)                                  ; $0004
loc_2C3FC:
                cmpi.b  #$06, (Emerald_Count).w                      ; $FFFFFE57
                beq.s   loc_2C41A
                subi.b  #$3B, D4
                moveq   #$00, D0
                move.b  (Emerald_Count).w, D0                        ; $FFFFFE57
                lea     (Emerald_Collected_Flag_List).w, A2          ; $FFFFFE58
                move.b  D4, $00(A2, D0)
                addq.b  #$01, (Emerald_Count).w                      ; $FFFFFE57
loc_2C41A:
                move.w  #$0093, D0
                jsr     (Play_Sfx)                             ; loc_1512
                moveq   #$00, D4
                rts
loc_2C428:
                cmpi.b  #$41, D4
                bne.s   loc_2C434
                move.b  #$01, Obj_Player_Spdsh_Cnt(A0)                   ; $003A
loc_2C434:
                cmpi.b  #$4A, D4
                bne.s   loc_2C448
                cmpi.b  #$01, Obj_Player_Spdsh_Cnt(A0)                   ; $003A
                bne.s   loc_2C448
                move.b  #$02, Obj_Player_Spdsh_Cnt(A0)                   ; $003A
loc_2C448:
                moveq   #-$01, D4
                rts
loc_2C44C:
                cmpi.b  #$02, Obj_Player_Spdsh_Cnt(A0)                   ; $003A
                bne.s   loc_2C476
                lea     ($FFFF1020), A1
                moveq   #$3F, D1
loc_2C45C:
                moveq   #$3F, D2
loc_2C45E:
                cmpi.b  #$41, (A1)
                bne.s   loc_2C468
                move.b  #$2C, (A1)
loc_2C468:
                addq.w  #$01, A1
                dbra    D2, loc_2C45E
                lea     Obj_Size(A1), A1                                 ; $0040
                dbra    D1, loc_2C45C
loc_2C476:
                clr.b   Obj_Player_Spdsh_Cnt(A0)                         ; $003A
                moveq   #$00, D4
                rts
;-------------------------------------------------------------------------------                
Player_In_SS_ChkItems2:                                        ; loc_2C47E
                move.b  Obj_P_Invunerblt_Time(A0), D0                    ; $0030
                bne.s   loc_2C49E
                subq.b  #$01, Obj_Player_Next_Tilt(A0)                   ; $0036
                bpl.s   loc_2C490
                move.b  #$00, Obj_Player_Next_Tilt(A0)                   ; $0036
loc_2C490:
                subq.b  #$01, Obj_Player_Tilt(A0)                        ; $0037
                bpl.s   loc_2C49C
                move.b  #$00, Obj_Player_Tilt(A0)                        ; $0037
loc_2C49C:
                rts
loc_2C49E:
                cmpi.b  #$25, D0
                bne.s   loc_2C516
                move.l  Obj_P_Invcbility_Time(A0), D1                    ; $0032
                subi.l  #$FFFF0001, D1
                move.w  D1, D2
                andi.w  #$007F, D1
                mulu.w  #$0018, D1
                subi.w  #$0014, D1
                lsr.w   #$07, D2
                andi.w  #$007F, D2
                mulu.w  #$0018, D2
                subi.w  #$0044, D2
                sub.w   Obj_X(A0), D1                                    ; $0008
                sub.w   Obj_Y(A0), D2                                    ; $000C
                jsr     (CalcAngle)                            ; loc_351A
                jsr     (CalcSine)                             ; loc_3282
                muls.w  #$F900, D1
                asr.l   #$08, D1
                move.w  D1, Obj_Speed(A0)                                ; $0010
                muls.w  #$F900, D0
                asr.l   #$08, D0
                move.w  D0, Obj_Speed_Y(A0)                              ; $0012
                bset    #$01, Obj_Status(A0)                             ; $0022
                bsr     loc_2BAA4
                bne.s   loc_2C50C
                move.b  #$02, (A2)
                move.l  Obj_P_Invcbility_Time(A0), D0                    ; $0032
                subq.l  #$01, D0
                move.l  D0, Obj_Map(A2)                                  ; $0004
loc_2C50C:
                move.w  #$00B4, D0
                jmp     (Play_Sfx)                             ; loc_1512
loc_2C516:
                cmpi.b  #$27, D0
                bne.s   loc_2C52C
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$00A8, D0
                jsr     (Play_Sfx)                             ; loc_1512
                rts
loc_2C52C:
                cmpi.b  #$29, D0
                bne.s   loc_2C560
                tst.b   Obj_Player_Next_Tilt(A0)                         ; $0036
                bne     loc_2C610
                move.b  #$1E, Obj_Player_Next_Tilt(A0)                   ; $0036
                btst    #$06, (Boss_Move_Buffer+$03).w               ; $FFFFF753
                beq.s   loc_2C556
                asl.w   (Boss_Move_Buffer+$02).w                     ; $FFFFF752
                move.l  Obj_P_Invcbility_Time(A0), A1                    ; $0032
                subq.l  #$01, A1
                move.b  #$2A, (A1)
loc_2C556:
                move.w  #$00A9, D0
                jmp     (Play_Sfx)                             ; loc_1512
loc_2C560:
                cmpi.b  #$2A, D0
                bne.s   loc_2C594
                tst.b   Obj_Player_Next_Tilt(A0)                         ; $0036
                bne     loc_2C610
                move.b  #$1E, Obj_Player_Next_Tilt(A0)                   ; $0036
                btst    #$06, (Boss_Move_Buffer+$03).w               ; $FFFFF753
                bne.s   loc_2C58A
                asr.w   (Boss_Move_Buffer+$02).w                     ; $FFFFF752
                move.l  Obj_P_Invcbility_Time(A0), A1                    ; $0032
                subq.l  #$01, A1
                move.b  #$29, (A1)
loc_2C58A:
                move.w  #$00A9, D0
                jmp     (Play_Sfx)                             ; loc_1512
loc_2C594:
                cmpi.b  #$2B, D0
                bne.s   loc_2C5CA
                tst.b   Obj_Player_Tilt(A0)                              ; $0037
                bne     loc_2C610
                move.b  #$1E, Obj_Player_Tilt(A0)                        ; $0037
                bsr     loc_2BAA4
                bne.s   loc_2C5BC
                move.b  #$04, (A2)
                move.l  Obj_P_Invcbility_Time(A0), D0                    ; $0032
                subq.l  #$01, D0
                move.l  D0, Obj_Map(A2)                                  ; $0004
loc_2C5BC:
                neg.w   (Boss_Move_Buffer+$02).w                     ; $FFFFF752
                move.w  #$00A9, D0
                jmp     (Play_Sfx)                             ; loc_1512
loc_2C5CA:
                cmpi.b  #$2D, D0
                beq.s   loc_2C5E2
                cmpi.b  #$2E, D0
                beq.s   loc_2C5E2
                cmpi.b  #$2F, D0
                beq.s   loc_2C5E2
                cmpi.b  #$30, D0
                bne.s   loc_2C610
loc_2C5E2:
                bsr     loc_2BAA4
                bne.s   loc_2C606
                move.b  #$06, (A2)
                move.l  Obj_P_Invcbility_Time(A0), A1                    ; $0032
                subq.l  #$01, A1
                move.l  A1, Obj_Map(A2)                                  ; $0004
                move.b  (A1), D0
                addq.b  #$01, D0
                cmpi.b  #$30, D0
                bls.s   loc_2C602
                clr.b   D0
loc_2C602:
                move.b  D0, Obj_Map(A2)                                  ; $0004
loc_2C606:
                move.w  #$BA, D0
                jmp     (Play_Sfx)                             ; loc_1512
loc_2C610:
                rts                
;===============================================================================
; Object 0x09 - Sonic in Special Stage - Leftover from Sonic 1
; [ End ]
;===============================================================================
;-------------------------------------------------------------------------------
Obj_Null_3:                                                    ; loc_2C612
		rts
Jmp_32_To_ModifySpriteAttr_2P:                                 ; loc_2C614
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
		dc.w    $0000
;===============================================================================
; Routine to load the graphics dynamically to the VRAM
; E.g.: Flowers at Emerald Hill, Oil at Oil Ocean, etc...
; [ Begin ]
;===============================================================================
Dynamic_Art_Cues:                                              ; loc_2C61C
		moveq   #$00, D0
		move.b  (Level_Id).w, D0                             ; $FFFFFE10
		add.w   D0, D0
		add.w   D0, D0
		move.w  Dynamic_Art_Idx+$02(PC, D0), D1        ; loc_2C63A
		lea     Dynamic_Art_Idx(PC, D1), A2            ; loc_2C638
		move.w  Dynamic_Art_Idx(PC, D0), D0            ; loc_2C638
		jmp     Dynamic_Art_Idx(PC, D0)                ; loc_2C638
;-------------------------------------------------------------------------------
		rts
;-------------------------------------------------------------------------------
Dynamic_Art_Idx:                                               ; loc_2C638
		dc.w    GHz_Animate_Routine-Dynamic_Art_Idx    ; loc_2C860
		dc.w    GHz_Animate_Script-Dynamic_Art_Idx     ; loc_2C8C8
		dc.w    Lvl1_Animate_Routine-Dynamic_Art_Idx   ; loc_2C67C
		dc.w    Lvl1_Animate_Script-Dynamic_Art_Idx    ; loc_2CBC0
		dc.w    Wz_Animate_Routine-Dynamic_Art_Idx     ; loc_2C67C
		dc.w    Wz_Animate_Script-Dynamic_Art_Idx      ; loc_2CBC0
		dc.w    Lvl3_Animate_Routine-Dynamic_Art_Idx   ; loc_2C67C
		dc.w    Lvl3_Animate_Script-Dynamic_Art_Idx    ; loc_2CBC0
		dc.w    Mz_Animate_Routine-Dynamic_Art_Idx     ; loc_2C860
		dc.w    Mz_Animate_Script-Dynamic_Art_Idx      ; loc_2C92C
		dc.w    Mz_Animate_Routine-Dynamic_Art_Idx     ; loc_2C860
		dc.w    Mz_Animate_Script-Dynamic_Art_Idx      ; loc_2C92C
		dc.w    Lvl6_Animate_Routine-Dynamic_Art_Idx   ; loc_2C67C
		dc.w    Lvl6_Animate_Script-Dynamic_Art_Idx    ; loc_2CBC0
		dc.w    HTz_Animate_Routine-Dynamic_Art_Idx    ; loc_2C67E
		dc.w    HTz_Animate_Script-Dynamic_Art_Idx     ; loc_2C96C
		dc.w    HPz_Animate_Routine-Dynamic_Art_Idx    ; loc_2C860
		dc.w    HPz_Animate_Script-Dynamic_Art_Idx     ; loc_2C9D0
		dc.w    Lvl9_Animate_Routine-Dynamic_Art_Idx   ; loc_2C67C
		dc.w    Lvl9_Animate_Script-Dynamic_Art_Idx    ; loc_2CBC0
		dc.w    OOz_Animate_Routine-Dynamic_Art_Idx    ; loc_2C860
		dc.w    OOz_Animate_Script-Dynamic_Art_Idx     ; loc_2C9FC
		dc.w    DHz_Animate_Routine-Dynamic_Art_Idx    ; loc_2C67C
		dc.w    DHz_Animate_Script-Dynamic_Art_Idx     ; loc_2CBC0
		dc.w    CHz_Animate_Routine-Dynamic_Art_Idx    ; loc_2C860
		dc.w    CNz_Animate_Script-Dynamic_Art_Idx     ; loc_2CA42
		dc.w    CPz_Animate_Routine-Dynamic_Art_Idx    ; loc_2C860
		dc.w    CPz_Animate_Script-Dynamic_Art_Idx     ; loc_2CB84
		dc.w    GCz_Animate_Routine-Dynamic_Art_Idx    ; loc_2C67C
		dc.w    GCz_Animate_Script-Dynamic_Art_Idx     ; loc_2CBC0
		dc.w    NGHz_Animate_Routine-Dynamic_Art_Idx   ; loc_2C860
		dc.w    NGHz_Animate_Script-Dynamic_Art_Idx    ; loc_2CB96
		dc.w    DEz_Animate_Routine-Dynamic_Art_Idx    ; loc_2C67C
		dc.w    DEz_Animate_Script-Dynamic_Art_Idx     ; loc_2CBC0
;-------------------------------------------------------------------------------
Lvl1_Animate_Routine:                                          ; loc_2C67C
Wz_Animate_Routine:                                            ; loc_2C67C
Lvl3_Animate_Routine:                                          ; loc_2C67C
Lvl6_Animate_Routine:                                          ; loc_2C67C
Lvl9_Animate_Routine:                                          ; loc_2C67C
DHz_Animate_Routine:                                           ; loc_2C67C
GCz_Animate_Routine:                                           ; loc_2C67C
DEz_Animate_Routine:                                           ; loc_2C67C
		rts
;-------------------------------------------------------------------------------
HTz_Animate_Routine:                                           ; loc_2C67E
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne     HTz_Animate_Routine_2P                 ; loc_2C860
		lea     ($FFFFF7F0).w, A3
		moveq   #$00, D0
		move.w  (Camera_X).w, D1                             ; $FFFFEE00
		neg.w   D1
		asr.w   #$03, D1
		move.w  (Camera_X).w, D0                             ; $FFFFEE00
		lsr.w   #$04, D0
		add.w   D1, D0
		subi.w  #$0010, D0
		divu.w  #$0030, D0
		swap.w  D0
		cmp.b   $0001(A3), D0
		beq.s   loc_2C6F0
		move.b  D0, $0001(A3)
		move.w  D0, D2
		andi.w  #$0007, D0
		add.w   D0, D0
		add.w   D0, D0
		add.w   D0, D0
		move.w  D0, D1
		add.w   D0, D0
		add.w   D1, D0
		andi.w  #$0038, D2
		lsr.w   #$02, D2
		add.w   D2, D0
		lea     HTz_RAM_Dyn_Sprites(PC, D0), A4        ; loc_2C6F4
		moveq   #$05, D5
		move.w  #$A000, D4
loc_2C6D4:
		moveq   #-$01, D1
		move.w  (A4)+, D1
		andi.l  #$00FFFFFF, D1
		move.w  D4, D2
		moveq   #$40, D3
		jsr     (DMA_68KtoVRAM)                        ; loc_15C4
		addi.w  #$0080, D4
		dbra    D5, loc_2C6D4
loc_2C6F0:
		bra     loc_2C7B4
;-------------------------------------------------------------------------------
; Array of RAM addresses to be used by the RAM animated sprites in
; Hill Top. Sprites are uncompressed to RAM and dynamically loaded
; from RAM. Note that from these addresses are the Chunks (128x128) from Hill
; Top, but these chunks aren't used for the layout. Be careful when editing
; Hill Top in level editors, as editors don't recognize that those chunks 
; cannot be used and if you use them and load the level ingame,
; notice that the chunks are different from what was seen in the level editor.
;-------------------------------------------------------------------------------
HTz_RAM_Dyn_Sprites:                                           ; loc_2C6F4
		dc.w    $0080, $0180, $0280, $0580, $0600, $0700, $0080, $0180
		dc.w    $0280, $0580, $0600, $0700, $0980, $0A80, $0B80, $0C80
		dc.w    $0D00, $0D80, $0980, $0A80, $0B80, $0C80, $0D00, $0D80
		dc.w    $0E80, $1180, $1200, $1280, $1300, $1380, $0E80, $1180
		dc.w    $1200, $1280, $1300, $1380, $1400, $1480, $1500, $1580
		dc.w    $1600, $1900, $1400, $1480, $1500, $1580, $1600, $1900
		dc.w    $1D00, $1D80, $1E00, $1F80, $2400, $2580, $1D00, $1D80
		dc.w    $1E00, $1F80, $2400, $2580, $2600, $2680, $2780, $2B00
		dc.w    $2F00, $3280, $2600, $2680, $2780, $2B00, $2F00, $3280
		dc.w    $3600, $3680, $3780, $3C80, $3D00, $3F00, $3600, $3680
		dc.w    $3780, $3C80, $3D00, $3F00, $3F80, $4080, $4480, $4580
		dc.w    $4880, $4900, $3F80, $4080, $4480, $4580, $4880, $4900
;-------------------------------------------------------------------------------
loc_2C7B4:
		lea     ($FFFFA800).w, A1
		move.w  (Camera_X).w, D2                             ; $FFFFEE00
		neg.w   D2
		asr.w   #$03, D2
		move.l  A2, -(A7)
		lea     (Art_Hill_Top_Background_Uncomp), A0   ; loc_30C2A
		lea     ($FFFF7C00), A2
		moveq   #$0F, D1
loc_2C7D0:
		move.w  (A1)+, D0
		neg.w   D0
		add.w   D2, D0
		andi.w  #$001F, D0
		lsr.w   #$01, D0
		bcc.s   loc_2C7E2
		addi.w  #$0200, D0
loc_2C7E2:
		lea     $00(A0, D0), A4
		lsr.w   #$01, D0
		bcs.s   loc_2C80C
		move.l  (A4)+, (A2)+
		adda.w  #$003C, A2
		move.l  (A4)+, (A2)+
		adda.w  #$003C, A2
		move.l  (A4)+, (A2)+
		adda.w  #$003C, A2
		move.l  (A4)+, (A2)+
		suba.w  #$00C0, A2
		adda.w  #$0020, A0
		dbra    D1, loc_2C7D0
		bra.s   loc_2C844
loc_2C80C:
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		adda.w  #$003C, A2
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		adda.w  #$003C, A2
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		adda.w  #$003C, A2
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		move.b  (A4)+, (A2)+
		suba.w  #$00C0, A2
		adda.w  #$0020, A0
		dbra    D1, loc_2C7D0
loc_2C844:
		move.l  #$00FF7C00, D1
		move.w  #$A300, D2
		move.w  #$0080, D3
		jsr     (DMA_68KtoVRAM)                        ; loc_15C4
		move.l  (A7)+, A2
		addq.w  #$02, A3
		bra     loc_2C864
;-------------------------------------------------------------------------------
GHz_Animate_Routine:                                           ; loc_2C860
Mz_Animate_Routine:                                            ; loc_2C860
HTz_Animate_Routine_2P:                                        ; loc_2C860
HPz_Animate_Routine:                                           ; loc_2C860
OOz_Animate_Routine:                                           ; loc_2C860
CHz_Animate_Routine:                                           ; loc_2C860
CPz_Animate_Routine:                                           ; loc_2C860
NGHz_Animate_Routine:                                          ; loc_2C860
		lea     ($FFFFF7F0).w, A3
loc_2C864:
		move.w  (A2)+, D6
loc_2C866:
		subq.b  #$01, (A3)
		bcc.s   loc_2C8AC
		moveq   #$00, D0
		move.b  $0001(A3), D0
		cmp.b   $0006(A2), D0
		bcs.s   loc_2C87C
		moveq   #$00, D0
		move.b  D0, $0001(A3)
loc_2C87C:
		addq.b  #$01, $0001(A3)
		move.b  (A2), (A3)
		bpl.s   loc_2C88A
		add.w   D0, D0
		move.b  $09(A2, D0), (A3)
loc_2C88A:
		move.b  $08(A2, D0), D0
		lsl.w   #$05, D0
		move.w  $0004(A2), D2
		move.l  (A2), D1
		andi.l  #$00FFFFFF, D1
		add.l   D0, D1
		moveq   #$00, D3
		move.b  $0007(A2), D3
		lsl.w   #$04, D3
		jsr     (DMA_68KtoVRAM)                        ; loc_15C4
loc_2C8AC:
		move.b  $0006(A2), D0
		tst.b   (A2)
		bpl.s   loc_2C8B6
		add.b   D0, D0
loc_2C8B6:
		addq.b  #$01, D0
		andi.w  #$00FE, D0
		lea     $08(A2, D0), A2
		addq.w  #$02, A3
		dbra    D6, loc_2C866
		rts
;-------------------------------------------------------------------------------
GHz_Animate_Script:                                            ; loc_2C8C8
		dc.w    $0004                      ; Total Animations
		dc.l    ($FF<<$18)|Art_GHz_Flower_1            ; loc_30000
		dc.w    $7280                      ; VRAM
		dc.w    $0602                      ; Frames / Tiles
		dc.w    $007F, $0213, $0007, $0207 ; Load Frame / Frame Time
		dc.w    $0007, $0207               ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_GHz_Flower_2            ; loc_30080
		dc.w    $72C0                      ; VRAM
		dc.w    $0802                      ; Frames / Tiles
		dc.w    $027F, $000B, $020B, $000B ; Load Frame / Frame Time
		dc.w    $0205, $0005, $0205, $0005 ; Load Frame / Frame Time
		dc.l    ($07<<$18)|Art_GHz_Flower_3            ; loc_30100
		dc.w    $7300                      ; VRAM
		dc.w    $0202                      ; Frames / Tiles
		dc.w    $0002                      ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_GHz_Flower_4            ; loc_30180
		dc.w    $7340                      ; VRAM
		dc.w    $0802                      ; Frames / Tiles
		dc.w    $007F, $0207, $0007, $0207 ; Load Frame / Frame Time
		dc.w    $0007, $020B, $000B, $020B ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_GHz_Dyn_Wall            ; loc_30200
		dc.w    $7380                      ; VRAM
		dc.w    $0602                      ; Frames / Tiles
		dc.w    $0017, $0209, $040B, $0617 ; Load Frame / Frame Time
		dc.w    $040B, $0209               ; Load Frame / Frame Time
;-------------------------------------------------------------------------------
Mz_Animate_Script:                                             ; loc_2C92C
		dc.w    $0003                      ; Total Animations
		dc.l    Art_Mz_Spinnig_Cylinder                ; loc_3102A
		dc.w    $6980                      ; VRAM
		dc.w    $0810                      ; Frames / Tiles
		dc.w    $0010, $2030, $4050, $6070 ; Load Frame / Frame Time
		dc.l    ($0D<<$18)|Art_Mz_Lava                 ; loc_3202A
		dc.w    $6800                      ; VRAM
		dc.w    $060C                      ; Frames / Tiles
		dc.w    $000C, $1824, $180C        ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_Mz_Pistons              ; loc_3262A
		dc.w    $6B80                      ; VRAM
		dc.w    $0406                      ; Frames / Tiles
		dc.w    $0013, $0607, $0C13, $0607 ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_Mz_Pistons              ; loc_3262A
		dc.w    $6C40                      ; VRAM
		dc.w    $0406                      ; Frames / Tiles
		dc.w    $0C13, $0607, $0013, $0607 ; Load Frame / Frame Time
;-------------------------------------------------------------------------------
HTz_Animate_Script:                                            ; loc_2C96C
		dc.w    $0004                      ; Total Animations
		dc.l    ($FF<<$18)|Art_HTz_Flower_1            ; loc_30000
		dc.w    $7280                      ; VRAM
		dc.w    $0602                      ; Frames / Tiles
		dc.w    $007F, $0213, $0007, $0207 ; Load Frame / Frame Time
		dc.w    $0007, $0207               ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_HTz_Flower_2            ; loc_30080
		dc.w    $72C0                      ; VRAM
		dc.w    $0802                      ; Frames / Tiles
		dc.w    $027F, $000B, $020B, $000B ; Load Frame / Frame Time
		dc.w    $0205, $0005, $0205, $0005 ; Load Frame / Frame Time
		dc.l    ($07<<$18)|Art_HTz_Flower_3            ; loc_30100
		dc.w    $7300                      ; VRAM
		dc.w    $0202                      ; Frames / Tiles
		dc.w    $0002                      ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_HTz_Flower_4            ; loc_30180
		dc.w    $7340                      ; VRAM
		dc.w    $0802                      ; Frames / Tiles
		dc.w    $007F, $0207, $0007, $0207 ; Load Frame / Frame Time
		dc.w    $0007, $020B, $000B, $020B ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_HTz_Dyn_Wall            ; loc_30200
		dc.w    $7380                      ; VRAM
		dc.w    $0602                      ; Frames / Tiles
		dc.w    $0017, $0209, $040B, $0617 ; Load Frame / Frame Time
		dc.w    $040B, $0209               ; Load Frame / Frame Time
;-------------------------------------------------------------------------------
HPz_Animate_Script:                                            ; loc_2C9D0
		dc.w    $0002                      ; Total Animations
		dc.l    ($08<<$18)|Art_HPz_Orbs                ; loc_32C6A
		dc.w    $5D00                      ; VRAM
		dc.w    $0608                      ; Frames / Tiles
		dc.w    $0000, $0810, $1008        ; Load Frame / Frame Time
		dc.l    ($08<<$18)|Art_HPz_Orbs                ; loc_32C6A
		dc.w    $5E00                      ; VRAM
		dc.w    $0608                      ; Frames / Tiles
		dc.w    $0810, $1008, $0000        ; Load Frame / Frame Time
		dc.l    ($08<<$18)|Art_HPz_Orbs                ; loc_32C6A
		dc.w    $5F00                      ; VRAM
		dc.w    $0608                      ; Frames / Tiles
		dc.w    $1008, $0000, $0810        ; Load Frame / Frame Time
;-------------------------------------------------------------------------------
OOz_Animate_Script:                                            ; loc_2C9FC
		dc.w    $0004                      ; Total Animations
		dc.l    ($FF<<$18)|Art_OOz_Red_Balls           ; loc_32F6A
		dc.w    $56C0                      ; VRAM
		dc.w    $0404                      ; Frames / Tiles
		dc.w    $000B, $0405, $0809, $0403 ; Load Frame / Frame Time
		dc.l    ($06<<$18)|Art_OOz_Rotating_Square_1   ; loc_330EA
		dc.w    $5740                      ; VRAM
		dc.w    $0404                      ; Frames / Tiles
		dc.w    $0004, $080C               ; Load Frame / Frame Time
		dc.l    ($06<<$18)|Art_OOz_Rotating_Square_2   ; loc_332EA
		dc.w    $57C0                      ; VRAM
		dc.w    $0404                      ; Frames / Tiles
		dc.w    $0004, $080C               ; Load Frame / Frame Time
		dc.l    ($11<<$18)|Art_OOz_Oil_1               ; loc_334EA
		dc.w    $5840                      ; VRAM
		dc.w    $0610                      ; Frames / Tiles
		dc.w    $0010, $2030, $2010        ; Load Frame / Frame Time
		dc.l    ($11<<$18)|Art_OOz_Oil_2               ; loc_33CEA
		dc.w    $5A40                      ; VRAM
		dc.w    $0610                      ; Frames / Tiles
		dc.w    $0010, $2030, $2010        ; Load Frame / Frame Time
;-------------------------------------------------------------------------------
CNz_Animate_Script:                                            ; loc_2CA42
		dc.w    $0007                      ; Total Animations
		dc.l    ($FF<<$18)|Art_CNz_Blue_Cards          ; loc_344EA
		dc.w    $A600                      ; VRAM
		dc.w    $1004                      ; Frames / Tiles
		dc.w    $00C7, $1005, $1005, $1005 ; Load Frame / Frame Time
		dc.w    $00C7, $1005, $1005, $1005 ; Load Frame / Frame Time
		dc.w    $0005, $1005, $1005, $1005 ; Load Frame / Frame Time
		dc.w    $0005, $1005, $1005, $1005 ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_CNz_Blue_Cards          ; loc_344EA
		dc.w    $A680
		dc.w    $1004                      ; Frames / Tiles
		dc.w    $04C7, $1405, $2005, $2805 ; Load Frame / Frame Time
		dc.w    $30C7, $3805, $2005, $4005 ; Load Frame / Frame Time
		dc.w    $0405, $1405, $2005, $2805 ; Load Frame / Frame Time
		dc.w    $3005, $3805, $2005, $4005 ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_CNz_Blue_Cards          ; loc_344EA
		dc.w    $A700                      ; VRAM
		dc.w    $1004                      ; Frames / Tiles
		dc.w    $08C7, $1805, $2405, $2C05 ; Load Frame / Frame Time
		dc.w    $34C7, $3C05, $2405, $4405 ; Load Frame / Frame Time
		dc.w    $0805, $1805, $2405, $2C05 ; Load Frame / Frame Time
		dc.w    $3405, $3C05, $2405, $4405 ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_CNz_Blue_Cards          ; loc_344EA
		dc.w    $A780                      ; VRAM
		dc.w    $1004                      ; Frames / Tiles
		dc.w    $0CC7, $1C05, $1C05, $1C05 ; Load Frame / Frame Time
		dc.w    $0CC7, $1C05, $1C05, $1C05 ; Load Frame / Frame Time
		dc.w    $0C05, $1C05, $1C05, $1C05 ; Load Frame / Frame Time
		dc.w    $0C05, $1C05, $1C05, $1C05 ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_CNz_Pink_Cards          ; loc_34DEA
		dc.w    $A400                      ; VRAM
		dc.w    $1004                      ; Frames / Tiles
		dc.w    $0005, $1005, $1005, $1005 ; Load Frame / Frame Time
		dc.w    $3005, $1005, $1005, $1005 ; Load Frame / Frame Time
		dc.w    $00C7, $1005, $1005, $1005 ; Load Frame / Frame Time
		dc.w    $30C7, $1005, $1005, $1005 ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_CNz_Pink_Cards          ; loc_34DEA
		dc.w    $A480                      ; VRAM
		dc.w    $1004                      ; Frames / Tiles
		dc.w    $0405, $1405, $2005, $2805 ; Load Frame / Frame Time
		dc.w    $3405, $4005, $2005, $4805 ; Load Frame / Frame Time
		dc.w    $04C7, $1405, $2005, $2805 ; Load Frame / Frame Time
		dc.w    $34C7, $4005, $2005, $4805 ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_CNz_Pink_Cards          ; loc_34DEA
		dc.w    $A500                      ; VRAM
		dc.w    $1004                      ; Frames / Tiles
		dc.w    $0805, $1805, $2405, $2C05 ; Load Frame / Frame Time
		dc.w    $3805, $4405, $2405, $4C05 ; Load Frame / Frame Time
		dc.w    $08C7, $1805, $2405, $2C05 ; Load Frame / Frame Time
		dc.w    $38C7, $4405, $2405, $4C05 ; Load Frame / Frame Time
		dc.l    ($FF<<$18)|Art_CNz_Pink_Cards          ; loc_34DEA
		dc.w    $A580                      ; VRAM
		dc.w    $1004                      ; Frames / Tiles
		dc.w    $0C05, $1C05, $1C05, $1C05 ; Load Frame / Frame Time
		dc.w    $3C05, $1C05, $1C05, $1C05 ; Load Frame / Frame Time
		dc.w    $0CC7, $1C05, $1C05, $1C05 ; Load Frame / Frame Time
		dc.w    $3CC7, $1C05, $1C05, $1C05 ; Load Frame / Frame Time
;-------------------------------------------------------------------------------
CPz_Animate_Script:                                            ; loc_2CB84
		dc.w    $0000                      ; Total Animations
		dc.l    ($04<<$18)|Art_CPz_Dyn_Background ; loc_363EA
		dc.w    $6E00                      ; VRAM
		dc.w    $0802                      ; Frames / Tiles
		dc.w    $0002, $0406, $080A, $0C0E ; Load Frame / Frame Time
;-------------------------------------------------------------------------------
NGHz_Animate_Script:                                           ; loc_2CB96
		dc.w    $0003                      ; Total Animations
		dc.l    ($05<<$18)|Art_NGHz_Water_Falls_1      ; loc_365EA
		dc.w    $8780                      ; VRAM
		dc.w    $0204                      ; Frames / Tiles
		dc.w    $0004                      ; Load Frame / Frame Time
		dc.l    ($05<<$18)|Art_NGHz_Water_Falls_1      ; loc_365EA
		dc.w    $8600                      ; VRAM
		dc.w    $0204                      ; Frames / Tiles
		dc.w    $0400                      ; Load Frame / Frame Time
		dc.l    ($05<<$18)|Art_NGHz_Water_Falls_2      ; loc_366EA
		dc.w    $8580                      ; VRAM
		dc.w    $0204                      ; Frames / Tiles
		dc.w    $0004                      ; Load Frame / Frame Time
		dc.l    ($05<<$18)|Art_NGHz_Water_Falls_3      ; loc_367EA
		dc.w    $8500                      ; VRAM
		dc.w    $0204                      ; Frames / Tiles
		dc.w    $0004                      ; Load Frame / Frame Time
Lvl1_Animate_Script:
Wz_Animate_Script:
Lvl3_Animate_Script:
Lvl6_Animate_Script:
Lvl9_Animate_Script:
DHz_Animate_Script:
GCz_Animate_Script:
DEz_Animate_Script:
		cmpi.b  #$0D, (Level_Id).w
		beq.s   loc_2CBCA
loc_2CBC8:
		rts
;===============================================================================
; Routine to load the graphics dynamically to the VRAM
; E.g.: Flowers at Emerald Hill, Oil at Oil Ocean, etc...
; [ End ]
;===============================================================================

;===============================================================================
; Routine Not Used to Perform Any Effect on Chemical Plant
; [ Begin ]
;===============================================================================
loc_2CBCA:
		move.w  (Camera_X).w, D0
		cmpi.w  #$1940, D0
		bcs.s   loc_2CBC8
		cmpi.w  #$1F80, D0
		bcc.s   loc_2CBC8
		subq.b  #$01, ($FFFFF721).w
		bpl.s   loc_2CBC8
		move.b  #$07, ($FFFFF721).w
		move.b  #$01, (Refresh_Level_Layout).w
		lea     ($FFFF7500), A1
		bsr.s   loc_2CBFA
		lea     ($FFFF7D00), A1
loc_2CBFA:
		move.w  #$0007, D1
loc_2CBFE:
		move.w  (A1), D0
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0072(A1), (A1)+
		adda.w  #$0070, A1
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0072(A1), (A1)+
		adda.w  #$0070, A1
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0072(A1), (A1)+
		adda.w  #$0070, A1
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  $0002(A1), (A1)+
		move.w  D0, (A1)+
		suba.w  #$0180, A1
		dbra    D1, loc_2CBFE
		rts
;===============================================================================
; Routine Not Used to Perform Any Effect on Chemical Plant
; [ End ]
;===============================================================================

;===============================================================================
; Routine for loading the mappings to the dynamic graphics of the zones
; [ Begin ]
;===============================================================================
Load_16x16_Mappings_For_Dyn_Sprites:                           ; loc_2CC94
		cmpi.b  #$07, (Level_Id).w                           ; $FFFFFE10
		bne.s   Load_16x16_Map_Dyn_Not_HTz             ; loc_2CCAC
		bsr     Hill_Top_Init_Dyn_Sprites              ; loc_2D0BC
		move.b  #$FF, ($FFFFF7F1).w
		move.w  #$FFFF, ($FFFFA820).w
Load_16x16_Map_Dyn_Not_HTz:                                    ; loc_2CCAC:
		cmpi.b  #$0D, (Level_Id).w                           ; $FFFFFE10
		bne.s   Load_16x16_Map_Dyn_Not_CPz             ; loc_2CCBA
		move.b  #$FF, ($FFFFF7F1).w
Load_16x16_Map_Dyn_Not_CPz:                                    ; loc_2CCBA:
		moveq   #$00, D0
		move.b  (Level_Id).w, D0                             ; $FFFFFE10
		add.w   D0, D0
		move.w  Map16Delta_Index(PC, D0), D0           ; loc_2CCFC
		lea     Map16Delta_Index(PC, D0), A0           ; loc_2CCFC
		tst.w   (A0)
		beq.s   loc_2CCE2
		lea     (Blocks_Mem_Address).w, A1                   ; $FFFF9000
		adda.w  (A0)+, A1
		move.w  (A0)+, D1
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		bne.s   loc_2CCE4
loc_2CCDC:
		move.w  (A0)+, (A1)+
		dbra    D1, loc_2CCDC
loc_2CCE2:
		rts
loc_2CCE4:
		move.w  (A0)+, D0
		move.w  D0, D1
		andi.w  #$F800, D0
		andi.w  #$07FF, D1
		lsr.w   #$01, D1
		or.w    D1, D0
		move.w  D0, (A1)+
		dbra    D1, loc_2CCE4
		rts
;-------------------------------------------------------------------------------
Map16Delta_Index:                                              ; loc_2CCFC
		dc.w    Map16Delta_GHz-Map16Delta_Index        ; loc_2CD1E
		dc.w    Map16Delta_Lvl1-Map16Delta_Index       ; loc_2D0BA
		dc.w    Map16Delta_Wz-Map16Delta_Index         ; loc_2D0BA
		dc.w    Map16Delta_Lvl3-Map16Delta_Index       ; loc_2D0BA
		dc.w    Map16Delta_Mz-Map16Delta_Index         ; loc_2CD9A
		dc.w    Map16Delta_Mz-Map16Delta_Index         ; loc_2CD9A
		dc.w    Map16Delta_Lvl6-Map16Delta_Index       ; loc_2D0BA
		dc.w    Map16Delta_HTz-Map16Delta_Index        ; loc_2CD1E
		dc.w    Map16Delta_HPz-Map16Delta_Index        ; loc_2CE6E
		dc.w    Map16Delta_Lvl9-Map16Delta_Index       ; loc_2D0BA
		dc.w    Map16Delta_OOz-Map16Delta_Index        ; loc_2CF62
		dc.w    Map16Delta_DHz-Map16Delta_Index        ; loc_2D0BA
		dc.w    Map16Delta_CNz-Map16Delta_Index        ; loc_2CFC6
		dc.w    Map16Delta_CPz-Map16Delta_Index        ; loc_2D06A
		dc.w    Map16Delta_GCz-Map16Delta_Index        ; loc_2D0BA
		dc.w    Map16Delta_NGHz-Map16Delta_Index       ; loc_2D076
		dc.w    Map16Delta_DEz-Map16Delta_Index        ; loc_2D0BA
;-------------------------------------------------------------------------------
Map16Delta_GHz:                                                ; loc_2CD1E
Map16Delta_HTz:                                                ; loc_2CD1E
		dc.w    $1788 ; RAM address to load the mappings ($1788+$FFFF9000) -> adda.w  (A0)+, A1
		dc.w    $003B ; Number of Words to be moved to RAM    ($0000..$003B) -> move.w  (A0)+, D1
		dc.w    $4500, $4504, $4501, $4505, $4508, $450C, $4509, $450D
		dc.w    $4510, $4514, $4511, $4515, $4502, $4506, $4503, $4507
		dc.w    $450A, $450E, $450B, $450F, $4512, $4516, $4513, $4517
		dc.w    $6518, $651A, $6519, $651B, $651C, $651E, $651D, $651F
		dc.w    $439C, $4B9C, $439D, $4B9D, $4158, $439C, $4159, $439D
		dc.w    $4B9C, $4958, $4B9D, $4959, $6394, $6B94, $6395, $6B95
		dc.w    $E396, $EB96, $E397, $EB97, $6398, $6B98, $6399, $6B99
		dc.w    $E39A, $EB9A, $E39B, $EB9B
;-------------------------------------------------------------------------------
Map16Delta_Mz:                                                 ; loc_2CD9A
		dc.w    $1730 ; RAM address to load the mappings ($1730+$FFFF9000) -> adda.w  (A0)+, A1
		dc.w    $0067 ; Number of Words to be moved to RAM ($0000..$0067) -> move.w  (A0)+, D1
		dc.w    $235C, $2B5C, $235D, $2B5D, $235E, $2B5E, $235F, $2B5F
		dc.w    $635A, $635A, $635B, $635B, $6358, $6358, $6359, $6359
		dc.w    $6356, $6356, $6357, $6357, $6354, $6354, $6355, $6355
		dc.w    $6352, $6352, $6353, $6353, $6350, $6350, $6351, $6351
		dc.w    $634E, $634E, $634F, $634F, $634C, $634C, $634D, $634D
		dc.w    $2360, $2B60, $2361, $2B61, $2362, $2B62, $2363, $2B63
		dc.w    $2364, $2B64, $2365, $2B65, $2366, $2B66, $2367, $2B67
		dc.w    $C000, $C000, $C340, $C341, $C000, $C000, $C342, $C343
		dc.w    $C344, $C345, $C348, $C349, $C346, $C347, $C34A, $C34B
		dc.w    $E35A, $E35A, $E35B, $E35B, $E358, $E358, $E359, $E359
		dc.w    $E356, $E356, $E357, $E357, $E354, $E354, $E355, $E355
		dc.w    $E352, $E352, $E353, $E353, $E350, $E350, $E351, $E351
		dc.w    $E34E, $E34E, $E34F, $E34F, $E34C, $E34C, $E34D, $E34D
;-------------------------------------------------------------------------------
Map16Delta_HPz:                                                ; loc_2CE6E
		dc.w    $1710 ; RAM address to load the mappings ($1710+$FFFF9000) -> adda.w  (A0)+, A1
		dc.w    $0077 ; Number of Words to be moved to RAM ($0000..$0077) -> move.w  (A0)+, D1
		dc.w    $62E8, $62E9, $62EA, $62EB, $62EC, $62ED, $62EE, $62EF
		dc.w    $62F0, $62F1, $62F2, $62F3, $62F4, $62F5, $62F6, $62F7
		dc.w    $62F8, $62F9, $62FA, $62FB, $62FC, $62FD, $62FE, $62FF
		dc.w    $42E8, $42E9, $42EA, $42EB, $42EC, $42ED, $42EE, $42EF
		dc.w    $42F0, $42F1, $42F2, $42F3, $42F4, $42F5, $42F6, $42F7
		dc.w    $42F8, $42F9, $42FA, $42FB, $42FC, $42FD, $42FE, $42FF
		dc.w    $0000, $62E8, $0000, $62EA, $62E9, $62EC, $62EB, $62EE
		dc.w    $62ED, $0000, $62EF, $0000, $0000, $62F0, $0000, $62F2
		dc.w    $62F1, $62F4, $62F3, $62F6, $62F5, $0000, $62F7, $0000
		dc.w    $0000, $62F8, $0000, $62FA, $62F9, $62FC, $62FB, $62FE
		dc.w    $62FD, $0000, $62FF, $0000, $0000, $42E8, $0000, $42EA
		dc.w    $42E9, $42EC, $42EB, $42EE, $42ED, $0000, $42EF, $0000
		dc.w    $0000, $42F0, $0000, $42F2, $42F1, $42F4, $42F3, $42F6
		dc.w    $42F5, $0000, $42F7, $0000, $0000, $42F8, $0000, $42FA
		dc.w    $42F9, $42FC, $42FB, $42FE, $42FD, $0000, $42FF, $0000
;-------------------------------------------------------------------------------
Map16Delta_OOz:                                                ; loc_2CF62
		dc.w    $17A0 ; RAM address to load the mappings ($17A0+$FFFF9000) -> adda.w  (A0)+, A1
		dc.w    $002F ; Number of Words to be moved to RAM ($0000..$0027) -> move.w  (A0)+, D1
		dc.w    $82B6, $82B8, $82B7, $82B9, $E2BA, $E2BB, $E2BC, $E2BD
		dc.w    $0000, $62BE, $0000, $62C0, $62BF, $0000, $62C1, $0000
		dc.w    $C2C2, $C2C3, $C2CA, $C2CB, $C2C4, $C2C5, $C2CC, $C2CD
		dc.w    $C2C6, $C2C7, $C2CE, $C2CF, $C2C8, $C2C9, $C2D0, $C2D1
		dc.w    $C2D2, $C2D3, $C2DA, $C2DB, $C2D4, $C2D5, $C2DC, $C2DD
		dc.w    $C2D6, $C2D7, $C2DE, $C2DF, $C2D8, $C2D9, $C2E0, $C2E1
;-------------------------------------------------------------------------------
Map16Delta_CNz:                                                ; loc_2CFC6
		dc.w    $1760 ; RAM address to load the mappings ($1760+$FFFF9000) -> adda.w  (A0)+, A1
		dc.w    $004F ; Number of Words to be moved to RAM ($0000..$004F) -> move.w  (A0)+, D1
		dc.w    $0368, $036C, $0369, $036D, $0370, $0374, $0371, $0375
		dc.w    $036A, $036E, $036B, $036F, $0372, $0376, $0373, $0377
		dc.w    $0500, $0504, $0501, $0505, $0508, $050C, $0509, $050D
		dc.w    $0502, $0506, $0503, $0507, $050A, $050E, $050B, $050F
		dc.w    $0510, $0514, $0511, $0515, $0518, $051C, $0519, $051D
		dc.w    $0512, $0516, $0513, $0517, $051A, $051E, $051B, $051F
		dc.w    $4520, $4524, $4521, $4525, $4528, $452C, $4529, $452D
		dc.w    $4522, $4526, $4523, $4527, $452A, $452E, $452B, $452F
		dc.w    $4530, $4534, $4531, $4535, $4538, $453C, $4539, $453D
		dc.w    $4532, $4536, $4533, $4537, $453A, $453E, $453B, $453F
;-------------------------------------------------------------------------------
Map16Delta_CPz:                                                ; loc_2D06A
		dc.w    $17F8 ; RAM address to load the mappings ($17F8+$FFFF9000) -> adda.w  (A0)+, A1
		dc.w    $0003 ; Number of Words to be moved to RAM ($0000..$0003) -> move.w  (A0)+, D1
		dc.w    $4370, $4371, $4370, $4371
;-------------------------------------------------------------------------------
Map16Delta_NGHz:                                               ; loc_2D076
		dc.w    $17C0 ; RAM address to load the mappings ($17C0+$FFFF9000) -> adda.w  (A0)+, A1
		dc.w    $001F ; Number of Words to be moved to RAM ($0000..$001F) -> move.w  (A0)+, D1
		dc.w    $C428, $C429, $C42A, $C42B, $C42C, $C42D, $C42E, $C42F
		dc.w    $C430, $C431, $C432, $C433, $C43C, $C43D, $C43E, $C43F
		dc.w    $4428, $4429, $442A, $442B, $442C, $442D, $442E, $442F
		dc.w    $4430, $4431, $4432, $4433, $443C, $443D, $443E, $443F
;-------------------------------------------------------------------------------
Map16Delta_Lvl1:                                               
Map16Delta_Wz:                                                 
Map16Delta_Lvl3:                                               
Map16Delta_Lvl6:                                               
Map16Delta_Lvl9:                                               
Map16Delta_DHz:                                                
Map16Delta_GCz:                                                
Map16Delta_DEz:                                                
		dc.w    $0000
;-------------------------------------------------------------------------------
Hill_Top_Init_Dyn_Sprites:                                     
		lea     (Art_Hill_Top_Background), A0          
		lea     ($FFFFB800).w, A4
		bsr     Jmp_00_To_NemDecToRAM              
		lea     ($FFFFB800).w, A1
		lea     HTz_RAM_Dyn_Sprites(PC), A4
		moveq   #$00, D2
		moveq   #$07, D4
loc_2D0D6:
		moveq   #$05, D3
loc_2D0D8:
		moveq   #-$01, D0
		move.w  (A4)+, D0
		move.l  D0, A2
		moveq   #$1F, D1
loc_2D0E0:
		move.l  (A1), (A2)+
		move.l  D2, (A1)+
		dbra    D1, loc_2D0E0
		dbra    D3, loc_2D0D8
		adda.w  #$000C, A4
		dbra    D4, loc_2D0D6
		rts
;===============================================================================
; Routine for loading the mappings to the dynamic graphics of the zones
; [ End ]
;===============================================================================
; loc_2D0F6:
		nop
Jmp_00_To_NemDecToRAM:
		jmp     (NemDecToRAM)
		dc.w    $0000
;===============================================================================
; Routine to load the layout of the Special Stages - Leftover from Sonic 1
; [ End ]
;===============================================================================
;===============================================================================
; Object 0x21 - Display of Points, time, rings and lives
; [ Begin ] 
;===============================================================================
; loc_2D100:
Obj21_Head_Up_Display:
                moveq   #$00, D0
                move.b  Obj_Routine(A0), D0                              ; $0024
                move.w  loc_2D10E(PC, D0), D1
                jmp     loc_2D10E(PC, D1)
;-------------------------------------------------------------------------------
loc_2D10E:
                dc.w    loc_2D112-loc_2D10E
                dc.w    loc_2D140-loc_2D10E      
;-------------------------------------------------------------------------------
loc_2D112:
                addq.b  #$02, Obj_Routine(A0)                            ; $0024
                move.w  #$0090, Obj_X(A0)                                ; $0008
                move.w  #$0108, Obj_Sub_Y(A0)                            ; $000A
                move.l  #Head_Up_Display_Mappings, Obj_Map(A0) ; loc_2D184, $0004
                move.w  #$06CA, Obj_Art_VRAM(A0)                         ; $0002
                bsr     Jmp_33_To_ModifySpriteAttr_2P          ; loc_2DE5C
                move.b  #$00, Obj_Flags(A0)                              ; $0001
                move.b  #$00, Obj_Priority(A0)                           ; $0018  
;-------------------------------------------------------------------------------
loc_2D140:
                tst.w   (Ring_Count).w                               ; $FFFFFE20
                beq.s   loc_2D164
                moveq   #$00, D0
                btst    #$03, ($FFFFFE05).w
                bne.s   loc_2D15A
                cmpi.b  #$09, (Time_Count_Minutes).w                 ; $FFFFFE23
                bne.s   loc_2D15A
                addq.w  #$02, D0
loc_2D15A:
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                jmp     (DisplaySprite)
loc_2D164:
                moveq   #$00, D0
                btst    #$03, ($FFFFFE05).w
                bne.s   loc_2D17A
                addq.w  #$01, D0
                cmpi.b  #$09, (Time_Count_Minutes).w                 ; $FFFFFE23
                bne.s   loc_2D17A
                addq.w  #$02, D0
loc_2D17A:
                move.b  D0, Obj_Map_Id(A0)                               ; $001A
                jmp     (DisplaySprite)                        ; loc_D322   
;-------------------------------------------------------------------------------  
Head_Up_Display_Mappings:
		include "mappings/sprite/obj21.asm"                         
;===============================================================================
; Object 0x21 - Display of Points, time, rings and lives
; [ End ] 
;===============================================================================
;-------------------------------------------------------------------------------
AddPoints:                                                     ; loc_2D2D4
		move.b  #$01, (HUD_Score_Refresh_Flag).w             ; $FFFFFE1F
		lea     (Score_Count).w, A3                          ; $FFFFFE26
		add.l   D0, (A3)
		move.l  #$000F423F, D1   ; 999.999
		cmp.l   (A3), D1
		bhi.s   loc_2D2EC
		move.l  D1, (A3)
loc_2D2EC:
		move.l  (A3), D0
		cmp.l   ($FFFFFFC0).w, D0
		bcs.s   loc_2D314
		addi.l  #$00001388, ($FFFFFFC0).w   ; 50.000
		tst.b   (Hardware_Id).w                              ; $FFFFFFF8
		bmi.s   loc_2D314
		addq.b  #$01, (Life_Count).w                         ; $FFFFFE12
		addq.b  #$01, (HUD_Life_Refresh_Flag).w              ; $FFFFFE1C
		move.w  #$0088, D0  ; play Oil Ocean/Casino Night 2 player music
		jmp     (Play_Music)                           ; loc_150C
loc_2D314:
		rts
;===============================================================================
; Routine to update the counters on the screen (Points, Time, Lives...).
; [ Begin ]
;===============================================================================
HudUpdate:                                                     ; loc_2D316
		nop
		lea     (VDP_Data_Port), A6                          ; $00C00000
		tst.w   (Debug_Mode_Active_Flag).w                   ; $FFFFFFFA
		bne     loc_2D408
		tst.b   (HUD_Score_Refresh_Flag).w                   ; $FFFFFE1F
		beq.s   loc_2D33E
		clr.b   (HUD_Score_Refresh_Flag).w                   ; $FFFFFE1F
		move.l  #$5C800003, D0
		move.l  (Score_Count).w, D1                          ; $FFFFFE26
		bsr     loc_2D542
loc_2D33E:
		tst.b   (HUD_Rings_Refresh_Flag).w                   ; $FFFFFE1D
		beq.s   loc_2D35E
		bpl.s   loc_2D34A
		bsr     loc_2D474
loc_2D34A:
		clr.b   (HUD_Rings_Refresh_Flag).w                   ; $FFFFFE1D
		move.l  #$5F400003, D0
		moveq   #$00, D1
		move.w  (Ring_Count).w, D1                           ; $FFFFFE20
		bsr     loc_2D538
loc_2D35E:
		tst.b   (HUD_Timer_Refresh_Flag).w                   ; $FFFFFE1E
		beq.s   loc_2D3BA
		tst.w   (Pause_Status).w                             ; $FFFFF63A
		bne.s   loc_2D3BA
		lea     (Time_Count).w, A1                           ; $FFFFFE22
		cmpi.l  #$00093B3B, (A1)+
		nop
		addq.b  #$01, -(A1)
		cmpi.b  #$3C, (A1)
		bcs.s   loc_2D3BA
		move.b  #$00, (A1)
		addq.b  #$01, -(A1)
		cmpi.b  #$3C, (A1)
		bcs.s   loc_2D39A
		move.b  #$00, (A1)
		addq.b  #$01, -(A1)
		cmpi.b  #$09, (A1)
		bcs.s   loc_2D39A
		move.b  #$09, (A1)
loc_2D39A:
		move.l  #$5E400003, D0
		moveq   #$00, D1
		move.b  (Time_Count_Minutes).w, D1                   ; $FFFFFE23
		bsr     loc_2D610
		move.l  #$5EC00003, D0
		moveq   #$00, D1
		move.b  (Time_Count_Seconds).w, D1                   ; $FFFFFE24
		bsr     loc_2D618
loc_2D3BA:
		tst.b   (HUD_Life_Refresh_Flag).w                    ; $FFFFFE1C
		beq.s   loc_2D3C8
		clr.b   (HUD_Life_Refresh_Flag).w                    ; $FFFFFE1C
		bsr     loc_2D6D0
loc_2D3C8:
		tst.b   ($FFFFF7D6).w
		beq.s   loc_2D3F0
		clr.b   ($FFFFF7D6).w
		move.l  #$6E000002, (VDP_Control_Port)               ; $00C00004
		moveq   #$00, D1
		move.w  ($FFFFF7D2).w, D1
		bsr     loc_2D670
		moveq   #$00, D1
		move.w  ($FFFFF7D4).w, D1
		bsr     loc_2D670
loc_2D3F0:
		rts
;-------------------------------------------------------------------------------
Time_Over:    ; Not used                                      ; loc_2D3F2
		clr.b   (HUD_Timer_Refresh_Flag).w                   ; $FFFFFE1E
		lea     (Obj_Memory_Address).w, A0                   ; $FFFFB000
		move.l  A0, A2
		bsr     KillCharacter                          ; loc_2B57C
		move.b  #$01, (Time_Over_Flag).w
		rts
;-------------------------------------------------------------------------------
loc_2D408:
		bsr     loc_2D4E0
		tst.b   (HUD_Rings_Refresh_Flag).w                   ; $FFFFFE1D
		beq.s   loc_2D42C
		bpl.s   loc_2D418
		bsr     loc_2D474
loc_2D418:
		clr.b   (HUD_Rings_Refresh_Flag).w                   ; $FFFFFE1D
		move.l  #$5F400003, D0
		moveq   #$00, D1
		move.w  (Ring_Count).w, D1                           ; $FFFFFE20
		bsr     loc_2D538
loc_2D42C:
		move.l  #$5EC00003, D0
		moveq   #$00, D1
		move.b  ($FFFFF62C).w, D1
		bsr     loc_2D618
		tst.b   (HUD_Life_Refresh_Flag).w                    ; $FFFFFE1C
		beq.s   loc_2D44A
		clr.b   (HUD_Life_Refresh_Flag).w                    ; $FFFFFE1C
		bsr     loc_2D6D0
loc_2D44A:
		tst.b   ($FFFFF7D6).w
		beq.s   loc_2D472
		clr.b   ($FFFFF7D6).w
		move.l  #$6E000002, (VDP_Control_Port)               ; $00C00004
		moveq   #$00, D1
		move.w  ($FFFFF7D2).w, D1
		bsr     loc_2D670
		moveq   #$00, D1
		move.w  ($FFFFF7D4).w, D1
		bsr     loc_2D670
loc_2D472:
		rts
loc_2D474:
		move.l  #$5F400003, (VDP_Control_Port)               ; $00C00004
		lea     HUD_Rings_Mask(PC), A2                 ; loc_2D4DC
		move.w  #$0002, D2
		bra.s   loc_2D4A4
;-------------------------------------------------------------------------------
Head_Up_Display_Base:                                          ; loc_2D488
		lea     (VDP_Data_Port), A6                          ; $00C00000
		bsr     loc_2D6D0
		move.l  #$5C400003, (VDP_Control_Port)               ; $00C00004
		lea     HUD_ScoreTime_Mask(PC), A2             ; loc_2D4D0
		move.w  #$000E, D2
loc_2D4A4:
		lea     HUD_Art_Numbers(PC), A1                ; loc_2D73A
loc_2D4A8:
		move.w  #$000F, D1
		move.b  (A2)+, D0
		bmi.s   loc_2D4C4
		ext.w   D0
		lsl.w   #$05, D0
		lea     $00(A1, D0), A3
loc_2D4B8:
		move.l  (A3)+, (A6)
		dbra    D1, loc_2D4B8
loc_2D4BE:
		dbra    D2, loc_2D4A8
		rts
loc_2D4C4:
		move.l  #$00000000, (A6)
		dbra    D1, loc_2D4C4
		bra.s   loc_2D4BE
;-------------------------------------------------------------------------------
HUD_ScoreTime_Mask:                                            ; loc_2D4D0
		dc.l    $16FFFFFF, $FFFFFF00, $00140000
HUD_Rings_Mask:                                                ; loc_2D4DC
		dc.l    $FFFF0000
;-------------------------------------------------------------------------------
loc_2D4E0:
		move.l  #$5C400003, (VDP_Control_Port)               ; $00C00004
		move.w  (Camera_X).w, D1                             ; $FFFFEE00
		swap.w  D1
		move.w  (Player_One_Position_X).w, D1                ; $FFFFB008
		bsr.s   loc_2D500
		move.w  (Camera_Y).w, D1                             ; $FFFFEE04
		swap.w  D1
		move.w  (Player_One_Position_Y).w, D1                ; $FFFFB00C
loc_2D500:
		moveq   #$07, D6
		lea     (HUD_Art_Debug_Numbers), A1            ; loc_2DB7A
loc_2D508:
		rol.w   #$04, D1
		move.w  D1, D2
		andi.w  #$000F, D2
		cmpi.w  #$000A, D2
		bcs.s   loc_2D51A
		addi.w  #$0007, D2
loc_2D51A:
		lsl.w   #$05, D2
		lea     $00(A1, D2), A3
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		swap.w  D1
		dbra    D6, loc_2D508
		rts
;-------------------------------------------------------------------------------
loc_2D538:
		lea     (HUD_Val_000100), A2                   ; loc_2D604
		moveq   #$02, D6
		bra.s   loc_2D54A
loc_2D542:
		lea     (HUD_Val_100000), A2                   ; loc_2D5F8
		moveq   #$05, D6
loc_2D54A:
		moveq   #$00, D4
		lea     HUD_Art_Numbers(PC), A1                ; loc_2D73A
loc_2D550:
		moveq   #$00, D2
		move.l  (A2)+, D3
loc_2D554:
		sub.l   D3, D1
		bcs.s   loc_2D55C
		addq.w  #$01, D2
		bra.s   loc_2D554
loc_2D55C:
		add.l   D3, D1
		tst.w   D2
		beq.s   loc_2D566
		move.w  #$0001, D4
loc_2D566:
		tst.w   D4
		beq.s   loc_2D594
		lsl.w   #$06, D2
		move.l  D0, $0004(A6)
		lea     $00(A1, D2), A3
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
loc_2D594:
		addi.l  #$00400000, D0
		dbra    D6, loc_2D550
		rts
;-------------------------------------------------------------------------------
Time_Count_Down:                                               ; loc_2D5A0
		move.l  #$5F800003, (VDP_Control_Port)               ; $00C00004
		lea     (VDP_Data_Port), A6                          ; $00C00000
		lea     (HUD_Val_000010), A2                   ; loc_2D608
		moveq   #$01, D6
		moveq   #$00, D4
		lea     HUD_Art_Numbers(PC), A1                ; loc_2D73A
loc_2D5BE:
		moveq   #$00, D2
		move.l  (A2)+, D3
loc_2D5C2:
		sub.l   D3, D1
		bcs.s   loc_2D5CA
		addq.w  #$01, D2
		bra.s   loc_2D5C2
loc_2D5CA:
		add.l   D3, D1
		lsl.w   #$06, D2
		lea     $00(A1, D2), A3
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		dbra    D6, loc_2D5BE
		rts
;-------------------------------------------------------------------------------
HUD_Val_100000:                                                ; loc_2D5F8
		dc.l    $000186A0
;HUD_Val_010000:                                               ; loc_2D5FC
		dc.l    $00002710
HUD_Val_001000:                                                ; loc_2D600
		dc.l    $000003E8
HUD_Val_000100:                                                ; loc_2D604
		dc.l    $00000064
HUD_Val_000010:                                                ; loc_2D608
		dc.l    $0000000A
HUD_Val_000001:                                                ; loc_2D60C
		dc.l    $00000001
;-------------------------------------------------------------------------------
loc_2D610:
		lea     HUD_Val_000001(PC), A2                 ; loc_2D60C
		moveq   #$00, D6
		bra.s   loc_2D61E
loc_2D618:
		lea     HUD_Val_000010(PC), A2                 ; loc_2D608
		moveq   #$01, D6
loc_2D61E:
		moveq   #$00, D4
		lea     HUD_Art_Numbers(PC), A1                ; loc_2D73A
loc_2D624:
		moveq   #$00, D2
		move.l  (A2)+, D3
loc_2D628:
		sub.l   D3, D1
		bcs.s   loc_2D630
		addq.w  #$01, D2
		bra.s   loc_2D628
loc_2D630:
		add.l   D3, D1
		tst.w   D2
		beq.s   loc_2D63A
		move.w  #$0001, D4
loc_2D63A:
		lsl.w   #$06, D2
		move.l  D0, $0004(A6)
		lea     $00(A1, D2), A3
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		addi.l  #$00400000, D0
		dbra    D6, loc_2D624
		rts
;-------------------------------------------------------------------------------
loc_2D670:
		lea     HUD_Val_001000(PC), A2                 ; loc_2D600
		moveq   #$03, D6
		moveq   #$00, D4
		lea     HUD_Art_Numbers(PC), A1                ; loc_2D73A
loc_2D67C:
		moveq   #$00, D2
		move.l  (A2)+, D3
loc_2D680:
		sub.l   D3, D1
		bcs.s   loc_2D688
		addq.w  #$01, D2
		bra.s   loc_2D680
loc_2D688:
		add.l   D3, D1
		tst.w   D2
		beq.s   loc_2D692
		move.w  #$0001, D4
loc_2D692:
		tst.w   D4
		beq.s   loc_2D6C2
		lsl.w   #$06, D2
		lea     $00(A1, D2), A3
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
loc_2D6BC:
		dbra    D6, loc_2D67C
		rts
loc_2D6C2:
		moveq   #$0F, D5
loc_2D6C4:
		move.l  #$00000000, (A6)
		dbra    D5, loc_2D6C4
		bra.s   loc_2D6BC
loc_2D6D0:
		move.l  #$7BA00003, D0
		moveq   #$00, D1
		move.b  (Life_Count).w, D1                           ; $FFFFFE12
		lea     HUD_Val_000010(PC), A2                 ; loc_2D608
		moveq   #$01, D6
		moveq   #$00, D4
		lea     HUD_Art_Life_Numbers(PC), A1           ; loc_2DA3A
loc_2D6E8:
		move.l  D0, $0004(A6)
		moveq   #$00, D2
		move.l  (A2)+, D3
loc_2D6F0:
		sub.l   D3, D1
		bcs.s   loc_2D6F8
		addq.w  #$01, D2
		bra.s   loc_2D6F0
loc_2D6F8:
		add.l   D3, D1
		tst.w   D2
		beq.s   loc_2D702
		move.w  #$0001, D4
loc_2D702:
		tst.w   D4
		beq.s   loc_2D728
loc_2D706:
		lsl.w   #$05, D2
		lea     $00(A1, D2), A3
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
		move.l  (A3)+, (A6)
loc_2D71C:
		addi.l  #$00400000, D0
		dbra    D6, loc_2D6E8
		rts
loc_2D728:
		tst.w   D6
		beq.s   loc_2D706
		moveq   #$07, D5
loc_2D72E:
		move.l  #$00000000, (A6)
		dbra    D5, loc_2D72E
		bra.s   loc_2D71C
;-------------------------------------------------------------------------------
HUD_Art_Numbers:                                               ; loc_2D73A
		incbin  'art/uncompressed/hud_numb.dat'
HUD_Art_Life_Numbers:                                          ; loc_2DA3A
		incbin  'art/uncompressed/hud_num2.dat'
HUD_Art_Debug_Numbers:                                         ; loc_2DB7A
		incbin  'art/uncompressed/hud_debg.dat'
;===============================================================================
; Routine to update the counters on the screen (Points, Time, Lives...).
; [ End ]
;===============================================================================
		nop
Jmp_33_To_ModifySpriteAttr_2P:                                 ; loc_2DE5C
		jmp     (ModifySpriteAttr_2P)                  ; loc_DBBE
		dc.w    $0000
;===============================================================================
; Debug Mode
; [ Begin ]
;===============================================================================
Debug_Mode:                                                    ; loc_2DE64
		moveq   #$00, D0
		move.b  (Debug_Mode_Flag_Index).w, D0                ; $FFFFFE08
		move.w  Debug_Mode_Routine_List(PC, D0), D1    ; loc_2DE72
		jmp     Debug_Mode_Routine_List(PC, D1)        ; loc_2DE72
;-------------------------------------------------------------------------------
Debug_Mode_Routine_List:                                       ; loc_2DE72
		dc.w    loc_2DE76-Debug_Mode_Routine_List
		dc.w    loc_2DEE0-Debug_Mode_Routine_List
;-------------------------------------------------------------------------------
loc_2DE76:
		addq.b  #$02, (Debug_Mode_Flag_Index).w              ; $FFFFFE08
		move.w  (Sonic_Level_Limits_Min_Y).w, ($FFFFFEF0).w  ; $FFFFEECC
		move.w  ($FFFFEEC6).w, ($FFFFFEF2).w
		andi.w  #$07FF, (Player_One_Position_Y).w            ; $FFFFB00C
		andi.w  #$07FF, (Camera_Y).w                         ; $FFFFEE04
		andi.w  #$07FF, (Camera_Y_x4).w                      ; $FFFFEE0C
		move.b  #$00, Obj_Map_Id(A0)                             ; $001A
		move.b  #$00, Obj_Ani_Number(A0)                         ; $001C
		cmpi.b  #gm_SpecialStage, (Game_Mode).w        ; $10,  $FFFFF600
		bne.s   loc_2DEB0
		moveq   #$06, D0
		bra.s   loc_2DEB6
loc_2DEB0:
		moveq   #$00, D0
		move.b  (Level_Id).w, D0                             ; $FFFFFE10
loc_2DEB6:
		lea     (Debug_Mode_Object_List), A2           ; loc_2E0B2
		add.w   D0, D0
		adda.w  $00(A2, D0), A2
		move.w  (A2)+, D6
		cmp.b   ($FFFFFE06).w, D6
		bhi.s   loc_2DED0
		move.b  #$00, ($FFFFFE06).w
loc_2DED0:
		bsr     loc_2E092
		move.b  #$0C, ($FFFFFE0A).w
		move.b  #$01, ($FFFFFE0B).w
;-------------------------------------------------------------------------------
loc_2DEE0:
		moveq   #$06, D0
		cmpi.b  #gm_SpecialStage, (Game_Mode).w        ; $10,  $FFFFF600
		beq.s   loc_2DEF0
		moveq   #$00, D0
		move.b  (Level_Id).w, D0                             ; $FFFFFE10
loc_2DEF0:
		lea     (Debug_Mode_Object_List), A2           ; loc_2E0B2
		add.w   D0, D0
		adda.w  $00(A2, D0), A2
		move.w  (A2)+, D6
		bsr     loc_2DF08
		jmp     (DisplaySprite)                        ; loc_D322
loc_2DF08:
		moveq   #$00, D4
		move.w  #$0001, D1
		move.b  (Control_Ports_Buffer_Data+$0001).w, D4      ; $FFFFF605
		andi.w  #$000F, D4
		bne.s   loc_2DF4A
		move.b  (Control_Ports_Buffer_Data).w, D0            ; $FFFFF604
		andi.w  #$000F, D0
		bne.s   loc_2DF32
		move.b  #$0C, ($FFFFFE0A).w
		move.b  #$0F, ($FFFFFE0B).w
		bra     loc_2DFAE
loc_2DF32:
		subq.b  #$01, ($FFFFFE0A).w
		bne.s   loc_2DF4E
		move.b  #$01, ($FFFFFE0A).w
		addq.b  #$01, ($FFFFFE0B).w
		bne.s   loc_2DF4A
		move.b  #$FF, ($FFFFFE0B).w
loc_2DF4A:
		move.b  (Control_Ports_Buffer_Data).w, D4            ; $FFFFF604
loc_2DF4E:
		moveq   #$00, D1
		move.b  ($FFFFFE0B).w, D1
		addq.w  #$01, D1
		swap.w  D1
		asr.l   #$04, D1
		move.l  Obj_Y(A0), D2                                    ; $000C
		move.l  Obj_X(A0), D3                                    ; $0008
		btst    #$00, D4
		beq.s   loc_2DF78
		sub.l   D1, D2
		moveq   #$00, D0
		move.w  (Sonic_Level_Limits_Min_Y).w, D0             ; $FFFFEECC
		swap.w  D0
		cmp.l   D0, D2
		bge.s   loc_2DF78
		move.l  D0, D2
loc_2DF78:
		btst    #$01, D4
		beq.s   loc_2DF92
		add.l   D1, D2
		moveq   #$00, D0
		move.w  ($FFFFEEC6).w, D0
		addi.w  #$00DF, D0
		swap.w  D0
		cmp.l   D0, D2
		blt.s   loc_2DF92
		move.l  D0, D2
loc_2DF92:
		btst    #$02, D4
		beq.s   loc_2DF9E
		sub.l   D1, D3
		bcc.s   loc_2DF9E
		moveq   #$00, D3
loc_2DF9E:
		btst    #$03, D4
		beq.s   loc_2DFA6
		add.l   D1, D3
loc_2DFA6:
		move.l  D2, Obj_Y(A0)                                    ; $000C
		move.l  D3, Obj_X(A0)                                    ; $0008
loc_2DFAE:
		btst    #$06, (Control_Ports_Buffer_Data).w          ; $FFFFF604
		beq.s   loc_2DFE6
		btst    #$05, (Control_Ports_Buffer_Data+$0001).w    ; $FFFFF605
		beq.s   loc_2DFCA
		subq.b  #$01, ($FFFFFE06).w
		bcc.s   loc_2DFE2
		add.b   D6, ($FFFFFE06).w
		bra.s   loc_2DFE2
loc_2DFCA:
		btst    #$06, (Control_Ports_Buffer_Data+$0001).w    ; $FFFFF605
		beq.s   loc_2DFE6
		addq.b  #$01, ($FFFFFE06).w
		cmp.b   ($FFFFFE06).w, D6
		bhi.s   loc_2DFE2
		move.b  #$00, ($FFFFFE06).w
loc_2DFE2:
		bra     loc_2E092
loc_2DFE6:
		btst    #$05, (Control_Ports_Buffer_Data+$0001).w    ; $FFFFF605
		beq.s   loc_2E02A
		jsr     (SingleObjectLoad)                     ; loc_E6FE
		bne.s   loc_2E02A
		move.w  Obj_X(A0), Obj_X(A1)                      ; $0008, $0008
		move.w  Obj_Y(A0), Obj_Y(A1)                      ; $000C, $000C
		move.b  Obj_Map(A0), Obj_Id(A1)                   ; $0000, $0004
		move.b  Obj_Flags(A0), Obj_Flags(A1)              ; $0001, $0001
		move.b  Obj_Flags(A0), Obj_Status(A1)             ; $0001, $0022
		andi.b  #$7F, Obj_Status(A1)                             ; $0022
		moveq   #$00, D0
		move.b  ($FFFFFE06).w, D0
		lsl.w   #$03, D0
		move.b  $04(A2, D0), Obj_Subtype(A1)                     ; $0028
		rts
loc_2E02A:
		btst    #$04, (Control_Ports_Buffer_Data+$0001).w    ; $FFFFF605
		beq.s   loc_2E090
		moveq   #$00, D0
		move.w  D0, (Debug_Mode_Flag_Index).w                ; $FFFFFE08
		move.l  #Sonic_Mappings, ($FFFFB004).w         ; loc_6FBE0
		move.w  #$0780, ($FFFFB002).w
		tst.w   (Two_Player_Flag).w                          ; $FFFFFFD8
		beq.s   loc_2E052
		move.w  #$03C0, ($FFFFB002).w
loc_2E052:
		move.b  D0, ($FFFFB01C).w
		move.w  D0, Obj_Sub_Y(A0)                                ; $000A
		move.w  D0, $000E(A0)
		move.w  Obj_X(A0), (Player_Two_Position_X).w         ; $FFFFB048; $0008
		move.w  Obj_Y(A0), (Player_Two_Position_Y).w         ; $FFFFB04C; $000C
		move.w  ($FFFFFEF0).w, (Sonic_Level_Limits_Min_Y).w  ; $FFFFEECC
		move.w  ($FFFFFEF2).w, ($FFFFEEC6).w
		cmpi.b  #$10, (Game_Mode).w                          ; $FFFFF600
		bne.s   loc_2E090
		move.b  #$02, ($FFFFB01C).w
		bset    #$02, ($FFFFB022).w
		bset    #$01, ($FFFFB022).w
loc_2E090:
		rts
loc_2E092:
		moveq   #$00, D0
		move.b  ($FFFFFE06).w, D0
		lsl.w   #$03, D0
		move.l  $00(A2, D0), Obj_Map(A0)                         ; $0004
		move.w  $06(A2, D0), Obj_Art_VRAM(A0)                    ; $0002
		move.b  $05(A2, D0), Obj_Map_Id(A0)                      ; $001A
		bsr     Jmp_34_To_ModifySpriteAttr_2P          ; loc_2E700
		rts
;-------------------------------------------------------------------------------
Debug_Mode_Object_List:                                        ; loc_2E0B2
		include "_inc/Debug Index.asm"

;===============================================================================
TilesMainTable:                                                ; loc_2E708
;------------ ; $00
		dc.l    ($04<<$18)|Green_Hill_Tiles            ; loc_8C7FE
		dc.l    ($05<<$18)|Green_Hill_Blocks           ; loc_8B85E
		dc.l    ($04<<$18)|Green_Hill_Chunks           ; loc_9152C
;------------ ; $01
		dc.l    ($06<<$18)|Green_Hill_Tiles            ; loc_8C7FE
		dc.l    ($07<<$18)|Green_Hill_Blocks           ; loc_8B85E
		dc.l    ($05<<$18)|Green_Hill_Chunks           ; loc_9152C
;------------ ; $02
		dc.l    ($08<<$18)|Wood_Tiles                  ; loc_9572C
		dc.l    ($09<<$18)|Wood_Blocks                 ; loc_9478C
		dc.l    ($06<<$18)|Wood_Chunks                 ; loc_99424
;------------ ; $03
		dc.l    ($0A<<$18)|Green_Hill_Tiles            ; loc_8C7FE
		dc.l    ($0B<<$18)|Green_Hill_Blocks           ; loc_8B85E
		dc.l    ($07<<$18)|Green_Hill_Chunks           ; loc_9152C
;------------ ; $04
		dc.l    ($0C<<$18)|Metropolis_Tiles            ; loc_9C314
		dc.l    ($0D<<$18)|Metropolis_Blocks           ; loc_9B054
		dc.l    ($08<<$18)|Metropolis_Chunks           ; loc_9F854
;------------ ; $05
		dc.l    ($0C<<$18)|Metropolis_Tiles            ; loc_9C314
		dc.l    ($0D<<$18)|Metropolis_Blocks           ; loc_9B054
		dc.l    ($08<<$18)|Metropolis_Chunks           ; loc_9F854
;------------ ; $06
		dc.l    ($10<<$18)|Green_Hill_Tiles            ; loc_8C7FE
		dc.l    ($11<<$18)|Green_Hill_Blocks           ; loc_8B85E
		dc.l    ($0A<<$18)|Green_Hill_Chunks           ; loc_9152C
;------------ ; $07
		dc.l    ($12<<$18)|Green_Hill_Tiles            ; loc_8C7FE
		dc.l    ($13<<$18)|Green_Hill_Blocks           ; loc_8B85E
		dc.l    ($0B<<$18)|Green_Hill_Chunks           ; loc_9152C
;------------ ; $08
		dc.l    ($14<<$18)|Hidden_Palace_Tiles         ; loc_A3AB4
		dc.l    ($15<<$18)|Hidden_Palace_Blocks        ; loc_A24D4
		dc.l    ($0C<<$18)|Hidden_Palace_Chunks        ; loc_A6936
;------------ ; $09
		dc.l    ($16<<$18)|Green_Hill_Tiles            ; loc_8C7FE
		dc.l    ($17<<$18)|Green_Hill_Blocks           ; loc_8B85E
		dc.l    ($0D<<$18)|Green_Hill_Chunks           ; loc_9152C
;------------ ; $0A
		dc.l    ($18<<$18)|Oil_Ocean_Tiles             ; loc_A9C96
		dc.l    ($19<<$18)|Oil_Ocean_Blocks            ; loc_A86B6
		dc.l    ($0E<<$18)|Oil_Ocean_Chunks            ; loc_AC996
;------------ ; $0B
		dc.l    ($1A<<$18)|Dust_Hill_Tiles             ; loc_B0146
		dc.l    ($1B<<$18)|Dust_Hill_Blocks            ; loc_AEE86
		dc.l    ($0F<<$18)|Dust_Hill_Chunks            ; loc_B3A68
;------------ ; $0C
		dc.l    ($1C<<$18)|Casino_Night_Tiles          ; loc_B6F18
		dc.l    ($1D<<$18)|Casino_Night_Blocks         ; loc_B65B8
		dc.l    ($10<<$18)|Casino_Night_Chunks         ; loc_B9F62
;------------ ; $0D
		dc.l    ($1E<<$18)|Chemical_Plant_Tiles        ; loc_BD452
		dc.l    ($1F<<$18)|Chemical_Plant_Blocks       ; loc_BBE72
		dc.l    ($11<<$18)|Chemical_Plant_Chunks       ; loc_C0FA4
;------------ ; $0E
		dc.l    ($20<<$18)|Green_Hill_Tiles            ; loc_8C7FE
		dc.l    ($21<<$18)|Green_Hill_Blocks           ; loc_8B85E
		dc.l    ($12<<$18)|Green_Hill_Chunks           ; loc_9152C
;------------ ; $0F
		dc.l    ($22<<$18)|Neo_Green_Hill_Tiles        ; loc_C4DA4
		dc.l    ($23<<$18)|Neo_Green_Hill_Blocks       ; loc_C34A4
		dc.l    ($13<<$18)|Neo_Green_Hill_Chunks       ; loc_CA586
;------------ ; $10
		dc.l    ($24<<$18)|Green_Hill_Tiles            ; loc_8C7FE
		dc.l    ($25<<$18)|Green_Hill_Blocks           ; loc_8B85E
		dc.l    ($14<<$18)|Green_Hill_Chunks           ; loc_9152C
;-------------------------------------------------------------------------------
ArtLoadCues:                                                   ; loc_2E7D4
		include "_inc/Pattern Load Cues.asm"

;===============================================================================

Previous_Build_Colision_Array_2_Overwrite_Data:                ; loc_2EDFE
		incbin  'leftovers/pb_c_ar2.dat'
Previous_Build_Green_Hill_Colision_Data_1:                     ; loc_2F2EA
Previous_Build_Hill_Top_Colision_Data_1:                       ; loc_2F2EA
		incbin  'level/shared/ghz_col1.dat'
Previous_Build_Green_Hill_Colision_Data_2:                     ; loc_2F5EA
Previous_Build_Hill_Top_Colision_Data_2:                       ; loc_2F5EA
		incbin  'level/shared/ghz_col2.dat'
Previous_Build_Wood_Colision_Data_1:                           ; loc_2F8EA
Previous_Build_Wood_Colision_Data_2:                           ; loc_2F8EA
		incbin  'level/wood zone/wz_col.dat'
Previous_Build_Metropolis_Colision_Data_1:                     ; loc_2FBEA
Previous_Build_Metropolis_Colision_Data_2:                     ; loc_2FBEA
		incbin  'level/metropolis zone/mz_col.dat'
Previous_Build_Hidden_Palace_Colision_Data_1_Overwrite_Data:   ; loc_2FEEA
		incbin  'leftovers/hpzpb_col1.dat'
;-------------------------------------------------------------------------------
Art_GHz_Flower_1:                                              ; loc_30000
Art_HTz_Flower_1:                                              ; loc_30000
		incbin  'art/uncompressed/flower_1.dat'
Art_GHz_Flower_2:                                              ; loc_30080
Art_HTz_Flower_2:                                              ; loc_30080
		incbin  'art/uncompressed/flower_2.dat'
Art_GHz_Flower_3:                                              ; loc_30100
Art_HTz_Flower_3:                                              ; loc_30100
		incbin  'art/uncompressed/flower_3.dat'
Art_GHz_Flower_4:                                              ; loc_30180
Art_HTz_Flower_4:                                              ; loc_30180
		incbin  'art/uncompressed/flower_4.dat'
Art_GHz_Dyn_Wall:                                              ; loc_30200
Art_HTz_Dyn_Wall:                                              ; loc_30200
		incbin  'art/uncompressed/dyn_wall.dat'
Art_Hill_Top_Background:                                       ; loc_30300
		incbin  'art/nemesis/backgnd.nem'
Art_Hill_Top_Background_Uncomp:                                ; loc_30C2A
		incbin  'art/uncompressed/htzbackgnd.dat'
Art_Mz_Spinnig_Cylinder:                                       ; loc_3102A
		incbin  'art/uncompressed/spin_cyl.dat'
Art_Mz_Lava:                                                   ; loc_3202A
		incbin  'art/uncompressed/lava.dat'
Art_Mz_Pistons:                                                ; loc_3262A
		incbin  'art/uncompressed/pistons.dat'
Art_HPz_Background:                                            ; loc_3286A
		incbin  'art/uncompressed/backgnd.dat'
Art_HPz_Orbs:                                                  ; loc_32C6A
		incbin  'art/uncompressed/orbs.dat'
Art_OOz_Red_Balls:                                             ; loc_32F6A
		incbin  'art/uncompressed/red_ball.dat'
Art_OOz_Rotating_Square_1:                                     ; loc_330EA
		incbin  'art/uncompressed/r_squar1.dat'
Art_OOz_Rotating_Square_2:                                     ; loc_332EA
		incbin  'art/uncompressed/r_squar2.dat'
Art_OOz_Oil_1:                                                 ; loc_334EA
		incbin  'art/uncompressed/oil_1.dat'
Art_OOz_Oil_2:                                                 ; loc_33CEA
		incbin  'art/uncompressed/oil_2.dat'
Art_CNz_Blue_Cards:                                            ; loc_344EA
		incbin  'art/uncompressed/bluecard.dat'
Art_CNz_Pink_Cards:                                            ; loc_34DEA
		incbin  'art/uncompressed/pinkcard.dat'
Art_CNz_Slot_Machine_Checks:                                   ; loc_357EA
		incbin  'art/uncompressed/sm_check.dat'
Art_CPz_Dyn_Background:                                        ; loc_363EA
		incbin  'art/uncompressed/cpzbackgnd.dat'
Art_NGHz_Water_Falls_1:                                        ; loc_365EA
		incbin  'art/uncompressed/water_f1.dat'
Art_NGHz_Water_Falls_2:                                        ; loc_366EA
		incbin  'art/uncompressed/water_f2.dat'
Art_NGHz_Water_Falls_3:                                        ; loc_367EA
		incbin  'art/uncompressed/water_f3.dat'
AngleMap:                                                      ; loc_368EA
		incbin  'collision data/anglemap.dat'
Colision_Array_1:                                              ; loc_369EA
		incbin  'collision data/c_array1.dat'
Colision_Array_2:                                              ; loc_379EA
		incbin  'collision data/c_array2.dat'
Green_Hill_Colision_Data_1:                                    ; loc_389EA
Hill_Top_Colision_Data_1:                                      ; loc_389EA
		incbin  'level/shared/ghz_col1.dat'
Green_Hill_Colision_Data_2:                                    ; loc_38CEA
Hill_Top_Colision_Data_2:                                      ; loc_38CEA
		incbin  'level/shared/ghz_col2.dat'
Wood_Colision_Data_1:                                          ; loc_38FEA
Wood_Colision_Data_2:                                          ; loc_38FEA
		incbin  'level/wood zone/wz_col.dat'
Metropolis_Colision_Data_1:                                    ; loc_392EA
Metropolis_Colision_Data_2:                                    ; loc_392EA
		incbin  'level/metropolis zone/mz_col.dat'
Hidden_Palace_Colision_Data_1:                                 ; loc_395EA
		incbin  'level/hidden palace zone/hpz_col1.dat'
Hidden_Palace_Colision_Data_2:                                 ; loc_398EA
		incbin  'level/hidden palace zone/hpz_col2.dat'
Oil_Ocean_Colision_Data_1:                                     ; loc_39BEA
Oil_Ocean_Colision_Data_2:                                     ; loc_39BEA
		incbin  'level/oil ocean zone/ooz_col.dat'
Dust_Hill_Colision_Data_1:                                     ; loc_39EEA
Dust_Hill_Colision_Data_2:                                     ; loc_39EEA
		incbin  'level/dust hill zone/dhz_col.dat'
Casino_Night_Colision_Data_1:                                  ; loc_3A1EA
		incbin  'level/casino night zone/cnz_col1.dat'
Casino_Night_Colision_Data_2:                                  ; loc_3A4EA
		incbin  'level/casino night zone/cnz_col2.dat'
Chemical_Plant_Colision_Data_1:                                ; loc_3A7EA
		incbin  'level/chemical plant zone/cpz_col1.dat'
Chemical_Plant_Colision_Data_2:                                ; loc_3AAEA
		incbin  'level/chemical plant zone/cpz_col2.dat'
Neo_Green_Hill_Colision_Data_1:                                ; loc_3ADEA
		incbin  'level/neo green hill zone/nghzcol1.dat'
Neo_Green_Hill_Colision_Data_2:                                ; loc_3B0EA
		incbin  'level/neo green hill zone/nghzcol2.dat'
Lvl1_Colision_Data_1:                                          ; loc_3B3EA
Lvl1_Colision_Data_2:                                          ; loc_3B3EA
Lvl3_Colision_Data_1:                                          ; loc_3B3EA
Lvl3_Colision_Data_2:                                          ; loc_3B3EA
Lvl6_Colision_Data_1:                                          ; loc_3B3EA
Lvl6_Colision_Data_2:                                          ; loc_3B3EA
Lvl9_Colision_Data_1:                                          ; loc_3B3EA
Lvl9_Colision_Data_2:                                          ; loc_3B3EA
Genocide_City_Colision_Data_1:                                 ; loc_3B3EA
              ; incbin  'level/genocide city zone/gczcol1.dat'
Genocide_City_Colision_Data_2:                                 ; loc_3B3EA
              ; incbin  'level/genocide city zone/gczcol2.dat'
Death_Egg_Colision_Data_1:                                     ; loc_3B3EA
              ; incbin  'level/death egg zone/dezcol1.dat'
Death_Egg_Colision_Data_2:                                     ; loc_3B3EA
	      ; incbin  'level/death egg zone/dezcol2.dat'
Special_Stage_1:                                               ; loc_3B3EA
		incbin  'level/special stage/stage_1.eni'
Special_Stage_2:                                               ; loc_3B664
		incbin  'level/special stage/stage_2.eni'
Special_Stage_3:                                               ; loc_3BA76
		incbin  'level/special stage/stage_3.eni'
Special_Stage_4:                                               ; loc_3BDD2
		incbin  'level/special stage/stage_4.eni'
Special_Stage_5:                                               ; loc_3C2AC
		incbin  'level/special stage/stage_5.eni'
Special_Stage_6:                                               ; loc_3C75C
		incbin  'level/special stage/stage_6.eni'
;===============================================================================
; Level Layouts
; [ Begin ]
;===============================================================================
Level_Layout:                                                  ; loc_3CA4E
;------------ ; $00
		dc.w    GHz_Foreground_Map_Act_1-Level_Layout  ; loc_3CAD6
		dc.w    GHz_Background_Map_Act_1-Level_Layout  ; loc_3DADA
		dc.w    GHz_Foreground_Map_Act_2-Level_Layout  ; loc_3D2D8
		dc.w    GHz_Background_Map_Act_2-Level_Layout  ; loc_3DADA
;------------ ; $01
		dc.w    Lvl1_Foreground_Map_Act_1-Level_Layout ; loc_3DAE4
		dc.w    Lvl1_Background_Map_Act_1-Level_Layout ; loc_3DAE4
		dc.w    Lvl1_Foreground_Map_Act_2-Level_Layout ; loc_3DAE4
		dc.w    Lvl1_Background_Map_Act_2-Level_Layout ; loc_3DAE4
;------------ ; $02
		dc.w    Wz_Foreground_Map_Act_1-Level_Layout   ; loc_3DAE8
		dc.w    Wz_Background_Map_Act_1-Level_Layout   ; loc_3EAEC
		dc.w    Wz_Foreground_Map_Act_2-Level_Layout   ; loc_3E2EA
		dc.w    Wz_Background_Map_Act_2-Level_Layout   ; loc_3F2EE
;------------ ; $03
		dc.w    Lvl3_Foreground_Map_Act_1-Level_Layout ; loc_3FAF0
		dc.w    Lvl3_Background_Map_Act_1-Level_Layout ; loc_3FAF0
		dc.w    Lvl3_Foreground_Map_Act_2-Level_Layout ; loc_3FAF0
		dc.w    Lvl3_Background_Map_Act_2-Level_Layout ; loc_3FAF0
;------------ ; $04
		dc.w    Mz_Foreground_Map_Act_1-Level_Layout   ; loc_3FAF4
		dc.w    Mz_Background_Map_Act_1-Level_Layout   ; loc_40AF8
		dc.w    Mz_Foreground_Map_Act_2-Level_Layout   ; loc_402F6
		dc.w    Mz_Background_Map_Act_2-Level_Layout   ; loc_40AF8
;------------ ; $05
		dc.w    Mz_Foreground_Map_Act_3-Level_Layout   ; loc_40B5A
		dc.w    Mz_Background_Map_Act_3-Level_Layout   ; loc_40AF8
		dc.w    Mz_Foreground_Map_Act_4-Level_Layout   ; loc_40B5A
		dc.w    Mz_Background_Map_Act_4-Level_Layout   ; loc_40AF8
;------------ ; $06
		dc.w    Lvl6_Foreground_Map_Act_1-Level_Layout ; loc_4135C
		dc.w    Lvl6_Background_Map_Act_1-Level_Layout ; loc_4135C
		dc.w    Lvl6_Foreground_Map_Act_2-Level_Layout ; loc_4135C
		dc.w    Lvl6_Background_Map_Act_2-Level_Layout ; loc_4135C
;------------ ; $07
		dc.w    HTz_Foreground_Map_Act_1-Level_Layout  ; loc_41360
		dc.w    HTz_Background_Map_Act_1-Level_Layout  ; loc_42364
		dc.w    HTz_Foreground_Map_Act_2-Level_Layout  ; loc_41B62
		dc.w    HTz_Background_Map_Act_2-Level_Layout  ; loc_42B66
;------------ ; $08
		dc.w    HPz_Foreground_Map_Act_1-Level_Layout  ; loc_43368
		dc.w    HPz_Background_Map_Act_1-Level_Layout  ; loc_43B6A
		dc.w    HPz_Foreground_Map_Act_2-Level_Layout  ; loc_43368
		dc.w    HPz_Background_Map_Act_2-Level_Layout  ; loc_43B6A
;------------ ; $09
		dc.w    Lvl9_Foreground_Map_Act_1-Level_Layout ; loc_43BB4
		dc.w    Lvl9_Background_Map_Act_1-Level_Layout ; loc_43BB4
		dc.w    Lvl9_Foreground_Map_Act_2-Level_Layout ; loc_43BB4
		dc.w    Lvl9_Background_Map_Act_2-Level_Layout ; loc_43BB4
;------------ ; $0A
		dc.w    OOz_Foreground_Map_Act_1-Level_Layout  ; loc_43BB8
		dc.w    OOz_Background_Map_Act_1-Level_Layout  ; loc_44BBC
		dc.w    OOz_Foreground_Map_Act_2-Level_Layout  ; loc_443BA
		dc.w    OOz_Background_Map_Act_2-Level_Layout  ; loc_44BBC
;------------ ; $0B
		dc.w    DHz_Foreground_Map_Act_1-Level_Layout  ; loc_44BD6
		dc.w    DHz_Background_Map_Act_1-Level_Layout  ; loc_45BDA
		dc.w    DHz_Foreground_Map_Act_2-Level_Layout  ; loc_453D8
		dc.w    DHz_Background_Map_Act_2-Level_Layout  ; loc_45BDA
;------------ ; $0C
		dc.w    CNz_Foreground_Map_Act_1-Level_Layout  ; loc_45BEC
		dc.w    CNz_Background_Map_Act_1-Level_Layout  ; loc_46BF0
		dc.w    CNz_Foreground_Map_Act_2-Level_Layout  ; loc_463EE
		dc.w    CNz_Background_Map_Act_2-Level_Layout  ; loc_46BF0
;------------ ; $0D
		dc.w    CPz_Foreground_Map_Act_1-Level_Layout  ; loc_46BFA
		dc.w    CPz_Background_Map_Act_1-Level_Layout  ; loc_47BFE
		dc.w    CPz_Foreground_Map_Act_2-Level_Layout  ; loc_473FC
		dc.w    CPz_Background_Map_Act_2-Level_Layout  ; loc_47BFE
;------------ ; $0E
		dc.w    GCz_Foreground_Map_Act_1-Level_Layout  ; loc_47C2A
		dc.w    GCz_Background_Map_Act_1-Level_Layout  ; loc_47C2A
		dc.w    GCz_Foreground_Map_Act_2-Level_Layout  ; loc_47C2A
		dc.w    GCz_Background_Map_Act_2-Level_Layout  ; loc_47C2A
;------------ ; $0F
		dc.w    NGHz_Foreground_Map_Act_1-Level_Layout ; loc_47C2E
		dc.w    NGHz_Background_Map_Act_1-Level_Layout ; loc_48C32
		dc.w    NGHz_Foreground_Map_Act_2-Level_Layout ; loc_48430
		dc.w    NGHz_Background_Map_Act_2-Level_Layout ; loc_49434
;------------ ; $10
		dc.w    DEz_Foreground_Map_Act_1-Level_Layout  ; loc_49C36
		dc.w    DEz_Background_Map_Act_1-Level_Layout  ; loc_49C36
		dc.w    DEz_Foreground_Map_Act_2-Level_Layout  ; loc_49C36
		dc.w    DEz_Background_Map_Act_2-Level_Layout  ; loc_49C36
;-------------------------------------------------------------------------------
GHz_Foreground_Map_Act_1:                                      ; loc_3CAD6
		incbin  'level/emerald hill zone/fg_map1.dat'
GHz_Foreground_Map_Act_2:                                      ; loc_3D2D8
		incbin  'level/emerald hill zone/fg_map2.dat'
GHz_Background_Map_Act_1:                                      ; loc_3DADA
GHz_Background_Map_Act_2:                                      ; loc_3DADA
		incbin  'level/emerald hill zone/bg_map.dat'
Lvl1_Foreground_Map_Act_1:                                     ; loc_3DAE4
Lvl1_Background_Map_Act_1:                                     ; loc_3DAE4
Lvl1_Foreground_Map_Act_2:                                     ; loc_3DAE4
Lvl1_Background_Map_Act_2:                                     ; loc_3DAE4
		dc.b    $00      ; Size X
		dc.b    $00      ; Size Y
		dc.b    $00, $00 ; Data
Wz_Foreground_Map_Act_1:                                       ; loc_3DAE8
		incbin  'level/wood zone/fg_map1.dat'
Wz_Foreground_Map_Act_2:                                       ; loc_3E2EA
		incbin  'level/wood zone/fg_map2.dat'
Wz_Background_Map_Act_1:                                       ; loc_3EAEC
		incbin  'level/wood zone/bg_map1.dat'
Wz_Background_Map_Act_2:                                       ; loc_3F2EE
		incbin  'level/wood zone/bg_map2.dat'
Lvl3_Foreground_Map_Act_1:                                     ; loc_3FAF0
Lvl3_Background_Map_Act_1:                                     ; loc_3FAF0
Lvl3_Foreground_Map_Act_2:                                     ; loc_3FAF0
Lvl3_Background_Map_Act_2:                                     ; loc_3FAF0
		dc.b    $00      ; Size X
		dc.b    $00      ; Size Y
		dc.b    $00, $00 ; Data
Mz_Foreground_Map_Act_1:                                       ; loc_3FAF4
		incbin  'level/metropolis zone/fg_map1.dat'
Mz_Foreground_Map_Act_2:                                       ; loc_402F6
		incbin  'level/metropolis zone/fg_map2.dat'
Mz_Background_Map_Act_1:                                       ; loc_40AF8
Mz_Background_Map_Act_2:                                       ; loc_40AF8
Mz_Background_Map_Act_3:                                       ; loc_40AF8
Mz_Background_Map_Act_4:                                       ; loc_40AF8
		incbin  'level/metropolis zone/bg_map.dat'
Mz_Foreground_Map_Act_3:                                       ; loc_40B5A
Mz_Foreground_Map_Act_4:                                       ; loc_40B5A
		incbin  'level/metropolis zone/fg_map3.dat'
Lvl6_Foreground_Map_Act_1:                                     ; loc_4135C
Lvl6_Background_Map_Act_1:                                     ; loc_4135C
Lvl6_Foreground_Map_Act_2:                                     ; loc_4135C
Lvl6_Background_Map_Act_2:                                     ; loc_4135C
		dc.b    $00      ; Size X
		dc.b    $00      ; Size Y
		dc.b    $00, $00 ; Data
HTz_Foreground_Map_Act_1:                                      ; loc_41360
		incbin  'level/hill top zone/fg_map1.dat'
HTz_Foreground_Map_Act_2:                                      ; loc_41B62
		incbin  'level/hill top zone/fg_map2.dat'
HTz_Background_Map_Act_1:                                      ; loc_42364
		incbin  'level/hill top zone/bg_map1.dat'
HTz_Background_Map_Act_2:                                      ; loc_42B66
		incbin  'level/hill top zone/bg_map2.dat'
HPz_Foreground_Map_Act_1:                                      ; loc_43368
HPz_Foreground_Map_Act_2:                                      ; loc_43368
		incbin  'level/hidden palace zone/fg_map.dat'
HPz_Background_Map_Act_1:                                      ; loc_43B6A
HPz_Background_Map_Act_2:                                      ; loc_43B6A
		incbin  'level/hidden palace zone/bg_map.dat'
Lvl9_Foreground_Map_Act_1:                                     ; loc_43BB4
Lvl9_Background_Map_Act_1:                                     ; loc_43BB4
Lvl9_Foreground_Map_Act_2:                                     ; loc_43BB4
Lvl9_Background_Map_Act_2:                                     ; loc_43BB4
		dc.b    $00      ; Size X
		dc.b    $00      ; Size Y
		dc.b    $00, $00 ; Data
OOz_Foreground_Map_Act_1:                                      ; loc_43BB8
		incbin  'level/oil ocean zone/fg_map1.dat'
OOz_Foreground_Map_Act_2:                                      ; loc_443BA
		incbin  'level/oil ocean zone/fg_map2.dat'
OOz_Background_Map_Act_1:                                      ; loc_44BBC
OOz_Background_Map_Act_2:                                      ; loc_44BBC
		incbin  'level/oil ocean zone/bg_map.dat'
DHz_Foreground_Map_Act_1:                                      ; loc_44BD6
		incbin  'level/dust hill zone/fg_map1.dat'
DHz_Foreground_Map_Act_2:                                      ; loc_453D8
		incbin  'level/dust hill zone/fg_map2.dat'
DHz_Background_Map_Act_1:                                      ; loc_45BDA
DHz_Background_Map_Act_2:                                      ; loc_45BDA
		incbin  'level/dust hill zone/bg_map.dat'
CNz_Foreground_Map_Act_1:                                      ; loc_45BEC
		incbin  'level/casino night zone/fg_map1.dat'
CNz_Foreground_Map_Act_2:                                      ; loc_463EE
		incbin  'level/casino night zone/fg_map2.dat'
CNz_Background_Map_Act_1:                                      ; loc_46BF0
CNz_Background_Map_Act_2:                                      ; loc_46BF0
		incbin  'level/casino night zone/bg_map.dat'
CPz_Foreground_Map_Act_1:                                      ; loc_46BFA
		incbin  'level/chemical plant zone/fg_map1.dat'
CPz_Foreground_Map_Act_2:                                      ; loc_473FC
		incbin  'level/chemical plant zone/fg_map2.dat'
CPz_Background_Map_Act_1:                                      ; loc_47BFE
CPz_Background_Map_Act_2:                                      ; loc_47BFE
		incbin  'level/chemical plant zone/bg_map.dat'
GCz_Foreground_Map_Act_1:                                      ; loc_47C2A
GCz_Background_Map_Act_1:                                      ; loc_47C2A
GCz_Foreground_Map_Act_2:                                      ; loc_47C2A
GCz_Background_Map_Act_2:                                      ; loc_47C2A
		dc.b    $00      ; Size X
		dc.b    $00      ; Size Y
		dc.b    $00, $00 ; Data
NGHz_Foreground_Map_Act_1:                                     ; loc_47C2E
		incbin  'level/neo green hill zone/fg_map1.dat'
NGHz_Foreground_Map_Act_2:                                     ; loc_48430
		incbin  'level/neo green hill zone/fg_map2.dat'
NGHz_Background_Map_Act_1:                                     ; loc_48C32
		incbin  'level/neo green hill zone/bg_map1.dat'
NGHz_Background_Map_Act_2:                                     ; loc_49434
		incbin  'level/neo green hill zone/bg_map2.dat'
DEz_Foreground_Map_Act_1:                                      ; loc_49C36
DEz_Background_Map_Act_1:                                      ; loc_49C36
DEz_Foreground_Map_Act_2:                                      ; loc_49C36
DEz_Background_Map_Act_2:                                      ; loc_49C36
		dc.b    $00      ; Size X
		dc.b    $00      ; Size Y
		dc.b    $00, $00 ; Data
;===============================================================================
; Level Layouts
; [ End ]
;===============================================================================
; Giant ring used to access the Special Stage.
; Not used, Leftover from Sonic 1.
Art_Big_Ring:
		incbin  'art/uncompressed/big_ring.dat'
Previous_Build_Art_Big_Ring_Overwrite:
		incbin  'art/uncompressed/pbigring.dat'
;-------------------------------------------------------------------------------
; Nemesis format data overwritten.
; 8x8 tiles from the Star Light stage from Sonic 1.
; from the Sonic 1 (Revision 01) disassembly, this data is the same as from the file
; "Sonic_1_Jap/Data/SLz/Tiles.nem" (0x0BF4   0x1377)
; [ Begin ]
;-------------------------------------------------------------------------------
Star_Light_Tiles_Overwrite:
		incbin  'level/star light zone/tiles.dat'
;-------------------------------------------------------------------------------
; Nemesis format data overwritten.
; 8x8 tiles from the Star Light stage from Sonic 1.
; from the Sonic 1 (Revision 01) disassembly, this data is the same as from the file
; "Sonic_1_Jap/Data/SLz/Tiles.nem" (0x0BF4   0x1377)
; [ End ]
;-------------------------------------------------------------------------------
;===============================================================================
; Level Object Layouts
; [ Begin ]
;===============================================================================
Objects_Layout:
		dc.w    GHz_Obj_Act1-Objects_Layout
		dc.w    GHz_Obj_Act2-Objects_Layout
		dc.w    Lvl1_Obj_Act1-Objects_Layout
		dc.w    Lvl1_Obj_Act2-Objects_Layout
		dc.w    Wz_Obj_Act1-Objects_Layout
		dc.w    Wz_Obj_Act2-Objects_Layout
		dc.w    Lvl3_Obj_Act1-Objects_Layout
		dc.w    Lvl3_Obj_Act2-Objects_Layout
		dc.w    Mz_Obj_Act1-Objects_Layout
		dc.w    Mz_Obj_Act2-Objects_Layout
		dc.w    Mz_Obj_Act3-Objects_Layout
		dc.w    Mz_Obj_Act4-Objects_Layout
		dc.w    Lvl6_Obj_Act1-Objects_Layout
		dc.w    Lvl6_Obj_Act2-Objects_Layout
		dc.w    HTz_Obj_Act1-Objects_Layout
		dc.w    HTz_Obj_Act2-Objects_Layout
		dc.w    HPz_Obj_Act1-Objects_Layout
		dc.w    HPz_Obj_Act2-Objects_Layout
		dc.w    Lvl9_Obj_Act1-Objects_Layout
		dc.w    Lvl9_Obj_Act2-Objects_Layout
		dc.w    OOz_Obj_Act1-Objects_Layout
		dc.w    OOz_Obj_Act2-Objects_Layout
		dc.w    DHz_Obj_Act1-Objects_Layout
		dc.w    DHz_Obj_Act2-Objects_Layout
		dc.w    CNz_Obj_Act1-Objects_Layout
		dc.w    CNz_Obj_Act2-Objects_Layout
		dc.w    CPz_Obj_Act1-Objects_Layout
		dc.w    CPz_Obj_Act2-Objects_Layout
		dc.w    GCz_Obj_Act1-Objects_Layout
		dc.w    GCz_Obj_Act2-Objects_Layout
		dc.w    NGHz_Obj_Act1-Objects_Layout
		dc.w    NGHz_Obj_Act2-Objects_Layout
		dc.w    DEz_Obj_Act1-Objects_Layout
		dc.w    DEz_Obj_Act2-Objects_Layout
;-------------------------------------------------------------------------------
		dc.w    $FFFF, $0000, $0000
GHz_Obj_Act1:                                                  ; loc_4C04A
		incbin  'level/emerald hill zone/obj_act1.dat'
GHz_Obj_Act2:                                                  ; loc_4C302
		incbin  'level/emerald hill zone/obj_act2.dat'
Mz_Obj_Act1:                                                   ; loc_4C638
		incbin  'level/metropolis zone/obj_act1.dat'
Mz_Obj_Act2:                                                   ; loc_4CA04
		incbin  'level/metropolis zone/obj_act2.dat'
Mz_Obj_Act3:                                                   ; loc_4CDD0
Mz_Obj_Act4:                                                   ; loc_4CDD0
		incbin  'level/metropolis zone/obj_act3.dat'
HTz_Obj_Act1:                                                  ; loc_4D214
		incbin  'level/hill top zone/obj_act1.dat'
HTz_Obj_Act2:                                                  ; loc_4D4A2
		incbin  'level/hill top zone/obj_act2.dat'
HPz_Obj_Act1:                                                  ; loc_4D958
		incbin  'level/hidden palace zone/obj_act.dat'
HPz_Obj_Act2:                                                  ; loc_4DA60
		dc.w    $FFFF, $0000, $0000
		dc.w    $FFFF, $0000, $0000
OOz_Obj_Act1:                                                  ; loc_4DA6C
		incbin  'level/oil ocean zone/obj_act1.dat'
OOz_Obj_Act2:                                                  ; loc_4DBCE
		incbin  'level/oil ocean zone/obj_act2.dat'
DHz_Obj_Act1:                                                  ; loc_4DDBA
		incbin  'level/dust hill zone/obj_act1.dat'
DHz_Obj_Act2:                                                  ; loc_4E06C
		incbin  'level/dust hill zone/obj_act2.dat'
CPz_Obj_Act1:                                                  ; loc_4E384
		incbin  'level/chemical plant zone/obj_act1.dat'
CPz_Obj_Act2:                                                  ; loc_4E61E
		incbin  'level/chemical plant zone/obj_act2.dat'
NGHz_Obj_Act1:                                                 ; loc_4E9BA
		incbin  'level/neo green hill zone/obj_act1.dat'
NGHz_Obj_Act2:                                                 ; loc_4EB8E
		incbin  'level/neo green hill zone/obj_act2.dat'
GCz_Obj_Act1:
GCz_Obj_Act2:
CNz_Obj_Act1:
CNz_Obj_Act2:
Lvl1_Obj_Act1:
Lvl1_Obj_Act2:
Wz_Obj_Act1:
Wz_Obj_Act2:
Lvl3_Obj_Act1:
Lvl3_Obj_Act2:
Lvl6_Obj_Act1:
Lvl6_Obj_Act2:
Lvl9_Obj_Act1:
Lvl9_Obj_Act2:
DEz_Obj_Act1:
DEz_Obj_Act2:
		dc.w    $FFFF, $0000, $0000
		dc.w    $0000
;-------------------------------------------------------------------------------
; Kosinski format data overwritten.
; 8x8 tiles from the Star Light stage from Sonic 1.
; from the Sonic 1 (Revision 01) disassembly, this data is the same as from the file
; "Sonic_1_Jap/Data/SLz/Chunks.kos" (0x054C   0x1377)
; [ Begin ]
;-------------------------------------------------------------------------------
Star_Light_Chunks_Overwrite:                                   ; loc_4ED28
		incbin  'level/star light zone/chunks.dat'
;-------------------------------------------------------------------------------
; Kosinski format data overwritten.
; 8x8 tiles from the Star Light stage from Sonic 1.
; from the Sonic 1 (Revision 01) disassembly, this data is the same as from the file
; "Sonic_1_Jap/Data/SLz/Chunks.kos" (0x054C   0x1377)
; [ End ]
;-------------------------------------------------------------------------------

;===============================================================================
; Level Object Layouts
; [ End ]
;===============================================================================
Art_Sonic:
		incbin  'art/uncompressed/sonic.dat'
Art_Tails:
		incbin  'art/uncompressed/tails.dat'
;-------------------------------------------------------------------------------
Sonic_Mappings:
		include "mappings/sprite/Sonic.asm"
;-------------------------------------------------------------------------------
Sonic_Dyn_Script:
		include "mappings/spriteDPLC/SonicPLC.asm"
;-------------------------------------------------------------------------------
Art_Shield:
		incbin  'art/nemesis/shield.nem'
		even
Art_Invencibility_Stars:
		incbin  'art/nemesis/invstars.nem'
		even
Art_Water_Splash_Dust:
		incbin  'art/uncompressed/spshdust.dat'
Art_Water_Splash:
		incbin  'art/nemesis/w_splash.nem'
		even
;-------------------------------------------------------------------------------
Tails_Mappings:
		include "mappings/sprite/Tails.asm"
;-------------------------------------------------------------------------------
Tails_Dyn_Script:
		include "mappings/spriteDPLC/TailsPLC.asm"
;-------------------------------------------------------------------------------
Art_SEGA:
		incbin  'art/nemesis/sega.nem'
		even
Sega_Mappings:
		incbin  'mappings/eni/sega.eni'
TS_Wings_Sonic_Mappings:
		incbin  'mappings/eni/titlescr.eni'
Title_Screen_Bg_Mappings:
		incbin  'mappings/eni/titscrbg.eni'
Title_Screen_R_Bg_Mappings:
		incbin  'mappings/eni/titscrb2.eni'
Art_Title_Screen_Bg_Wings:
		incbin  'art/nemesis/titlescr.nem' ; Title Screen Wings and background
		even
Art_Title_Screen_Sonic_Tails:
		incbin  'art/nemesis/snctlscr.nem' ; Sonic And Tails from Title Screen
		even
Art_FireBall:
		incbin  'art/nemesis/fireball.nem'
		even
Art_GHz_Waterfall:
		incbin  'art/nemesis/ehzwatrfall.nem'
		even
Art_HTz_Lava_Bubble:
		incbin  'art/nemesis/lvbubble.nem'
		even
Art_GHz_Bridge:
		incbin  'art/nemesis/ehzbridge.nem'
		even
Art_HTz_Teleferic:
		incbin  'art/nemesis/telefrcs.nem'
		even
Art_HTz_Automatic_Door:
		incbin  'art/nemesis/htzautodoor.nem'
		even
Art_HTz_See_saw:
		incbin  'art/nemesis/see-saw.nem'
		even
Art_Unk_Fireball: ; Not used
		incbin  'art/nemesis/unkfball.nem'
		even
Art_HTz_Rock:
		incbin  'art/nemesis/rock.nem'
		even
Art_HTz_See_saw_badnik:
		incbin  'art/nemesis/see-sawb.nem'
		even
Art_Mz_Rotating_Gear:
		incbin  'art/nemesis/gear.nem'
		even
Art_Mz_Gear_Holes:
		incbin  'art/nemesis/gearhole.nem'
		even
Art_Mz_Harpon_Platform:
		incbin  'art/nemesis/harp_ptf.nem'
		even
Art_Mz_Steam:
		incbin  'art/nemesis/steam.nem'
		even
Art_Mz_Harpon:
		incbin  'art/nemesis/harpoon.nem'
		even
Art_Mz_Screw_Nut:
		incbin  'art/nemesis/screwnut.nem'
		even
Art_Mz_Lava_Bubble:
		incbin  'art/nemesis/mzlvbubble.nem'
		even
Art_Mz_Elevator:
		incbin  'art/nemesis/mzelevator.nem'
		even
Art_Mz_Parallelogram_Elevator:
		incbin  'art/nemesis/parallel.nem'
		even
Art_Mz_Miscellaneous:
		incbin  'art/nemesis/miscelns.nem'
		even
Art_Mz_Mini_Gear:
		incbin  'art/nemesis/minigear.nem'
		even
Art_Mz_Teleport_Flash:
		incbin  'art/nemesis/tlpflash.nem'
		even
Art_HPz_Bridge:
		incbin  'art/nemesis/hpzbridge.nem'
		even
Art_HPz_Waterfall:
		incbin  'art/nemesis/hpzwatrfall.nem'
		even
Art_HPz_Emerald:
		incbin  'art/nemesis/emerald.nem'
		even
Art_HPz_Platform:
		incbin  'art/nemesis/platform.nem'
		even
Art_HPz_Orbs_2:
		incbin  'art/nemesis/orbs.nem'
		even
Art_HPz_Unknow_Platform:
		incbin  'art/nemesis/unkptfm.nem'
		even
Art_OOz_Giant_Spikeball:
		incbin  'art/nemesis/gspkball.nem'
		even
Art_OOz_Touch_Boost_Up:
		incbin  'art/nemesis/boost_up.nem'
		even
Art_OOz_Break_To_Boost_Horizontal:
		incbin  'art/nemesis/brkbst_h.nem'
		even
Art_OOz_Oil:
		incbin  'art/nemesis/oil.nem'
		even
Art_OOz_Oil_01:
		incbin  'art/nemesis/oil_01.nem'
		even
Art_OOz_Ball:
		incbin  'art/nemesis/ball.nem'
		even
Art_OOz_Cannon:
		incbin  'art/nemesis/cannon.nem'
		even
Art_OOz_Collapsing_Platform:
		incbin  'art/nemesis/oozplatform.nem'
		even
Art_OOz_Spring_Push_Boost:
		incbin  'art/nemesis/spngpush.nem'
		even
Art_OOz_Swing_Platform:
		incbin  'art/nemesis/swngptfm.nem'
		even
Art_OOz_Break_To_Boost_Vertical:
		incbin  'art/nemesis/brkbst_v.nem'
		even
Art_OOz_Elevator:
		incbin  'art/nemesis/oozelevator.nem'
		even
Art_OOz_Fans:
		incbin  'art/nemesis/fans.nem'
		even
Art_OOz_Fire_Booster:
		incbin  'art/nemesis/fire_bst.nem'
		even
Art_DHz_Box:
		incbin  'art/nemesis/dhzbox.nem'
		even
Art_DHz_Collapsing_Platform:
		incbin  'art/nemesis/clp_ptfm.nem'
		even
Art_DHz_Vines:
		incbin  'art/nemesis/vines.nem'
		even
Art_DHz_Vines_01:
		incbin  'art/nemesis/vines_1.nem'
		even
Art_DHz_Bridge:
		incbin  'art/nemesis/bridge.nem'
		even
Art_CNz_Green_Platforms:
		incbin  'art/nemesis/greenptf.nem'
		even
Art_CNz_Spikeball_Slot_Machine:
		incbin  'art/nemesis/spikball.nem'
		even
Art_CNz_Box:
		incbin  'art/nemesis/box.nem'
		even
Art_CNz_Elevator:
		incbin  'art/nemesis/elevator.nem'
		even
Art_CNz_Slot_Machine_Starter:
		incbin  'art/nemesis/slotmach.nem'
		even
Art_CNz_Blue_Bumper:
		incbin  'art/nemesis/bbumpers.nem'
		even
Art_CNz_Bumpers:
		incbin  'art/nemesis/bumpers.nem'
		even
Art_CNz_Diagonal_Launcher:
		incbin  'art/nemesis/d_launch.nem'
		even
Art_CNz_Vertical_Launcher:
		incbin  'art/nemesis/v_launch.nem'
		even
Art_CNz_Green_Bumpers:
		incbin  'art/nemesis/gbumpers.nem'
		even
Art_CNz_Flippers:
		incbin  'art/nemesis/flippers.nem'
		even
Art_CPz_Triangle_Platform:
		incbin  'art/nemesis/tri_ptfm.nem'
		even
Art_Water_Surface:
		incbin  'art/nemesis/watrsurf.nem'
		even
Art_CPz_Speed_Booster:
		incbin  'art/nemesis/speedbst.nem'
		even
Art_CPz_Worms:
		incbin  'art/nemesis/worms.nem'
		even
Art_CPz_Metal_Structure:
		incbin  'art/nemesis/metal_st.nem'
		even
Art_CPz_Breakable_Block:
		incbin  'art/nemesis/brkblock.nem'
		even
Art_CPz_Automatic_Door:
		incbin  'art/nemesis/autodoor.nem'
		even
Art_CPz_Open_Close_Platform:
		incbin  'art/nemesis/oc_ptfrm.nem'
		even
Art_CPz_Platforms:
		incbin  'art/nemesis/cpzplatform.nem'
		even
Art_CPz_Spring_Tubes:
		incbin  'art/nemesis/spgtubes.nem'
		even
Art_NGHz_Water_Surface:
		incbin  'art/nemesis/nghzwatrsurf.nem'
		even
Art_NGHz_Leaves:
		incbin  'art/nemesis/leaves.nem'
		even
Art_NGHz_Arrow_Shooter:
		incbin  'art/nemesis/arrow_s.nem'
		even
Art_NGHz_Automatic_Door:
		incbin  'art/nemesis/nghzautodoor.nem'
		even
Art_Switch:
		incbin  'art/nemesis/switch.nem'
		even
Art_Vertical_Spring:
		incbin  'art/nemesis/v_spring.nem'
		even
Art_Horizontal_Spring:
		incbin  'art/nemesis/h_spring.nem'
		even
Art_Diagonal_Spring:
		incbin  'art/nemesis/d_spring.nem'
		even
Art_Head_Up_Display:
		incbin  'art/nemesis/hud.nem'
		even
Art_Head_Up_Display_Sonic:
		incbin  'art/nemesis/hudsonic.nem'
		even
Art_Rings:
		incbin  'art/nemesis/rings.nem'
		even
Art_Monitors:
		incbin  'art/nemesis/monitors.nem'
		even
Art_Spikes:
		incbin  'art/nemesis/spikes.nem'
		even
Art_Hit_Enemy_Points:
		incbin  'art/nemesis/points.nem'
		even
Art_LampPost:
		incbin  'art/nemesis/lamppost.nem'
		even
Art_End_Panel:
		incbin  'art/nemesis/endpanel.nem'
		even
Art_Diagonal_Spring_01:
		incbin  'art/nemesis/dspring1.nem'
		even
Art_DHz_Horizontal_Spikes:
		incbin  'art/nemesis/h_spikes.nem'
		even
Art_Oxygen_Bubbles:
		incbin  'art/nemesis/oxygen.nem'
		even
Art_Bubbles:
		incbin  'art/nemesis/bubbles.nem'
		even
Art_Oxygen_Numbers:
		incbin  'art/uncompressed/oxygnumb.dat'
Art_Game_Over_Time_Over:
		incbin  'art/nemesis/gt_over.nem'
		even
Art_Explosion:
		incbin  'art/nemesis/explosn.nem'
		even
Art_Blue_Bird:
		incbin  'art/nemesis/bluebird.nem'
		even
Art_Squirrel:
		incbin  'art/nemesis/squirrel.nem'
		even
Art_Mouse:
		incbin  'art/nemesis/mouse.nem'
		even
Art_Chicken:
		incbin  'art/nemesis/chicken.nem'
		even
Art_Monkey:
		incbin  'art/nemesis/monkey.nem'
		even
Art_Pigeon:
		incbin  'art/nemesis/pigeon.nem'
		even
Art_Pig:
		incbin  'art/nemesis/pig.nem'
		even
Art_Seal:
		incbin  'art/nemesis/seal.nem'
		even
Art_Penguin:
		incbin  'art/nemesis/penguin.nem'
		even
Art_Turtle:
		incbin  'art/nemesis/turtle.nem'
		even
Art_Bear:
		incbin  'art/nemesis/bear.nem'
		even
Art_Rabbit:
		incbin  'art/nemesis/rabbit.nem'
		even
Art_HPz_Crocobot: ; Not used
		incbin  'art/nemesis/crocobot.nem'
		even
Art_GHz_Buzzer:
		incbin  'art/nemesis/buzzer.nem'
		even
Art_Batbot:
		incbin  'art/nemesis/batbot.nem'
		even
Art_Octus:
		incbin  'art/nemesis/octus.nem'
		even
Art_Rhinobot:
		incbin  'art/nemesis/rhinobot.nem'
		even
Art_Dinobot:
		incbin  'art/nemesis/dinobot.nem'
		even
Art_Hpz_Piranha: ; Not used
		incbin  'art/nemesis/piranha.nem'
		even
Art_Aquis:
		incbin  'art/nemesis/aquis.nem'
		even
Art_Spinning_Ball: ; Not used
		incbin  'art/nemesis/spinball.nem'
		even
Art_Blink:    ; Not used
		incbin  'art/nemesis/blink.nem'
		even
Art_Bubbler: ; Not used
		incbin  'art/nemesis/bmonster.nem'
		even
Art_Ghz_Snail: ; Not used
		incbin  'art/nemesis/snail.nem'
		even
Art_CNz_Crawl: ; Not used
		incbin  'art/nemesis/crawl.nem'
		even
Art_GHz_Masher:
		incbin  'art/nemesis/masher.nem'
		even
Art_Robotnik_Ship:
		incbin  'art/nemesis/robotnik.nem'
		even
Art_CPz_Boss:
		incbin  'art/nemesis/cpzboss.nem'
		even
Art_Boss_Explosions:
		incbin  'art/nemesis/explosns.nem'
		even
Art_Ship_Boost:
		incbin  'art/nemesis/shpboost.nem'
		even
Art_Boss_Smokes:
		incbin  'art/nemesis/boss_smk.nem'
		even
Art_GHz_Boss_Car:
		incbin  'art/nemesis/boss_car.nem'
		even
Art_GHz_Boss_Blades:
		incbin  'art/nemesis/b_blades.nem'
		even
Art_HTz_Boss_Fire_Cannon:
		incbin  'art/nemesis/bossfire.nem'
		even
Art_NGHz_Boss:
		incbin  'art/nemesis/nghzboss.nem'
		even
Art_DHz_Boss:
		incbin  'art/nemesis/dhzboss.nem'
		even
Art_CNz_Boss:
		incbin  'art/nemesis/boss.nem'
		even
Art_OOz_Boss:
		incbin  'art/nemesis/oozboss.nem'
		even
Art_Mz_Boss_Balls_And_Robotniks:
		incbin  'art/nemesis/bossball.nem'
		even
Art_DHz_Boss_Rocks:
		incbin  'art/uncompressed/bossrock.dat'
Art_Whisp:
		incbin  'art/nemesis/whisp.nem'
		even
Art_Grounder:
		incbin  'art/nemesis/grounder.nem'
		even
Art_Chop_Chop:
		incbin  'art/nemesis/chopchop.nem'
		even
Art_Rexon:
		incbin  'art/nemesis/rexon.nem'
		even
Art_Spiker:
		incbin  'art/nemesis/spiker.nem'
		even
Art_Nebula:
		incbin  'art/nemesis/nebula.nem'
		even
Art_Turtloid:
		incbin  'art/nemesis/turtloid.nem'
		even
Art_GHz_Coconuts:
		incbin  'art/nemesis/coconuts.nem'
		even
Art_Crawlton:
		incbin  'art/nemesis/crawlton.nem'
		even
Art_Flasher:
		incbin  'art/nemesis/flasher.nem'
		even
Art_Slicer:
		incbin  'art/nemesis/slicer.nem'
		even
Art_Shellcracker:
		incbin  'art/nemesis/shellcrc.nem'
		even
Art_Asteron:
		incbin  'art/nemesis/asteron.nem'
		even
Art_Lander:
		incbin  'art/nemesis/lander.nem'
		even
Art_Grabber:
		incbin  'art/nemesis/grabber.nem'
		even
Art_Clucker:
		incbin  'art/nemesis/clucker.nem'
		even
Art_Balkiry:
		incbin  'art/nemesis/balkiry.nem'
		even
Green_Hill_Blocks:
		incbin  'level/emerald hill zone/blocks.dat'
Green_Hill_Tiles:
		incbin  'level/emerald hill zone/tiles.nem'
Hill_Top_Blocks:
		incbin  'level/hill top zone/blocks.dat'
Hill_Top_Tiles:
		incbin  'level/hill top zone/tiles.nem'
Art_Hill_Top_Dynamic_Init:
		incbin  'art/nemesis/htzdyn_init.nem'
		even
Green_Hill_Chunks:
		incbin  'level/shared/chunks.kos'
		dc.w    $0000, $0000
Wood_Blocks:
		incbin  'level/wood zone/blocks.dat'
Wood_Tiles:
		incbin  'level/wood zone/tiles.nem'
Wood_Chunks:
		incbin  'level/wood zone/chunks.kos'
		dc.w    $0000, $0000, $0000, $0000, $0000, $0000
Metropolis_Blocks:
		incbin  'level/metropolis zone/blocks.dat'
Metropolis_Tiles:
		incbin  'level/metropolis zone/tiles.nem'
Art_Metropolis_Dynamic_Init:
		incbin  'art/nemesis/mzdyn_init.nem'
		even
Metropolis_Chunks:
		incbin  'level/metropolis zone/chunks.kos'
Hidden_Palace_Blocks:
		incbin  'level/hidden palace zone/blocks.dat'
Hidden_Palace_Tiles:
		incbin  'level/hidden palace zone/tiles.nem'
Art_Hidden_Palace_Dynamic_Init:
		incbin  'art/nemesis/dyn_init.nem'
		even
Hidden_Palace_Chunks:
		incbin  'level/hidden palace zone/chunks.kos'
		dc.w    $0000, $0000, $0000
Oil_Ocean_Blocks:
		incbin  'level/oil ocean zone/blocks.dat'
Oil_Ocean_Tiles:
		incbin  'level/oil ocean zone/tiles.nem'
Art_Oil_Ocean_Dynamic_Init:
		incbin  'art/nemesis/oozdyn_init.nem'
		even
Oil_Ocean_Chunks:
		incbin  'level/oil ocean zone/chunks.kos'
Dust_Hill_Blocks:
		incbin  'level/dust hill zone/blocks.dat'
Dust_Hill_Tiles:
		incbin  'level/dust hill zone/tiles.nem'
Dust_Hill_Chunks:
		incbin  'level/dust hill zone/chunks.kos'
		dc.w    $0000, $0000, $0000
Casino_Night_Blocks:
		incbin  'level/casino night zone/blocks.dat'
Casino_Night_Tiles:
		incbin  'level/casino night zone/tiles.nem'
Art_Casino_Night_Dynamic_Init:
		incbin  'art/nemesis/cnzdyn_init.nem'
		even
Casino_Night_Chunks:
		incbin  'level/casino night zone/chunks.kos'
		dc.w    $0000, $0000, $0000
Chemical_Plant_Blocks:
		incbin  'level/chemical plant zone/blocks.dat'
Chemical_Plant_Tiles:
		incbin  'level/chemical plant zone/tiles.nem'
Art_Chemical_Plant_Dynamic_Init:
		incbin  'art/nemesis/cpzdyn_init.nem'
		even
Chemical_Plant_Chunks:
		incbin  'level/chemical plant zone/chunks.kos'
		dc.w    $0000, $0000, $0000
Neo_Green_Hill_Blocks:
		incbin  'level/neo green hill zone/blocks.dat'
Neo_Green_Hill_Tiles:
		incbin  'level/neo green hill zone/tiles.nem'
Art_Neo_Green_Hill_Dynamic_Init:
		incbin  'art/nemesis/nghzdyn_init.nem'
		even
Neo_Green_Hill_Chunks:
		incbin  'level/neo green hill zone/chunks.kos'
		dc.w    $0000
;-------------------------------------------------------------------------------
Previous_Build_Chemical_Plant_Tiles_Overwrite:
		incbin  'leftovers/cpzpb_tiles.dat'
Previous_Build_Art_Chemical_Plant_Dynamic_Init:
		incbin  'art/nemesis/dyninit2.nem'
		even
Previous_Build_Chemical_Plant_Chunks:
		incbin  'leftovers/cpzchunks.dat'
Previous_Build_Neo_Green_Hill_Blocks:
		incbin  'leftovers/nghzpb_blcks.dat'
Previous_Build_Neo_Green_Hill_Tiles:
		incbin  'leftovers/nghzpb_tiles.nem'
		even
Previous_Build_Art_Neo_Green_Hill_Dynamic_Init:
		incbin  'art/nemesis/nghzdyn_init.nem'
		even
Previous_Build_Neo_Green_Hill_Chunks:
		incbin  'leftovers/nghzpb_chnks.dat'
		dc.w     $0000
Previous_Build_Neo_Green_Hill_Tiles_Overwrite:
		incbin  'leftovers/nghzpb_tiles.dat'
Previous_Build_Art_Neo_Green_Hill_Dynamic_Init_2:
		incbin  'art/nemesis/nghzdyn_init.nem'
		even
Uncompiled_Asm:
		include "Leftovers/Uncompiled ASM.asm"
;===============================================================================
; Ring layouts in the zones
; [ Begin ]
;===============================================================================
Rings_Layout:
		dc.w    GHz_Rng_Act1-Rings_Layout
		dc.w    GHz_Rng_Act2-Rings_Layout
		dc.w    Lvl1_Rng_Act1-Rings_Layout
		dc.w    Lvl1_Rng_Act2-Rings_Layout
		dc.w    Wz_Rng_Act1-Rings_Layout
		dc.w    Wz_Rng_Act2-Rings_Layout
		dc.w    Lvl3_Rng_Act1-Rings_Layout
		dc.w    Lvl3_Rng_Act2-Rings_Layout
		dc.w    Mz_Rng_Act1-Rings_Layout
		dc.w    Mz_Rng_Act2-Rings_Layout
		dc.w    Mz_Rng_Act3-Rings_Layout
		dc.w    Mz_Rng_Act4-Rings_Layout
		dc.w    Lvl6_Rng_Act1-Rings_Layout
		dc.w    Lvl6_Rng_Act2-Rings_Layout
		dc.w    HTz_Rng_Act1-Rings_Layout
		dc.w    HTz_Rng_Act2-Rings_Layout
		dc.w    HPz_Rng_Act1-Rings_Layout
		dc.w    HPz_Rng_Act2-Rings_Layout
		dc.w    Lvl9_Rng_Act1-Rings_Layout
		dc.w    Lvl9_Rng_Act2-Rings_Layout
		dc.w    OOz_Rng_Act1-Rings_Layout
		dc.w    OOz_Rng_Act2-Rings_Layout
		dc.w    DHz_Rng_Act1-Rings_Layout
		dc.w    DHz_Rng_Act2-Rings_Layout
		dc.w    CNz_Rng_Act1-Rings_Layout
		dc.w    CNz_Rng_Act2-Rings_Layout
		dc.w    CPz_Rng_Act1-Rings_Layout
		dc.w    CPz_Rng_Act2-Rings_Layout
		dc.w    GCz_Rng_Act1-Rings_Layout
		dc.w    GCz_Rng_Act2-Rings_Layout
		dc.w    NGHz_Rng_Act1-Rings_Layout
		dc.w    NGHz_Rng_Act2-Rings_Layout
		dc.w    DEz_Rng_Act1-Rings_Layout
		dc.w    DEz_Rng_Act2-Rings_Layout
;-------------------------------------------------------------------------------
GHz_Rng_Act1:
		incbin  'level/emerald hill zone/rng_act1.dat'
GHz_Rng_Act2:
		incbin  'level/emerald hill zone/rng_act2.dat'
Lvl1_Rng_Act1:
		dc.w    $FFFF
Lvl1_Rng_Act2:
		dc.w    $FFFF
Wz_Rng_Act1:
		dc.w    $FFFF
Wz_Rng_Act2:
		dc.w    $FFFF
Lvl3_Rng_Act1:
		dc.w    $FFFF
Lvl3_Rng_Act2:
		dc.w    $FFFF
Mz_Rng_Act1:
		incbin  'level/metropolis zone/rng_act1.dat'
Mz_Rng_Act2:
		incbin  'level/metropolis zone/rng_act2.dat'
Mz_Rng_Act3:
		incbin  'level/metropolis zone/rng_act3.dat'
Mz_Rng_Act4:
		dc.w    $FFFF
Lvl6_Rng_Act1:
		dc.w    $FFFF
Lvl6_Rng_Act2:
		dc.w    $FFFF
HTz_Rng_Act1:
		incbin  'level/hill top zone/rng_act1.dat'
HTz_Rng_Act2:
		incbin  'level/hill top zone/rng_act2.dat'
HPz_Rng_Act1:
		incbin  'level/hidden palace zone/rng_act.dat'
HPz_Rng_Act2:
		dc.w    $FFFF
Lvl9_Rng_Act1:
		dc.w    $FFFF
Lvl9_Rng_Act2:
		dc.w    $FFFF
OOz_Rng_Act1:
		incbin  'level/oil ocean zone/rng_act1.dat'
OOz_Rng_Act2:
		incbin  'level/oil ocean zone/rng_act2.dat'
DHz_Rng_Act1:
		incbin  'level/dust hill zone/rng_act1.dat'
DHz_Rng_Act2:
		incbin  'level/dust hill zone/rng_act2.dat'
CNz_Rng_Act1:
		dc.w    $FFFF
CNz_Rng_Act2:
		dc.w    $FFFF
CPz_Rng_Act1:
		incbin  'level/chemical plant zone/rng_act1.dat'
CPz_Rng_Act2:
		incbin  'level/chemical plant zone/rng_act2.dat'
GCz_Rng_Act1:
		dc.w    $FFFF
GCz_Rng_Act2:
		dc.w    $FFFF
NGHz_Rng_Act1:
		incbin  'level/neo green hill zone/rng_act1.dat'
NGHz_Rng_Act2:
		incbin  'level/neo green hill zone/rng_act2.dat'
DEz_Rng_Act1:
		dc.w    $FFFF
DEz_Rng_Act2:
		dc.w    $FFFF
Previous_Build_NGHz_Rng_Act2:
		incbin  'leftovers/nghzpb_rng_2.dat'
		dc.w    $FFFF
		dc.w    $FFFF
;===============================================================================
; Ring layouts in the zones
; [ End ]
;===============================================================================
Previous_Build_DAC_Sample_01_Overwrite:
		incbin  'leftovers/PB_DAC01.bin'
Previous_Build_DAC_Sample_02:
		incbin  'sound/driver/DAC_02.bin'
Previous_Build_DAC_Sample_06: ; Sonic 2 Beta
		incbin  'leftovers/PB_DAC06.bin'
Previous_Build_DAC_Sample_03: ; Sonic 2 Beta
		incbin  'leftovers/PB_DAC03.bin'
Previous_Build_DAC_Sample_04: ; Sonic 2 Beta
		incbin  'leftovers/PB_DAC04.bin'
;-------------------------------------------------------------------------------
		cnop    $00000000, $000EC000
;===============================================================================
; Sound driver stuff
; [ Begin ]
;===============================================================================
SoundDriverLoad:
		move    SR, -(A7)
		movem.l D0-D7/A0-A6, -(A7)
		move    #$2700, SR
		lea     (Z80_Bus_Request), A3
		lea     (Z80_Reset), A2
		moveq   #$00, D2
		move.w  #$0100, D1
		move.w  D1, (A3)
		move.w  D1, (A2)
loc_EC020:
		btst    D2, (A3)
		bne.s   loc_EC020
		jsr     loc_EC03C(PC)
		move.w  D2, (A2)
		move.w  D2, (A3)
		moveq   #$17, D0
loc_EC02E:
		dbra    D0, loc_EC02E
		move.w  D1, (A2)
		movem.l (A7)+, D0-D7/A0-A6
		move    (A7)+, SR
		rts
;-------------------------------------------------------------------------------
loc_EC03C:
		lea     Z80_Sound_Driver(PC), A6
		move.w  #$0E7E, D7
		moveq   #$00, D6
		lea     (Z80_RAM_Start), A5
		moveq   #$00, D5
		lea     (Z80_RAM_Start), A4
loc_EC054:
		lsr.w   #$01, D6
		btst    #$08, D6
		bne.s   loc_EC066
		jsr     loc_EC0D2(PC)
		move.b  D0, D6
		ori.w   #$FF00, D6
loc_EC066:
		btst    #$00, D6
		beq.s   loc_EC078
		jsr     loc_EC0D2(PC)
		move.b  D0, (A5)+
		addq.w  #$01, D5
		bra     loc_EC054
loc_EC078:
		jsr     loc_EC0D2(PC)
		moveq   #$00, D4
		move.b  D0, D4
		jsr     loc_EC0D2(PC)
		move.b  D0, D3
		andi.w  #$000F, D3
		addq.w  #$02, D3
		andi.w  #$00F0, D0
		lsl.w   #$04, D0
		add.w   D0, D4
		addi.w  #$0012, D4
		andi.w  #$0FFF, D4
		move.w  D5, D0
		andi.w  #$F000, D0
		add.w   D0, D4
		cmp.w   D4, D5
		bcc.s   loc_EC0C0
		subi.w  #$1000, D4
		bcc.s   loc_EC0C0
		add.w   D3, D5
		addq.w  #$01, D5
loc_EC0B2:
		move.b  #$00, (A5)+
		addq.w  #$01, D4
		dbra    D3, loc_EC0B2
		bra     loc_EC054
loc_EC0C0:
		add.w   D3, D5
		addq.w  #$01, D5
loc_EC0C4:
		move.b  $00(A4, D4), (A5)+
		addq.w  #$01, D4
		dbra    D3, loc_EC0C4
		bra     loc_EC054
;-------------------------------------------------------------------------------
loc_EC0D2:
		move.b  (A6)+, D0
		subq.w  #$01, D7
		bne.s   loc_EC0DA
		addq.w  #$04, A7
loc_EC0DA:
		rts
;-------------------------------------------------------------------------------
Z80_Sound_Driver:
		incbin  'sound/driver/snd_drv.sax'
                even
;-------------------------------------------------------------------------------
		cnop    $00000000, $000ED000
DAC_Sample_00:
		incbin  'sound/driver/DAC_00.bin'
DAC_Sample_01:
		incbin  'sound/driver/DAC_01.bin'
DAC_Sample_02:
		incbin  'sound/driver/DAC_02.bin'
DAC_Sample_03:
		incbin  'sound/driver/DAC_03.bin'
DAC_Sample_04:
		incbin  'sound/driver/DAC_04.bin'
DAC_Sample_05:
		incbin  'sound/driver/DAC_05.bin'
DAC_Sample_06:
		incbin  'sound/driver/DAC_06.bin'
                even
;-------------------------------------------------------------------------------
		z80_ptr	Music_Invencibility
		z80_ptr	Music_Extra_Life
		z80_ptr	Music_Title_Screen
		z80_ptr	Music_Level_Results
		z80_ptr	Music_Time_Over_Game_Over
		z80_ptr	Music_Continue
		z80_ptr	Music_Get_Emerald
		z80_ptr	Music_Hidden_Palace_Final
		z80_ptr	Music_Hidden_Palace_Final                
Music_Invencibility:
		incbin  'sound/music/Invcb_97.snd'                
Music_Extra_Life:
		include 'sound/music/98 - Extra Life.asm'
Music_Title_Screen:
		include 'sound/music/99 - Title Screen.asm'
Music_Level_Results:
		include 'sound/music/9A - End of Act.asm'
Music_Time_Over_Game_Over:
		include 'sound/music/9B - Game Over.asm'
Music_Continue:
		include 'sound/music/9C - Continue.asm'
Music_Get_Emerald:
		include 'sound/music/9D - Got Emerald.asm'
Music_Hidden_Palace_Final:
		include 'sound/music/90 - HPZ Final.asm'
                even
;-------------------------------------------------------------------------------
		cnop    $00000000, $000F1E8C
;-------------------------------------------------------------------------------
Sega_Snd:
		incbin  'sound/driver/sega.snd'
                even
;-------------------------------------------------------------------------------
		z80_ptr	Music_Oil_Ocean_Beta
		z80_ptr	Music_Green_Hill
		z80_ptr	Music_Metropolis
		z80_ptr	Music_Casino_Night
		z80_ptr	Music_Dust_Hill
		z80_ptr	Music_Hidden_Palace_Beta
		z80_ptr	Music_Neo_Green_Hill
		z80_ptr	Music_Death_Egg
		z80_ptr	Music_Special_Stage
		z80_ptr	Music_Level_Select_Menu
		z80_ptr	Music_End_Sequence
		z80_ptr	Music_Final_Boss
		z80_ptr	Music_Chemical_Plant
		z80_ptr	Music_Level_Boss
		z80_ptr	Music_Sky_Chase
		z80_ptr	Music_Oil_Ocean_Final
		z80_ptr	Music_Sky_Fortress
		z80_ptr	Music_Green_Hill_Versus_Final
		z80_ptr	Music_Versus_Result_Final
		z80_ptr	Music_Super_Sonic
		z80_ptr	Music_Hill_Top
Music_Oil_Ocean_Beta:
		include 'sound/music/88 - OOZ.asm'
Music_Green_Hill:
		include 'sound/music/82 - GHZ.asm'
Music_Metropolis:
		include 'sound/music/85 - MTZ.asm'
Music_Casino_Night:
		include 'sound/music/89 - CNZ.asm'
Music_Dust_Hill:
		include 'sound/music/8B - DHZ.asm'
Music_Hidden_Palace_Beta:
                ;include 'sound/music/83 - HPZ.asm'        
		incbin  'sound/music/hpz_83.snd'
Music_Neo_Green_Hill:
		include 'sound/music/87 - NGHZ.asm'
Music_Death_Egg:
		include 'sound/music/8A - DEZ.asm'
Music_Special_Stage:
		include 'sound/music/92 - Special Stage.asm'
Music_Level_Select_Menu:
		include 'sound/music/91 - Options.asm'
Music_End_Sequence:
		include 'sound/music/95 - Ending.asm'
Music_Final_Boss:
		include 'sound/music/94 - Final Boss.asm'
Music_Chemical_Plant:
		include 'sound/music/8E - CPZ.asm'
Music_Level_Boss:
		include 'sound/music/93 - Boss.asm'
Music_Sky_Chase:
		include 'sound/music/8D - SCZ.asm'
Music_Oil_Ocean_Final:
		include 'sound/music/84 - OOZ Final.asm'
Music_Sky_Fortress:
		include 'sound/music/8F - SFZ.asm'
Music_Green_Hill_Versus_Final:
		include 'sound/music/8C - GHZ 2P.asm'
Music_Versus_Result_Final:
		include 'sound/music/81 - 2 Player Menu.asm'
Music_Super_Sonic:
		include 'sound/music/96 - Super Sonic.asm'
Music_Hill_Top:
		include 'sound/music/86 - HTZ.asm'
                even
;-------------------------------------------------------------------------------
		cnop    $00000000, $000FEE00
;-------------------------------------------------------------------------------
Sfx_A0_To_E9:
		z80_ptr	Sfx_A0
		z80_ptr	Sfx_A1
		z80_ptr	Sfx_A2
		z80_ptr	Sfx_A3
		z80_ptr	Sfx_A4
		z80_ptr	Sfx_A5
		z80_ptr	Sfx_A6
		z80_ptr	Sfx_A7
		z80_ptr	Sfx_A8
		z80_ptr	Sfx_A9
		z80_ptr	Sfx_AA
		z80_ptr	Sfx_AB
		z80_ptr	Sfx_AC
		z80_ptr	Sfx_AD
		z80_ptr	Sfx_AE
		z80_ptr	Sfx_AF
		z80_ptr	Sfx_B0
		z80_ptr	Sfx_B1
		z80_ptr	Sfx_B2
		z80_ptr	Sfx_B3
		z80_ptr	Sfx_B4
		z80_ptr	Sfx_B5
		z80_ptr	Sfx_B6
		z80_ptr	Sfx_B7
		z80_ptr	Sfx_B8
		z80_ptr	Sfx_B9
		z80_ptr	Sfx_BA
		z80_ptr	Sfx_BB
		z80_ptr	Sfx_BC
		z80_ptr	Sfx_BD
		z80_ptr	Sfx_BE
		z80_ptr	Sfx_BF
		z80_ptr	Sfx_C0
		z80_ptr	Sfx_C1
		z80_ptr	Sfx_C2
		z80_ptr	Sfx_C3
		z80_ptr	Sfx_C4
		z80_ptr	Sfx_C5
		z80_ptr	Sfx_C6
		z80_ptr	Sfx_C7
		z80_ptr	Sfx_C8
		z80_ptr	Sfx_C9
		z80_ptr	Sfx_CA
		z80_ptr	Sfx_CB
		z80_ptr	Sfx_CC
		z80_ptr	Sfx_CD
		z80_ptr	Sfx_CE
		z80_ptr	Sfx_CF
		z80_ptr	Sfx_D0
		z80_ptr	Sfx_D1
		z80_ptr	Sfx_D2
		z80_ptr	Sfx_D3
		z80_ptr	Sfx_D4
		z80_ptr	Sfx_D5
		z80_ptr	Sfx_D6
		z80_ptr	Sfx_D7
		z80_ptr	Sfx_D8
		z80_ptr	Sfx_D9
		z80_ptr	Sfx_DA
		z80_ptr	Sfx_DB
		z80_ptr	Sfx_DC
		z80_ptr	Sfx_DD
		z80_ptr	Sfx_DE
		z80_ptr	Sfx_DF
		z80_ptr	Sfx_E0
		z80_ptr	Sfx_E1
		z80_ptr	Sfx_E2
		z80_ptr	Sfx_E3
		z80_ptr	Sfx_E4
		z80_ptr	Sfx_E5
		z80_ptr	Sfx_E6
		z80_ptr	Sfx_E7
		z80_ptr	Sfx_E8
		z80_ptr	Sfx_E9
Sfx_A0:
		include	'sound/sfx/A0 - Jump.asm'
Sfx_A1:
		include	'sound/sfx/A1 - Checkpoint.asm'
Sfx_A2:
		include 'sound/sfx/A2 - Spike Switch.asm'
Sfx_A3:
		include 'sound/sfx/A3 - Hurt.asm'
Sfx_A4:
		include 'sound/sfx/A4 - Skidding.asm'
Sfx_A5:
		include 'sound/sfx/A5 - Block Push.asm'
Sfx_A6:
		include 'sound/sfx/A6 - Hurt by Spikes.asm'
Sfx_A7:
		include 'sound/sfx/A7 - Push Block.asm'                
Sfx_A8:
		include 'sound/sfx/A8 - SS Goal.asm'
Sfx_A9:
		include 'sound/sfx/A9 - Special Stage Item (Unused).asm'
Sfx_AA:
		include 'sound/sfx/AA - Splash.asm'
Sfx_AB:
		include 'sound/sfx/AB - Swish.asm'
Sfx_AC:
		include 'sound/sfx/AC - Boss Hit.asm'
Sfx_AD:
		include 'sound/sfx/AD - Inhaling Bubble.asm'
Sfx_AE:
		include 'sound/sfx/AE - Lava Ball.asm'
Sfx_AF:
		include 'sound/sfx/AF - Shield.asm'
Sfx_B0:
		include 'sound/sfx/B0 - Laser Beam.asm'
Sfx_B1:
		include 'sound/sfx/B1 - Electricity (Unused).asm'
Sfx_B2:
		include 'sound/sfx/B2 - Drown.asm'
Sfx_B3:
		include 'sound/sfx/B3 - Fire Burn.asm'
Sfx_B4:
		include 'sound/sfx/B4 - Bumper.asm'
Sfx_B5:
		include 'sound/sfx/B5 - Ring.asm'
Sfx_B6:
		include 'sound/sfx/B6 - Spikes Move.asm'
Sfx_B7:
		include 'sound/sfx/B7 - Rumbling.asm'
Sfx_B8:
		include 'sound/sfx/B8 - Unknown (Unused).asm'
Sfx_B9:
		include 'sound/sfx/B9 - Smash.asm'
Sfx_BA:
		include 'sound/sfx/BA - Special Stage Glass (Unused).asm'
Sfx_BB:
		include 'sound/sfx/BB - Door Slam.asm'
Sfx_BC:
		include 'sound/sfx/BC - Spin Dash Release.asm'
Sfx_BD:
		include 'sound/sfx/BD - Hammer.asm'
Sfx_BE:
		include 'sound/sfx/BE - Roll.asm'
Sfx_BF:
		include 'sound/sfx/BF - Continue Jingle.asm'
Sfx_C0:
		include 'sound/sfx/C0 - Basaran Flap.asm'
Sfx_C1:
		include 'sound/sfx/C1 - Explosion.asm'               
Sfx_C2:
		include 'sound/sfx/C2 - Water Warning.asm'
Sfx_C3:
		include 'sound/sfx/C3 - Enter Giant Ring (Unused).asm'
Sfx_C4:
		include 'sound/sfx/C4 - Boss Explosion.asm'
Sfx_C5:
		include 'sound/sfx/C5 - Tally End.asm'
Sfx_C6:
		include 'sound/sfx/C6 - Ring Spill.asm'
Sfx_C7:
		include 'sound/sfx/C7 - Chain Rise (Unused).asm'
Sfx_C8:
		include 'sound/sfx/C8 - Flamethrower.asm'
Sfx_C9:
		include 'sound/sfx/C9 - Hidden Bonus (Unused).asm'
Sfx_CA:
		include 'sound/sfx/CA - Special Stage Entry.asm'
Sfx_CB:
		include 'sound/sfx/CB - Slow Smash.asm'
Sfx_CC:
		include 'sound/sfx/CC - Spring.asm'
Sfx_CD:
		include 'sound/sfx/CD - Switch.asm'
Sfx_CE:
		include 'sound/sfx/CE - Ring Left Speaker.asm'
Sfx_CF:
		include 'sound/sfx/CF - Signpost.asm'
Sfx_D0:
		include 'sound/sfx/D0 - CNZ Boss Zap.asm'
Sfx_D1:
		include 'sound/sfx/D1 - Unknown (Unused).asm'
Sfx_D2:
		include 'sound/sfx/D2 - Unknown (Unused).asm'
Sfx_D3:
		include 'sound/sfx/D3 - Signpost 2P.asm'
Sfx_D4:
		include 'sound/sfx/D4 - OOZ Lid Pop.asm'               
Sfx_D5:
		include 'sound/sfx/D5 - Sliding Spike.asm'                            
Sfx_D6:
		include 'sound/sfx/D6 - CNZ Elevator.asm'
Sfx_D7:
		include 'sound/sfx/D7 - Platform Knock.asm'
Sfx_D8:
		include 'sound/sfx/D8 - Bonus Bumper.asm'
Sfx_D9:		
                include 'sound/sfx/D9 - Large Bumper.asm'
Sfx_DA:
		include 'sound/sfx/DA - Gloop.asm'
Sfx_DB:
		include 'sound/sfx/DB - Pre-Arrow Firing.asm'
Sfx_DC:
		include 'sound/sfx/DC - Fire.asm'
Sfx_DD:
		include 'sound/sfx/DD - Arrow Stick.asm'
Sfx_DE:
		include 'sound/sfx/DE - Helicopter.asm'
Sfx_DF:
		include 'sound/sfx/DF - Super Transform.asm'
Sfx_E0:
		include 'sound/sfx/E0 - Spin Dash Rev.asm'
Sfx_E1:		                
                include 'sound/sfx/E1 - Rumbling 2.asm'
Sfx_E2:
		include 'sound/sfx/E2 - CNZ Launch.asm'                
Sfx_E3:
		include 'sound/sfx/E3 - Flipper.asm'
Sfx_E4:
		include 'sound/sfx/E4 - HTZ Lift Click.asm'
Sfx_E5:
		include 'sound/sfx/E5 - Leaves.asm'
Sfx_E6:
		include 'sound/sfx/E6 - Mega Mack Drop.asm'
Sfx_E7:
		include 'sound/sfx/E7 - Drawbridge Move.asm'
Sfx_E8:
		include 'sound/sfx/E8 - Quick Door Slam.asm'
Sfx_E9:
		include 'sound/sfx/E9 - Drawbridge Down.asm'
		even
;===============================================================================
; Sound driver stuff
; [ End ]
;===============================================================================
		
;-------------------------------------------------------------------------------
		cnop    $00000000, $000FFFFE
		dc.w    $0000

EndOfROM:
		END